var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppConfigModule.html",[0,0.706,1,2.727]],["body/modules/AppConfigModule.html",[0,1.089,1,4.204,2,1.648,3,0.206,4,0.206,5,0.131,6,4.938,7,0.316,8,0.014,9,4.296,10,3.556,11,0.761,12,5.466,13,1.848,14,4.296,15,4.296,16,2.084,17,4.938,18,4.938,19,4.296,20,7.801,21,4.296,22,4.938,23,4.296,24,4.296,25,4.296,26,4.296,27,4.296,28,4.296,29,4.938,30,4.938,31,4.938,32,4.296,33,4.296,34,4.938,35,0.206,36,0.133,37,0.011,38,0.011]],["title/injectables/AppConfigService.html",[39,1.056,40,2.936]],["body/injectables/AppConfigService.html",[3,0.197,4,0.197,5,0.125,7,0.279,8,0.014,10,3.391,11,0.726,35,0.197,36,0.126,37,0.01,38,0.01,39,1.578,40,4.388,41,1.987,42,4.096,43,0.49,44,0.939,45,5.301,46,2.494,47,4.708,48,6.595,49,0.666,50,4.708,51,2.174,52,1.272,53,1.629,54,1.578,55,5.301,56,0.773,57,4.708,58,4.52,59,2.628,60,0.697,61,2.073,62,1.907,63,0.847,64,4.708]],["title/controllers/AuthController.html",[65,1.413,66,2.936]],["body/controllers/AuthController.html",[3,0.202,4,0.202,5,0.128,7,0.331,8,0.014,11,0.746,35,0.202,36,0.13,37,0.01,38,0.01,43,0.504,44,0.956,49,0.529,56,0.71,60,0.717,61,2.131,62,1.96,63,0.871,65,2.15,66,4.467,67,1.677,68,4.21,69,2.599,70,1.299,71,2.701,72,2.564,73,4.84,74,4.289,75,4.21,76,3.462,77,2.226,78,3.795,79,4.84,80,2.701,81,4.84,82,4.84]],["title/modules/AuthModule.html",[0,0.706,83,2.936]],["body/modules/AuthModule.html",[0,1.133,2,1.469,3,0.184,4,0.184,5,0.116,7,0.332,8,0.014,11,0.678,13,2.181,35,0.184,36,0.118,37,0.01,38,0.01,66,4.708,67,2.021,74,4.662,75,3.828,83,5.673,84,1.584,85,1.937,86,1.937,87,1.782,88,2.759,89,1.782,90,3.828,91,3.828,92,3.828,93,3.276,94,3.422,95,2.567,96,1.937,97,1.857,98,4.401,99,4.401,100,1.14,101,4.198,102,4.401]],["title/classes/AuthResolver.html",[36,0.109,101,2.936]],["body/classes/AuthResolver.html",[3,0.215,4,0.215,5,0.136,7,0.236,8,0.014,35,0.215,36,0.138,37,0.011,38,0.011,43,0.536,44,0.994,49,0.562,52,1.346,56,0.806,60,0.762,63,0.926,70,1.382,101,4.645,103,1.656,104,4.478,105,3.912,106,2.873,107,6.451,108,5.148,109,3.6,110,3.417,111,1.718,112,2.873]],["title/injectables/AuthService.html",[39,1.056,74,2.554]],["body/injectables/AuthService.html",[3,0.226,4,0.226,5,0.143,7,0.247,8,0.014,11,0.832,35,0.226,36,0.145,37,0.011,38,0.011,39,1.721,41,2.279,43,0.562,44,1.024,49,0.59,56,0.76,60,0.8,63,0.972,69,2.704,74,4.163,113,4.697,114,5.4,115,2.723,116,3.889,117,2.483]],["title/entities/BaseEntity.html",[118,1.721,119,2.405]],["body/entities/BaseEntity.html",[3,0.113,4,0.113,5,0.071,7,0.274,8,0.014,16,2.666,35,0.113,36,0.072,37,0.007,38,0.007,43,0.281,49,0.608,52,1.039,53,1.343,54,1.442,56,0.57,63,0.896,70,1.495,72,1.429,111,0.9,118,1.735,119,2.938,120,1.36,121,2.346,122,1.665,123,4.981,124,4.981,125,2.639,126,4.981,127,5.441,128,2.697,129,3.223,130,2.697,131,4.111,132,3.588,133,2.697,134,3.223,135,2.697,136,2.697,137,2.697,138,2.697,139,3.223,140,2.697,141,4.111,142,4.111,143,4.111,144,2.938,145,4.111,146,2.697,147,4.111,148,0.935,149,3.346,150,2.294,151,3.906,152,3.223,153,2.697,154,4.111,155,2.697,156,1.942,157,2.697,158,2.697,159,1.805,160,1.591,161,2.697,162,4.981,163,2.697,164,2.697,165,2.697,166,1.429,167,2.697,168,2.697,169,3.176,170,3.223,171,2.697,172,2.697,173,2.75,174,4.011,175,2.697,176,2.346,177,2.697,178,2.697,179,2.697,180,2.697,181,5.57,182,1.942,183,4.111,184,2.346,185,2.697,186,2.697,187,2.697,188,1.591,189,2.697,190,1.591,191,2.697,192,1.69,193,2.697,194,4.111,195,1.942,196,2.697,197,2.697,198,2.697,199,2.697,200,2.697,201,2.697,202,2.346,203,2.697,204,4.111,205,2.697,206,4.111,207,2.697,208,2.697,209,2.697]],["title/classes/Bootstrapper.html",[36,0.109,210,3.197]],["body/classes/Bootstrapper.html",[0,0.728,3,0.176,4,0.176,5,0.111,7,0.313,8,0.014,11,0.648,35,0.176,36,0.113,37,0.01,38,0.01,43,0.438,44,0.871,49,0.459,51,1.352,52,0.877,53,1.013,54,1.088,60,0.622,77,1.932,100,1.088,103,1.352,166,3.385,169,3.778,210,4.433,211,3.656,212,3.074,213,4.918,214,5.654,215,4.202,216,5.654,217,3.336,218,3.656,219,3.295,220,4.202,221,4.918,222,2.479,223,4.202,224,3.446,225,3.026,226,3.656,227,3.656,228,3.656,229,4.202,230,4.202,231,3.656,232,3.295,233,2.633,234,4.202,235,4.281,236,4.202,237,4.202,238,3.295,239,4.202,240,4.202,241,4.202,242,4.202]],["title/modules/ClientsModule.html",[0,0.706,243,2.727]],["body/modules/ClientsModule.html",[0,1.117,2,1.428,3,0.179,4,0.179,5,0.113,7,0.295,8,0.014,11,0.659,13,1.6,35,0.179,36,0.115,37,0.01,38,0.01,44,0.659,49,0.467,51,1.376,52,1.194,53,1.031,54,1.108,56,0.738,60,0.633,63,0.77,77,1.967,89,1.732,166,3.03,169,3.415,212,2.752,217,3.375,221,4.976,224,2.156,225,3.08,227,3.72,231,3.72,232,3.353,233,3.583,235,3.583,243,4.604,244,4.277,245,3.72,246,5.72,247,4.277,248,3.72,249,2.63,250,4.486,251,3.353,252,5.72,253,5.72,254,4.277,255,4.277,256,4.277,257,4.277]],["title/modules/CommonModule.html",[0,0.706,93,1.795]],["body/modules/CommonModule.html",[0,1.16,1,5.046,2,1.542,3,0.193,4,0.193,5,0.122,7,0.306,8,0.014,11,0.712,13,2.252,35,0.193,36,0.124,37,0.01,38,0.01,84,1.663,85,2.033,86,2.033,87,1.871,88,2.825,89,2.712,93,3.467,95,2.65,96,2.033,97,1.949,258,4.018,259,4.018,260,4.018,261,4.018,262,5.387,263,4.619,264,4.619,265,4.619]],["title/injectables/CommonService.html",[39,1.056,262,2.727]],["body/injectables/CommonService.html",[3,0.248,4,0.248,5,0.157,7,0.271,8,0.013,11,0.914,35,0.248,36,0.159,37,0.012,38,0.012,39,1.821,41,2.502,262,4.703,266,5.157]],["title/classes/ConfigHelper.html",[36,0.109,217,2.405]],["body/classes/ConfigHelper.html",[3,0.108,4,0.108,5,0.068,7,0.269,8,0.014,9,2.246,10,2.863,14,2.246,15,2.246,16,1.09,35,0.108,36,0.069,37,0.007,38,0.007,40,4.809,43,0.269,44,0.613,45,3.459,46,2.568,48,3.459,49,0.748,51,1.752,52,1.012,53,1.61,54,1.255,55,3.459,56,0.784,58,1.728,59,2.706,60,0.806,63,1.164,100,0.669,103,0.831,122,1.61,166,3.29,169,3.919,212,2.332,217,3.469,218,2.246,219,2.025,222,2.346,224,1.302,226,4.217,233,4.053,235,4.053,249,1.828,267,2.246,268,4.809,269,4.848,270,4.736,271,3.976,272,3.976,273,3.976,274,4.848,275,3.976,276,2.582,277,2.582,278,2.582,279,3.976,280,2.582,281,2.582,282,3.976,283,2.582,284,2.582,285,2.582,286,2.582,287,2.582,288,2.582,289,2.582,290,1.728,291,4.848,292,2.582,293,2.582,294,2.582,295,2.582,296,2.582,297,2.582,298,2.582,299,2.582,300,2.582,301,2.582,302,3.118,303,2.582,304,2.219,305,2.582,306,2.491,307,2.582,308,2.582,309,2.582,310,3.976,311,2.582,312,2.582,313,2.582]],["title/classes/CreateOrganizationAndMetaTable1741518145374.html",[36,0.109,314,3.197]],["body/classes/CreateOrganizationAndMetaTable1741518145374.html",[3,0.116,4,0.116,5,0.074,7,0.127,8,0.013,35,0.116,36,0.075,37,0.007,38,0.007,43,0.29,44,0.649,49,0.555,51,1.354,52,1.386,53,1.224,54,1.09,56,0.319,59,2.834,60,0.623,103,0.896,122,1.705,125,3.221,129,3.302,134,3.302,139,3.302,148,0.965,188,4.21,190,1.643,192,4.657,212,3.077,224,3.225,249,2.603,314,4.439,315,4.924,316,2.422,317,3.302,318,3.982,319,5.015,320,3.302,321,2.817,322,2.784,323,3.302,324,5.49,325,2.784,326,3.302,327,2.784,328,3.302,329,4.605,330,5.078,331,3.982,332,3.663,333,5.363,334,5.363,335,3.663,336,2.422,337,1.744,338,1.744,339,5.015,340,4.439,341,5.208,342,2.784,343,4.417,344,2.784,345,2.784,346,3.302,347,5.661,348,2.422,349,2.422,350,2.422,351,2.422,352,4.211,353,2.484,354,2.638,355,2.422,356,2.422,357,2.422,358,2.005,359,3.657,360,2.784,361,2.784,362,3.663,363,2.183,364,4.211,365,2.422,366,2.422,367,2.422,368,3.663,369,2.183,370,3.663,371,2.784,372,2.183]],["title/classes/CreateRoleTable1741519642145.html",[36,0.109,373,3.197]],["body/classes/CreateRoleTable1741519642145.html",[3,0.164,4,0.164,5,0.104,7,0.18,8,0.014,35,0.164,36,0.105,37,0.009,38,0.009,43,0.409,44,0.833,49,0.674,51,1.738,52,1.539,53,1.488,54,1.399,56,0.45,59,2.193,60,0.8,103,1.264,122,2.188,148,1.362,188,2.319,190,2.319,192,2.462,212,3.463,224,2.724,249,3.056,317,4.236,318,4.84,319,5.645,320,4.236,321,3.614,323,4.236,324,5.976,326,4.236,328,3.082,329,3.89,333,4.236,334,4.236,341,3.082,346,3.082,372,3.082,373,5.212,374,5.781,375,3.419,376,3.93,377,3.93,378,3.93,379,4.699,380,2.83,381,3.93]],["title/classes/CreateUserInput.html",[36,0.109,382,2.727]],["body/classes/CreateUserInput.html",[3,0.145,4,0.145,5,0.092,7,0.227,8,0.014,35,0.145,36,0.133,37,0.008,38,0.008,43,0.362,49,0.796,53,1.757,56,0.923,70,1.956,103,1.119,111,1.161,122,2.009,149,4.138,150,2.768,304,3.226,337,3.621,338,3.621,382,3.318,383,6.45,384,3.026,385,4.532,386,4.532,387,4.532,388,5.78,389,3.775,390,4.564,391,3.479,392,3.479,393,3.479,394,3.479,395,3.479,396,3.479,397,3.479,398,3.479,399,2.505,400,2.728,401,3.026,402,3.479]],["title/classes/CreateUserTable1741519705062.html",[36,0.109,403,3.197]],["body/classes/CreateUserTable1741519705062.html",[3,0.138,4,0.138,5,0.088,7,0.151,8,0.013,35,0.138,36,0.089,37,0.008,38,0.008,43,0.344,44,0.737,49,0.614,51,1.539,52,1.421,53,1.355,54,1.239,56,0.379,59,2.67,60,0.708,103,1.064,122,1.938,125,2.534,129,2.594,134,2.594,139,2.594,148,1.146,188,3.632,190,1.952,192,4.398,212,3.275,224,3.105,249,2.831,304,1.846,317,3.751,318,4.406,319,5.339,320,3.751,321,3.2,323,3.751,324,5.744,326,3.751,328,2.594,329,4.434,331,3.751,332,2.878,333,5.339,334,5.339,337,2.072,338,2.072,339,4.406,340,3.751,341,4.406,346,2.594,359,2.382,362,4.161,363,2.594,365,2.878,366,2.878,367,2.878,369,2.594,370,2.878,372,2.594,379,2.878,385,2.594,386,2.594,403,4.828,404,5.356,405,2.878,406,3.308,407,3.308,408,3.308,409,6.157,410,4.161,411,3.308,412,4.784,413,4.784]],["title/classes/DataSource.html",[36,0.109,144,2.405]],["body/classes/DataSource.html",[3,0.175,4,0.175,5,0.149,7,0.292,8,0.014,35,0.175,36,0.112,37,0.009,38,0.009,43,0.436,44,0.869,49,0.457,51,1.347,52,0.874,53,1.36,54,1.085,56,0.73,60,0.62,63,0.754,103,1.347,120,2.112,144,3.763,148,1.451,166,3.379,222,2.471,233,2.623,235,2.623,270,4.906,290,2.802,302,3.284,304,2.337,306,2.623,358,3.016,414,4.906,415,3.643,416,5.64,417,4.188,418,3.148,419,4.188,420,4.188,421,4.906,422,4.423,423,4.188,424,3.284,425,3.284,426,4.188,427,4.188,428,4.188,429,4.188,430,6.824,431,4.188,432,4.188,433,4.188,434,4.188,435,4.188,436,4.188,437,4.188,438,4.188,439,3.643,440,3.643,441,4.188,442,3.016,443,4.188,444,4.188,445,4.188]],["title/modules/DatabaseModule.html",[0,0.706,446,2.554]],["body/modules/DatabaseModule.html",[0,0.975,2,1.107,3,0.139,4,0.139,5,0.088,7,0.299,8,0.014,11,0.511,13,1.241,16,2.023,35,0.139,36,0.129,37,0.008,38,0.008,44,0.511,49,0.524,51,1.542,52,1,53,1.486,54,1.241,56,0.78,60,0.71,63,1.013,100,0.859,120,2.417,144,4.244,148,1.15,166,3.266,169,2.981,212,1.596,213,2.886,217,2.828,224,1.673,225,2.389,232,3.759,233,3.003,235,3.003,251,5.127,302,3.759,304,2.675,306,3.003,358,2.389,418,3.44,439,2.886,440,2.886,446,3.526,447,3.317,448,4.793,449,3.317,450,4.793,451,3.317,452,6.165,453,6.165,454,3.317,455,4.793,456,2.886,457,4.793,458,2.078,459,3.317,460,3.317,461,3.317,462,2.886,463,3.317,464,2.601,465,3.317,466,3.317,467,3.317,468,3.317,469,2.886,470,3.317]],["title/classes/DatabaseUtil.html",[36,0.109,156,2.936]],["body/classes/DatabaseUtil.html",[3,0.189,4,0.189,5,0.12,8,0.014,35,0.189,36,0.121,37,0.01,38,0.01,43,0.47,44,0.914,49,0.493,56,0.679,60,0.669,63,0.813,103,1.453,156,4.27,166,3.508,169,3.508,339,4.65,340,3.541,353,2.664,471,3.928,472,7.032,473,4.515,474,4.515,475,4.515,476,4.65,477,4.515,478,4.515,479,3.252,480,4.515,481,4.515,482,4.515,483,4.515,484,4.515,485,4.515,486,4.515,487,4.515,488,4.515,489,4.515,490,3.252,491,4.515,492,3.928,493,4.515,494,4.515,495,3.928,496,3.252,497,4.515,498,4.515,499,3.928,500,4.515,501,4.515,502,4.515,503,3.252,504,4.515,505,3.928,506,4.515,507,4.515]],["title/controllers/DocumentationController.html",[65,1.413,508,2.936]],["body/controllers/DocumentationController.html",[3,0.216,4,0.216,5,0.137,7,0.296,8,0.014,11,0.797,35,0.216,36,0.139,37,0.011,38,0.011,43,0.538,44,0.997,49,0.565,56,0.74,60,0.766,61,2.276,62,2.094,63,0.93,65,2.241,67,1.792,69,2.662,70,1.388,508,4.658,509,4.497,510,5.17,511,4.422,512,4.497,513,5.17]],["title/modules/DocumentationModule.html",[0,0.706,514,2.936]],["body/modules/DocumentationModule.html",[0,1.195,2,1.642,3,0.206,4,0.206,5,0.13,7,0.316,8,0.014,11,0.758,13,1.84,35,0.206,36,0.132,37,0.011,38,0.011,67,2.172,84,1.77,85,2.165,86,2.165,87,1.992,88,2.911,89,1.992,95,2.759,96,2.165,97,2.076,508,4.967,511,4.804,512,4.278,514,5.523,515,4.278,516,4.278,517,4.918,518,4.918]],["title/injectables/DocumentationService.html",[39,1.056,511,2.554]],["body/injectables/DocumentationService.html",[3,0.227,4,0.227,5,0.144,7,0.248,8,0.014,11,0.836,35,0.227,36,0.146,37,0.011,38,0.011,39,1.726,41,2.289,43,0.565,44,1.027,49,0.593,56,0.762,60,0.803,63,0.976,69,2.708,115,2.735,511,4.174,519,4.718,520,5.424,521,5.424]],["title/controllers/EscrowController.html",[65,1.413,522,2.936]],["body/controllers/EscrowController.html",[3,0.202,4,0.202,5,0.128,7,0.331,8,0.014,11,0.746,35,0.202,36,0.13,37,0.01,38,0.01,43,0.504,44,0.956,49,0.529,56,0.71,60,0.717,61,2.131,62,1.96,63,0.871,65,2.15,67,1.677,69,2.599,70,1.299,71,2.701,72,2.564,76,3.462,77,2.226,80,2.701,100,1.253,522,4.467,523,4.21,524,4.84,525,4.289,526,4.21,527,3.795,528,4.84,529,4.84]],["title/modules/EscrowModule.html",[0,0.706,530,2.936]],["body/modules/EscrowModule.html",[0,1.133,2,1.469,3,0.184,4,0.184,5,0.116,7,0.332,8,0.014,11,0.678,13,2.181,35,0.184,36,0.118,37,0.01,38,0.01,67,2.021,84,1.584,85,1.937,86,1.937,87,1.782,88,2.759,89,1.782,93,3.276,94,3.422,95,2.567,96,1.937,97,1.857,100,1.14,522,4.708,525,4.662,526,3.828,530,5.673,531,3.828,532,4.401,533,3.828,534,4.401,535,4.401,536,4.198,537,4.401]],["title/classes/EscrowResolver.html",[36,0.109,536,2.936]],["body/classes/EscrowResolver.html",[3,0.215,4,0.215,5,0.136,7,0.236,8,0.014,35,0.215,36,0.138,37,0.011,38,0.011,43,0.536,44,0.994,49,0.562,52,1.346,56,0.806,60,0.762,63,0.926,70,1.382,103,1.656,105,3.912,106,2.873,109,3.6,110,3.417,111,1.718,112,2.873,536,4.645,538,4.478,539,6.451,540,5.148]],["title/injectables/EscrowService.html",[39,1.056,525,2.554]],["body/injectables/EscrowService.html",[3,0.226,4,0.226,5,0.143,7,0.247,8,0.014,11,0.832,35,0.226,36,0.145,37,0.011,38,0.011,39,1.721,41,2.279,43,0.562,44,1.024,49,0.59,56,0.76,60,0.8,63,0.972,69,2.704,115,2.723,117,2.483,525,4.163,541,4.697,542,5.4,543,3.889]],["title/modules/GatewayModule.html",[0,0.706,544,2.936]],["body/modules/GatewayModule.html",[0,1.113,2,1.418,3,0.177,4,0.177,5,0.112,7,0.294,8,0.014,11,0.655,13,2.13,35,0.177,36,0.114,37,0.01,38,0.01,84,1.529,85,1.869,86,1.869,87,1.72,88,2.711,89,1.72,93,3.243,95,2.506,96,1.869,97,1.792,100,1.1,169,2.25,290,3.809,544,5.636,545,3.694,546,3.694,547,3.694,548,4.788,549,4.928,550,3.33,551,4.247,552,4.952,553,4.952,554,4.952,555,4.952,556,4.952,557,4.952,558,4.952,559,4.952,560,4.247]],["title/injectables/GatewayService.html",[39,1.056,549,2.727]],["body/injectables/GatewayService.html",[3,0.22,4,0.22,5,0.139,7,0.241,8,0.014,11,0.811,35,0.22,36,0.141,37,0.011,38,0.011,39,1.693,41,2.22,43,0.548,44,1.008,46,3.769,49,0.714,56,0.748,60,0.779,63,0.947,105,3.942,115,2.652,117,2.419,549,4.374,561,4.575,562,5.26,563,5.26,564,4.124]],["title/modules/GraphQLGatewayModule.html",[0,0.706,548,2.727]],["body/modules/GraphQLGatewayModule.html",[0,1.105,2,1.398,3,0.175,4,0.175,5,0.111,7,0.326,8,0.014,11,0.646,13,1.567,35,0.175,36,0.112,37,0.009,38,0.009,44,0.646,49,0.457,51,1.347,52,0.874,53,1.01,54,1.085,56,0.73,60,0.62,63,1.015,89,1.696,100,1.085,111,1.398,166,2.988,212,3.068,222,2.471,224,2.112,245,3.643,249,2.594,250,4.423,251,3.284,462,3.643,548,4.267,564,3.284,565,4.906,566,4.188,567,5.64,568,4.188,569,4.188,570,4.906,571,5.64,572,4.188,573,3.284,574,5.64,575,3.643,576,3.016,577,4.188,578,3.643,579,4.188,580,4.188,581,4.188]],["title/modules/GraphQLMicroserviceModule.html",[0,0.706,94,1.875]],["body/modules/GraphQLMicroserviceModule.html",[0,1.13,2,1.748,3,0.219,4,0.219,5,0.139,7,0.325,8,0.014,11,0.807,13,1.959,16,2.21,35,0.219,36,0.141,37,0.011,38,0.011,94,2.998,111,1.748,353,3.09,565,4.555,570,4.555,573,4.107,578,4.555,582,5.237,583,6.52,584,5.237,585,5.237,586,5.237,587,3.504,588,5.237]],["title/controllers/MediaController.html",[65,1.413,589,2.936]],["body/controllers/MediaController.html",[3,0.202,4,0.202,5,0.128,7,0.331,8,0.014,11,0.746,35,0.202,36,0.13,37,0.01,38,0.01,43,0.504,44,0.956,49,0.529,56,0.71,60,0.717,61,2.131,62,1.96,63,0.871,65,2.15,67,1.677,69,2.599,70,1.299,71,2.701,72,2.564,76,3.462,77,2.226,80,2.701,100,1.253,589,4.467,590,4.21,591,4.84,592,4.289,593,4.21,594,3.795,595,4.84,596,4.84]],["title/modules/MediaModule.html",[0,0.706,597,2.936]],["body/modules/MediaModule.html",[0,1.133,2,1.469,3,0.184,4,0.184,5,0.116,7,0.332,8,0.014,11,0.678,13,2.181,35,0.184,36,0.118,37,0.01,38,0.01,67,2.021,84,1.584,85,1.937,86,1.937,87,1.782,88,2.759,89,1.782,93,3.276,94,3.422,95,2.567,96,1.937,97,1.857,100,1.14,589,4.708,592,4.662,593,3.828,597,5.673,598,3.828,599,4.401,600,3.828,601,4.401,602,4.401,603,4.198,604,4.401]],["title/classes/MediaResolver.html",[36,0.109,603,2.936]],["body/classes/MediaResolver.html",[3,0.215,4,0.215,5,0.136,7,0.236,8,0.014,35,0.215,36,0.138,37,0.011,38,0.011,43,0.536,44,0.994,49,0.562,52,1.346,56,0.806,60,0.762,63,0.926,70,1.382,103,1.656,105,3.912,106,2.873,109,3.6,110,3.417,111,1.718,112,2.873,603,4.645,605,4.478,606,6.451,607,5.148]],["title/injectables/MediaService.html",[39,1.056,592,2.554]],["body/injectables/MediaService.html",[3,0.226,4,0.226,5,0.143,7,0.247,8,0.014,11,0.832,35,0.226,36,0.145,37,0.011,38,0.011,39,1.721,41,2.279,43,0.562,44,1.024,49,0.59,56,0.76,60,0.8,63,0.972,69,2.704,115,2.723,117,2.483,592,4.163,608,4.697,609,5.4,610,4.697]],["title/controllers/NotificationController.html",[65,1.413,611,2.936]],["body/controllers/NotificationController.html",[3,0.202,4,0.202,5,0.128,7,0.331,8,0.014,11,0.746,35,0.202,36,0.13,37,0.01,38,0.01,43,0.504,44,0.956,49,0.529,56,0.71,60,0.717,61,2.131,62,1.96,63,0.871,65,2.15,67,1.677,69,2.599,70,1.299,71,2.701,72,2.564,76,3.462,77,2.226,80,2.701,100,1.253,611,4.467,612,4.21,613,4.84,614,4.289,615,4.21,616,3.795,617,4.84,618,4.84]],["title/modules/NotificationModule.html",[0,0.706,619,2.936]],["body/modules/NotificationModule.html",[0,1.133,2,1.469,3,0.184,4,0.184,5,0.116,7,0.332,8,0.014,11,0.678,13,2.181,35,0.184,36,0.118,37,0.01,38,0.01,67,2.021,84,1.584,85,1.937,86,1.937,87,1.782,88,2.759,89,1.782,93,3.276,94,3.422,95,2.567,96,1.937,97,1.857,100,1.14,611,4.708,614,4.662,615,3.828,619,5.673,620,3.828,621,3.828,622,4.401,623,4.401,624,4.401,625,4.198,626,4.401]],["title/classes/NotificationResolver.html",[36,0.109,625,2.936]],["body/classes/NotificationResolver.html",[3,0.215,4,0.215,5,0.136,7,0.236,8,0.014,35,0.215,36,0.138,37,0.011,38,0.011,43,0.536,44,0.994,49,0.562,52,1.346,56,0.806,60,0.762,63,0.926,70,1.382,103,1.656,105,3.912,106,2.873,109,3.6,110,3.417,111,1.718,112,2.873,625,4.645,627,4.478,628,6.451,629,5.148]],["title/injectables/NotificationService.html",[39,1.056,614,2.554]],["body/injectables/NotificationService.html",[3,0.226,4,0.226,5,0.143,7,0.247,8,0.014,11,0.832,35,0.226,36,0.145,37,0.011,38,0.011,39,1.721,41,2.279,43,0.562,44,1.024,49,0.59,56,0.76,60,0.8,63,0.972,69,2.704,115,2.723,117,2.483,614,4.163,630,4.697,631,5.4,632,4.697]],["title/entities/Organization.html",[118,1.721,633,1.586]],["body/entities/Organization.html",[3,0.141,4,0.141,5,0.089,7,0.284,8,0.014,16,2.775,35,0.141,36,0.09,37,0.008,38,0.008,43,0.35,49,0.748,52,1.372,53,1.651,54,1.254,56,0.895,70,1.838,100,0.871,111,1.123,118,2.043,119,2.856,120,1.696,122,1.961,125,1.782,132,2.565,148,1.166,149,3.938,150,2.702,159,2.25,170,5.155,173,4.58,335,4.934,336,4.211,337,3.553,338,3.553,343,4.211,390,2.107,633,2.207,634,2.926,635,5.672,636,3.796,637,3.363,638,4.398,639,3.363,640,4.841,641,3.363,642,4.841,643,3.363,644,3.363,645,2.926,646,3.363,647,3.363,648,4.211,649,2.107,650,2.926,651,2.637,652,2.422]],["title/classes/Organization-1.html",[36,0.092,160,2.016,633,1.33]],["body/classes/Organization-1.html",[3,0.206,4,0.206,5,0.13,7,0.287,8,0.014,35,0.206,36,0.132,37,0.011,38,0.011,43,0.512,49,0.537,53,1.186,56,0.789,59,2.745,70,1.32,100,1.274,103,1.582,111,1.642,122,2.538,125,3.848,149,3.85,150,3.498,587,3.29,633,2.826,649,3.081,652,3.542,653,4.278,654,4.918,655,4.918,656,3.857,657,4.278,658,4.278,659,3.926,660,4.278,661,4.918]],["title/controllers/OrganizationController.html",[65,1.413,662,2.936]],["body/controllers/OrganizationController.html",[3,0.18,4,0.18,5,0.114,7,0.316,8,0.014,11,0.664,35,0.18,36,0.116,37,0.01,38,0.01,43,0.449,44,0.886,49,0.628,51,1.385,52,0.899,53,1.038,54,1.115,56,0.823,60,0.851,61,1.896,62,1.744,63,1.034,65,1.992,67,1.493,69,2.484,70,1.543,71,3.208,72,3.045,76,3.61,77,1.981,80,3.208,125,3.045,662,4.139,663,3.746,664,5.747,665,5.747,666,4.307,667,4.307,668,3.61,669,3.101,670,3.377,671,4.307,672,4.307,673,4.307,674,4.307,675,3.746]],["title/entities/OrganizationMetadata.html",[118,1.721,638,2.727]],["body/entities/OrganizationMetadata.html",[3,0.11,4,0.11,5,0.069,7,0.271,8,0.014,16,2.832,35,0.11,36,0.07,37,0.007,38,0.007,43,0.273,49,0.71,52,1.304,53,1.77,54,1.421,56,0.787,70,1.746,100,0.679,111,0.875,118,1.697,119,2.373,120,1.322,122,1.629,132,3.446,148,1.394,149,3.63,150,2.245,159,1.754,173,4.351,188,3.686,238,4.303,348,3.499,349,4.257,350,4.257,351,3.499,353,3.238,354,3.913,355,3.499,356,3.499,357,5.149,358,2.896,359,2.896,368,5.149,390,2.52,633,2.678,636,2.056,638,2.691,645,4.257,648,3.499,676,5.838,677,2.28,678,4.894,679,4.894,680,4.894,681,4.894,682,2.622,683,5.488,684,5.488,685,5.488,686,2.622,687,2.28,688,2.622,689,2.622,690,2.622,691,4.022,692,4.022,693,4.022,694,2.622,695,2.622,696,2.28,697,2.622,698,2.622,699,4.894,700,3.499,701,2.28,702,2.622,703,4.022]],["title/modules/OrganizationModule.html",[0,0.706,704,2.936]],["body/modules/OrganizationModule.html",[0,1.075,2,1.325,3,0.166,4,0.166,5,0.105,7,0.338,8,0.014,11,0.612,13,2.035,35,0.166,36,0.107,37,0.009,38,0.009,67,1.885,84,1.429,85,1.747,86,1.747,87,1.607,88,2.618,89,1.607,93,3.179,94,3.32,95,2.394,96,1.747,97,1.675,100,1.028,418,2.215,446,4.632,633,1.544,638,3.638,650,3.452,662,4.467,668,4.03,669,2.858,704,5.737,705,3.452,706,3.452,707,3.452,708,3.969,709,3.969,710,3.916,711,3.969,712,2.858,713,3.969,714,3.969,715,3.969]],["title/classes/OrganizationResolver.html",[36,0.109,710,2.936]],["body/classes/OrganizationResolver.html",[3,0.176,4,0.176,5,0.111,7,0.292,8,0.014,16,2.386,35,0.176,36,0.113,37,0.01,38,0.01,43,0.438,44,0.871,46,2.226,49,0.698,51,1.352,52,1.333,53,1.013,54,1.088,56,0.731,60,0.837,61,1.85,62,1.702,63,1.017,70,1.517,103,1.352,105,3.62,106,3.155,109,3.566,110,2.995,111,1.403,112,2.345,132,2.995,249,2.6,633,2.2,651,5.358,668,4.099,669,3.026,710,4.071,712,3.026,716,3.656,717,3.656,718,4.202,719,4.202,720,5.654,721,4.202,722,4.202]],["title/injectables/OrganizationService.html",[39,1.056,668,2.275]],["body/injectables/OrganizationService.html",[3,0.167,4,0.167,5,0.106,7,0.321,8,0.014,11,0.616,35,0.167,36,0.107,37,0.009,38,0.009,39,1.415,41,1.686,43,0.416,44,0.842,46,2.894,49,0.731,51,1.757,52,1.14,53,1.317,54,1.415,56,0.625,60,0.922,62,1.618,63,1.12,69,2.409,115,2.014,117,1.837,148,1.384,170,3.132,249,2.512,268,2.877,458,2.502,633,2.126,668,3.049,712,2.877,723,3.475,724,6.692,725,5.463,726,3.995,727,5.673,728,3.995,729,3.995,730,5.463,731,6.692,732,3.995,733,3.995,734,3.132,735,3.995,736,3.995,737,3.995,738,3.475,739,3.995,740,3.995]],["title/controllers/PaymentController.html",[65,1.413,741,2.936]],["body/controllers/PaymentController.html",[3,0.202,4,0.202,5,0.128,7,0.331,8,0.014,11,0.746,35,0.202,36,0.13,37,0.01,38,0.01,43,0.504,44,0.956,49,0.529,56,0.71,60,0.717,61,2.131,62,1.96,63,0.871,65,2.15,67,1.677,69,2.599,70,1.299,71,2.701,72,2.564,76,3.462,77,2.226,80,2.701,100,1.253,741,4.467,742,4.21,743,4.84,744,4.289,745,4.21,746,3.795,747,4.84,748,4.84]],["title/modules/PaymentModule.html",[0,0.706,749,2.936]],["body/modules/PaymentModule.html",[0,1.133,2,1.469,3,0.184,4,0.184,5,0.116,7,0.332,8,0.014,11,0.678,13,2.181,35,0.184,36,0.118,37,0.01,38,0.01,67,2.021,84,1.584,85,1.937,86,1.937,87,1.782,88,2.759,89,1.782,93,3.276,94,3.422,95,2.567,96,1.937,97,1.857,100,1.14,741,4.708,744,4.662,745,3.828,749,5.673,750,3.828,751,3.828,752,4.401,753,4.401,754,4.401,755,4.198,756,4.401]],["title/classes/PaymentResolver.html",[36,0.109,755,2.936]],["body/classes/PaymentResolver.html",[3,0.215,4,0.215,5,0.136,7,0.236,8,0.014,35,0.215,36,0.138,37,0.011,38,0.011,43,0.536,44,0.994,49,0.562,52,1.346,56,0.806,60,0.762,63,0.926,70,1.382,103,1.656,105,3.912,106,2.873,109,3.6,110,3.417,111,1.718,112,2.873,755,4.645,757,4.478,758,6.451,759,5.148]],["title/injectables/PaymentService.html",[39,1.056,744,2.554]],["body/injectables/PaymentService.html",[3,0.226,4,0.226,5,0.143,7,0.247,8,0.014,11,0.832,35,0.226,36,0.145,37,0.011,38,0.011,39,1.721,41,2.279,43,0.562,44,1.024,49,0.59,56,0.76,60,0.8,63,0.972,69,2.704,115,2.723,117,2.483,744,4.163,760,4.697,761,5.4,762,4.697]],["title/controllers/PropertyController.html",[65,1.413,763,2.936]],["body/controllers/PropertyController.html",[3,0.202,4,0.202,5,0.128,7,0.331,8,0.014,11,0.746,35,0.202,36,0.13,37,0.01,38,0.01,43,0.504,44,0.956,49,0.529,56,0.71,60,0.717,61,2.131,62,1.96,63,0.871,65,2.15,67,1.677,69,2.599,70,1.299,71,2.701,72,2.564,76,3.462,77,2.226,80,2.701,100,1.253,763,4.467,764,4.21,765,4.84,766,4.289,767,4.21,768,3.795,769,4.84,770,4.84]],["title/modules/PropertyModule.html",[0,0.706,771,2.936]],["body/modules/PropertyModule.html",[0,1.133,2,1.469,3,0.184,4,0.184,5,0.116,7,0.332,8,0.014,11,0.678,13,2.181,35,0.184,36,0.118,37,0.01,38,0.01,67,2.021,84,1.584,85,1.937,86,1.937,87,1.782,88,2.759,89,1.782,93,3.276,94,3.422,95,2.567,96,1.937,97,1.857,100,1.14,763,4.708,766,4.662,767,3.828,771,5.673,772,3.828,773,4.401,774,3.828,775,4.401,776,4.401,777,4.198,778,4.401]],["title/classes/PropertyResolver.html",[36,0.109,777,2.936]],["body/classes/PropertyResolver.html",[3,0.215,4,0.215,5,0.136,7,0.236,8,0.014,35,0.215,36,0.138,37,0.011,38,0.011,43,0.536,44,0.994,49,0.562,52,1.346,56,0.806,60,0.762,63,0.926,70,1.382,103,1.656,105,3.912,106,2.873,109,3.6,110,3.417,111,1.718,112,2.873,777,4.645,779,4.478,780,6.451,781,5.148]],["title/injectables/PropertyService.html",[39,1.056,766,2.554]],["body/injectables/PropertyService.html",[3,0.226,4,0.226,5,0.143,7,0.247,8,0.014,11,0.832,35,0.226,36,0.145,37,0.011,38,0.011,39,1.721,41,2.279,43,0.562,44,1.024,49,0.59,56,0.76,60,0.8,63,0.972,69,2.704,115,2.723,117,2.483,766,4.163,782,4.697,783,5.4,784,3.889]],["title/entities/Role.html",[118,1.721,389,2.16]],["body/entities/Role.html",[3,0.191,4,0.191,5,0.121,7,0.273,8,0.014,16,2.81,35,0.191,36,0.123,37,0.01,38,0.01,43,0.476,49,0.653,52,1.474,53,1.44,56,0.86,70,1.603,111,1.524,118,2.521,119,3.524,120,2.303,122,2.42,132,3.527,148,1.583,149,3.716,150,3.334,159,3.055,173,3.997,380,4.795,389,3.165,390,2.861,687,3.972,785,3.972,786,4.566,787,4.566,788,4.566,789,5.974,790,3.288]],["title/modules/SeederModule.html",[0,0.706,791,2.727]],["body/modules/SeederModule.html",[0,1.168,2,1.566,3,0.196,4,0.196,5,0.124,7,0.327,8,0.014,11,0.723,13,1.755,35,0.196,36,0.126,37,0.01,38,0.01,84,1.688,85,2.065,86,2.065,87,1.9,88,2.846,89,2.732,95,2.676,96,2.065,97,1.979,389,2.485,399,3.377,456,4.08,458,2.938,791,5.157,792,4.08,793,4.08,794,4.08,795,5.399,796,4.69,797,4.69,798,4.69]],["title/injectables/SeederService.html",[39,1.056,795,2.727]],["body/injectables/SeederService.html",[3,0.161,4,0.161,5,0.102,7,0.317,8,0.014,11,0.594,35,0.161,36,0.103,37,0.009,38,0.009,39,1.38,41,1.627,43,0.401,44,0.822,46,2.824,49,0.667,51,1.24,52,1.275,53,0.929,54,0.998,60,0.789,100,0.998,148,1.336,169,3.237,212,3.443,224,3.081,268,4.747,306,2.415,389,2.824,399,2.776,458,2.415,727,5.169,734,3.023,790,4.4,795,3.566,799,3.353,800,4.747,801,6.592,802,3.855,803,3.855,804,5.33,805,3.855,806,3.855,807,3.855,808,3.855,809,3.855,810,3.855,811,3.855,812,3.855,813,6.592,814,5.33,815,3.855,816,3.855,817,3.855,818,3.855]],["title/classes/SubgraphsBuilder.html",[36,0.109,576,2.936]],["body/classes/SubgraphsBuilder.html",[3,0.183,4,0.183,5,0.116,7,0.266,8,0.014,35,0.183,36,0.117,37,0.01,38,0.01,43,0.455,44,0.894,49,0.477,51,1.405,52,1.211,53,1.053,54,1.131,56,0.745,59,2.438,60,0.647,63,1.044,100,1.131,103,1.405,166,3.451,169,3.677,212,3.134,217,3.423,224,2.203,225,3.146,233,2.737,235,2.737,249,2.668,576,4.178,819,5.047,820,3.8,821,6.515,822,4.369,823,4.369,824,5.802,825,4.369,826,4.369,827,4.369,828,5.802,829,4.369,830,5.802,831,4.369,832,4.369,833,4.369]],["title/entities/User.html",[118,1.721,834,1.795]],["body/entities/User.html",[3,0.116,4,0.116,5,0.111,7,0.277,8,0.014,16,2.558,35,0.116,36,0.074,37,0.007,38,0.007,43,0.288,49,0.745,52,1.265,53,1.769,54,1.461,56,0.878,70,1.832,100,0.716,111,0.923,118,1.768,119,2.471,120,1.394,122,1.697,125,1.465,132,3.51,148,0.958,149,3.9,150,2.338,159,1.85,173,4.566,176,2.405,192,2.624,304,2.822,331,3.285,337,3.168,338,3.168,359,3.016,363,3.965,385,5.002,386,5.002,387,3.965,389,3.615,390,2.624,400,2.168,410,3.644,490,1.991,492,2.405,633,2.578,636,4.424,649,1.732,652,1.991,696,2.405,700,3.644,834,2.226,835,2.405,836,2.765,837,2.765,838,2.765,839,2.765,840,2.765,841,2.765,842,2.765,843,2.765,844,2.765,845,4.189,846,2.765,847,2.765,848,2.765,849,4.189,850,4.189,851,2.405,852,1.85,853,2.765,854,2.765,855,2.405,856,2.765,857,2.765,858,2.168]],["title/classes/User-1.html",[36,0.092,160,2.016,834,1.504]],["body/classes/User-1.html",[3,0.165,4,0.165,5,0.104,7,0.283,8,0.014,16,2.285,35,0.165,36,0.106,37,0.009,38,0.009,43,0.411,49,0.675,53,1.491,54,1.724,56,0.825,70,1.66,100,1.021,103,1.268,111,1.316,117,1.813,118,1.664,122,2.193,125,3.526,132,3.526,149,3.714,150,3.021,387,5.651,390,3.873,633,2.872,649,2.47,652,2.839,656,3.092,657,3.43,658,3.43,659,2.47,660,3.43,701,3.43,834,3.071,859,3.43,860,3.943,861,3.943,862,3.943,863,3.943,864,3.943,865,3.943,866,3.943,867,3.943,868,3.943,869,3.943,870,3.943,871,3.943]],["title/controllers/UserController.html",[65,1.413,872,2.936]],["body/controllers/UserController.html",[3,0.202,4,0.202,5,0.128,7,0.331,8,0.014,11,0.746,35,0.202,36,0.13,37,0.01,38,0.01,43,0.504,44,0.956,49,0.529,56,0.71,60,0.717,61,2.131,62,1.96,63,0.871,65,2.15,67,1.677,69,2.599,70,1.299,71,2.701,72,2.564,76,3.462,77,2.226,80,2.701,100,1.253,872,4.467,873,4.21,874,4.84,875,4.039,876,3.795,877,3.795,878,4.84,879,4.84]],["title/modules/UserModule.html",[0,0.706,880,2.936]],["body/modules/UserModule.html",[0,1.036,2,1.236,3,0.155,4,0.155,5,0.098,7,0.339,8,0.014,11,0.571,13,1.939,35,0.155,36,0.099,37,0.009,38,0.009,67,1.796,84,1.333,85,1.63,86,1.63,87,1.499,88,2.524,89,1.499,93,3.111,94,3.249,95,2.281,96,1.63,97,1.562,100,0.959,243,4.561,389,2.745,399,2.666,418,2.066,446,4.544,791,4.727,834,1.63,872,4.306,875,4.169,876,2.903,880,5.79,881,3.22,882,3.22,883,3.22,884,3.702,885,3.702,886,2.903,887,3.246,888,3.702,889,2.903,890,3.702,891,3.702,892,3.702,893,3.702]],["title/classes/UserResolver.html",[36,0.109,887,2.554]],["body/classes/UserResolver.html",[3,0.155,4,0.155,5,0.098,7,0.297,8,0.014,16,2.192,35,0.155,36,0.1,37,0.009,38,0.009,43,0.387,44,0.801,46,1.967,49,0.708,51,1.671,52,1.354,53,1.252,54,1.345,56,0.685,60,0.887,61,1.635,62,1.504,63,1.078,70,1.608,103,1.195,105,3.436,106,2.898,109,3.343,110,1.967,111,1.24,112,2.072,132,2.751,249,2.983,382,4.339,834,2.637,858,5.086,875,4.173,876,2.912,887,3.253,889,2.912,894,3.23,895,5.194,896,3.713,897,3.713,898,3.713,899,3.713,900,3.713,901,4.518,902,5.194,903,3.713,904,3.713,905,2.674,906,5.194,907,3.23,908,3.23,909,3.713,910,3.713,911,3.713,912,3.713]],["title/classes/UserResolver-1.html",[36,0.092,160,2.016,887,2.141]],["body/classes/UserResolver-1.html",[3,0.175,4,0.175,5,0.111,7,0.312,8,0.014,16,2.38,35,0.175,36,0.112,37,0.009,38,0.009,43,0.436,44,0.869,46,2.219,49,0.616,51,1.814,52,1.177,53,1.36,54,1.461,60,0.62,61,1.844,62,1.696,63,1.015,70,1.124,103,1.347,110,2.988,111,1.398,125,2.219,132,2.988,192,2.623,212,3.068,249,2.594,633,2.655,668,4.095,669,3.016,675,3.643,712,3.016,717,3.643,834,3.301,887,3.533,913,3.643,914,4.188,915,4.188,916,4.188,917,4.188,918,4.188,919,5.64,920,4.188,921,4.188,922,5.64]],["title/injectables/UserService.html",[39,1.056,875,2.405]],["body/injectables/UserService.html",[3,0.155,4,0.155,5,0.098,7,0.332,8,0.014,11,0.572,35,0.155,36,0.1,37,0.009,38,0.009,39,1.345,41,1.567,43,0.387,44,0.801,46,2.751,49,0.708,51,1.671,52,1.084,53,1.252,54,1.345,56,0.594,60,0.887,62,2.104,63,1.078,69,2.335,77,1.708,100,0.962,115,1.873,117,1.708,148,1.287,249,2.983,268,3.74,304,2.072,382,4.339,400,2.912,458,2.326,727,5.693,734,2.912,738,3.23,834,2.286,875,3.064,886,2.912,889,2.912,901,3.23,907,3.23,908,3.23,923,3.23,924,5.194,925,5.086,926,3.713,927,6.486,928,3.713,929,5.194,930,5.194,931,3.713,932,3.713,933,3.713,934,3.713,935,3.713,936,3.713,937,3.713,938,3.713]],["title/coverage.html",[939,4.343]],["body/coverage.html",[5,0.042,8,0.014,36,0.197,37,0.005,38,0.005,39,1.669,40,1.147,42,1.385,53,0.384,65,2.007,66,1.147,68,1.385,74,0.997,78,1.249,87,2.495,101,1.147,104,1.385,113,1.385,118,1.934,119,1.586,121,2.339,144,0.939,148,1.421,151,1.249,152,1.249,156,1.147,184,5.708,210,1.249,211,1.385,217,0.939,222,0.939,262,1.065,266,1.385,267,1.385,290,1.065,314,1.249,315,1.385,316,1.385,329,1.147,373,1.249,374,1.385,375,1.385,382,1.065,383,1.385,384,1.385,389,1.424,403,1.249,404,1.385,405,1.385,414,1.385,415,1.385,418,0.889,422,4.149,471,1.385,476,6.454,508,1.147,509,1.385,511,0.997,519,1.385,522,1.147,523,1.385,525,0.997,527,1.249,536,1.147,538,1.385,541,1.385,549,1.065,550,1.249,561,1.385,576,1.147,587,1.799,589,1.147,590,1.385,592,0.997,594,1.249,603,1.147,605,1.385,608,1.385,611,1.147,612,1.385,614,0.997,616,1.249,625,1.147,627,1.385,630,1.385,633,1.358,634,2.339,638,1.799,649,0.997,653,1.385,662,1.147,663,1.385,668,0.889,670,1.249,676,2.339,677,2.339,710,1.147,716,1.385,723,1.385,741,1.147,742,1.385,744,0.997,746,1.249,755,1.147,757,1.385,760,1.385,763,1.147,764,1.385,766,0.997,768,1.249,777,1.147,779,1.385,782,1.385,785,2.339,795,1.065,799,1.385,819,1.385,820,1.385,834,1.536,835,2.339,859,1.385,872,1.147,873,1.385,875,0.939,877,1.249,887,1.684,894,1.385,913,1.385,923,1.385,939,1.249,940,1.592,941,1.592,942,1.592,943,7.38,944,1.385,945,7.847,946,1.385,947,1.385,948,1.385,949,4.603,950,7.292,951,4.582,952,1.385,953,1.385,954,1.385,955,1.385,956,1.385,957,4.971,958,2.689,959,2.689,960,1.385,961,3.49,962,1.385,963,1.385,964,1.385,965,1.385,966,1.385,967,2.689,968,1.385,969,1.385,970,1.385,971,1.385,972,1.385,973,1.385,974,1.385,975,1.385,976,1.385,977,1.385,978,1.385,979,1.385,980,1.385,981,2.737,982,2.737,983,1.385,984,2.108,985,2.108,986,1.385,987,3.567,988,1.385,989,1.385,990,1.385,991,1.592]],["title/dependencies.html",[84,1.763,992,2.972]],["body/dependencies.html",[8,0.014,10,3.43,11,0.734,12,4.144,37,0.01,38,0.01,77,2.191,84,1.715,111,1.59,148,1.651,219,3.735,421,4.144,458,2.984,573,3.735,575,4.144,993,6.14,994,4.764,995,4.764,996,4.764,997,6.14,998,6.795,999,4.764,1000,4.764,1001,4.764,1002,4.764,1003,4.764,1004,4.764,1005,4.764,1006,4.764,1007,4.144,1008,4.764,1009,4.764,1010,4.764,1011,4.764,1012,4.764,1013,4.764,1014,4.764,1015,4.764,1016,4.764,1017,4.764,1018,4.764,1019,4.764,1020,4.764,1021,4.764]],["title/miscellaneous/enumerations.html",[1022,2.141,1023,4.259]],["body/miscellaneous/enumerations.html",[8,0.014,37,0.01,38,0.01,43,0.502,117,2.845,190,4.78,790,4.456,886,4.852,1022,3.02,1023,4.193,1024,4.821,1025,6.187,1026,4.821,1027,4.821,1028,6.187,1029,6.187,1030,6.187,1031,6.187,1032,6.187,1033,6.187,1034,6.187,1035,6.187,1036,4.821,1037,6.187,1038,6.187,1039,5.382,1040,6.187]],["title/miscellaneous/functions.html",[1022,2.141,1041,4.259]],["body/miscellaneous/functions.html",[8,0.012,37,0.009,38,0.009,43,0.415,51,1.999,52,1.297,53,1.498,54,1.609,56,0.624,60,0.807,87,3.378,151,4.274,152,4.274,174,2.867,188,2.349,190,3.216,238,5.24,476,3.122,587,3.646,649,3.414,656,3.122,944,3.463,946,3.463,947,3.463,952,3.463,953,3.463,955,3.463,960,3.463,963,3.463,965,3.463,968,3.463,969,3.463,981,3.122,982,4.873,984,3.122,985,4.274,1022,2.494,1041,3.463,1042,7.732,1043,3.982,1044,4.741,1045,3.463,1046,3.982,1047,3.982,1048,3.982,1049,5.45,1050,5.45,1051,3.982,1052,3.982]],["title/index.html",[43,0.356,1053,3.417,1054,3.417]],["body/index.html",[8,0.013,32,1.247,33,2.14,37,0.004,38,0.004,59,0.8,84,0.516,88,0.605,97,0.605,116,2.326,117,2.799,122,1.308,148,0.852,160,0.846,182,1.033,195,2.326,202,1.247,228,1.247,248,1.247,250,1.125,304,0.8,337,0.898,338,0.898,353,0.846,354,0.898,369,1.125,380,1.033,389,0.76,401,1.247,469,1.247,495,5.628,496,1.033,499,1.247,503,1.033,505,1.247,543,3.992,564,4.346,610,2.14,632,4.089,633,1.957,651,3.002,659,1.541,762,4.615,784,4.14,790,1.771,834,2.68,851,1.247,855,2.14,858,3.686,939,1.125,1007,1.247,1039,1.247,1055,3.23,1056,3.23,1057,3.23,1058,1.434,1059,1.125,1060,2.46,1061,2.532,1062,1.125,1063,3.992,1064,2.532,1065,2.46,1066,1.434,1067,1.929,1068,1.434,1069,1.434,1070,1.434,1071,4.346,1072,3.23,1073,1.125,1074,1.434,1075,3.686,1076,1.434,1077,1.929,1078,1.434,1079,1.434,1080,1.434,1081,1.434,1082,1.434,1083,1.434,1084,1.434,1085,1.434,1086,1.929,1087,1.434,1088,1.434,1089,3.23,1090,1.434,1091,1.434,1092,1.434,1093,1.434,1094,2.326,1095,2.46,1096,2.809,1097,1.434,1098,1.125,1099,1.434,1100,1.434,1101,1.434,1102,1.434,1103,1.434,1104,1.434,1105,2.14,1106,2.46,1107,1.434,1108,1.247,1109,3.829,1110,3.943,1111,1.434,1112,5.305,1113,2.46,1114,1.434,1115,3.23,1116,3.23,1117,1.434,1118,2.46,1119,1.434,1120,1.434,1121,1.434,1122,1.434,1123,1.434,1124,2.46,1125,1.434,1126,1.434,1127,1.434,1128,3.23,1129,1.434,1130,1.434,1131,3.23,1132,2.46,1133,2.46,1134,1.434,1135,4.701,1136,4.701,1137,1.434,1138,3.23,1139,1.434,1140,1.434,1141,1.434,1142,3.829,1143,3.385,1144,1.434,1145,1.434,1146,2.46,1147,1.434,1148,2.46,1149,4.308,1150,1.434,1151,1.434,1152,1.434,1153,2.46,1154,2.46,1155,1.434,1156,1.434,1157,1.434,1158,1.434,1159,1.434,1160,3.23,1161,1.434,1162,2.46,1163,4.308,1164,4.649,1165,1.434,1166,1.434,1167,2.46,1168,3.23,1169,2.46,1170,2.46,1171,1.434,1172,2.46,1173,1.434,1174,1.434,1175,1.434,1176,2.46,1177,1.434,1178,1.434,1179,1.434,1180,1.434,1181,1.434,1182,2.46,1183,1.434,1184,1.434,1185,1.434,1186,3.829,1187,3.23,1188,1.434,1189,1.434,1190,1.434,1191,2.46,1192,1.434,1193,1.434,1194,1.125,1195,4.346,1196,1.434,1197,1.434,1198,2.46,1199,1.434,1200,3.23,1201,3.23,1202,1.434,1203,1.434,1204,1.434,1205,2.46,1206,2.46,1207,1.434,1208,1.434,1209,1.434,1210,1.434,1211,1.125,1212,1.434,1213,1.434,1214,2.46,1215,1.434,1216,1.434,1217,1.125,1218,1.125,1219,1.434,1220,2.46,1221,1.434,1222,2.46,1223,1.434,1224,1.434,1225,1.434,1226,2.46,1227,1.434,1228,1.434,1229,1.434,1230,1.434,1231,1.434,1232,1.434,1233,1.434,1234,1.434,1235,1.434,1236,2.46,1237,3.23,1238,1.434,1239,1.125,1240,1.125,1241,1.434,1242,1.434,1243,3.23,1244,1.125,1245,4.308,1246,1.434,1247,2.46,1248,3.23,1249,1.434,1250,1.434,1251,1.434,1252,1.929,1253,1.434,1254,1.434,1255,1.434,1256,1.434,1257,1.434,1258,1.434,1259,1.434,1260,1.434,1261,2.46,1262,1.434,1263,1.434,1264,1.434,1265,2.46,1266,1.434,1267,1.434,1268,2.46,1269,2.46,1270,1.434,1271,1.434,1272,1.125,1273,1.033,1274,1.434,1275,1.434,1276,1.434,1277,1.434,1278,1.434,1279,2.46,1280,2.46,1281,1.434,1282,1.434,1283,1.434,1284,1.434,1285,1.434,1286,1.125,1287,1.434,1288,1.434,1289,1.434,1290,1.434,1291,1.434,1292,1.434,1293,1.434,1294,2.46,1295,1.434,1296,1.434,1297,1.434,1298,2.46,1299,1.434,1300,1.434,1301,1.125,1302,1.434,1303,2.46,1304,1.434,1305,1.434,1306,1.434,1307,1.434,1308,2.46,1309,1.434,1310,1.434,1311,1.434,1312,1.434,1313,1.434,1314,2.46,1315,1.125,1316,1.434,1317,2.46,1318,2.46,1319,1.434,1320,1.434,1321,1.434,1322,1.434,1323,1.434,1324,1.434]],["title/modules.html",[2,1.849]],["body/modules.html",[1,3.01,2,1.502,8,0.01,37,0.01,38,0.01,83,3.24,93,1.98,94,2.069,243,3.01,446,2.818,514,3.24,530,3.24,544,3.24,548,3.01,597,3.24,619,3.24,704,3.24,749,3.24,771,3.24,791,3.01,880,3.24,1273,5.776,1325,7.294,1326,5.72,1327,8.192,1328,8.021,1329,8.021]],["title/overview.html",[1330,4.818]],["body/overview.html",[0,0.457,1,3.287,2,0.881,8,0.014,37,0.007,38,0.007,41,1.114,67,0.914,74,3.078,83,4.843,84,0.95,85,1.162,86,1.162,87,1.069,88,1.114,89,1.069,90,2.295,91,2.295,92,2.295,93,3.329,94,3.236,95,1.78,96,1.162,97,1.114,103,0.849,120,1.331,243,3.287,258,2.295,259,2.295,260,2.295,261,2.295,262,4.361,354,1.653,446,3.923,511,3.078,514,3.966,515,2.295,516,2.295,525,3.078,530,4.843,531,2.295,533,2.295,544,4.843,545,2.295,546,2.295,547,2.295,548,3.287,549,3.287,592,3.078,597,4.843,598,2.295,600,2.295,614,3.078,619,4.843,620,2.295,621,2.295,668,2.742,704,5.228,705,2.295,706,2.295,707,2.295,744,3.078,749,4.843,750,2.295,751,2.295,766,3.078,771,4.843,772,2.295,774,2.295,791,4.19,792,2.295,793,2.295,794,2.295,795,4.361,875,2.899,880,5.445,881,2.295,882,2.295,883,2.295,1330,2.295,1331,2.639,1332,2.639,1333,2.639,1334,2.639]],["title/properties.html",[122,1.983,992,2.972]],["body/properties.html",[8,0.014,37,0.012,38,0.012,122,2.461,380,4.376,1335,6.077,1336,6.077,1337,6.077,1338,6.077,1339,6.077]],["title/miscellaneous/variables.html",[424,3.84,1022,2.141]],["body/miscellaneous/variables.html",[5,0.052,8,0.014,16,1.707,19,2.78,21,2.78,23,2.78,24,2.78,25,2.78,26,2.78,27,2.78,28,2.78,37,0.005,38,0.005,43,0.204,52,0.409,53,1.675,54,0.828,56,0.693,58,1.311,78,2.506,148,2.013,188,4.505,190,4.462,290,2.706,418,1.783,422,5.447,424,1.537,479,2.301,527,2.506,550,1.537,552,2.78,553,2.78,554,2.78,555,2.78,556,2.78,557,2.78,558,2.78,559,2.78,587,2.138,594,2.506,616,2.506,633,1.243,659,2.534,670,2.506,746,2.506,768,2.506,800,1.412,834,1.407,852,1.311,877,2.506,905,2.301,948,1.705,949,6.122,954,1.705,956,1.705,962,1.705,964,1.705,966,1.705,970,1.705,971,1.705,972,1.705,973,1.705,974,1.705,975,1.705,976,1.705,977,1.705,978,1.705,979,1.705,980,1.705,981,1.537,982,2.506,983,2.78,984,1.537,985,2.506,986,2.78,987,4.469,988,3.518,989,3.518,990,2.78,1022,1.228,1044,1.705,1045,1.705,1063,1.412,1094,2.301,1108,1.705,1143,1.412,1340,1.96,1341,1.96,1342,1.96,1343,1.96,1344,1.96,1345,1.96,1346,1.96,1347,1.96,1348,1.96,1349,5.81,1350,1.96,1351,1.96,1352,1.96,1353,1.96,1354,4.665,1355,1.537,1356,4.665,1357,3.195,1358,1.96,1359,1.537,1360,3.172,1361,1.537,1362,1.96,1363,1.311,1364,1.537,1365,1.96,1366,3.658,1367,1.537,1368,1.412,1369,1.96,1370,1.96,1371,1.96,1372,1.96,1373,1.537,1374,1.537,1375,1.96,1376,1.96,1377,1.96,1378,1.96,1379,1.96,1380,1.96,1381,1.96,1382,6.442,1383,3.195,1384,3.195,1385,3.195,1386,3.195,1387,3.195,1388,3.195,1389,3.195,1390,3.195,1391,3.195,1392,3.195,1393,3.195,1394,1.96,1395,1.96,1396,3.195,1397,1.96,1398,3.195,1399,3.195,1400,1.96,1401,3.195,1402,3.195,1403,3.195,1404,3.195,1405,1.96,1406,1.96,1407,1.96,1408,1.96,1409,1.96,1410,1.96,1411,1.96,1412,3.195]],["title/additional-documentation/running-migrations-and-seeders.html",[442,1.859,1363,1.727,1368,1.859,1413,2.245,1414,2.024]],["body/additional-documentation/running-migrations-and-seeders.html",[0,0.393,5,0.163,8,0.013,37,0.006,38,0.006,51,0.73,52,0.75,54,0.931,58,2.985,84,1.293,116,1.634,118,0.957,120,1.144,127,1.779,144,2.12,148,2.039,160,1.338,174,1.634,182,1.634,195,2.587,222,1.338,306,3.861,321,2.404,353,1.338,354,1.421,418,1.266,425,1.779,442,4.439,464,1.779,479,3.983,490,3.983,496,1.634,503,1.634,543,3.654,633,1.736,659,4.31,784,3.213,800,3.983,834,2.714,852,5.149,905,1.634,925,1.779,1059,2.817,1061,2.817,1062,1.779,1063,4.439,1064,2.817,1067,3.498,1071,5.013,1073,1.779,1075,4.613,1077,1.779,1086,1.779,1094,4.439,1098,2.817,1110,1.779,1143,2.587,1164,1.779,1194,3.979,1195,1.779,1211,2.817,1217,1.779,1218,1.779,1239,1.779,1240,3.498,1244,1.779,1252,1.779,1272,1.779,1273,1.634,1286,1.779,1301,1.779,1315,1.779,1326,1.779,1355,5.569,1359,5.569,1360,3.498,1361,3.979,1363,1.518,1364,1.779,1366,2.817,1367,1.779,1368,1.634,1373,1.779,1374,1.779,1414,1.779,1415,1.973,1416,1.973,1417,1.973,1418,1.973,1419,1.973,1420,1.973,1421,1.973,1422,1.973,1423,1.973,1424,3.881,1425,1.973,1426,1.973,1427,1.973,1428,3.125,1429,3.881,1430,1.973,1431,1.973,1432,3.881,1433,3.125,1434,1.973,1435,3.125,1436,3.125,1437,1.973,1438,3.881,1439,3.125,1440,3.881,1441,1.973,1442,1.973,1443,1.973,1444,1.973,1445,3.125,1446,3.125,1447,3.125,1448,3.125,1449,1.973,1450,1.973,1451,1.973,1452,1.973,1453,3.125,1454,1.973,1455,1.973,1456,1.973,1457,1.973,1458,1.973,1459,1.973,1460,1.973,1461,1.973,1462,3.125,1463,1.973,1464,1.973,1465,1.973,1466,1.973,1467,1.973,1468,1.973,1469,1.973,1470,1.973,1471,1.973,1472,1.973,1473,1.973,1474,1.973,1475,1.973,1476,1.973,1477,1.973,1478,1.973,1479,1.973,1480,1.973,1481,1.973,1482,1.973,1483,1.973,1484,1.973,1485,1.973,1486,1.973]],["title/additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html",[852,1.727,1096,2.245,1105,2.245,1363,1.727,1413,2.245]],["body/additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html",[0,0.393,5,0.163,8,0.013,37,0.006,38,0.006,51,0.73,52,0.75,54,0.931,58,2.985,84,1.293,116,1.634,118,0.957,120,1.144,127,1.779,144,2.12,148,2.039,160,1.338,174,1.634,182,1.634,195,2.587,222,1.338,306,3.861,321,2.404,353,1.338,354,1.421,418,1.266,425,1.779,442,4.439,464,1.779,479,3.983,490,3.983,496,1.634,503,1.634,543,3.654,633,1.736,659,4.31,784,3.213,800,3.983,834,2.714,852,5.149,905,1.634,925,1.779,1059,2.817,1061,2.817,1062,1.779,1063,4.439,1064,2.817,1067,3.498,1071,5.013,1073,1.779,1075,4.613,1077,1.779,1086,1.779,1094,4.439,1098,2.817,1110,1.779,1143,2.587,1164,1.779,1194,3.979,1195,1.779,1211,2.817,1217,1.779,1218,1.779,1239,1.779,1240,3.498,1244,1.779,1252,1.779,1272,1.779,1273,1.634,1286,1.779,1301,1.779,1315,1.779,1326,1.779,1355,5.569,1359,5.569,1360,3.498,1361,3.979,1363,1.518,1364,1.779,1366,2.817,1367,1.779,1368,1.634,1373,1.779,1374,1.779,1414,1.779,1415,1.973,1416,1.973,1417,1.973,1418,1.973,1419,1.973,1420,1.973,1421,1.973,1422,1.973,1423,1.973,1424,3.881,1425,1.973,1426,1.973,1427,1.973,1428,3.125,1429,3.881,1430,1.973,1431,1.973,1432,3.881,1433,3.125,1434,1.973,1435,3.125,1436,3.125,1437,1.973,1438,3.881,1439,3.125,1440,3.881,1441,1.973,1442,1.973,1443,1.973,1444,1.973,1445,3.125,1446,3.125,1447,3.125,1448,3.125,1449,1.973,1450,1.973,1451,1.973,1452,1.973,1453,3.125,1454,1.973,1455,1.973,1456,1.973,1457,1.973,1458,1.973,1459,1.973,1460,1.973,1461,1.973,1462,3.125,1463,1.973,1464,1.973,1465,1.973,1466,1.973,1467,1.973,1468,1.973,1469,1.973,1470,1.973,1471,1.973,1472,1.973,1473,1.973,1474,1.973,1475,1.973,1476,1.973,1477,1.973,1478,1.973,1479,1.973,1480,1.973,1481,1.973,1482,1.973,1483,1.973,1484,1.973,1485,1.973,1486,1.973]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"entities/Role.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["0",{"_index":476,"title":{},"body":{"classes/DatabaseUtil.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["0.0.1",{"_index":1336,"title":{},"body":{"properties.html":{}}}],["0.2.0",{"_index":1016,"title":{},"body":{"dependencies.html":{}}}],["0.3.20",{"_index":1019,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":945,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":943,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":951,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":957,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":961,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":959,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":958,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":967,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":160,"title":{"classes/Organization-1.html":{},"classes/User-1.html":{},"classes/UserResolver-1.html":{}},"body":{"entities/BaseEntity.html":{},"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["10",{"_index":480,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["10.0.0",{"_index":998,"title":{},"body":{"dependencies.html":{}}}],["10.4.15",{"_index":1000,"title":{},"body":{"dependencies.html":{}}}],["11.0.0",{"_index":1003,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":501,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["12.2.2",{"_index":997,"title":{},"body":{"dependencies.html":{}}}],["13",{"_index":1333,"title":{},"body":{"overview.html":{}}}],["16.10.0",{"_index":1008,"title":{},"body":{"dependencies.html":{}}}],["16.4.7",{"_index":1006,"title":{},"body":{"dependencies.html":{}}}],["17",{"_index":1331,"title":{},"body":{"overview.html":{}}}],["17.0.33",{"_index":1005,"title":{},"body":{"dependencies.html":{}}}],["17.13.3",{"_index":1011,"title":{},"body":{"dependencies.html":{}}}],["17.7.2",{"_index":1021,"title":{},"body":{"dependencies.html":{}}}],["19",{"_index":507,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["2",{"_index":353,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/DatabaseUtil.html":{},"modules/GraphQLMicroserviceModule.html":{},"entities/OrganizationMetadata.html":{},"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["2.9.3",{"_index":993,"title":{},"body":{"dependencies.html":{}}}],["22",{"_index":1069,"title":{},"body":{"index.html":{}}}],["25",{"_index":1334,"title":{},"body":{"overview.html":{}}}],["3",{"_index":503,"title":{},"body":{"classes/DatabaseUtil.html":{},"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["3.3.0",{"_index":999,"title":{},"body":{"dependencies.html":{}}}],["3d",{"_index":1233,"title":{},"body":{"index.html":{}}}],["4",{"_index":1244,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["4.11.3",{"_index":995,"title":{},"body":{"dependencies.html":{}}}],["48",{"_index":477,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["5",{"_index":354,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"entities/OrganizationMetadata.html":{},"index.html":{},"overview.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["5.0",{"_index":703,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["5.4.2",{"_index":1010,"title":{},"body":{"dependencies.html":{}}}],["5432",{"_index":434,"title":{},"body":{"classes/DataSource.html":{}}}],["6",{"_index":1285,"title":{},"body":{"index.html":{}}}],["7",{"_index":505,"title":{},"body":{"classes/DatabaseUtil.html":{},"index.html":{}}}],["7${randombytes.substring(1",{"_index":502,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["7.8.1",{"_index":1018,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":499,"title":{},"body":{"classes/DatabaseUtil.html":{},"index.html":{}}}],["8.13.1",{"_index":1013,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":1332,"title":{},"body":{"overview.html":{}}}],["9996",{"_index":191,"title":{},"body":{"entities/BaseEntity.html":{}}}],["__dirname",{"_index":1371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["abstract",{"_index":158,"title":{},"body":{"entities/BaseEntity.html":{}}}],["access",{"_index":1138,"title":{},"body":{"index.html":{}}}],["accessors",{"_index":273,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["accurate",{"_index":1209,"title":{},"body":{"index.html":{}}}],["action",{"_index":413,"title":{},"body":{"classes/CreateUserTable1741519705062.html":{}}}],["actions",{"_index":1170,"title":{},"body":{"index.html":{}}}],["add",{"_index":363,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{},"entities/User.html":{}}}],["additional",{"_index":1363,"title":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}},"body":{"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["addresses",{"_index":1175,"title":{},"body":{"index.html":{}}}],["admin",{"_index":1039,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["against",{"_index":1156,"title":{},"body":{"index.html":{}}}],["alias",{"_index":1354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allow_interest_earning",{"_index":356,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"entities/OrganizationMetadata.html":{}}}],["allowing",{"_index":1187,"title":{},"body":{"index.html":{}}}],["allowinterestearning",{"_index":678,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["already",{"_index":1227,"title":{},"body":{"index.html":{}}}],["amounts",{"_index":1246,"title":{},"body":{"index.html":{}}}],["angular",{"_index":1130,"title":{},"body":{"index.html":{}}}],["api",{"_index":1116,"title":{},"body":{"index.html":{}}}],["apollo/gateway",{"_index":575,"title":{},"body":{"modules/GraphQLGatewayModule.html":{},"dependencies.html":{}}}],["apollo/gateway/src/config",{"_index":826,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["apollo/server",{"_index":994,"title":{},"body":{"dependencies.html":{}}}],["apollo/subgraph",{"_index":996,"title":{},"body":{"dependencies.html":{}}}],["apollofederationdriver",{"_index":583,"title":{},"body":{"modules/GraphQLMicroserviceModule.html":{}}}],["apollofederationdriverconfig",{"_index":584,"title":{},"body":{"modules/GraphQLMicroserviceModule.html":{}}}],["apollogatewaydriver",{"_index":571,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["apollogatewaydriverconfig",{"_index":572,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["app",{"_index":228,"title":{},"body":{"classes/Bootstrapper.html":{},"index.html":{}}}],["app.connectmicroservice",{"_index":230,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["app.listen(port",{"_index":240,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["app.startallmicroservices",{"_index":237,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["appconfigmodule",{"_index":1,"title":{"modules/AppConfigModule.html":{}},"body":{"modules/AppConfigModule.html":{},"modules/CommonModule.html":{},"modules.html":{},"overview.html":{}}}],["appconfigservice",{"_index":40,"title":{"injectables/AppConfigService.html":{}},"body":{"injectables/AppConfigService.html":{},"classes/ConfigHelper.html":{},"coverage.html":{}}}],["appconfigservice(configservice",{"_index":295,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["appcontext",{"_index":292,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["appcontext.get(configservice",{"_index":294,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["applied",{"_index":1442,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["applies",{"_index":1431,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["appropriate",{"_index":1319,"title":{},"body":{"index.html":{}}}],["apps",{"_index":1108,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["apps/${microservice}/src/typeorm.data",{"_index":1372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/${schema}/**/**.entity{.ts,.js",{"_index":441,"title":{},"body":{"classes/DataSource.html":{}}}],["apps/${schema}/src/migrations/**/*{.ts,.js",{"_index":443,"title":{},"body":{"classes/DataSource.html":{}}}],["apps/${schema}/src/subscriber/**/*{.ts,.js",{"_index":445,"title":{},"body":{"classes/DataSource.html":{}}}],["apps/.../gateway.module.ts",{"_index":1350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../main.ts",{"_index":1042,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../seeder.ts",{"_index":1043,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../typeorm.data",{"_index":1349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps//src/seeder/seeder.ts",{"_index":1448,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["apps/auth/src/auth.controller.ts",{"_index":68,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["apps/auth/src/auth.controller.ts:11",{"_index":73,"title":{},"body":{"controllers/AuthController.html":{}}}],["apps/auth/src/auth.module.ts",{"_index":98,"title":{},"body":{"modules/AuthModule.html":{}}}],["apps/auth/src/auth.service.ts",{"_index":113,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["apps/auth/src/auth.service.ts:5",{"_index":114,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/auth/src/main.ts",{"_index":944,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/auth/src/resolvers/auth.resolver.ts",{"_index":104,"title":{},"body":{"classes/AuthResolver.html":{},"coverage.html":{}}}],["apps/auth/src/resolvers/auth.resolver.ts:6",{"_index":108,"title":{},"body":{"classes/AuthResolver.html":{}}}],["apps/documentation/src/documentation.controller.ts",{"_index":509,"title":{},"body":{"controllers/DocumentationController.html":{},"coverage.html":{}}}],["apps/documentation/src/documentation.controller.ts:9",{"_index":510,"title":{},"body":{"controllers/DocumentationController.html":{}}}],["apps/documentation/src/documentation.module.ts",{"_index":517,"title":{},"body":{"modules/DocumentationModule.html":{}}}],["apps/documentation/src/documentation.service.ts",{"_index":519,"title":{},"body":{"injectables/DocumentationService.html":{},"coverage.html":{}}}],["apps/documentation/src/documentation.service.ts:5",{"_index":520,"title":{},"body":{"injectables/DocumentationService.html":{}}}],["apps/documentation/src/main.ts",{"_index":946,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/escrow/src/escrow.controller.ts",{"_index":523,"title":{},"body":{"controllers/EscrowController.html":{},"coverage.html":{}}}],["apps/escrow/src/escrow.controller.ts:11",{"_index":524,"title":{},"body":{"controllers/EscrowController.html":{}}}],["apps/escrow/src/escrow.module.ts",{"_index":534,"title":{},"body":{"modules/EscrowModule.html":{}}}],["apps/escrow/src/escrow.service.ts",{"_index":541,"title":{},"body":{"injectables/EscrowService.html":{},"coverage.html":{}}}],["apps/escrow/src/escrow.service.ts:5",{"_index":542,"title":{},"body":{"injectables/EscrowService.html":{}}}],["apps/escrow/src/main.ts",{"_index":947,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/escrow/src/resolvers/escrow.resolver.ts",{"_index":538,"title":{},"body":{"classes/EscrowResolver.html":{},"coverage.html":{}}}],["apps/escrow/src/resolvers/escrow.resolver.ts:6",{"_index":540,"title":{},"body":{"classes/EscrowResolver.html":{}}}],["apps/escrow/src/typeorm.data",{"_index":948,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/gateway/src/gateway.module.ts",{"_index":550,"title":{},"body":{"modules/GatewayModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/gateway/src/gateway.service.ts",{"_index":561,"title":{},"body":{"injectables/GatewayService.html":{},"coverage.html":{}}}],["apps/gateway/src/gateway.service.ts:4",{"_index":562,"title":{},"body":{"injectables/GatewayService.html":{}}}],["apps/gateway/src/gateway.service.ts:7",{"_index":563,"title":{},"body":{"injectables/GatewayService.html":{}}}],["apps/gateway/src/main.ts",{"_index":952,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/media/src/main.ts",{"_index":953,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/media/src/media.controller.ts",{"_index":590,"title":{},"body":{"controllers/MediaController.html":{},"coverage.html":{}}}],["apps/media/src/media.controller.ts:11",{"_index":591,"title":{},"body":{"controllers/MediaController.html":{}}}],["apps/media/src/media.module.ts",{"_index":601,"title":{},"body":{"modules/MediaModule.html":{}}}],["apps/media/src/media.service.ts",{"_index":608,"title":{},"body":{"injectables/MediaService.html":{},"coverage.html":{}}}],["apps/media/src/media.service.ts:5",{"_index":609,"title":{},"body":{"injectables/MediaService.html":{}}}],["apps/media/src/resolvers/media.resolver.ts",{"_index":605,"title":{},"body":{"classes/MediaResolver.html":{},"coverage.html":{}}}],["apps/media/src/resolvers/media.resolver.ts:6",{"_index":607,"title":{},"body":{"classes/MediaResolver.html":{}}}],["apps/media/src/typeorm.data",{"_index":954,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/notification/src/main.ts",{"_index":955,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/notification/src/notification.controller.ts",{"_index":612,"title":{},"body":{"controllers/NotificationController.html":{},"coverage.html":{}}}],["apps/notification/src/notification.controller.ts:11",{"_index":613,"title":{},"body":{"controllers/NotificationController.html":{}}}],["apps/notification/src/notification.module.ts",{"_index":623,"title":{},"body":{"modules/NotificationModule.html":{}}}],["apps/notification/src/notification.service.ts",{"_index":630,"title":{},"body":{"injectables/NotificationService.html":{},"coverage.html":{}}}],["apps/notification/src/notification.service.ts:5",{"_index":631,"title":{},"body":{"injectables/NotificationService.html":{}}}],["apps/notification/src/resolvers/notification.resolver.ts",{"_index":627,"title":{},"body":{"classes/NotificationResolver.html":{},"coverage.html":{}}}],["apps/notification/src/resolvers/notification.resolver.ts:6",{"_index":629,"title":{},"body":{"classes/NotificationResolver.html":{}}}],["apps/notification/src/typeorm.data",{"_index":956,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/organization/src/entities/external/user.entity.ts",{"_index":859,"title":{},"body":{"classes/User-1.html":{},"coverage.html":{}}}],["apps/organization/src/entities/external/user.entity.ts:10",{"_index":860,"title":{},"body":{"classes/User-1.html":{}}}],["apps/organization/src/entities/external/user.entity.ts:14",{"_index":864,"title":{},"body":{"classes/User-1.html":{}}}],["apps/organization/src/entities/external/user.entity.ts:18",{"_index":862,"title":{},"body":{"classes/User-1.html":{}}}],["apps/organization/src/entities/organization",{"_index":676,"title":{},"body":{"entities/OrganizationMetadata.html":{},"coverage.html":{}}}],["apps/organization/src/entities/organization.entity.ts",{"_index":634,"title":{},"body":{"entities/Organization.html":{},"coverage.html":{}}}],["apps/organization/src/entities/organization.entity.ts:12",{"_index":643,"title":{},"body":{"entities/Organization.html":{}}}],["apps/organization/src/entities/organization.entity.ts:16",{"_index":647,"title":{},"body":{"entities/Organization.html":{}}}],["apps/organization/src/entities/organization.entity.ts:20",{"_index":646,"title":{},"body":{"entities/Organization.html":{}}}],["apps/organization/src/entities/organization.entity.ts:24",{"_index":637,"title":{},"body":{"entities/Organization.html":{}}}],["apps/organization/src/entities/organization.entity.ts:28",{"_index":644,"title":{},"body":{"entities/Organization.html":{}}}],["apps/organization/src/entities/organization.entity.ts:32",{"_index":641,"title":{},"body":{"entities/Organization.html":{}}}],["apps/organization/src/main.ts",{"_index":960,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/organization/src/migrations/1741518145374",{"_index":315,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"coverage.html":{}}}],["apps/organization/src/organization.controller.ts",{"_index":663,"title":{},"body":{"controllers/OrganizationController.html":{},"coverage.html":{}}}],["apps/organization/src/organization.controller.ts:11",{"_index":667,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["apps/organization/src/organization.controller.ts:16",{"_index":666,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["apps/organization/src/organization.module.ts",{"_index":708,"title":{},"body":{"modules/OrganizationModule.html":{}}}],["apps/organization/src/organization.service.ts",{"_index":723,"title":{},"body":{"injectables/OrganizationService.html":{},"coverage.html":{}}}],["apps/organization/src/organization.service.ts:14",{"_index":733,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["apps/organization/src/organization.service.ts:18",{"_index":729,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["apps/organization/src/organization.service.ts:24",{"_index":732,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["apps/organization/src/organization.service.ts:8",{"_index":728,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["apps/organization/src/resolvers/external/user.resolver.ts",{"_index":913,"title":{},"body":{"classes/UserResolver-1.html":{},"coverage.html":{}}}],["apps/organization/src/resolvers/external/user.resolver.ts:11",{"_index":917,"title":{},"body":{"classes/UserResolver-1.html":{}}}],["apps/organization/src/resolvers/external/user.resolver.ts:7",{"_index":914,"title":{},"body":{"classes/UserResolver-1.html":{}}}],["apps/organization/src/resolvers/organization.resolver.ts",{"_index":716,"title":{},"body":{"classes/OrganizationResolver.html":{},"coverage.html":{}}}],["apps/organization/src/resolvers/organization.resolver.ts:10",{"_index":721,"title":{},"body":{"classes/OrganizationResolver.html":{}}}],["apps/organization/src/resolvers/organization.resolver.ts:15",{"_index":719,"title":{},"body":{"classes/OrganizationResolver.html":{}}}],["apps/organization/src/resolvers/organization.resolver.ts:6",{"_index":718,"title":{},"body":{"classes/OrganizationResolver.html":{}}}],["apps/organization/src/typeorm.data",{"_index":962,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/payment/src/main.ts",{"_index":963,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/payment/src/payment.controller.ts",{"_index":742,"title":{},"body":{"controllers/PaymentController.html":{},"coverage.html":{}}}],["apps/payment/src/payment.controller.ts:11",{"_index":743,"title":{},"body":{"controllers/PaymentController.html":{}}}],["apps/payment/src/payment.module.ts",{"_index":753,"title":{},"body":{"modules/PaymentModule.html":{}}}],["apps/payment/src/payment.service.ts",{"_index":760,"title":{},"body":{"injectables/PaymentService.html":{},"coverage.html":{}}}],["apps/payment/src/payment.service.ts:5",{"_index":761,"title":{},"body":{"injectables/PaymentService.html":{}}}],["apps/payment/src/resolvers/payment.resolver.ts",{"_index":757,"title":{},"body":{"classes/PaymentResolver.html":{},"coverage.html":{}}}],["apps/payment/src/resolvers/payment.resolver.ts:6",{"_index":759,"title":{},"body":{"classes/PaymentResolver.html":{}}}],["apps/payment/src/typeorm.data",{"_index":964,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/property/src/main.ts",{"_index":965,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/property/src/property.controller.ts",{"_index":764,"title":{},"body":{"controllers/PropertyController.html":{},"coverage.html":{}}}],["apps/property/src/property.controller.ts:11",{"_index":765,"title":{},"body":{"controllers/PropertyController.html":{}}}],["apps/property/src/property.module.ts",{"_index":775,"title":{},"body":{"modules/PropertyModule.html":{}}}],["apps/property/src/property.service.ts",{"_index":782,"title":{},"body":{"injectables/PropertyService.html":{},"coverage.html":{}}}],["apps/property/src/property.service.ts:5",{"_index":783,"title":{},"body":{"injectables/PropertyService.html":{}}}],["apps/property/src/resolvers/property.resolver.ts",{"_index":779,"title":{},"body":{"classes/PropertyResolver.html":{},"coverage.html":{}}}],["apps/property/src/resolvers/property.resolver.ts:6",{"_index":781,"title":{},"body":{"classes/PropertyResolver.html":{}}}],["apps/property/src/typeorm.data",{"_index":966,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/user/src/dtos/create",{"_index":383,"title":{},"body":{"classes/CreateUserInput.html":{},"coverage.html":{}}}],["apps/user/src/entities/external/organization.entity.ts",{"_index":653,"title":{},"body":{"classes/Organization-1.html":{},"coverage.html":{}}}],["apps/user/src/entities/external/organization.entity.ts:10",{"_index":655,"title":{},"body":{"classes/Organization-1.html":{}}}],["apps/user/src/entities/role.entity.ts",{"_index":785,"title":{},"body":{"entities/Role.html":{},"coverage.html":{}}}],["apps/user/src/entities/role.entity.ts:13",{"_index":786,"title":{},"body":{"entities/Role.html":{}}}],["apps/user/src/entities/role.entity.ts:9",{"_index":788,"title":{},"body":{"entities/Role.html":{}}}],["apps/user/src/entities/user.entity.ts",{"_index":835,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["apps/user/src/entities/user.entity.ts:20",{"_index":837,"title":{},"body":{"entities/User.html":{}}}],["apps/user/src/entities/user.entity.ts:24",{"_index":838,"title":{},"body":{"entities/User.html":{}}}],["apps/user/src/entities/user.entity.ts:28",{"_index":836,"title":{},"body":{"entities/User.html":{}}}],["apps/user/src/entities/user.entity.ts:31",{"_index":841,"title":{},"body":{"entities/User.html":{}}}],["apps/user/src/entities/user.entity.ts:35",{"_index":842,"title":{},"body":{"entities/User.html":{}}}],["apps/user/src/entities/user.entity.ts:40",{"_index":844,"title":{},"body":{"entities/User.html":{}}}],["apps/user/src/entities/user.entity.ts:44",{"_index":840,"title":{},"body":{"entities/User.html":{}}}],["apps/user/src/entities/user.entity.ts:47",{"_index":839,"title":{},"body":{"entities/User.html":{}}}],["apps/user/src/main.ts",{"_index":968,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/user/src/migrations/1741519642145",{"_index":374,"title":{},"body":{"classes/CreateRoleTable1741519642145.html":{},"coverage.html":{}}}],["apps/user/src/migrations/1741519705062",{"_index":404,"title":{},"body":{"classes/CreateUserTable1741519705062.html":{},"coverage.html":{}}}],["apps/user/src/resolvers/user.resolver.ts",{"_index":894,"title":{},"body":{"classes/UserResolver.html":{},"coverage.html":{}}}],["apps/user/src/resolvers/user.resolver.ts:11",{"_index":903,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/user/src/resolvers/user.resolver.ts:16",{"_index":904,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/user/src/resolvers/user.resolver.ts:21",{"_index":900,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/user/src/resolvers/user.resolver.ts:7",{"_index":897,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/user/src/seeder/seeder.module.ts",{"_index":796,"title":{},"body":{"modules/SeederModule.html":{}}}],["apps/user/src/seeder/seeder.service.ts",{"_index":799,"title":{},"body":{"injectables/SeederService.html":{},"coverage.html":{}}}],["apps/user/src/seeder/seeder.service.ts:13",{"_index":805,"title":{},"body":{"injectables/SeederService.html":{}}}],["apps/user/src/seeder/seeder.service.ts:18",{"_index":806,"title":{},"body":{"injectables/SeederService.html":{}}}],["apps/user/src/seeder/seeder.service.ts:8",{"_index":803,"title":{},"body":{"injectables/SeederService.html":{}}}],["apps/user/src/seeder/seeder.ts",{"_index":969,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/user/src/typeorm.data",{"_index":970,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/user/src/user.controller.ts",{"_index":873,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["apps/user/src/user.controller.ts:11",{"_index":874,"title":{},"body":{"controllers/UserController.html":{}}}],["apps/user/src/user.module.ts",{"_index":884,"title":{},"body":{"modules/UserModule.html":{}}}],["apps/user/src/user.service.ts",{"_index":923,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["apps/user/src/user.service.ts:10",{"_index":928,"title":{},"body":{"injectables/UserService.html":{}}}],["apps/user/src/user.service.ts:18",{"_index":933,"title":{},"body":{"injectables/UserService.html":{}}}],["apps/user/src/user.service.ts:22",{"_index":932,"title":{},"body":{"injectables/UserService.html":{}}}],["apps/user/src/user.service.ts:26",{"_index":931,"title":{},"body":{"injectables/UserService.html":{}}}],["architecture",{"_index":1128,"title":{},"body":{"index.html":{}}}],["args",{"_index":905,"title":{},"body":{"classes/UserResolver.html":{},"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["arguments",{"_index":1364,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["argv",{"_index":988,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["array.from(crypto.getrandomvalues(new",{"_index":484,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["ascending",{"_index":209,"title":{},"body":{"entities/BaseEntity.html":{}}}],["async",{"_index":212,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"modules/DatabaseModule.html":{},"modules/GraphQLGatewayModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"classes/UserResolver-1.html":{}}}],["attacks",{"_index":1159,"title":{},"body":{"index.html":{}}}],["auditable",{"_index":1250,"title":{},"body":{"index.html":{}}}],["auditing",{"_index":1249,"title":{},"body":{"index.html":{}}}],["auth",{"_index":116,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["auth.controller",{"_index":99,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":75,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth_client",{"_index":1028,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth_host",{"_index":552,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["auth_port",{"_index":1384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authcommand",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authcommand.ping_auth",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{}}}],["authcontroller",{"_index":66,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticated",{"_index":1323,"title":{},"body":{"index.html":{}}}],["authentication",{"_index":1109,"title":{},"body":{"index.html":{}}}],["authmodule",{"_index":83,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1339,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":1134,"title":{},"body":{"index.html":{}}}],["authorized",{"_index":1324,"title":{},"body":{"index.html":{}}}],["authresolver",{"_index":101,"title":{"classes/AuthResolver.html":{}},"body":{"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"coverage.html":{}}}],["authservice",{"_index":74,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["autoloadentities",{"_index":466,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["automate",{"_index":1477,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["automatically",{"_index":1455,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["autoschemafile",{"_index":586,"title":{},"body":{"modules/GraphQLMicroserviceModule.html":{}}}],["availability",{"_index":1222,"title":{},"body":{"index.html":{}}}],["available",{"_index":1326,"title":{},"body":{"modules.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["await",{"_index":224,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"modules/DatabaseModule.html":{},"modules/GraphQLGatewayModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{}}}],["b.tostring(16).padstart(2",{"_index":487,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["back",{"_index":1436,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["backend",{"_index":1056,"title":{},"body":{"index.html":{}}}],["based",{"_index":195,"title":{},"body":{"entities/BaseEntity.html":{},"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["baseentity",{"_index":119,"title":{"entities/BaseEntity.html":{}},"body":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"entities/Role.html":{},"entities/User.html":{},"coverage.html":{}}}],["baseentitytypeorm",{"_index":141,"title":{},"body":{"entities/BaseEntity.html":{}}}],["baseentitytypeorm.usedatasource.call(this",{"_index":168,"title":{},"body":{"entities/BaseEntity.html":{}}}],["before",{"_index":855,"title":{},"body":{"entities/User.html":{},"index.html":{}}}],["beforeinsert",{"_index":142,"title":{},"body":{"entities/BaseEntity.html":{}}}],["being",{"_index":202,"title":{},"body":{"entities/BaseEntity.html":{},"index.html":{}}}],["between",{"_index":1277,"title":{},"body":{"index.html":{}}}],["billing",{"_index":1280,"title":{},"body":{"index.html":{}}}],["bit",{"_index":478,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["blacklisting",{"_index":1152,"title":{},"body":{"index.html":{}}}],["booking",{"_index":1225,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":357,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"entities/OrganizationMetadata.html":{}}}],["bootstrap",{"_index":87,"title":{},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/SeederModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["bootstrapper",{"_index":210,"title":{"classes/Bootstrapper.html":{}},"body":{"classes/Bootstrapper.html":{},"coverage.html":{}}}],["both",{"_index":201,"title":{},"body":{"entities/BaseEntity.html":{}}}],["browse",{"_index":1327,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1328,"title":{},"body":{"modules.html":{}}}],["brute",{"_index":1157,"title":{},"body":{"index.html":{}}}],["build",{"_index":821,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["build(...graphnames",{"_index":822,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["builder.util.ts",{"_index":820,"title":{},"body":{"classes/SubgraphsBuilder.html":{},"coverage.html":{}}}],["builder.util.ts:5",{"_index":823,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["business",{"_index":850,"title":{},"body":{"entities/User.html":{}}}],["bytes",{"_index":482,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["c",{"_index":1359,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["captcha",{"_index":1161,"title":{},"body":{"index.html":{}}}],["cascade",{"_index":368,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"entities/OrganizationMetadata.html":{}}}],["cascade'})@joincolumn({name",{"_index":694,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["case",{"_index":1296,"title":{},"body":{"index.html":{}}}],["ccpa",{"_index":1181,"title":{},"body":{"index.html":{}}}],["changes",{"_index":1240,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["changing",{"_index":1189,"title":{},"body":{"index.html":{}}}],["character",{"_index":333,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["characters",{"_index":491,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["check",{"_index":176,"title":{},"body":{"entities/BaseEntity.html":{},"entities/User.html":{}}}],["class",{"_index":36,"title":{"classes/AuthResolver.html":{},"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"classes/DatabaseUtil.html":{},"classes/EscrowResolver.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"classes/Organization-1.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"classes/SubgraphsBuilder.html":{},"classes/User-1.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{}},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"entities/Role.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["classdecorator",{"_index":1052,"title":{},"body":{"miscellaneous/functions.html":{}}}],["classes",{"_index":103,"title":{},"body":{"classes/AuthResolver.html":{},"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"classes/DatabaseUtil.html":{},"classes/EscrowResolver.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"classes/Organization-1.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"classes/SubgraphsBuilder.html":{},"classes/User-1.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"overview.html":{}}}],["clear",{"_index":1201,"title":{},"body":{"index.html":{}}}],["cli",{"_index":1094,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["cli.ts",{"_index":987,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["client.enum.ts",{"_index":1025,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["clientproxy",{"_index":927,"title":{},"body":{"injectables/UserService.html":{}}}],["clients",{"_index":255,"title":{},"body":{"modules/ClientsModule.html":{}}}],["clientsmodule",{"_index":243,"title":{"modules/ClientsModule.html":{}},"body":{"modules/ClientsModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["clientsmodule.register(microserviceclient.organization_client",{"_index":893,"title":{},"body":{"modules/UserModule.html":{}}}],["clientsmoduleoptions",{"_index":253,"title":{},"body":{"modules/ClientsModule.html":{}}}],["cluster_authmodule",{"_index":90,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":91,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":92,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_commonmodule",{"_index":258,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_exports",{"_index":259,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_imports",{"_index":260,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_providers",{"_index":261,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_documentationmodule",{"_index":515,"title":{},"body":{"modules/DocumentationModule.html":{},"overview.html":{}}}],["cluster_documentationmodule_providers",{"_index":516,"title":{},"body":{"modules/DocumentationModule.html":{},"overview.html":{}}}],["cluster_escrowmodule",{"_index":531,"title":{},"body":{"modules/EscrowModule.html":{},"overview.html":{}}}],["cluster_escrowmodule_imports",{"_index":532,"title":{},"body":{"modules/EscrowModule.html":{}}}],["cluster_escrowmodule_providers",{"_index":533,"title":{},"body":{"modules/EscrowModule.html":{},"overview.html":{}}}],["cluster_gatewaymodule",{"_index":545,"title":{},"body":{"modules/GatewayModule.html":{},"overview.html":{}}}],["cluster_gatewaymodule_imports",{"_index":546,"title":{},"body":{"modules/GatewayModule.html":{},"overview.html":{}}}],["cluster_gatewaymodule_providers",{"_index":547,"title":{},"body":{"modules/GatewayModule.html":{},"overview.html":{}}}],["cluster_mediamodule",{"_index":598,"title":{},"body":{"modules/MediaModule.html":{},"overview.html":{}}}],["cluster_mediamodule_imports",{"_index":599,"title":{},"body":{"modules/MediaModule.html":{}}}],["cluster_mediamodule_providers",{"_index":600,"title":{},"body":{"modules/MediaModule.html":{},"overview.html":{}}}],["cluster_notificationmodule",{"_index":620,"title":{},"body":{"modules/NotificationModule.html":{},"overview.html":{}}}],["cluster_notificationmodule_imports",{"_index":622,"title":{},"body":{"modules/NotificationModule.html":{}}}],["cluster_notificationmodule_providers",{"_index":621,"title":{},"body":{"modules/NotificationModule.html":{},"overview.html":{}}}],["cluster_organizationmodule",{"_index":705,"title":{},"body":{"modules/OrganizationModule.html":{},"overview.html":{}}}],["cluster_organizationmodule_imports",{"_index":707,"title":{},"body":{"modules/OrganizationModule.html":{},"overview.html":{}}}],["cluster_organizationmodule_providers",{"_index":706,"title":{},"body":{"modules/OrganizationModule.html":{},"overview.html":{}}}],["cluster_paymentmodule",{"_index":750,"title":{},"body":{"modules/PaymentModule.html":{},"overview.html":{}}}],["cluster_paymentmodule_imports",{"_index":752,"title":{},"body":{"modules/PaymentModule.html":{}}}],["cluster_paymentmodule_providers",{"_index":751,"title":{},"body":{"modules/PaymentModule.html":{},"overview.html":{}}}],["cluster_propertymodule",{"_index":772,"title":{},"body":{"modules/PropertyModule.html":{},"overview.html":{}}}],["cluster_propertymodule_imports",{"_index":773,"title":{},"body":{"modules/PropertyModule.html":{}}}],["cluster_propertymodule_providers",{"_index":774,"title":{},"body":{"modules/PropertyModule.html":{},"overview.html":{}}}],["cluster_seedermodule",{"_index":792,"title":{},"body":{"modules/SeederModule.html":{},"overview.html":{}}}],["cluster_seedermodule_exports",{"_index":793,"title":{},"body":{"modules/SeederModule.html":{},"overview.html":{}}}],["cluster_seedermodule_providers",{"_index":794,"title":{},"body":{"modules/SeederModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":881,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":882,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":883,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cmd",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{}}}],["collection",{"_index":1183,"title":{},"body":{"index.html":{}}}],["column",{"_index":173,"title":{},"body":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["column.propertyname",{"_index":186,"title":{},"body":{"entities/BaseEntity.html":{}}}],["column.target",{"_index":175,"title":{},"body":{"entities/BaseEntity.html":{}}}],["columnmetadata",{"_index":154,"title":{},"body":{"entities/BaseEntity.html":{}}}],["columnorder",{"_index":151,"title":{},"body":{"entities/BaseEntity.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["columnorder(9999",{"_index":162,"title":{},"body":{"entities/BaseEntity.html":{}}}],["columnorder(9999)@field(undefined",{"_index":131,"title":{},"body":{"entities/BaseEntity.html":{}}}],["columnorder(9999)@field(undefined)@createdatecolumn({name",{"_index":128,"title":{},"body":{"entities/BaseEntity.html":{}}}],["columnorder(undefined)@field(undefined)@primarygeneratedcolumn('uuid",{"_index":136,"title":{},"body":{"entities/BaseEntity.html":{}}}],["columnorder(value",{"_index":1046,"title":{},"body":{"miscellaneous/functions.html":{}}}],["columns",{"_index":194,"title":{},"body":{"entities/BaseEntity.html":{}}}],["command",{"_index":1360,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["commands",{"_index":1098,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["common",{"_index":1124,"title":{},"body":{"index.html":{}}}],["common.service",{"_index":264,"title":{},"body":{"modules/CommonModule.html":{}}}],["commonmodule",{"_index":93,"title":{"modules/CommonModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["commonservice",{"_index":262,"title":{"injectables/CommonService.html":{}},"body":{"modules/CommonModule.html":{},"injectables/CommonService.html":{},"coverage.html":{},"overview.html":{}}}],["communication",{"_index":1162,"title":{},"body":{"index.html":{}}}],["compared",{"_index":203,"title":{},"body":{"entities/BaseEntity.html":{}}}],["compile",{"_index":1083,"title":{},"body":{"index.html":{}}}],["complete",{"_index":1210,"title":{},"body":{"index.html":{}}}],["completed",{"_index":811,"title":{},"body":{"injectables/SeederService.html":{}}}],["compliance",{"_index":1262,"title":{},"body":{"index.html":{}}}],["comply",{"_index":1263,"title":{},"body":{"index.html":{}}}],["complying",{"_index":1178,"title":{},"body":{"index.html":{}}}],["concerns",{"_index":1132,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":1254,"title":{},"body":{"index.html":{}}}],["config.service",{"_index":289,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["confighelper",{"_index":217,"title":{"classes/ConfigHelper.html":{}},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"modules/DatabaseModule.html":{},"classes/SubgraphsBuilder.html":{},"coverage.html":{}}}],["confighelper.databaseconfig",{"_index":463,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["confighelper.getinstance",{"_index":225,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/DatabaseModule.html":{},"classes/SubgraphsBuilder.html":{}}}],["confighelper.getmicroservicehosts(key",{"_index":831,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["confighelper.getmoduleport(module.name",{"_index":239,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["confighelper.instance",{"_index":291,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["confighelper.instance.appconfigservice",{"_index":296,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["confighelper.redisconfig",{"_index":227,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{}}}],["configmodule",{"_index":9,"title":{},"body":{"modules/AppConfigModule.html":{},"classes/ConfigHelper.html":{}}}],["configmodule.forroot",{"_index":14,"title":{},"body":{"modules/AppConfigModule.html":{},"classes/ConfigHelper.html":{}}}],["configservice",{"_index":48,"title":{},"body":{"injectables/AppConfigService.html":{},"classes/ConfigHelper.html":{}}}],["configured",{"_index":1471,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["confirmation",{"_index":1298,"title":{},"body":{"index.html":{}}}],["connections",{"_index":1420,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["consistency",{"_index":1238,"title":{},"body":{"index.html":{}}}],["consistent",{"_index":1241,"title":{},"body":{"index.html":{}}}],["console.log",{"_index":809,"title":{},"body":{"injectables/SeederService.html":{}}}],["console.log(`inserted",{"_index":818,"title":{},"body":{"injectables/SeederService.html":{}}}],["const",{"_index":169,"title":{},"body":{"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"modules/GatewayModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{}}}],["constraint",{"_index":341,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["construct",{"_index":493,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["constructor",{"_index":46,"title":{},"body":{"injectables/AppConfigService.html":{},"classes/ConfigHelper.html":{},"injectables/GatewayService.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"injectables/SeederService.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{}}}],["constructor(configservice",{"_index":47,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["constructor(organizationclient",{"_index":926,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(organizationservice",{"_index":717,"title":{},"body":{"classes/OrganizationResolver.html":{},"classes/UserResolver-1.html":{}}}],["constructor(private",{"_index":61,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"controllers/DocumentationController.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResolver.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{}}}],["constructor(repository",{"_index":726,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["constructor(rolerepository",{"_index":802,"title":{},"body":{"injectables/SeederService.html":{}}}],["constructor(userservice",{"_index":896,"title":{},"body":{"classes/UserResolver.html":{}}}],["contact",{"_index":1190,"title":{},"body":{"index.html":{}}}],["containing",{"_index":1058,"title":{},"body":{"index.html":{}}}],["control",{"_index":1279,"title":{},"body":{"index.html":{}}}],["controller",{"_index":65,"title":{"controllers/AuthController.html":{},"controllers/DocumentationController.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AuthController.html":{},"controllers/DocumentationController.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controllers",{"_index":67,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["convert",{"_index":488,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["correct",{"_index":496,"title":{},"body":{"classes/DatabaseUtil.html":{},"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["correctly",{"_index":1474,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["corresponding",{"_index":1464,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["coverage",{"_index":939,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":924,"title":{},"body":{"injectables/UserService.html":{}}}],["create(input",{"_index":930,"title":{},"body":{"injectables/UserService.html":{}}}],["created_at",{"_index":129,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["createdat",{"_index":123,"title":{},"body":{"entities/BaseEntity.html":{}}}],["createdatecolumn",{"_index":143,"title":{},"body":{"entities/BaseEntity.html":{}}}],["createorganization",{"_index":1428,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["createorganizationandmetatable.ts",{"_index":316,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"coverage.html":{}}}],["createorganizationandmetatable.ts:44",{"_index":325,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["createorganizationandmetatable.ts:6",{"_index":322,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["createorganizationandmetatable.ts:8",{"_index":327,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["createorganizationandmetatable1741518145374",{"_index":314,"title":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"coverage.html":{}}}],["createroletable.ts",{"_index":375,"title":{},"body":{"classes/CreateRoleTable1741519642145.html":{},"coverage.html":{}}}],["createroletable.ts:15",{"_index":377,"title":{},"body":{"classes/CreateRoleTable1741519642145.html":{}}}],["createroletable.ts:4",{"_index":376,"title":{},"body":{"classes/CreateRoleTable1741519642145.html":{}}}],["createroletable.ts:6",{"_index":378,"title":{},"body":{"classes/CreateRoleTable1741519642145.html":{}}}],["createroletable1741519642145",{"_index":373,"title":{"classes/CreateRoleTable1741519642145.html":{}},"body":{"classes/CreateRoleTable1741519642145.html":{},"coverage.html":{}}}],["creates",{"_index":1426,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["createuser",{"_index":895,"title":{},"body":{"classes/UserResolver.html":{}}}],["createuser(@args",{"_index":911,"title":{},"body":{"classes/UserResolver.html":{}}}],["createuser(input",{"_index":898,"title":{},"body":{"classes/UserResolver.html":{}}}],["createuserinput",{"_index":382,"title":{"classes/CreateUserInput.html":{}},"body":{"classes/CreateUserInput.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["createusertable.ts",{"_index":405,"title":{},"body":{"classes/CreateUserTable1741519705062.html":{},"coverage.html":{}}}],["createusertable.ts:26",{"_index":407,"title":{},"body":{"classes/CreateUserTable1741519705062.html":{}}}],["createusertable.ts:4",{"_index":406,"title":{},"body":{"classes/CreateUserTable1741519705062.html":{}}}],["createusertable.ts:6",{"_index":408,"title":{},"body":{"classes/CreateUserTable1741519705062.html":{}}}],["createusertable1741519705062",{"_index":403,"title":{"classes/CreateUserTable1741519705062.html":{}},"body":{"classes/CreateUserTable1741519705062.html":{},"coverage.html":{}}}],["custom",{"_index":183,"title":{},"body":{"entities/BaseEntity.html":{}}}],["d",{"_index":1381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["damage",{"_index":1258,"title":{},"body":{"index.html":{}}}],["data",{"_index":1164,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["database",{"_index":306,"title":{},"body":{"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"injectables/SeederService.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["database_host",{"_index":24,"title":{},"body":{"modules/AppConfigModule.html":{},"miscellaneous/variables.html":{}}}],["database_name",{"_index":28,"title":{},"body":{"modules/AppConfigModule.html":{},"miscellaneous/variables.html":{}}}],["database_password",{"_index":27,"title":{},"body":{"modules/AppConfigModule.html":{},"miscellaneous/variables.html":{}}}],["database_port",{"_index":25,"title":{},"body":{"modules/AppConfigModule.html":{},"miscellaneous/variables.html":{}}}],["database_type",{"_index":23,"title":{},"body":{"modules/AppConfigModule.html":{},"miscellaneous/variables.html":{}}}],["database_username",{"_index":26,"title":{},"body":{"modules/AppConfigModule.html":{},"miscellaneous/variables.html":{}}}],["databaseconfig",{"_index":274,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["databasemodule",{"_index":446,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/DatabaseModule.html":{},"modules/OrganizationModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["databasemodule.init(schema.organization",{"_index":714,"title":{},"body":{"modules/OrganizationModule.html":{}}}],["databasemodule.init(schema.user",{"_index":891,"title":{},"body":{"modules/UserModule.html":{}}}],["databasemodule.loadentities([organization",{"_index":715,"title":{},"body":{"modules/OrganizationModule.html":{}}}],["databasemodule.loadentities([user",{"_index":892,"title":{},"body":{"modules/UserModule.html":{}}}],["databaseutil",{"_index":156,"title":{"classes/DatabaseUtil.html":{}},"body":{"entities/BaseEntity.html":{},"classes/DatabaseUtil.html":{},"coverage.html":{}}}],["databaseutil.generateuuidv7",{"_index":165,"title":{},"body":{"entities/BaseEntity.html":{}}}],["datasource",{"_index":144,"title":{"classes/DataSource.html":{}},"body":{"entities/BaseEntity.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"coverage.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["datasource.entitymetadatasmap.get(this",{"_index":171,"title":{},"body":{"entities/BaseEntity.html":{}}}],["datasource.getinstance('escrow",{"_index":1405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource.getinstance('media",{"_index":1406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource.getinstance('notification",{"_index":1407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource.getinstance('organization",{"_index":1408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource.getinstance('payment",{"_index":1409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource.getinstance('property",{"_index":1410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource.getinstance('user",{"_index":1411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasourceoptions",{"_index":453,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["datasourcepath",{"_index":989,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["datasources",{"_index":1101,"title":{},"body":{"index.html":{}}}],["date",{"_index":127,"title":{},"body":{"entities/BaseEntity.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["date.now",{"_index":474,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["db",{"_index":438,"title":{},"body":{"classes/DataSource.html":{}}}],["decimal",{"_index":685,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["declarations",{"_index":86,"title":{},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/SeederModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorator",{"_index":196,"title":{},"body":{"entities/BaseEntity.html":{}}}],["decorators",{"_index":70,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"entities/BaseEntity.html":{},"classes/CreateUserInput.html":{},"controllers/DocumentationController.html":{},"controllers/EscrowController.html":{},"classes/EscrowResolver.html":{},"controllers/MediaController.html":{},"classes/MediaResolver.html":{},"controllers/NotificationController.html":{},"classes/NotificationResolver.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"controllers/PaymentController.html":{},"classes/PaymentResolver.html":{},"controllers/PropertyController.html":{},"classes/PropertyResolver.html":{},"entities/Role.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{}}}],["default",{"_index":188,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"entities/OrganizationMetadata.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["default('development",{"_index":34,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["defaultval",{"_index":1050,"title":{},"body":{"miscellaneous/functions.html":{}}}],["defined",{"_index":49,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"controllers/MediaController.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"entities/Role.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{}}}],["definitions",{"_index":1427,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["delete",{"_index":367,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["deleted_at",{"_index":134,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["deletedat",{"_index":124,"title":{},"body":{"entities/BaseEntity.html":{}}}],["deletedatecolumn",{"_index":145,"title":{},"body":{"entities/BaseEntity.html":{}}}],["delivery",{"_index":1308,"title":{},"body":{"index.html":{}}}],["demandoption",{"_index":1357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dependencies",{"_index":84,"title":{"dependencies.html":{}},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/SeederModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["deposit",{"_index":1245,"title":{},"body":{"index.html":{}}}],["deposit_fee_percentage",{"_index":355,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"entities/OrganizationMetadata.html":{}}}],["depositfeepercentage",{"_index":679,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["deposits",{"_index":1111,"title":{},"body":{"index.html":{}}}],["describe",{"_index":1356,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":380,"title":{},"body":{"classes/CreateRoleTable1741519642145.html":{},"entities/Role.html":{},"index.html":{},"properties.html":{}}}],["designed",{"_index":1416,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["details",{"_index":1191,"title":{},"body":{"index.html":{}}}],["detected",{"_index":1457,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["development",{"_index":469,"title":{},"body":{"modules/DatabaseModule.html":{},"index.html":{}}}],["different",{"_index":1278,"title":{},"body":{"index.html":{}}}],["directive",{"_index":656,"title":{},"body":{"classes/Organization-1.html":{},"classes/User-1.html":{},"miscellaneous/functions.html":{}}}],["directive('@external",{"_index":660,"title":{},"body":{"classes/Organization-1.html":{},"classes/User-1.html":{}}}],["directive('@requires(fields",{"_index":867,"title":{},"body":{"classes/User-1.html":{}}}],["directive.decorator.ts",{"_index":985,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["displays",{"_index":1443,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["dispute",{"_index":1257,"title":{},"body":{"index.html":{}}}],["disputes",{"_index":1131,"title":{},"body":{"index.html":{}}}],["docs",{"_index":1082,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":940,"title":{},"body":{"coverage.html":{}}}],["documentation.controller",{"_index":518,"title":{},"body":{"modules/DocumentationModule.html":{}}}],["documentation.service",{"_index":512,"title":{},"body":{"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{}}}],["documentationcontroller",{"_index":508,"title":{"controllers/DocumentationController.html":{}},"body":{"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"coverage.html":{}}}],["documentationmodule",{"_index":514,"title":{"modules/DocumentationModule.html":{}},"body":{"modules/DocumentationModule.html":{},"modules.html":{},"overview.html":{}}}],["documentationservice",{"_index":511,"title":{"injectables/DocumentationService.html":{}},"body":{"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"coverage.html":{},"overview.html":{}}}],["domain",{"_index":349,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"entities/OrganizationMetadata.html":{}}}],["dotenv",{"_index":421,"title":{},"body":{"classes/DataSource.html":{},"dependencies.html":{}}}],["dotenv.config",{"_index":426,"title":{},"body":{"classes/DataSource.html":{}}}],["double",{"_index":1224,"title":{},"body":{"index.html":{}}}],["down",{"_index":320,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["down(queryrunner",{"_index":323,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["driven",{"_index":1269,"title":{},"body":{"index.html":{}}}],["driver",{"_index":578,"title":{},"body":{"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{}}}],["drop",{"_index":370,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["dtos",{"_index":1122,"title":{},"body":{"index.html":{}}}],["dtos/create",{"_index":907,"title":{},"body":{"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["dynamically",{"_index":465,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["dynamicmodule",{"_index":251,"title":{},"body":{"modules/ClientsModule.html":{},"modules/DatabaseModule.html":{},"modules/GraphQLGatewayModule.html":{}}}],["e.g",{"_index":1143,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["e2e",{"_index":1091,"title":{},"body":{"index.html":{}}}],["each",{"_index":1133,"title":{},"body":{"index.html":{}}}],["effectively",{"_index":1197,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":1217,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["efficiently",{"_index":1236,"title":{},"body":{"index.html":{}}}],["email",{"_index":337,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"entities/Organization.html":{},"entities/User.html":{},"index.html":{}}}],["emails",{"_index":1174,"title":{},"body":{"index.html":{}}}],["enable",{"_index":468,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["encrypted",{"_index":1165,"title":{},"body":{"index.html":{}}}],["encryption",{"_index":1292,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":1320,"title":{},"body":{"index.html":{}}}],["enhance",{"_index":1482,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["enhancements",{"_index":1476,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["ensure",{"_index":490,"title":{},"body":{"classes/DatabaseUtil.html":{},"entities/User.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["ensuring",{"_index":495,"title":{},"body":{"classes/DatabaseUtil.html":{},"index.html":{}}}],["entities",{"_index":120,"title":{},"body":{"entities/BaseEntity.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"entities/Role.html":{},"entities/User.html":{},"overview.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["entities/external/user.entity",{"_index":920,"title":{},"body":{"classes/UserResolver-1.html":{}}}],["entities/organization",{"_index":713,"title":{},"body":{"modules/OrganizationModule.html":{}}}],["entities/organization.entity",{"_index":712,"title":{},"body":{"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"classes/UserResolver-1.html":{}}}],["entities/role.entity",{"_index":399,"title":{},"body":{"classes/CreateUserInput.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"modules/UserModule.html":{}}}],["entities/user.entity",{"_index":889,"title":{},"body":{"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["entity",{"_index":118,"title":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"entities/Role.html":{},"entities/User.html":{}},"body":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"entities/Role.html":{},"entities/User.html":{},"classes/User-1.html":{},"coverage.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["entityclassorschema",{"_index":452,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["enumerations",{"_index":1023,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":425,"title":{},"body":{"classes/DataSource.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["environment",{"_index":290,"title":{},"body":{"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/GatewayModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.is_doc_env",{"_index":1397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error",{"_index":1194,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["errors",{"_index":1196,"title":{},"body":{"index.html":{}}}],["escrow",{"_index":543,"title":{},"body":{"injectables/EscrowService.html":{},"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["escrow.controller",{"_index":535,"title":{},"body":{"modules/EscrowModule.html":{}}}],["escrow.service",{"_index":526,"title":{},"body":{"controllers/EscrowController.html":{},"modules/EscrowModule.html":{}}}],["escrow_client",{"_index":1029,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["escrow_host",{"_index":553,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["escrow_port",{"_index":1385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["escrowcommand",{"_index":527,"title":{},"body":{"controllers/EscrowController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["escrowcommand.ping_escrow",{"_index":528,"title":{},"body":{"controllers/EscrowController.html":{}}}],["escrowcontroller",{"_index":522,"title":{"controllers/EscrowController.html":{}},"body":{"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"coverage.html":{}}}],["escrowmodule",{"_index":530,"title":{"modules/EscrowModule.html":{}},"body":{"modules/EscrowModule.html":{},"modules.html":{},"overview.html":{}}}],["escrowresolver",{"_index":536,"title":{"classes/EscrowResolver.html":{}},"body":{"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"coverage.html":{}}}],["escrowservice",{"_index":525,"title":{"injectables/EscrowService.html":{}},"body":{"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"injectables/EscrowService.html":{},"coverage.html":{},"overview.html":{}}}],["especially",{"_index":1163,"title":{},"body":{"index.html":{}}}],["etc",{"_index":1061,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["event",{"_index":1268,"title":{},"body":{"index.html":{}}}],["example",{"_index":1075,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["execute",{"_index":1463,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["executed",{"_index":1454,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["executes",{"_index":1433,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["exist",{"_index":178,"title":{},"body":{"entities/BaseEntity.html":{}}}],["expiration",{"_index":1150,"title":{},"body":{"index.html":{}}}],["expiry",{"_index":1147,"title":{},"body":{"index.html":{}}}],["export",{"_index":35,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"entities/Role.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":89,"title":{},"body":{"modules/AuthModule.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/GraphQLGatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/SeederModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":1002,"title":{},"body":{"dependencies.html":{}}}],["extending",{"_index":658,"title":{},"body":{"classes/Organization-1.html":{},"classes/User-1.html":{}}}],["extends",{"_index":159,"title":{},"body":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["external",{"_index":1287,"title":{},"body":{"index.html":{}}}],["external/organization.entity",{"_index":847,"title":{},"body":{"entities/User.html":{}}}],["failure",{"_index":1259,"title":{},"body":{"index.html":{}}}],["failures",{"_index":1294,"title":{},"body":{"index.html":{}}}],["fallback",{"_index":187,"title":{},"body":{"entities/BaseEntity.html":{}}}],["false",{"_index":358,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"entities/OrganizationMetadata.html":{}}}],["fast",{"_index":1216,"title":{},"body":{"index.html":{}}}],["features",{"_index":1221,"title":{},"body":{"index.html":{}}}],["federated",{"_index":865,"title":{},"body":{"classes/User-1.html":{}}}],["federation",{"_index":587,"title":{},"body":{"modules/GraphQLMicroserviceModule.html":{},"classes/Organization-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["feedback",{"_index":1202,"title":{},"body":{"index.html":{}}}],["fetch",{"_index":870,"title":{},"body":{"classes/User-1.html":{}}}],["field",{"_index":149,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateUserInput.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"entities/OrganizationMetadata.html":{},"entities/Role.html":{},"entities/User.html":{},"classes/User-1.html":{}}}],["field(undefined",{"_index":390,"title":{},"body":{"classes/CreateUserInput.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"entities/Role.html":{},"entities/User.html":{},"classes/User-1.html":{}}}],["field(undefined)@column",{"_index":636,"title":{},"body":{"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"entities/User.html":{}}}],["field(undefined)@column({name",{"_index":645,"title":{},"body":{"entities/Organization.html":{},"entities/OrganizationMetadata.html":{}}}],["field(undefined)@column({unique",{"_index":642,"title":{},"body":{"entities/Organization.html":{}}}],["field(undefined)@directive('@external",{"_index":654,"title":{},"body":{"classes/Organization-1.html":{}}}],["field(undefined)@manytoone(undefined)@joincolumn({name",{"_index":843,"title":{},"body":{"entities/User.html":{}}}],["field(undefined)@primarycolumn",{"_index":787,"title":{},"body":{"entities/Role.html":{}}}],["file",{"_index":5,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"entities/Role.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["financial",{"_index":1265,"title":{},"body":{"index.html":{}}}],["find",{"_index":925,"title":{},"body":{"injectables/UserService.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["find_organization_by_id",{"_index":1402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["findall",{"_index":724,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["findone",{"_index":725,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["findone(where",{"_index":730,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["findonebyid",{"_index":664,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["findonebyid(id",{"_index":665,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["findoptionswhere",{"_index":731,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["firstname",{"_index":385,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"entities/User.html":{}}}],["fk_a2cecd1a3531c0b041e29ba46e1",{"_index":412,"title":{},"body":{"classes/CreateUserTable1741519705062.html":{}}}],["fk_ad9c5b4a8fb0a54d63b84710190",{"_index":364,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["flag",{"_index":1450,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["float",{"_index":699,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["follow",{"_index":1080,"title":{},"body":{"index.html":{}}}],["following",{"_index":1066,"title":{},"body":{"index.html":{}}}],["force",{"_index":1158,"title":{},"body":{"index.html":{}}}],["foreign",{"_index":365,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["format",{"_index":497,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["found",{"_index":1470,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["frontend",{"_index":1129,"title":{},"body":{"index.html":{}}}],["function",{"_index":184,"title":{},"body":{"entities/BaseEntity.html":{},"coverage.html":{}}}],["functionality",{"_index":1215,"title":{},"body":{"index.html":{}}}],["functions",{"_index":1041,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["future",{"_index":1475,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["gateway",{"_index":564,"title":{},"body":{"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"index.html":{}}}],["gateway.module.ts",{"_index":566,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["gateway.module.ts:10",{"_index":568,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["gateway.service",{"_index":551,"title":{},"body":{"modules/GatewayModule.html":{}}}],["gateway_host",{"_index":1393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gateway_port",{"_index":1386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gatewaymodule",{"_index":544,"title":{"modules/GatewayModule.html":{}},"body":{"modules/GatewayModule.html":{},"modules.html":{},"overview.html":{}}}],["gatewayservice",{"_index":549,"title":{"injectables/GatewayService.html":{}},"body":{"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"coverage.html":{},"overview.html":{}}}],["gdpr",{"_index":1180,"title":{},"body":{"index.html":{}}}],["general",{"_index":1422,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["generate",{"_index":479,"title":{},"body":{"classes/DatabaseUtil.html":{},"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["generates",{"_index":1430,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["generateuuid",{"_index":163,"title":{},"body":{"entities/BaseEntity.html":{}}}],["generateuuidv7",{"_index":472,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["generating",{"_index":1301,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["getcolumnorder",{"_index":152,"title":{},"body":{"entities/BaseEntity.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getcolumnorder(target",{"_index":1048,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getcolumnorder(target.prototype",{"_index":185,"title":{},"body":{"entities/BaseEntity.html":{}}}],["getconfig",{"_index":45,"title":{},"body":{"injectables/AppConfigService.html":{},"classes/ConfigHelper.html":{}}}],["getconfig(key",{"_index":55,"title":{},"body":{"injectables/AppConfigService.html":{},"classes/ConfigHelper.html":{}}}],["getdatabaseconfig",{"_index":287,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["gethello",{"_index":69,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/DocumentationController.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"injectables/EscrowService.html":{},"controllers/MediaController.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"injectables/NotificationService.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"injectables/PropertyService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["getinstance",{"_index":270,"title":{},"body":{"classes/ConfigHelper.html":{},"classes/DataSource.html":{}}}],["getinstance(schema",{"_index":416,"title":{},"body":{"classes/DataSource.html":{}}}],["getmicroservicehosts",{"_index":271,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["getmicroservicehosts(microservicename",{"_index":279,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["getmoduleport",{"_index":272,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["getmoduleport(modulename",{"_index":282,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["getordersafely",{"_index":172,"title":{},"body":{"entities/BaseEntity.html":{}}}],["getordersafely(xcolumn",{"_index":205,"title":{},"body":{"entities/BaseEntity.html":{}}}],["getordersafely(ycolumn",{"_index":207,"title":{},"body":{"entities/BaseEntity.html":{}}}],["getredisconfig",{"_index":285,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["getting",{"_index":1053,"title":{"index.html":{}},"body":{}}],["global",{"_index":250,"title":{},"body":{"modules/ClientsModule.html":{},"modules/GraphQLGatewayModule.html":{},"index.html":{}}}],["globally",{"_index":1419,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["graph",{"_index":1325,"title":{},"body":{"modules.html":{}}}],["graphname",{"_index":830,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["graphname?.split('_host')?.[0",{"_index":829,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["graphnames",{"_index":824,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["graphnames.map((graphname",{"_index":827,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["graphql",{"_index":1007,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["graphqlfederationdirective",{"_index":649,"title":{},"body":{"entities/Organization.html":{},"classes/Organization-1.html":{},"entities/User.html":{},"classes/User-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["graphqlfederationdirective('@extends",{"_index":657,"title":{},"body":{"classes/Organization-1.html":{},"classes/User-1.html":{}}}],["graphqlfederationdirective('@key(fields",{"_index":652,"title":{},"body":{"entities/Organization.html":{},"classes/Organization-1.html":{},"entities/User.html":{},"classes/User-1.html":{}}}],["graphqlfederationdirective(directive",{"_index":1051,"title":{},"body":{"miscellaneous/functions.html":{}}}],["graphqlgatewaymodule",{"_index":548,"title":{"modules/GraphQLGatewayModule.html":{}},"body":{"modules/GatewayModule.html":{},"modules/GraphQLGatewayModule.html":{},"modules.html":{},"overview.html":{}}}],["graphqlgatewaymodule.register",{"_index":560,"title":{},"body":{"modules/GatewayModule.html":{}}}],["graphqlmicroservicemodule",{"_index":94,"title":{"modules/GraphQLMicroserviceModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/EscrowModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["graphqlmodule",{"_index":570,"title":{},"body":{"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{}}}],["graphqlmodule.forroot",{"_index":585,"title":{},"body":{"modules/GraphQLMicroserviceModule.html":{}}}],["graphqlmodule.forrootasync",{"_index":577,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["guards",{"_index":1127,"title":{},"body":{"index.html":{}}}],["handle",{"_index":1204,"title":{},"body":{"index.html":{}}}],["handling",{"_index":1195,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["hash",{"_index":937,"title":{},"body":{"injectables/UserService.html":{}}}],["hello",{"_index":115,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DocumentationService.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"injectables/MediaService.html":{},"injectables/NotificationService.html":{},"injectables/OrganizationService.html":{},"injectables/PaymentService.html":{},"injectables/PropertyService.html":{},"injectables/UserService.html":{}}}],["help().argv",{"_index":1369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["helper",{"_index":1095,"title":{},"body":{"index.html":{}}}],["here",{"_index":1106,"title":{},"body":{"index.html":{}}}],["hex",{"_index":489,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["high",{"_index":189,"title":{},"body":{"entities/BaseEntity.html":{}}}],["history",{"_index":1444,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["hook",{"_index":854,"title":{},"body":{"entities/User.html":{}}}],["host",{"_index":233,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/SubgraphsBuilder.html":{}}}],["host}:${port}/graphql",{"_index":833,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["https",{"_index":1166,"title":{},"body":{"index.html":{}}}],["id",{"_index":125,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/User.html":{},"classes/User-1.html":{},"classes/UserResolver-1.html":{}}}],["identifier",{"_index":941,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":1229,"title":{},"body":{"index.html":{}}}],["images",{"_index":1231,"title":{},"body":{"index.html":{}}}],["implement",{"_index":401,"title":{},"body":{"classes/CreateUserInput.html":{},"index.html":{}}}],["implementing",{"_index":1160,"title":{},"body":{"index.html":{}}}],["implements",{"_index":317,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["import",{"_index":7,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"entities/Role.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":13,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/AuthModule.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/SeederModule.html":{},"modules/UserModule.html":{}}}],["in/opt",{"_index":1313,"title":{},"body":{"index.html":{}}}],["includes",{"_index":1139,"title":{},"body":{"index.html":{}}}],["index",{"_index":43,"title":{"index.html":{}},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"controllers/MediaController.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"entities/Role.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["individual",{"_index":849,"title":{},"body":{"entities/User.html":{}}}],["individuals",{"_index":857,"title":{},"body":{"entities/User.html":{}}}],["info",{"_index":3,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"entities/Role.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{}}}],["information",{"_index":1173,"title":{},"body":{"index.html":{}}}],["init",{"_index":213,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/DatabaseModule.html":{}}}],["init(module",{"_index":214,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["init(schema",{"_index":448,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["initial",{"_index":1468,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["inject",{"_index":934,"title":{},"body":{"injectables/UserService.html":{}}}],["inject(microserviceclient.organization_client",{"_index":935,"title":{},"body":{"injectables/UserService.html":{}}}],["injectable",{"_index":39,"title":{"injectables/AppConfigService.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/DocumentationService.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"injectables/MediaService.html":{},"injectables/NotificationService.html":{},"injectables/OrganizationService.html":{},"injectables/PaymentService.html":{},"injectables/PropertyService.html":{},"injectables/SeederService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppConfigService.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/DocumentationService.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"injectables/MediaService.html":{},"injectables/NotificationService.html":{},"injectables/OrganizationService.html":{},"injectables/PaymentService.html":{},"injectables/PropertyService.html":{},"injectables/SeederService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":41,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/DocumentationService.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"injectables/MediaService.html":{},"injectables/NotificationService.html":{},"injectables/OrganizationService.html":{},"injectables/PaymentService.html":{},"injectables/PropertyService.html":{},"injectables/SeederService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectrepository",{"_index":734,"title":{},"body":{"injectables/OrganizationService.html":{},"injectables/SeederService.html":{},"injectables/UserService.html":{}}}],["injectrepository(organization",{"_index":737,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["injectrepository(role",{"_index":807,"title":{},"body":{"injectables/SeederService.html":{}}}],["injectrepository(user",{"_index":936,"title":{},"body":{"injectables/UserService.html":{}}}],["input",{"_index":901,"title":{},"body":{"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["install",{"_index":1077,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["installed",{"_index":1067,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["installinstall",{"_index":1079,"title":{},"body":{"index.html":{}}}],["instance",{"_index":269,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["instead",{"_index":1461,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["integrating",{"_index":1237,"title":{},"body":{"index.html":{}}}],["integration",{"_index":1286,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["integrity",{"_index":1193,"title":{},"body":{"index.html":{}}}],["interactive",{"_index":1480,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["interceptors",{"_index":1126,"title":{},"body":{"index.html":{}}}],["interfaces",{"_index":1123,"title":{},"body":{"index.html":{}}}],["introspectandcompose",{"_index":574,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["invalid",{"_index":1199,"title":{},"body":{"index.html":{}}}],["ioredis",{"_index":1009,"title":{},"body":{"dependencies.html":{}}}],["is_doc_env",{"_index":1394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isdocenv",{"_index":986,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isglobal",{"_index":15,"title":{},"body":{"modules/AppConfigModule.html":{},"classes/ConfigHelper.html":{}}}],["isolation",{"_index":1276,"title":{},"body":{"index.html":{}}}],["issues",{"_index":1226,"title":{},"body":{"index.html":{}}}],["joi",{"_index":12,"title":{},"body":{"modules/AppConfigModule.html":{},"dependencies.html":{}}}],["joi.number().required",{"_index":22,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["joi.object",{"_index":18,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["joi.string",{"_index":30,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["joi.string().required",{"_index":20,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["join",{"_index":492,"title":{},"body":{"classes/DatabaseUtil.html":{},"entities/User.html":{}}}],["joincolumn",{"_index":700,"title":{},"body":{"entities/OrganizationMetadata.html":{},"entities/User.html":{}}}],["jwt",{"_index":1144,"title":{},"body":{"index.html":{}}}],["key",{"_index":59,"title":{},"body":{"injectables/AppConfigService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/Organization-1.html":{},"classes/SubgraphsBuilder.html":{},"index.html":{}}}],["keypart",{"_index":828,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["landlord",{"_index":1169,"title":{},"body":{"index.html":{}}}],["landlords",{"_index":1207,"title":{},"body":{"index.html":{}}}],["large",{"_index":1205,"title":{},"body":{"index.html":{}}}],["last",{"_index":1434,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["lastname",{"_index":386,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"entities/User.html":{}}}],["latest",{"_index":1439,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["learn",{"_index":1104,"title":{},"body":{"index.html":{}}}],["legend",{"_index":85,"title":{},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/SeederModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["lets",{"_index":1097,"title":{},"body":{"index.html":{}}}],["level",{"_index":1282,"title":{},"body":{"index.html":{}}}],["libraries",{"_index":1121,"title":{},"body":{"index.html":{}}}],["libs",{"_index":1060,"title":{},"body":{"index.html":{}}}],["libs/.../auth.command.ts",{"_index":1340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../column",{"_index":1044,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/.../environment.constant.ts",{"_index":1341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../escrow.command.ts",{"_index":1342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../graphql",{"_index":1045,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/.../media.command.ts",{"_index":1343,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../micro",{"_index":1024,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../notification.command.ts",{"_index":1344,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../organization.command.ts",{"_index":1345,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../payment.command.ts",{"_index":1346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../property.command.ts",{"_index":1347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../roles.enum.ts",{"_index":1026,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../schema.constant.ts",{"_index":1348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../user.command.ts",{"_index":1351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/common/src/clients/clients.module.ts",{"_index":244,"title":{},"body":{"modules/ClientsModule.html":{}}}],["libs/common/src/clients/clients.module.ts:12",{"_index":247,"title":{},"body":{"modules/ClientsModule.html":{}}}],["libs/common/src/common.module.ts",{"_index":263,"title":{},"body":{"modules/CommonModule.html":{}}}],["libs/common/src/common.service.ts",{"_index":266,"title":{},"body":{"injectables/CommonService.html":{},"coverage.html":{}}}],["libs/common/src/config/config.helper.ts",{"_index":267,"title":{},"body":{"classes/ConfigHelper.html":{},"coverage.html":{}}}],["libs/common/src/config/config.helper.ts:13",{"_index":278,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.helper.ts:31",{"_index":286,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.helper.ts:37",{"_index":288,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.helper.ts:47",{"_index":283,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.helper.ts:53",{"_index":280,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.helper.ts:63",{"_index":277,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.helper.ts:8",{"_index":276,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.helper.ts:9",{"_index":275,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.module.ts",{"_index":6,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["libs/common/src/config/config.service.ts",{"_index":42,"title":{},"body":{"injectables/AppConfigService.html":{},"coverage.html":{}}}],["libs/common/src/config/config.service.ts:5",{"_index":50,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["libs/common/src/config/config.service.ts:8",{"_index":57,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["libs/common/src/constants/commands/auth.command.ts",{"_index":971,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/commands/escrow.command.ts",{"_index":972,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/commands/media.command.ts",{"_index":973,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/commands/notification.command.ts",{"_index":974,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/commands/organization.command.ts",{"_index":975,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/commands/payment.command.ts",{"_index":976,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/commands/property.command.ts",{"_index":977,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/commands/user.command.ts",{"_index":978,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/environment.constant.ts",{"_index":979,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/schema.constant.ts",{"_index":980,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/database/database.module.ts",{"_index":447,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["libs/common/src/database/database.module.ts:38",{"_index":454,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["libs/common/src/database/database.module.ts:9",{"_index":449,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["libs/common/src/database/entities/base.entity.ts",{"_index":121,"title":{},"body":{"entities/BaseEntity.html":{},"coverage.html":{}}}],["libs/common/src/database/entities/base.entity.ts:22",{"_index":137,"title":{},"body":{"entities/BaseEntity.html":{}}}],["libs/common/src/database/entities/base.entity.ts:27",{"_index":130,"title":{},"body":{"entities/BaseEntity.html":{}}}],["libs/common/src/database/entities/base.entity.ts:32",{"_index":140,"title":{},"body":{"entities/BaseEntity.html":{}}}],["libs/common/src/database/entities/base.entity.ts:37",{"_index":135,"title":{},"body":{"entities/BaseEntity.html":{}}}],["libs/common/src/decorators/column",{"_index":981,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/decorators/graphql",{"_index":984,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/enums/micro",{"_index":1027,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/common/src/enums/roles.enum.ts",{"_index":1036,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/common/src/graphql/graphql",{"_index":565,"title":{},"body":{"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{}}}],["libs/common/src/utils/bootstrapper.util.ts",{"_index":211,"title":{},"body":{"classes/Bootstrapper.html":{},"coverage.html":{}}}],["libs/common/src/utils/bootstrapper.util.ts:7",{"_index":215,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["libs/common/src/utils/data",{"_index":414,"title":{},"body":{"classes/DataSource.html":{},"coverage.html":{}}}],["libs/common/src/utils/database.util.ts",{"_index":471,"title":{},"body":{"classes/DatabaseUtil.html":{},"coverage.html":{}}}],["libs/common/src/utils/database.util.ts:2",{"_index":473,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["libs/common/src/utils/subgraphs",{"_index":819,"title":{},"body":{"classes/SubgraphsBuilder.html":{},"coverage.html":{}}}],["license",{"_index":1337,"title":{},"body":{"properties.html":{}}}],["limiting",{"_index":1154,"title":{},"body":{"index.html":{}}}],["listed",{"_index":1213,"title":{},"body":{"index.html":{}}}],["listening",{"_index":242,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["listings",{"_index":1114,"title":{},"body":{"index.html":{}}}],["lists",{"_index":1441,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["load",{"_index":423,"title":{},"body":{"classes/DataSource.html":{}}}],["loadentities",{"_index":450,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["loadentities(entities",{"_index":451,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["local",{"_index":1264,"title":{},"body":{"index.html":{}}}],["localhost",{"_index":432,"title":{},"body":{"classes/DataSource.html":{}}}],["located",{"_index":1447,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["location",{"_index":1219,"title":{},"body":{"index.html":{}}}],["log",{"_index":1459,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["logger",{"_index":216,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["logger(`${module.name}bootstrap",{"_index":223,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["logger.log(`microservice",{"_index":241,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["logging",{"_index":1483,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["logo",{"_index":350,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"entities/OrganizationMetadata.html":{}}}],["lts",{"_index":1070,"title":{},"body":{"index.html":{}}}],["m",{"_index":1355,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["machine",{"_index":1065,"title":{},"body":{"index.html":{}}}],["maintaining",{"_index":1192,"title":{},"body":{"index.html":{}}}],["make",{"_index":851,"title":{},"body":{"entities/User.html":{},"index.html":{}}}],["manage",{"_index":1315,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["managed",{"_index":661,"title":{},"body":{"classes/Organization-1.html":{}}}],["management",{"_index":1110,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["managing",{"_index":1149,"title":{},"body":{"index.html":{}}}],["mandatory",{"_index":1451,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["manual",{"_index":1415,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["manytoone",{"_index":845,"title":{},"body":{"entities/User.html":{}}}],["map((b",{"_index":486,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["matching",{"_index":38,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"entities/Role.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["mechanisms",{"_index":1151,"title":{},"body":{"index.html":{}}}],["media",{"_index":610,"title":{},"body":{"injectables/MediaService.html":{},"index.html":{}}}],["media.controller",{"_index":602,"title":{},"body":{"modules/MediaModule.html":{}}}],["media.service",{"_index":593,"title":{},"body":{"controllers/MediaController.html":{},"modules/MediaModule.html":{}}}],["media_client",{"_index":1030,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["media_host",{"_index":554,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["media_port",{"_index":1387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mediacommand",{"_index":594,"title":{},"body":{"controllers/MediaController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mediacommand.ping_media",{"_index":595,"title":{},"body":{"controllers/MediaController.html":{}}}],["mediacontroller",{"_index":589,"title":{"controllers/MediaController.html":{}},"body":{"controllers/MediaController.html":{},"modules/MediaModule.html":{},"coverage.html":{}}}],["mediamodule",{"_index":597,"title":{"modules/MediaModule.html":{}},"body":{"modules/MediaModule.html":{},"modules.html":{},"overview.html":{}}}],["mediaresolver",{"_index":603,"title":{"classes/MediaResolver.html":{}},"body":{"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"coverage.html":{}}}],["mediaservice",{"_index":592,"title":{"injectables/MediaService.html":{}},"body":{"controllers/MediaController.html":{},"modules/MediaModule.html":{},"injectables/MediaService.html":{},"coverage.html":{},"overview.html":{}}}],["member",{"_index":1040,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["members",{"_index":1274,"title":{},"body":{"index.html":{}}}],["messagepattern",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{}}}],["messagepattern({cmd",{"_index":71,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{}}}],["meta",{"_index":170,"title":{},"body":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"injectables/OrganizationService.html":{}}}],["meta.columns",{"_index":197,"title":{},"body":{"entities/BaseEntity.html":{}}}],["meta.columns].sort((xcolumn",{"_index":198,"title":{},"body":{"entities/BaseEntity.html":{}}}],["meta.organization",{"_index":640,"title":{},"body":{"entities/Organization.html":{}}}],["metadata",{"_index":1015,"title":{},"body":{"dependencies.html":{}}}],["metadata.entity",{"_index":650,"title":{},"body":{"entities/Organization.html":{},"modules/OrganizationModule.html":{}}}],["metadata.entity.ts",{"_index":677,"title":{},"body":{"entities/OrganizationMetadata.html":{},"coverage.html":{}}}],["metadata.entity.ts:16",{"_index":695,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["metadata.entity.ts:20",{"_index":697,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["metadata.entity.ts:24",{"_index":688,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["metadata.entity.ts:28",{"_index":689,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["metadata.entity.ts:38",{"_index":698,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["metadata.entity.ts:48",{"_index":686,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["metadata.entity.ts:52",{"_index":682,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["methods",{"_index":44,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"controllers/MediaController.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{}}}],["microservice",{"_index":659,"title":{},"body":{"classes/Organization-1.html":{},"classes/User-1.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["microservice's",{"_index":1453,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["microservice.module.ts",{"_index":582,"title":{},"body":{"modules/GraphQLMicroserviceModule.html":{}}}],["microserviceclient",{"_index":886,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["microservicename",{"_index":281,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["microservicename}_host`.touppercase",{"_index":311,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["microservicename}_port`.touppercase",{"_index":312,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["microserviceoptions",{"_index":220,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["microservices",{"_index":1059,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["migration",{"_index":852,"title":{"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}},"body":{"entities/User.html":{},"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["migration:${command",{"_index":1379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migrationinterface",{"_index":318,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["migrations",{"_index":442,"title":{"additional-documentation/running-migrations-and-seeders.html":{}},"body":{"classes/DataSource.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["migrationstablename",{"_index":427,"title":{},"body":{"classes/DataSource.html":{}}}],["miscellaneous",{"_index":1022,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":1086,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["module",{"_index":0,"title":{"modules/AppConfigModule.html":{},"modules/AuthModule.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/SeederModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppConfigModule.html":{},"modules/AuthModule.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/SeederModule.html":{},"modules/UserModule.html":{},"overview.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["modulename",{"_index":284,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["modulename?.split('module')?.[0]?.touppercase",{"_index":308,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppConfigModule.html":{},"modules/AuthModule.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/SeederModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["money",{"_index":1247,"title":{},"body":{"index.html":{}}}],["monorepo",{"_index":1486,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["monthly",{"_index":1305,"title":{},"body":{"index.html":{}}}],["multi",{"_index":1272,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["multiple",{"_index":1485,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["mutation",{"_index":906,"title":{},"body":{"classes/UserResolver.html":{}}}],["mutation(undefined",{"_index":899,"title":{},"body":{"classes/UserResolver.html":{}}}],["name",{"_index":52,"title":{},"body":{"injectables/AppConfigService.html":{},"classes/AuthResolver.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/EscrowResolver.html":{},"modules/GraphQLGatewayModule.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"entities/Organization.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"entities/Role.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["names",{"_index":248,"title":{},"body":{"modules/ClientsModule.html":{},"index.html":{}}}],["names.map((name",{"_index":256,"title":{},"body":{"modules/ClientsModule.html":{}}}],["needed",{"_index":1367,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["nestclientsmodule",{"_index":252,"title":{},"body":{"modules/ClientsModule.html":{}}}],["nestclientsmodule.register(clients",{"_index":257,"title":{},"body":{"modules/ClientsModule.html":{}}}],["nestfactory",{"_index":218,"title":{},"body":{"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{}}}],["nestfactory.create(module",{"_index":229,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["nestfactory.createapplicationcontext",{"_index":293,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["nestjs",{"_index":1418,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["nestjs/apollo",{"_index":573,"title":{},"body":{"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":11,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"modules/DatabaseModule.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"injectables/PropertyService.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":10,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"classes/ConfigHelper.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":219,"title":{},"body":{"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{},"dependencies.html":{}}}],["nestjs/graphql",{"_index":111,"title":{},"body":{"classes/AuthResolver.html":{},"entities/BaseEntity.html":{},"classes/CreateUserInput.html":{},"classes/EscrowResolver.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"entities/Role.html":{},"entities/User.html":{},"classes/User-1.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1001,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":458,"title":{},"body":{"modules/DatabaseModule.html":{},"injectables/OrganizationService.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/typeorm/dist/interfaces/entity",{"_index":459,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["network",{"_index":1297,"title":{},"body":{"index.html":{}}}],["new",{"_index":222,"title":{},"body":{"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/GraphQLGatewayModule.html":{},"coverage.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["node",{"_index":1374,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["node:process",{"_index":420,"title":{},"body":{"classes/DataSource.html":{}}}],["node_env",{"_index":29,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["node_modules/typeorm/cli.js",{"_index":1378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nodejs",{"_index":1068,"title":{},"body":{"index.html":{}}}],["notes",{"_index":1449,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["notification",{"_index":632,"title":{},"body":{"injectables/NotificationService.html":{},"index.html":{}}}],["notification.controller",{"_index":624,"title":{},"body":{"modules/NotificationModule.html":{}}}],["notification.service",{"_index":615,"title":{},"body":{"controllers/NotificationController.html":{},"modules/NotificationModule.html":{}}}],["notification_client",{"_index":1031,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["notification_host",{"_index":555,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["notification_port",{"_index":1388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notificationcommand",{"_index":616,"title":{},"body":{"controllers/NotificationController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["notificationcommand.ping_notification",{"_index":617,"title":{},"body":{"controllers/NotificationController.html":{}}}],["notificationcontroller",{"_index":611,"title":{"controllers/NotificationController.html":{}},"body":{"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"coverage.html":{}}}],["notificationmodule",{"_index":619,"title":{"modules/NotificationModule.html":{}},"body":{"modules/NotificationModule.html":{},"modules.html":{},"overview.html":{}}}],["notificationresolver",{"_index":625,"title":{"classes/NotificationResolver.html":{}},"body":{"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"coverage.html":{}}}],["notifications",{"_index":1115,"title":{},"body":{"index.html":{}}}],["notificationservice",{"_index":614,"title":{"injectables/NotificationService.html":{}},"body":{"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"coverage.html":{},"overview.html":{}}}],["notifying",{"_index":1270,"title":{},"body":{"index.html":{}}}],["now",{"_index":340,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DatabaseUtil.html":{}}}],["now.tostring(16).padstart(12",{"_index":475,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["npm",{"_index":1076,"title":{},"body":{"index.html":{}}}],["null",{"_index":192,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"entities/User.html":{},"classes/UserResolver-1.html":{}}}],["nullable",{"_index":132,"title":{},"body":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"entities/Role.html":{},"entities/User.html":{},"classes/User-1.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{}}}],["number",{"_index":238,"title":{},"body":{"classes/Bootstrapper.html":{},"entities/OrganizationMetadata.html":{},"miscellaneous/functions.html":{}}}],["numbers",{"_index":1176,"title":{},"body":{"index.html":{}}}],["numeric(5",{"_index":352,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["oauth",{"_index":1145,"title":{},"body":{"index.html":{}}}],["object",{"_index":1382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.values(roles",{"_index":812,"title":{},"body":{"injectables/SeederService.html":{}}}],["objecttype",{"_index":150,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateUserInput.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"entities/OrganizationMetadata.html":{},"entities/Role.html":{},"entities/User.html":{},"classes/User-1.html":{}}}],["official",{"_index":1081,"title":{},"body":{"index.html":{}}}],["ondelete",{"_index":692,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["onetoone",{"_index":648,"title":{},"body":{"entities/Organization.html":{},"entities/OrganizationMetadata.html":{}}}],["onetoone(undefined",{"_index":690,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["onupdate",{"_index":693,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["opt",{"_index":1312,"title":{},"body":{"index.html":{}}}],["option('args",{"_index":1362,"title":{},"body":{"miscellaneous/variables.html":{}}}],["option('command",{"_index":1358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["option('microservice",{"_index":1353,"title":{},"body":{"miscellaneous/variables.html":{}}}],["option('title",{"_index":1365,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optional",{"_index":54,"title":{},"body":{"injectables/AppConfigService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"modules/GraphQLGatewayModule.html":{},"entities/Organization.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["options",{"_index":232,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/DatabaseModule.html":{}}}],["options/findoptionswhere",{"_index":736,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["order",{"_index":181,"title":{},"body":{"entities/BaseEntity.html":{}}}],["order.decorator.ts",{"_index":982,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["order_key",{"_index":983,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["orderxcolumn",{"_index":204,"title":{},"body":{"entities/BaseEntity.html":{}}}],["orderycolumn",{"_index":206,"title":{},"body":{"entities/BaseEntity.html":{}}}],["org",{"_index":871,"title":{},"body":{"classes/User-1.html":{}}}],["organization",{"_index":633,"title":{"entities/Organization.html":{},"classes/Organization-1.html":{}},"body":{"entities/Organization.html":{},"classes/Organization-1.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"entities/User.html":{},"classes/User-1.html":{},"classes/UserResolver-1.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["organization\".\"organizations",{"_index":330,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["organization\".\"organizations_metadata",{"_index":347,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["organization(@parent",{"_index":921,"title":{},"body":{"classes/UserResolver-1.html":{}}}],["organization(user",{"_index":915,"title":{},"body":{"classes/UserResolver-1.html":{}}}],["organization.controller",{"_index":709,"title":{},"body":{"modules/OrganizationModule.html":{}}}],["organization.entity",{"_index":701,"title":{},"body":{"entities/OrganizationMetadata.html":{},"classes/User-1.html":{}}}],["organization.meta",{"_index":691,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["organization.service",{"_index":669,"title":{},"body":{"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"classes/UserResolver-1.html":{}}}],["organization_client",{"_index":1032,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["organization_host",{"_index":556,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["organization_id",{"_index":359,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{},"entities/OrganizationMetadata.html":{},"entities/User.html":{}}}],["organization_port",{"_index":1389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organizationclient",{"_index":929,"title":{},"body":{"injectables/UserService.html":{}}}],["organizationcommand",{"_index":670,"title":{},"body":{"controllers/OrganizationController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["organizationcommand.find_organization_by_id",{"_index":674,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["organizationcommand.ping_organization",{"_index":672,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["organizationcontroller",{"_index":662,"title":{"controllers/OrganizationController.html":{}},"body":{"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"coverage.html":{}}}],["organizationid",{"_index":387,"title":{},"body":{"classes/CreateUserInput.html":{},"entities/User.html":{},"classes/User-1.html":{}}}],["organizationmetadata",{"_index":638,"title":{"entities/OrganizationMetadata.html":{}},"body":{"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"coverage.html":{}}}],["organizationmodule",{"_index":704,"title":{"modules/OrganizationModule.html":{}},"body":{"modules/OrganizationModule.html":{},"modules.html":{},"overview.html":{}}}],["organizationresolver",{"_index":710,"title":{"classes/OrganizationResolver.html":{}},"body":{"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"coverage.html":{}}}],["organizations",{"_index":651,"title":{},"body":{"entities/Organization.html":{},"classes/OrganizationResolver.html":{},"index.html":{}}}],["organizations_metadata",{"_index":702,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["organizationservice",{"_index":668,"title":{"injectables/OrganizationService.html":{}},"body":{"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"classes/UserResolver-1.html":{},"coverage.html":{},"overview.html":{}}}],["orgid",{"_index":869,"title":{},"body":{"classes/User-1.html":{}}}],["out",{"_index":97,"title":{},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/SeederModule.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":1330,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":1038,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["package",{"_index":992,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":1413,"title":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}},"body":{}}],["parameters",{"_index":51,"title":{},"body":{"injectables/AppConfigService.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"modules/GraphQLGatewayModule.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["parent",{"_index":918,"title":{},"body":{"classes/UserResolver-1.html":{}}}],["passed",{"_index":1425,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["passing",{"_index":1321,"title":{},"body":{"index.html":{}}}],["password",{"_index":304,"title":{},"body":{"classes/ConfigHelper.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"entities/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["passwordconfirmation",{"_index":388,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["path",{"_index":1102,"title":{},"body":{"index.html":{}}}],["path.join",{"_index":1370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paths/register",{"_index":1377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pay",{"_index":1260,"title":{},"body":{"index.html":{}}}],["payment",{"_index":762,"title":{},"body":{"injectables/PaymentService.html":{},"index.html":{}}}],["payment.controller",{"_index":754,"title":{},"body":{"modules/PaymentModule.html":{}}}],["payment.service",{"_index":745,"title":{},"body":{"controllers/PaymentController.html":{},"modules/PaymentModule.html":{}}}],["payment_client",{"_index":1033,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["payment_host",{"_index":557,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["payment_port",{"_index":1390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paymentcommand",{"_index":746,"title":{},"body":{"controllers/PaymentController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["paymentcommand.ping_payment",{"_index":747,"title":{},"body":{"controllers/PaymentController.html":{}}}],["paymentcontroller",{"_index":741,"title":{"controllers/PaymentController.html":{}},"body":{"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"coverage.html":{}}}],["paymentmodule",{"_index":749,"title":{"modules/PaymentModule.html":{}},"body":{"modules/PaymentModule.html":{},"modules.html":{},"overview.html":{}}}],["paymentresolver",{"_index":755,"title":{"classes/PaymentResolver.html":{}},"body":{"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"coverage.html":{}}}],["payments",{"_index":1112,"title":{},"body":{"index.html":{}}}],["paymentservice",{"_index":744,"title":{"injectables/PaymentService.html":{}},"body":{"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"coverage.html":{},"overview.html":{}}}],["paytm",{"_index":1289,"title":{},"body":{"index.html":{}}}],["pending",{"_index":1432,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["permissions",{"_index":1167,"title":{},"body":{"index.html":{}}}],["personal",{"_index":1171,"title":{},"body":{"index.html":{}}}],["pg",{"_index":1012,"title":{},"body":{"dependencies.html":{}}}],["phone",{"_index":338,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"entities/Organization.html":{},"entities/User.html":{},"index.html":{}}}],["ping",{"_index":105,"title":{},"body":{"classes/AuthResolver.html":{},"classes/EscrowResolver.html":{},"injectables/GatewayService.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"classes/UserResolver.html":{}}}],["ping_auth",{"_index":1383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ping_escrow",{"_index":1396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ping_media",{"_index":1398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ping_notification",{"_index":1399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ping_organization",{"_index":1401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ping_payment",{"_index":1403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ping_property",{"_index":1404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ping_user",{"_index":1412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pingauth",{"_index":107,"title":{},"body":{"classes/AuthResolver.html":{}}}],["pingescrow",{"_index":539,"title":{},"body":{"classes/EscrowResolver.html":{}}}],["pingmedia",{"_index":606,"title":{},"body":{"classes/MediaResolver.html":{}}}],["pingnotification",{"_index":628,"title":{},"body":{"classes/NotificationResolver.html":{}}}],["pingorganization",{"_index":720,"title":{},"body":{"classes/OrganizationResolver.html":{}}}],["pingpayment",{"_index":758,"title":{},"body":{"classes/PaymentResolver.html":{}}}],["pingproperty",{"_index":780,"title":{},"body":{"classes/PropertyResolver.html":{}}}],["pinguser",{"_index":902,"title":{},"body":{"classes/UserResolver.html":{}}}],["pk_63bbcee313cee9e95bfba3c7d2b",{"_index":361,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["pk_648e3f5447f725579d7d4ffdfb7",{"_index":381,"title":{},"body":{"classes/CreateRoleTable1741519642145.html":{}}}],["pk_6b031fcd0863e3f6b44230163f9",{"_index":345,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["pk_a3ffb1c0c8416b9fc6f907b7433",{"_index":411,"title":{},"body":{"classes/CreateUserTable1741519705062.html":{}}}],["please",{"_index":1479,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["pnpm",{"_index":1071,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["pnpminstall",{"_index":1078,"title":{},"body":{"index.html":{}}}],["policies",{"_index":1141,"title":{},"body":{"index.html":{}}}],["pong",{"_index":112,"title":{},"body":{"classes/AuthResolver.html":{},"classes/EscrowResolver.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"classes/UserResolver.html":{}}}],["populate",{"_index":1467,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["port",{"_index":235,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/SubgraphsBuilder.html":{}}}],["postgres",{"_index":430,"title":{},"body":{"classes/DataSource.html":{}}}],["precision",{"_index":683,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["preferences",{"_index":1314,"title":{},"body":{"index.html":{}}}],["prerequisites",{"_index":1062,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["preventing",{"_index":1223,"title":{},"body":{"index.html":{}}}],["price",{"_index":1220,"title":{},"body":{"index.html":{}}}],["primary",{"_index":346,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["primary_color",{"_index":348,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"entities/OrganizationMetadata.html":{}}}],["primary_contact_name",{"_index":336,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"entities/Organization.html":{}}}],["primarycolor",{"_index":680,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["primarycolumn",{"_index":789,"title":{},"body":{"entities/Role.html":{}}}],["primarycontactname",{"_index":635,"title":{},"body":{"entities/Organization.html":{}}}],["primarygeneratedcolumn",{"_index":146,"title":{},"body":{"entities/BaseEntity.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":161,"title":{},"body":{"entities/BaseEntity.html":{}}}],["privacy",{"_index":1177,"title":{},"body":{"index.html":{}}}],["private",{"_index":268,"title":{},"body":{"classes/ConfigHelper.html":{},"injectables/OrganizationService.html":{},"injectables/SeederService.html":{},"injectables/UserService.html":{}}}],["process",{"_index":419,"title":{},"body":{"classes/DataSource.html":{}}}],["process.env.database_host",{"_index":431,"title":{},"body":{"classes/DataSource.html":{}}}],["process.env.database_name",{"_index":437,"title":{},"body":{"classes/DataSource.html":{}}}],["process.env.database_password",{"_index":436,"title":{},"body":{"classes/DataSource.html":{}}}],["process.env.database_port",{"_index":433,"title":{},"body":{"classes/DataSource.html":{}}}],["process.env.database_type",{"_index":429,"title":{},"body":{"classes/DataSource.html":{}}}],["process.env.database_username",{"_index":435,"title":{},"body":{"classes/DataSource.html":{}}}],["process.env.is_doc_env",{"_index":1395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["processed",{"_index":1306,"title":{},"body":{"index.html":{}}}],["processing",{"_index":1291,"title":{},"body":{"index.html":{}}}],["production",{"_index":32,"title":{},"body":{"modules/AppConfigModule.html":{},"index.html":{}}}],["profile",{"_index":1185,"title":{},"body":{"index.html":{}}}],["profiles",{"_index":1188,"title":{},"body":{"index.html":{}}}],["project",{"_index":1064,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["promise",{"_index":249,"title":{},"body":{"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"modules/GraphQLGatewayModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"classes/SubgraphsBuilder.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{}}}],["proper",{"_index":1275,"title":{},"body":{"index.html":{}}}],["properly",{"_index":1211,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["properties",{"_index":122,"title":{"properties.html":{}},"body":{"entities/BaseEntity.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"entities/OrganizationMetadata.html":{},"entities/Role.html":{},"entities/User.html":{},"classes/User-1.html":{},"index.html":{},"properties.html":{}}}],["property",{"_index":784,"title":{},"body":{"injectables/PropertyService.html":{},"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["property.controller",{"_index":776,"title":{},"body":{"modules/PropertyModule.html":{}}}],["property.service",{"_index":767,"title":{},"body":{"controllers/PropertyController.html":{},"modules/PropertyModule.html":{}}}],["property_client",{"_index":1034,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["property_host",{"_index":558,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["property_port",{"_index":1391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["propertycommand",{"_index":768,"title":{},"body":{"controllers/PropertyController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["propertycommand.ping_property",{"_index":769,"title":{},"body":{"controllers/PropertyController.html":{}}}],["propertycontroller",{"_index":763,"title":{"controllers/PropertyController.html":{}},"body":{"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"coverage.html":{}}}],["propertydecorator",{"_index":1047,"title":{},"body":{"miscellaneous/functions.html":{}}}],["propertykey",{"_index":1049,"title":{},"body":{"miscellaneous/functions.html":{}}}],["propertymodule",{"_index":771,"title":{"modules/PropertyModule.html":{}},"body":{"modules/PropertyModule.html":{},"modules.html":{},"overview.html":{}}}],["propertyresolver",{"_index":777,"title":{"classes/PropertyResolver.html":{}},"body":{"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"coverage.html":{}}}],["propertyservice",{"_index":766,"title":{"injectables/PropertyService.html":{}},"body":{"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"injectables/PropertyService.html":{},"coverage.html":{},"overview.html":{}}}],["protecting",{"_index":1155,"title":{},"body":{"index.html":{}}}],["protocols",{"_index":1293,"title":{},"body":{"index.html":{}}}],["prototype",{"_index":177,"title":{},"body":{"entities/BaseEntity.html":{}}}],["providers",{"_index":88,"title":{},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/SeederModule.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["provides",{"_index":1484,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["providing",{"_index":1200,"title":{},"body":{"index.html":{}}}],["public",{"_index":319,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["push",{"_index":1311,"title":{},"body":{"index.html":{}}}],["query",{"_index":109,"title":{},"body":{"classes/AuthResolver.html":{},"classes/EscrowResolver.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"classes/UserResolver.html":{}}}],["query(undefined",{"_index":106,"title":{},"body":{"classes/AuthResolver.html":{},"classes/EscrowResolver.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"classes/UserResolver.html":{}}}],["queryrunner",{"_index":324,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["queryrunner.query",{"_index":371,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["queryrunner.query(`alter",{"_index":362,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["queryrunner.query(`create",{"_index":328,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["queryrunner.query(`drop",{"_index":372,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["qushah",{"_index":1055,"title":{},"body":{"index.html":{}}}],["qushah/common",{"_index":100,"title":{},"body":{"modules/AuthModule.html":{},"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{},"modules/DatabaseModule.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/GraphQLGatewayModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["qushah/common/config",{"_index":265,"title":{},"body":{"modules/CommonModule.html":{}}}],["qushah/common/config/config.helper",{"_index":254,"title":{},"body":{"modules/ClientsModule.html":{}}}],["qushah/common/constants/commands",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{}}}],["qushah/common/constants/commands/organization.command",{"_index":671,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["qushah/common/decorators",{"_index":153,"title":{},"body":{"entities/BaseEntity.html":{}}}],["qushah/common/utils",{"_index":157,"title":{},"body":{"entities/BaseEntity.html":{}}}],["r",{"_index":1375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["random",{"_index":481,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["randombytes",{"_index":483,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["randombytes.substring(3",{"_index":504,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["randombytes.substring(7",{"_index":506,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["rate",{"_index":1153,"title":{},"body":{"index.html":{}}}],["razorpay",{"_index":1290,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":62,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"controllers/DocumentationController.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{}}}],["receipts",{"_index":1302,"title":{},"body":{"index.html":{}}}],["recent",{"_index":1437,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["recurring",{"_index":1303,"title":{},"body":{"index.html":{}}}],["redis",{"_index":1072,"title":{},"body":{"index.html":{}}}],["redis_host",{"_index":19,"title":{},"body":{"modules/AppConfigModule.html":{},"miscellaneous/variables.html":{}}}],["redis_port",{"_index":21,"title":{},"body":{"modules/AppConfigModule.html":{},"miscellaneous/variables.html":{}}}],["redisconfig",{"_index":226,"title":{},"body":{"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{}}}],["redisconfig.host",{"_index":234,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["redisconfig.port",{"_index":236,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["references",{"_index":366,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["reflect",{"_index":1014,"title":{},"body":{"dependencies.html":{}}}],["reflected",{"_index":1242,"title":{},"body":{"index.html":{}}}],["refresh",{"_index":1148,"title":{},"body":{"index.html":{}}}],["regarding",{"_index":1182,"title":{},"body":{"index.html":{}}}],["register",{"_index":245,"title":{},"body":{"modules/ClientsModule.html":{},"modules/GraphQLGatewayModule.html":{}}}],["register(...names",{"_index":246,"title":{},"body":{"modules/ClientsModule.html":{}}}],["register(...subgraphnames",{"_index":567,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["registered",{"_index":1472,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["regulations",{"_index":1179,"title":{},"body":{"index.html":{}}}],["regulatory",{"_index":1266,"title":{},"body":{"index.html":{}}}],["rejectunauthorized",{"_index":440,"title":{},"body":{"classes/DataSource.html":{},"modules/DatabaseModule.html":{}}}],["rel_ad9c5b4a8fb0a54d63b8471019",{"_index":360,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["relations",{"_index":739,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["release",{"_index":1252,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["released",{"_index":1256,"title":{},"body":{"index.html":{}}}],["releases",{"_index":1271,"title":{},"body":{"index.html":{}}}],["rent",{"_index":1261,"title":{},"body":{"index.html":{}}}],["rent_fee_percentage",{"_index":351,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"entities/OrganizationMetadata.html":{}}}],["rented",{"_index":1228,"title":{},"body":{"index.html":{}}}],["rentfeepercentage",{"_index":681,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["reorder",{"_index":193,"title":{},"body":{"entities/BaseEntity.html":{}}}],["repo",{"_index":1119,"title":{},"body":{"index.html":{}}}],["repository",{"_index":727,"title":{},"body":{"injectables/OrganizationService.html":{},"injectables/SeederService.html":{},"injectables/UserService.html":{}}}],["request",{"_index":1316,"title":{},"body":{"index.html":{}}}],["requests",{"_index":1318,"title":{},"body":{"index.html":{}}}],["required",{"_index":1146,"title":{},"body":{"index.html":{}}}],["requires",{"_index":868,"title":{},"body":{"classes/User-1.html":{}}}],["reset",{"_index":96,"title":{},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/SeederModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resolutions",{"_index":1103,"title":{},"body":{"index.html":{}}}],["resolvefield",{"_index":919,"title":{},"body":{"classes/UserResolver-1.html":{}}}],["resolvefield(undefined",{"_index":916,"title":{},"body":{"classes/UserResolver-1.html":{}}}],["resolver",{"_index":110,"title":{},"body":{"classes/AuthResolver.html":{},"classes/EscrowResolver.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{}}}],["resolver(user",{"_index":909,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolvers/auth.resolver",{"_index":102,"title":{},"body":{"modules/AuthModule.html":{}}}],["resolvers/escrow.resolver",{"_index":537,"title":{},"body":{"modules/EscrowModule.html":{}}}],["resolvers/media.resolver",{"_index":604,"title":{},"body":{"modules/MediaModule.html":{}}}],["resolvers/notification.resolver",{"_index":626,"title":{},"body":{"modules/NotificationModule.html":{}}}],["resolvers/organization.resolver",{"_index":711,"title":{},"body":{"modules/OrganizationModule.html":{}}}],["resolvers/payment.resolver",{"_index":756,"title":{},"body":{"modules/PaymentModule.html":{}}}],["resolvers/property.resolver",{"_index":778,"title":{},"body":{"modules/PropertyModule.html":{}}}],["resolvers/user.resolver",{"_index":888,"title":{},"body":{"modules/UserModule.html":{}}}],["resolves",{"_index":1456,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["results",{"_index":37,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"entities/Role.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["retries",{"_index":1295,"title":{},"body":{"index.html":{}}}],["retrieve",{"_index":180,"title":{},"body":{"entities/BaseEntity.html":{}}}],["return",{"_index":63,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"controllers/MediaController.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"classes/SubgraphsBuilder.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":60,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"controllers/MediaController.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["revert",{"_index":1361,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["role",{"_index":389,"title":{"entities/Role.html":{}},"body":{"classes/CreateUserInput.html":{},"entities/Role.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"entities/User.html":{},"modules/UserModule.html":{},"coverage.html":{},"index.html":{}}}],["role.entity",{"_index":846,"title":{},"body":{"entities/User.html":{}}}],["role_id",{"_index":410,"title":{},"body":{"classes/CreateUserTable1741519705062.html":{},"entities/User.html":{}}}],["roleexists",{"_index":814,"title":{},"body":{"injectables/SeederService.html":{}}}],["rolename",{"_index":813,"title":{},"body":{"injectables/SeederService.html":{}}}],["rolerepository",{"_index":804,"title":{},"body":{"injectables/SeederService.html":{}}}],["roles",{"_index":790,"title":{},"body":{"entities/Role.html":{},"injectables/SeederService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["rolls",{"_index":1435,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["routing",{"_index":1317,"title":{},"body":{"index.html":{}}}],["rules",{"_index":1255,"title":{},"body":{"index.html":{}}}],["run",{"_index":1063,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["running",{"_index":1368,"title":{"additional-documentation/running-migrations-and-seeders.html":{}},"body":{"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["runs",{"_index":1429,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["rxjs",{"_index":1017,"title":{},"body":{"dependencies.html":{}}}],["saving",{"_index":856,"title":{},"body":{"entities/User.html":{}}}],["scalability",{"_index":1203,"title":{},"body":{"index.html":{}}}],["scale",{"_index":684,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["scans",{"_index":1234,"title":{},"body":{"index.html":{}}}],["schema",{"_index":418,"title":{},"body":{"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"modules/OrganizationModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["schema.type",{"_index":460,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["script",{"_index":1446,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["search",{"_index":1214,"title":{},"body":{"index.html":{}}}],["secure",{"_index":1136,"title":{},"body":{"index.html":{}}}],["securely",{"_index":1235,"title":{},"body":{"index.html":{}}}],["security",{"_index":1135,"title":{},"body":{"index.html":{}}}],["seed",{"_index":800,"title":{},"body":{"injectables/SeederService.html":{},"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["seeder",{"_index":1445,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["seeder.service",{"_index":797,"title":{},"body":{"modules/SeederModule.html":{}}}],["seeder.ts",{"_index":1465,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["seeder/seeder.module",{"_index":890,"title":{},"body":{"modules/UserModule.html":{}}}],["seedermodule",{"_index":791,"title":{"modules/SeederModule.html":{}},"body":{"modules/SeederModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["seeders",{"_index":1414,"title":{"additional-documentation/running-migrations-and-seeders.html":{}},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["seederservice",{"_index":795,"title":{"injectables/SeederService.html":{}},"body":{"modules/SeederModule.html":{},"injectables/SeederService.html":{},"coverage.html":{},"overview.html":{}}}],["seeding",{"_index":810,"title":{},"body":{"injectables/SeederService.html":{}}}],["seedroles",{"_index":801,"title":{},"body":{"injectables/SeederService.html":{}}}],["selecting",{"_index":1481,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["sending",{"_index":1299,"title":{},"body":{"index.html":{}}}],["sensitive",{"_index":1172,"title":{},"body":{"index.html":{}}}],["separate",{"_index":1117,"title":{},"body":{"index.html":{}}}],["service",{"_index":117,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"injectables/MediaService.html":{},"injectables/NotificationService.html":{},"injectables/OrganizationService.html":{},"injectables/PaymentService.html":{},"injectables/PropertyService.html":{},"classes/User-1.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["serviceendpointdefinition",{"_index":825,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["services",{"_index":1243,"title":{},"body":{"index.html":{}}}],["set",{"_index":464,"title":{},"body":{"modules/DatabaseModule.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["setup",{"_index":1073,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["shared",{"_index":1120,"title":{},"body":{"index.html":{}}}],["show",{"_index":1440,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["slug",{"_index":335,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"entities/Organization.html":{}}}],["sms",{"_index":1310,"title":{},"body":{"index.html":{}}}],["sort",{"_index":208,"title":{},"body":{"entities/BaseEntity.html":{}}}],["sortschema",{"_index":588,"title":{},"body":{"modules/GraphQLMicroserviceModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"entities/Role.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{}}}],["source.ts",{"_index":949,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["source.util.ts",{"_index":415,"title":{},"body":{"classes/DataSource.html":{},"coverage.html":{}}}],["source.util.ts:9",{"_index":417,"title":{},"body":{"classes/DataSource.html":{}}}],["specified",{"_index":1466,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["specifies",{"_index":1424,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["specify",{"_index":1452,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["src/migrations",{"_index":1380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ssl",{"_index":439,"title":{},"body":{"classes/DataSource.html":{},"modules/DatabaseModule.html":{}}}],["standards",{"_index":1267,"title":{},"body":{"index.html":{}}}],["start",{"_index":1084,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1087,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":1088,"title":{},"body":{"index.html":{}}}],["started",{"_index":1054,"title":{"index.html":{}},"body":{}}],["statements",{"_index":942,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":166,"title":{},"body":{"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"modules/GraphQLGatewayModule.html":{},"classes/SubgraphsBuilder.html":{}}}],["status",{"_index":1239,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["storage",{"_index":1184,"title":{},"body":{"index.html":{}}}],["stored",{"_index":866,"title":{},"body":{"classes/User-1.html":{}}}],["storing",{"_index":1230,"title":{},"body":{"index.html":{}}}],["streamline",{"_index":1417,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["string",{"_index":56,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"controllers/MediaController.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"entities/Role.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["strong",{"_index":1140,"title":{},"body":{"index.html":{}}}],["structure",{"_index":1107,"title":{},"body":{"index.html":{}}}],["subgraphnames",{"_index":569,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["subgraphs",{"_index":580,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["subgraphsbuilder",{"_index":576,"title":{"classes/SubgraphsBuilder.html":{}},"body":{"modules/GraphQLGatewayModule.html":{},"classes/SubgraphsBuilder.html":{},"coverage.html":{}}}],["subgraphsbuilder.build(...subgraphnames",{"_index":581,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["subscribers",{"_index":444,"title":{},"body":{"classes/DataSource.html":{}}}],["subscriptions",{"_index":1281,"title":{},"body":{"index.html":{}}}],["successful",{"_index":1300,"title":{},"body":{"index.html":{}}}],["such",{"_index":1198,"title":{},"body":{"index.html":{}}}],["super_admin",{"_index":1037,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["supergraphsdl",{"_index":579,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["support",{"_index":1273,"title":{},"body":{"index.html":{},"modules.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["supporting",{"_index":1304,"title":{},"body":{"index.html":{}}}],["sure",{"_index":1074,"title":{},"body":{"index.html":{}}}],["svg",{"_index":1329,"title":{},"body":{"modules.html":{}}}],["symbol.for('order_key",{"_index":1400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["synchronize",{"_index":467,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["syntax",{"_index":1423,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["system",{"_index":1057,"title":{},"body":{"index.html":{}}}],["t",{"_index":58,"title":{},"body":{"injectables/AppConfigService.html":{},"classes/ConfigHelper.html":{},"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["table",{"_index":329,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":991,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":174,"title":{},"body":{"entities/BaseEntity.html":{},"miscellaneous/functions.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["target.prototype",{"_index":179,"title":{},"body":{"entities/BaseEntity.html":{}}}],["targets",{"_index":1438,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["tenant",{"_index":1168,"title":{},"body":{"index.html":{}}}],["tenants",{"_index":1206,"title":{},"body":{"index.html":{}}}],["test",{"_index":33,"title":{},"body":{"modules/AppConfigModule.html":{},"index.html":{}}}],["test:covtypeorm",{"_index":1093,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1092,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1089,"title":{},"body":{"index.html":{}}}],["this.appconfigservice.getconfig(key",{"_index":313,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.authservice.gethello",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.configservice.get(key",{"_index":64,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.documentationservice.gethello",{"_index":513,"title":{},"body":{"controllers/DocumentationController.html":{}}}],["this.escrowservice.gethello",{"_index":529,"title":{},"body":{"controllers/EscrowController.html":{}}}],["this.getconfig",{"_index":310,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environment.database_host",{"_index":300,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environment.database_name",{"_index":307,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environment.database_password",{"_index":305,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environment.database_port",{"_index":301,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environment.database_type",{"_index":299,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environment.database_username",{"_index":303,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environment.redis_host",{"_index":297,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environment.redis_port",{"_index":298,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environment[`${key}_port",{"_index":309,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.id",{"_index":164,"title":{},"body":{"entities/BaseEntity.html":{}}}],["this.mediaservice.gethello",{"_index":596,"title":{},"body":{"controllers/MediaController.html":{}}}],["this.notificationservice.gethello",{"_index":618,"title":{},"body":{"controllers/NotificationController.html":{}}}],["this.organizationservice.findall",{"_index":722,"title":{},"body":{"classes/OrganizationResolver.html":{}}}],["this.organizationservice.findone",{"_index":675,"title":{},"body":{"controllers/OrganizationController.html":{},"classes/UserResolver-1.html":{}}}],["this.organizationservice.gethello",{"_index":673,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["this.paymentservice.gethello",{"_index":748,"title":{},"body":{"controllers/PaymentController.html":{}}}],["this.propertyservice.gethello",{"_index":770,"title":{},"body":{"controllers/PropertyController.html":{}}}],["this.repository.find",{"_index":738,"title":{},"body":{"injectables/OrganizationService.html":{},"injectables/UserService.html":{}}}],["this.repository.findone",{"_index":740,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["this.repository.save(input",{"_index":938,"title":{},"body":{"injectables/UserService.html":{}}}],["this.rolerepository.create",{"_index":817,"title":{},"body":{"injectables/SeederService.html":{}}}],["this.rolerepository.findone",{"_index":815,"title":{},"body":{"injectables/SeederService.html":{}}}],["this.rolerepository.save",{"_index":816,"title":{},"body":{"injectables/SeederService.html":{}}}],["this.seedroles",{"_index":808,"title":{},"body":{"injectables/SeederService.html":{}}}],["this.userservice.create(input",{"_index":912,"title":{},"body":{"classes/UserResolver.html":{}}}],["this.userservice.find",{"_index":910,"title":{},"body":{"classes/UserResolver.html":{}}}],["this.userservice.gethello",{"_index":879,"title":{},"body":{"controllers/UserController.html":{}}}],["through",{"_index":1322,"title":{},"body":{"index.html":{}}}],["throw",{"_index":1458,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["time",{"_index":1307,"title":{},"body":{"index.html":{}}}],["timely",{"_index":1309,"title":{},"body":{"index.html":{}}}],["timestamp",{"_index":339,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DatabaseUtil.html":{}}}],["timestamp.substring(0",{"_index":498,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["timestamp.substring(8",{"_index":500,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["title",{"_index":1366,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["todo",{"_index":400,"title":{},"body":{"classes/CreateUserInput.html":{},"entities/User.html":{},"injectables/UserService.html":{}}}],["token",{"_index":1142,"title":{},"body":{"index.html":{}}}],["tool",{"_index":1096,"title":{"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}},"body":{"index.html":{}}}],["trail",{"_index":1251,"title":{},"body":{"index.html":{}}}],["transaction",{"_index":1248,"title":{},"body":{"index.html":{}}}],["transactions",{"_index":1113,"title":{},"body":{"index.html":{}}}],["transparency",{"_index":1253,"title":{},"body":{"index.html":{}}}],["transport",{"_index":221,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{}}}],["transport.redis",{"_index":231,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{}}}],["troubleshooting",{"_index":1469,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["true",{"_index":16,"title":{},"body":{"modules/AppConfigModule.html":{},"entities/BaseEntity.html":{},"classes/ConfigHelper.html":{},"modules/DatabaseModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"entities/Role.html":{},"entities/User.html":{},"classes/User-1.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"miscellaneous/variables.html":{}}}],["true})@column({name",{"_index":696,"title":{},"body":{"entities/OrganizationMetadata.html":{},"entities/User.html":{}}}],["true})@column({nullable",{"_index":687,"title":{},"body":{"entities/OrganizationMetadata.html":{},"entities/Role.html":{}}}],["true})@deletedatecolumn({name",{"_index":133,"title":{},"body":{"entities/BaseEntity.html":{}}}],["true})@directive('@external",{"_index":863,"title":{},"body":{"classes/User-1.html":{}}}],["true})@directive('@requires(fields",{"_index":861,"title":{},"body":{"classes/User-1.html":{}}}],["true})@onetoone(undefined",{"_index":639,"title":{},"body":{"entities/Organization.html":{}}}],["true})@updatedatecolumn({name",{"_index":138,"title":{},"body":{"entities/BaseEntity.html":{}}}],["ts",{"_index":1373,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["tsconfig",{"_index":1376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["type",{"_index":53,"title":{},"body":{"injectables/AppConfigService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"modules/GraphQLGatewayModule.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"entities/Role.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":148,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"injectables/OrganizationService.html":{},"entities/Role.html":{},"injectables/SeederService.html":{},"entities/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["typeorm/find",{"_index":735,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["typeorm/metadata/columnmetadata",{"_index":155,"title":{},"body":{"entities/BaseEntity.html":{}}}],["typeorm_migrations",{"_index":428,"title":{},"body":{"classes/DataSource.html":{}}}],["typeormcommand",{"_index":990,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeormdatasource",{"_index":422,"title":{},"body":{"classes/DataSource.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeormmodule",{"_index":456,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/SeederModule.html":{}}}],["typeormmodule.forfeature([role",{"_index":798,"title":{},"body":{"modules/SeederModule.html":{}}}],["typeormmodule.forfeature(entities",{"_index":470,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["typeormmodule.forrootasync",{"_index":461,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["typeormmoduleoptions",{"_index":457,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["types/yargs",{"_index":1004,"title":{},"body":{"dependencies.html":{}}}],["uint8array(10",{"_index":485,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["unauthorized",{"_index":1137,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":72,"title":{},"body":{"controllers/AuthController.html":{},"entities/BaseEntity.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{}}}],["unique",{"_index":343,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"entities/Organization.html":{}}}],["unit",{"_index":1090,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":1338,"title":{},"body":{"properties.html":{}}}],["up",{"_index":321,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["up(queryrunner",{"_index":326,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["update",{"_index":369,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{},"index.html":{}}}],["updated_at",{"_index":139,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["updatedat",{"_index":126,"title":{},"body":{"entities/BaseEntity.html":{}}}],["updatedatecolumn",{"_index":147,"title":{},"body":{"entities/BaseEntity.html":{}}}],["updates",{"_index":1186,"title":{},"body":{"index.html":{}}}],["upi",{"_index":1288,"title":{},"body":{"index.html":{}}}],["uq_963693341bd612aa01ddf3a4b68",{"_index":344,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["uq_9b7ca6d30b94fef571cff876884",{"_index":342,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["url",{"_index":832,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["usage",{"_index":1421,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["use",{"_index":1105,"title":{"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}},"body":{"index.html":{}}}],["used",{"_index":1462,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["usedatasource(datasource",{"_index":167,"title":{},"body":{"entities/BaseEntity.html":{}}}],["usefactory",{"_index":462,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/GraphQLGatewayModule.html":{}}}],["user",{"_index":834,"title":{"entities/User.html":{},"classes/User-1.html":{}},"body":{"entities/User.html":{},"classes/User-1.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["user\".\"roles",{"_index":379,"title":{},"body":{"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["user\".\"users",{"_index":409,"title":{},"body":{"classes/CreateUserTable1741519705062.html":{}}}],["user.controller",{"_index":885,"title":{},"body":{"modules/UserModule.html":{}}}],["user.input",{"_index":908,"title":{},"body":{"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["user.input.ts",{"_index":384,"title":{},"body":{"classes/CreateUserInput.html":{},"coverage.html":{}}}],["user.input.ts:11",{"_index":393,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:14",{"_index":391,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:17",{"_index":395,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:20",{"_index":396,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:23",{"_index":397,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:26",{"_index":398,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:29",{"_index":394,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:8",{"_index":392,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.organizationid",{"_index":922,"title":{},"body":{"classes/UserResolver-1.html":{}}}],["user.service",{"_index":876,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{}}}],["user_client",{"_index":1035,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["user_host",{"_index":559,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["user_port",{"_index":1392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usercommand",{"_index":877,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usercommand.ping_user",{"_index":878,"title":{},"body":{"controllers/UserController.html":{}}}],["usercontroller",{"_index":872,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["usermodule",{"_index":880,"title":{"modules/UserModule.html":{}},"body":{"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":302,"title":{},"body":{"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{}}}],["userresolver",{"_index":887,"title":{"classes/UserResolver.html":{},"classes/UserResolver-1.html":{}},"body":{"modules/UserModule.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"coverage.html":{}}}],["users",{"_index":858,"title":{},"body":{"entities/User.html":{},"classes/UserResolver.html":{},"index.html":{}}}],["userservice",{"_index":875,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["usertype",{"_index":848,"title":{},"body":{"entities/User.html":{}}}],["using",{"_index":182,"title":{},"body":{"entities/BaseEntity.html":{},"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["utilities",{"_index":1125,"title":{},"body":{"index.html":{}}}],["uuid",{"_index":331,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{},"entities/User.html":{}}}],["uuid_generate_v4",{"_index":332,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["uuidv7",{"_index":494,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["valid('development",{"_index":31,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["validated",{"_index":1212,"title":{},"body":{"index.html":{}}}],["validation",{"_index":1208,"title":{},"body":{"index.html":{}}}],["validationschema",{"_index":17,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["validator",{"_index":402,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["value",{"_index":190,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":200,"title":{},"body":{"entities/BaseEntity.html":{}}}],["variable",{"_index":950,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":424,"title":{"miscellaneous/variables.html":{}},"body":{"classes/DataSource.html":{},"miscellaneous/variables.html":{}}}],["varying",{"_index":334,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["verification",{"_index":1283,"title":{},"body":{"index.html":{}}}],["verified",{"_index":1284,"title":{},"body":{"index.html":{}}}],["verify",{"_index":1473,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["version",{"_index":1335,"title":{},"body":{"properties.html":{}}}],["versioning",{"_index":1478,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["videos",{"_index":1232,"title":{},"body":{"index.html":{}}}],["warning",{"_index":1460,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["watch",{"_index":1085,"title":{},"body":{"index.html":{}}}],["way",{"_index":1218,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["within",{"_index":1118,"title":{},"body":{"index.html":{}}}],["without",{"_index":1099,"title":{},"body":{"index.html":{}}}],["world",{"_index":521,"title":{},"body":{"injectables/DocumentationService.html":{}}}],["worrying",{"_index":1100,"title":{},"body":{"index.html":{}}}],["write",{"_index":853,"title":{},"body":{"entities/User.html":{}}}],["yargs",{"_index":1020,"title":{},"body":{"dependencies.html":{}}}],["yargs(process.argv.slice(2",{"_index":1352,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ycolumn",{"_index":199,"title":{},"body":{"entities/BaseEntity.html":{}}}],["yes",{"_index":455,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["zoom",{"_index":95,"title":{},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/SeederModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppConfigModule.html":{"url":"modules/AppConfigModule.html","title":"module - AppConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    AppConfigModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/config/config.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { ConfigModule } from '@nestjs/config';\nimport { Module } from '@nestjs/common';\nimport Joi from 'joi';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      validationSchema: Joi.object({\n        REDIS_HOST: Joi.string().required(),\n        REDIS_PORT: Joi.number().required(),\n        DATABASE_TYPE: Joi.string().required(),\n        DATABASE_HOST: Joi.string().required(),\n        DATABASE_PORT: Joi.string().required(),\n        DATABASE_USERNAME: Joi.string().required(),\n        DATABASE_PASSWORD: Joi.string().required(),\n        DATABASE_NAME: Joi.string().required(),\n        NODE_ENV: Joi.string()\n          .valid('development', 'production', 'test')\n          .default('development'),\n      }),\n    }),\n  ],\n})\nexport class AppConfigModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppConfigService.html":{"url":"injectables/AppConfigService.html","title":"injectable - AppConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/config/config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in libs/common/src/config/config.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getConfig\n                        \n                    \n                \n            \n            \n                \ngetConfig(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/config/config.service.ts:8\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class AppConfigService {\n  constructor(private readonly configService: ConfigService) {}\n\n  getConfig(key: string): T {\n    return this.configService.get(key);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/auth.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/auth/src/auth.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { AuthCommand } from '@qushah/common/constants/commands';\n\n@Controller()\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @MessagePattern({ cmd: AuthCommand.PING_AUTH })\n  getHello(): string {\n    return this.authService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nCommonModule->AuthModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nAuthModule -->\n\nGraphQLMicroserviceModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/auth/src/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { CommonModule, GraphQLMicroserviceModule } from '@qushah/common';\nimport { AuthResolver } from './resolvers/auth.resolver';\n\n@Module({\n  imports: [CommonModule, GraphQLMicroserviceModule],\n  controllers: [AuthController],\n  providers: [AuthService, AuthResolver],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthResolver.html":{"url":"classes/AuthResolver.html","title":"class - AuthResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/resolvers/auth.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingAuth'})\n                \n            \n\n                    \n                        \n                            Defined in apps/auth/src/resolvers/auth.resolver.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\n\n@Resolver()\nexport class AuthResolver {\n  @Query(() => String, { name: 'pingAuth' })\n  ping(): string {\n    return 'pong';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/auth/src/auth.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AuthService {\n  getHello(): string {\n    return 'Hello from Auth Service!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/BaseEntity.html":{"url":"entities/BaseEntity.html","title":"entity - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/database/entities/base.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ColumnOrder(9999)@Field(undefined)@CreateDateColumn({name: 'created_at'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/common/src/database/entities/base.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ColumnOrder(9999)@Field(undefined, {nullable: true})@DeleteDateColumn({name: 'deleted_at', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/common/src/database/entities/base.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ColumnOrder(undefined)@Field(undefined)@PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/common/src/database/entities/base.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ColumnOrder(9999)@Field(undefined, {nullable: true})@UpdateDateColumn({name: 'updated_at', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/common/src/database/entities/base.entity.ts:32\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  BaseEntity as BaseEntityTypeOrm,\n  BeforeInsert,\n  CreateDateColumn,\n  DataSource,\n  DeleteDateColumn,\n  Entity,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { Field, ObjectType } from '@nestjs/graphql';\nimport { ColumnOrder, getColumnOrder } from '@qushah/common/decorators';\nimport { ColumnMetadata } from 'typeorm/metadata/ColumnMetadata';\nimport { DatabaseUtil } from '@qushah/common/utils';\n\n@ObjectType()\n@Entity()\nexport abstract class BaseEntity extends BaseEntityTypeOrm {\n  @ColumnOrder(-1)\n  @Field(() => String)\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @ColumnOrder(9999)\n  @Field(() => Date)\n  @CreateDateColumn({ name: 'created_at' })\n  createdAt: Date;\n\n  @ColumnOrder(9999)\n  @Field(() => Date, { nullable: true })\n  @UpdateDateColumn({ name: 'updated_at', nullable: true })\n  updatedAt?: Date;\n\n  @ColumnOrder(9999)\n  @Field(() => Date, { nullable: true })\n  @DeleteDateColumn({ name: 'deleted_at', nullable: true })\n  deletedAt?: Date;\n\n  @BeforeInsert()\n  generateUUID() {\n    this.id = DatabaseUtil.generateUUIDv7();\n  }\n\n  static useDataSource(dataSource: DataSource) {\n    BaseEntityTypeOrm.useDataSource.call(this, dataSource);\n    const meta = dataSource.entityMetadatasMap.get(this);\n\n    const getOrderSafely = (column: ColumnMetadata) => {\n      const target = column.target as any;\n\n      // Check if the target and its prototype exist\n      if (target && target.prototype) {\n        // Retrieve the column order using the custom getColumnOrder function\n        return getColumnOrder(target.prototype, column.propertyName);\n      }\n\n      // Fallback to a default high order value if target is undefined\n      return 9996;\n    };\n\n    if (meta != null) {\n      // Reorder columns based on custom `@ColumnOrder` decorator\n      meta.columns = [...meta.columns].sort((xColumn, yColumn) => {\n        // Get the order values for both columns being compared\n        const orderXColumn = getOrderSafely(xColumn);\n        const orderYColumn = getOrderSafely(yColumn);\n\n        // Sort in ascending order\n        return orderXColumn - orderYColumn;\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Bootstrapper.html":{"url":"classes/Bootstrapper.html","title":"class - Bootstrapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Bootstrapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/utils/bootstrapper.util.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Async\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init(module: any)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/utils/bootstrapper.util.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                module\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Logger } from '@nestjs/common';\nimport { ConfigHelper } from '@qushah/common';\nimport { NestFactory } from '@nestjs/core';\nimport { MicroserviceOptions, Transport } from '@nestjs/microservices';\n\nexport class Bootstrapper {\n  static async init(module: any) {\n    const logger = new Logger(`${module.name}Bootstrap`);\n    const configHelper = await ConfigHelper.getInstance();\n    const redisConfig = configHelper.redisConfig;\n    const app = await NestFactory.create(module);\n    app.connectMicroservice({\n      transport: Transport.REDIS,\n      options: {\n        host: redisConfig.host,\n        port: redisConfig.port,\n      },\n    });\n    await app.startAllMicroservices();\n    const port: number = configHelper.getModulePort(module.name);\n    await app.listen(port);\n    logger.log(`Microservice listening on port ${port}...`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ClientsModule.html":{"url":"modules/ClientsModule.html","title":"module - ClientsModule","body":"\n                   \n\n\n\n\n    Modules\n    ClientsModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/clients/clients.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(...names: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/clients/clients.module.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                names\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, Global, DynamicModule } from '@nestjs/common';\nimport {\n  ClientsModule as NestClientsModule,\n  ClientsModuleOptions,\n  Transport,\n} from '@nestjs/microservices';\nimport { ConfigHelper } from '@qushah/common/config/config.helper';\n\n@Global()\n@Module({})\nexport class ClientsModule {\n  static async register(...names: string[]): Promise {\n    const configHelper = await ConfigHelper.getInstance();\n    const { host, port } = configHelper.redisConfig;\n    const clients: ClientsModuleOptions = names.map((name) => ({\n      name,\n      transport: Transport.REDIS,\n      options: {\n        host,\n        port,\n      },\n    }));\n    return {\n      module: ClientsModule,\n      imports: [NestClientsModule.register(clients)],\n      exports: [NestClientsModule],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CommonModule.html":{"url":"modules/CommonModule.html","title":"module - CommonModule","body":"\n                   \n\n\n\n\n    Modules\n    CommonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_exports\n\n\n\ncluster_CommonModule_imports\n\n\n\ncluster_CommonModule_providers\n\n\n\n\nAppConfigModule\n\nAppConfigModule\n\n\n\nCommonModule\n\nCommonModule\n\nCommonModule -->\n\nAppConfigModule->CommonModule\n\n\n\n\n\nCommonService \n\nCommonService \n\nCommonService  -->\n\nCommonModule->CommonService \n\n\n\n\n\nCommonService\n\nCommonService\n\nCommonModule -->\n\nCommonService->CommonModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/common.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CommonService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppConfigModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CommonService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CommonService } from './common.service';\nimport { AppConfigModule } from '@qushah/common/config';\n\n@Module({\n  imports: [AppConfigModule],\n  providers: [CommonService],\n  exports: [CommonService],\n})\nexport class CommonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CommonService.html":{"url":"injectables/CommonService.html","title":"injectable - CommonService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CommonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/common.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class CommonService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigHelper.html":{"url":"classes/ConfigHelper.html","title":"class - ConfigHelper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/config/config.helper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                appConfigService\n                            \n                            \n                                    Private\n                                    Static\n                                instance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getConfig\n                            \n                            \n                                    Static\n                                    Async\n                                getInstance\n                            \n                            \n                                getMicroServiceHosts\n                            \n                            \n                                getModulePort\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    redisConfig\n                                \n                                \n                                    databaseConfig\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Private\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in libs/common/src/config/config.helper.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        appConfigService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AppConfigService\n\n                    \n                \n                    \n                        \n                                Defined in libs/common/src/config/config.helper.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        instance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigHelper\n\n                    \n                \n                    \n                        \n                                Defined in libs/common/src/config/config.helper.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getConfig\n                        \n                    \n                \n            \n            \n                \ngetConfig(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/config/config.helper.ts:63\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        getInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    getInstance()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/config/config.helper.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMicroServiceHosts\n                        \n                    \n                \n            \n            \n                \ngetMicroServiceHosts(microserviceName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/config/config.helper.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                microserviceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { host: any; port: any; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getModulePort\n                        \n                    \n                \n            \n            \n                \ngetModulePort(moduleName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/config/config.helper.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                moduleName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        redisConfig\n                    \n                \n\n                \n                    \n                        getredisConfig()\n                    \n                \n                            \n                                \n                                    Defined in libs/common/src/config/config.helper.ts:31\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        databaseConfig\n                    \n                \n\n                \n                    \n                        getdatabaseConfig()\n                    \n                \n                            \n                                \n                                    Defined in libs/common/src/config/config.helper.ts:37\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ConfigService } from '@nestjs/config';\nimport { AppConfigService } from './config.service';\nimport { NestFactory } from '@nestjs/core';\nimport { ConfigModule } from '@nestjs/config';\nimport { ENVIRONMENT } from '@qushah/common';\n\nexport class ConfigHelper {\n  private static instance: ConfigHelper;\n  private appConfigService: AppConfigService;\n\n  private constructor() {}\n\n  static async getInstance(): Promise {\n    if (!ConfigHelper.instance) {\n      const appContext = await NestFactory.createApplicationContext(\n        ConfigModule.forRoot({\n          isGlobal: true,\n        }),\n      );\n\n      const configService = appContext.get(ConfigService);\n      const appConfigService = new AppConfigService(configService);\n\n      ConfigHelper.instance = new ConfigHelper();\n      ConfigHelper.instance.appConfigService = appConfigService;\n    }\n\n    return ConfigHelper.instance;\n  }\n\n  get redisConfig() {\n    const host = this.getConfig(ENVIRONMENT.REDIS_HOST);\n    const port = this.getConfig(ENVIRONMENT.REDIS_PORT);\n    return { host, port };\n  }\n\n  get databaseConfig() {\n    const type = this.getConfig(ENVIRONMENT.DATABASE_TYPE);\n    const host = this.getConfig(ENVIRONMENT.DATABASE_HOST);\n    const port = this.getConfig(ENVIRONMENT.DATABASE_PORT);\n    const username = this.getConfig(ENVIRONMENT.DATABASE_USERNAME);\n    const password = this.getConfig(ENVIRONMENT.DATABASE_PASSWORD);\n    const database = this.getConfig(ENVIRONMENT.DATABASE_NAME);\n    return { type, host, port, username, password, database };\n  }\n\n  getModulePort(moduleName: string) {\n    const key = moduleName?.split('Module')?.[0]?.toUpperCase();\n    if (!key) return;\n    return this.getConfig(ENVIRONMENT[`${key}_PORT`]);\n  }\n\n  getMicroServiceHosts(microserviceName: string) {\n    const host = this.getConfig(\n      `${microserviceName}_HOST`.toUpperCase(),\n    );\n    const port = this.getConfig(\n      `${microserviceName}_PORT`.toUpperCase(),\n    );\n    return { host, port };\n  }\n\n  getConfig(key: string) {\n    return this.appConfigService.getConfig(key);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrganizationAndMetaTable1741518145374.html":{"url":"classes/CreateOrganizationAndMetaTable1741518145374.html","title":"class - CreateOrganizationAndMetaTable1741518145374","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrganizationAndMetaTable1741518145374\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/organization/src/migrations/1741518145374-CreateOrganizationAndMetaTable.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'CreateOrganizationAndMetaTable1741518145374'\n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/migrations/1741518145374-CreateOrganizationAndMetaTable.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/organization/src/migrations/1741518145374-CreateOrganizationAndMetaTable.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/organization/src/migrations/1741518145374-CreateOrganizationAndMetaTable.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class CreateOrganizationAndMetaTable1741518145374\n  implements MigrationInterface\n{\n  name = 'CreateOrganizationAndMetaTable1741518145374';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`CREATE TABLE \"organization\".\"organizations\"\n                             (\n                                 \"id\"                   uuid              NOT NULL DEFAULT uuid_generate_v4(),\n                                 \"name\"                 character varying NOT NULL,\n                                 \"slug\"                 character varying NOT NULL,\n                                 \"primary_contact_name\" character varying NOT NULL,\n                                 \"email\"                character varying NOT NULL,\n                                 \"phone\"                character varying NOT NULL,\n                                 \"created_at\"           TIMESTAMP         NOT NULL DEFAULT now(),\n                                 \"updated_at\"           TIMESTAMP                  DEFAULT now(),\n                                 \"deleted_at\"           TIMESTAMP,\n                                 CONSTRAINT \"UQ_9b7ca6d30b94fef571cff876884\" UNIQUE (\"name\"),\n                                 CONSTRAINT \"UQ_963693341bd612aa01ddf3a4b68\" UNIQUE (\"slug\"),\n                                 CONSTRAINT \"PK_6b031fcd0863e3f6b44230163f9\" PRIMARY KEY (\"id\")\n                             )`);\n    await queryRunner.query(`CREATE TABLE \"organization\".\"organizations_metadata\"\n                             (\n                                 \"id\"                     uuid              NOT NULL DEFAULT uuid_generate_v4(),\n                                 \"primary_color\"          character varying,\n                                 \"domain\"                 character varying,\n                                 \"logo\"                   character varying NOT NULL,\n                                 \"rent_fee_percentage\"    numeric(5, 2)     NOT NULL DEFAULT '5',\n                                 \"deposit_fee_percentage\" numeric(5, 2)     NOT NULL DEFAULT '5',\n                                 \"allow_interest_earning\" boolean           NOT NULL DEFAULT false,\n                                 \"organization_id\"        uuid,\n                                 \"created_at\"             TIMESTAMP         NOT NULL DEFAULT now(),\n                                 \"updated_at\"             TIMESTAMP                  DEFAULT now(),\n                                 \"deleted_at\"             TIMESTAMP,\n                                 CONSTRAINT \"REL_ad9c5b4a8fb0a54d63b8471019\" UNIQUE (\"organization_id\"),\n                                 CONSTRAINT \"PK_63bbcee313cee9e95bfba3c7d2b\" PRIMARY KEY (\"id\")\n                             )`);\n    await queryRunner.query(`ALTER TABLE \"organization\".\"organizations_metadata\"\n        ADD CONSTRAINT \"FK_ad9c5b4a8fb0a54d63b84710190\" FOREIGN KEY (\"organization_id\") REFERENCES \"organization\".\"organizations\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE`);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"organization\".\"organizations_metadata\"\n        DROP CONSTRAINT \"FK_ad9c5b4a8fb0a54d63b84710190\"`);\n    await queryRunner.query(\n      `DROP TABLE \"organization\".\"organizations_metadata\"`,\n    );\n    await queryRunner.query(`DROP TABLE \"organization\".\"organizations\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRoleTable1741519642145.html":{"url":"classes/CreateRoleTable1741519642145.html","title":"class - CreateRoleTable1741519642145","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRoleTable1741519642145\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user/src/migrations/1741519642145-CreateRoleTable.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'CreateRoleTable1741519642145'\n                    \n                \n                    \n                        \n                                Defined in apps/user/src/migrations/1741519642145-CreateRoleTable.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/user/src/migrations/1741519642145-CreateRoleTable.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/user/src/migrations/1741519642145-CreateRoleTable.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class CreateRoleTable1741519642145 implements MigrationInterface {\n  name = 'CreateRoleTable1741519642145';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`CREATE TABLE \"user\".\"roles\"\n                             (\n                                 \"name\"        character varying NOT NULL,\n                                 \"description\" character varying,\n                                 CONSTRAINT \"PK_648e3f5447f725579d7d4ffdfb7\" PRIMARY KEY (\"name\")\n                             )`);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`DROP TABLE \"user\".\"roles\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserInput.html":{"url":"classes/CreateUserInput.html","title":"class - CreateUserInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user/src/dtos/create-user.input.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                lastName\n                            \n                            \n                                    \n                                organizationId\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                passwordConfirmation\n                            \n                            \n                                    \n                                phone\n                            \n                            \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/dtos/create-user.input.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/dtos/create-user.input.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/dtos/create-user.input.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        organizationId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/dtos/create-user.input.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/dtos/create-user.input.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        passwordConfirmation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/dtos/create-user.input.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/dtos/create-user.input.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/dtos/create-user.input.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql';\nimport { Role } from '../entities/role.entity';\n\n//  TODO: Implement Class Validator\n@ObjectType()\nexport class CreateUserInput {\n  @Field(() => String)\n  firstName: string;\n\n  @Field(() => String)\n  lastName: string;\n\n  @Field(() => String)\n  email: string;\n\n  @Field(() => String)\n  password: string;\n\n  @Field(() => String)\n  passwordConfirmation: string;\n\n  @Field(() => String)\n  phone: string;\n\n  @Field(() => Role)\n  role: Role;\n\n  @Field(() => String)\n  organizationId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserTable1741519705062.html":{"url":"classes/CreateUserTable1741519705062.html","title":"class - CreateUserTable1741519705062","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserTable1741519705062\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user/src/migrations/1741519705062-CreateUserTable.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'CreateUserTable1741519705062'\n                    \n                \n                    \n                        \n                                Defined in apps/user/src/migrations/1741519705062-CreateUserTable.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/user/src/migrations/1741519705062-CreateUserTable.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/user/src/migrations/1741519705062-CreateUserTable.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class CreateUserTable1741519705062 implements MigrationInterface {\n  name = 'CreateUserTable1741519705062';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`CREATE TABLE \"user\".\"users\"\n                             (\n                                 \"id\"              uuid              NOT NULL DEFAULT uuid_generate_v4(),\n                                 \"firstName\"       character varying NOT NULL,\n                                 \"lastName\"        character varying NOT NULL,\n                                 \"email\"           character varying NOT NULL,\n                                 \"password\"        character varying NOT NULL,\n                                 \"phone\"           character varying NOT NULL,\n                                 \"organization_id\" uuid,\n                                 \"role_id\"         character varying,\n                                 \"created_at\"      TIMESTAMP         NOT NULL DEFAULT now(),\n                                 \"updated_at\"      TIMESTAMP                  DEFAULT now(),\n                                 \"deleted_at\"      TIMESTAMP,\n                                 CONSTRAINT \"PK_a3ffb1c0c8416b9fc6f907b7433\" PRIMARY KEY (\"id\")\n                             )`);\n    await queryRunner.query(`ALTER TABLE \"user\".\"users\"\n        ADD CONSTRAINT \"FK_a2cecd1a3531c0b041e29ba46e1\" FOREIGN KEY (\"role_id\") REFERENCES \"user\".\"roles\" (\"name\") ON DELETE NO ACTION ON UPDATE NO ACTION`);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"user\".\"users\"\n        DROP CONSTRAINT \"FK_a2cecd1a3531c0b041e29ba46e1\"`);\n    await queryRunner.query(`DROP TABLE \"user\".\"users\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DataSource.html":{"url":"classes/DataSource.html","title":"class - DataSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/utils/data-source.util.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        getInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    getInstance(schema: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/utils/data-source.util.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                schema\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import process from 'node:process';\nimport * as dotenv from 'dotenv';\nimport { DataSource as TypeormDataSource } from 'typeorm';\n\n// Load environment variables from .env file\ndotenv.config();\n\nexport class DataSource {\n  static getInstance(schema: string) {\n    return new TypeormDataSource({\n      migrationsTableName: 'typeorm_migrations',\n      type: (process.env.DATABASE_TYPE as 'postgres') || 'postgres',\n      host: process.env.DATABASE_HOST || 'localhost',\n      port: +process.env.DATABASE_PORT || 5432,\n      username: process.env.DATABASE_USERNAME || 'postgres',\n      password: process.env.DATABASE_PASSWORD || 'postgres',\n      database: process.env.DATABASE_NAME || 'my-db',\n      ssl: { rejectUnauthorized: false },\n      schema,\n      entities: [`apps/${schema}/**/**.entity{.ts,.js}`],\n      migrations: [`apps/${schema}/src/migrations/**/*{.ts,.js}`],\n      subscribers: [`apps/${schema}/src/subscriber/**/*{.ts,.js}`],\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/database/database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init(schema: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/database/database.module.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                schema\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        loadEntities\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadEntities(entities?: EntityClassOrSchema[], dataSource?: DataSource | DataSourceOptions | string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/database/database.module.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        EntityClassOrSchema[]\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                dataSource\n                                            \n                                                            DataSource | DataSourceOptions | string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, DynamicModule } from '@nestjs/common';\nimport { TypeOrmModule, TypeOrmModuleOptions } from '@nestjs/typeorm';\nimport { ConfigHelper } from '@qushah/common';\nimport { EntityClassOrSchema } from '@nestjs/typeorm/dist/interfaces/entity-class-or-schema.type';\nimport { DataSource, DataSourceOptions } from 'typeorm';\n\n@Module({})\nexport class DatabaseModule {\n  static init(schema: string): DynamicModule {\n    return {\n      module: DatabaseModule,\n      imports: [\n        TypeOrmModule.forRootAsync({\n          useFactory: async () => {\n            const configHelper = await ConfigHelper.getInstance();\n            const { type, host, port, username, password, database } =\n              configHelper.databaseConfig;\n            const options: TypeOrmModuleOptions = {\n              type,\n              host,\n              port,\n              username,\n              password,\n              database,\n              schema: schema, // Set schema dynamically\n              autoLoadEntities: true,\n              // synchronize: true, // Enable only for development\n              ssl: { rejectUnauthorized: false },\n            };\n\n            return options;\n          },\n        }),\n      ],\n    };\n  }\n\n  static loadEntities(\n    entities?: EntityClassOrSchema[],\n    dataSource?: DataSource | DataSourceOptions | string,\n  ): DynamicModule {\n    return TypeOrmModule.forFeature(entities, dataSource);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DatabaseUtil.html":{"url":"classes/DatabaseUtil.html","title":"class - DatabaseUtil","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DatabaseUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/utils/database.util.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                generateUUIDv7\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        generateUUIDv7\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateUUIDv7()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/utils/database.util.ts:2\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class DatabaseUtil {\n  static generateUUIDv7(): string {\n    const now = Date.now();\n    const timestamp = now.toString(16).padStart(12, '0'); // 48-bit timestamp\n\n    // Generate 10 random bytes\n    const randomBytes = Array.from(crypto.getRandomValues(new Uint8Array(10)))\n      .map((b) => b.toString(16).padStart(2, '0')) // Convert to hex and ensure 2 characters\n      .join('');\n\n    // Construct UUIDv7 (ensuring the correct format)\n    return `${timestamp.substring(0, 8)}-${timestamp.substring(8, 12)}-7${randomBytes.substring(1, 3)}-${randomBytes.substring(3, 7)}-${randomBytes.substring(7, 19)}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DocumentationController.html":{"url":"controllers/DocumentationController.html","title":"controller - DocumentationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DocumentationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/documentation/src/documentation.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in apps/documentation/src/documentation.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { DocumentationService } from './documentation.service';\n\n@Controller()\nexport class DocumentationController {\n  constructor(private readonly documentationService: DocumentationService) {}\n\n  @Get()\n  getHello(): string {\n    return this.documentationService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DocumentationModule.html":{"url":"modules/DocumentationModule.html","title":"module - DocumentationModule","body":"\n                   \n\n\n\n\n    Modules\n    DocumentationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DocumentationModule\n\n\n\ncluster_DocumentationModule_providers\n\n\n\n\nDocumentationService\n\nDocumentationService\n\n\n\nDocumentationModule\n\nDocumentationModule\n\nDocumentationModule -->\n\nDocumentationService->DocumentationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/documentation/src/documentation.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DocumentationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DocumentationController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DocumentationController } from './documentation.controller';\nimport { DocumentationService } from './documentation.service';\n\n@Module({\n  imports: [],\n  controllers: [DocumentationController],\n  providers: [DocumentationService],\n})\nexport class DocumentationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DocumentationService.html":{"url":"injectables/DocumentationService.html","title":"injectable - DocumentationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DocumentationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/documentation/src/documentation.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/documentation/src/documentation.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class DocumentationService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/EscrowController.html":{"url":"controllers/EscrowController.html","title":"controller - EscrowController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  EscrowController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/escrow/src/escrow.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/escrow/src/escrow.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { EscrowService } from './escrow.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { EscrowCommand } from '@qushah/common';\n\n@Controller()\nexport class EscrowController {\n  constructor(private readonly escrowService: EscrowService) {}\n\n  @MessagePattern({ cmd: EscrowCommand.PING_ESCROW })\n  getHello(): string {\n    return this.escrowService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EscrowModule.html":{"url":"modules/EscrowModule.html","title":"module - EscrowModule","body":"\n                   \n\n\n\n\n    Modules\n    EscrowModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EscrowModule\n\n\n\ncluster_EscrowModule_imports\n\n\n\ncluster_EscrowModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nEscrowModule\n\nEscrowModule\n\nEscrowModule -->\n\nCommonModule->EscrowModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nEscrowModule -->\n\nGraphQLMicroserviceModule->EscrowModule\n\n\n\n\n\nEscrowService\n\nEscrowService\n\nEscrowModule -->\n\nEscrowService->EscrowModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/escrow/src/escrow.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            EscrowService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            EscrowController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { EscrowController } from './escrow.controller';\nimport { EscrowService } from './escrow.service';\nimport { CommonModule, GraphQLMicroserviceModule } from '@qushah/common';\nimport { EscrowResolver } from './resolvers/escrow.resolver';\n\n@Module({\n  imports: [CommonModule, GraphQLMicroserviceModule],\n  controllers: [EscrowController],\n  providers: [EscrowService, EscrowResolver],\n})\nexport class EscrowModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EscrowResolver.html":{"url":"classes/EscrowResolver.html","title":"class - EscrowResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EscrowResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/escrow/src/resolvers/escrow.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingEscrow'})\n                \n            \n\n                    \n                        \n                            Defined in apps/escrow/src/resolvers/escrow.resolver.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\n\n@Resolver()\nexport class EscrowResolver {\n  @Query(() => String, { name: 'pingEscrow' })\n  ping(): string {\n    return 'pong';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EscrowService.html":{"url":"injectables/EscrowService.html","title":"injectable - EscrowService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EscrowService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/escrow/src/escrow.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/escrow/src/escrow.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class EscrowService {\n  getHello(): string {\n    return 'Hello from Escrow Service!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GatewayModule.html":{"url":"modules/GatewayModule.html","title":"module - GatewayModule","body":"\n                   \n\n\n\n\n    Modules\n    GatewayModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GatewayModule\n\n\n\ncluster_GatewayModule_imports\n\n\n\ncluster_GatewayModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nGatewayModule\n\nGatewayModule\n\nGatewayModule -->\n\nCommonModule->GatewayModule\n\n\n\n\n\nGraphQLGatewayModule\n\nGraphQLGatewayModule\n\nGatewayModule -->\n\nGraphQLGatewayModule->GatewayModule\n\n\n\n\n\nGatewayService\n\nGatewayService\n\nGatewayModule -->\n\nGatewayService->GatewayModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/gateway/src/gateway.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GatewayService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            GraphQLGatewayModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { GatewayService } from './gateway.service';\nimport {\n  CommonModule,\n  ENVIRONMENT,\n  GraphQLGatewayModule,\n} from '@qushah/common';\n\nconst {\n  AUTH_HOST,\n  ESCROW_HOST,\n  MEDIA_HOST,\n  NOTIFICATION_HOST,\n  ORGANIZATION_HOST,\n  PAYMENT_HOST,\n  PROPERTY_HOST,\n  USER_HOST,\n} = ENVIRONMENT;\n\n@Module({\n  imports: [\n    CommonModule,\n    GraphQLGatewayModule.register(\n      AUTH_HOST,\n      ESCROW_HOST,\n      MEDIA_HOST,\n      NOTIFICATION_HOST,\n      ORGANIZATION_HOST,\n      PAYMENT_HOST,\n      PROPERTY_HOST,\n      USER_HOST,\n    ),\n  ],\n  providers: [GatewayService],\n})\nexport class GatewayModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GatewayService.html":{"url":"injectables/GatewayService.html","title":"injectable - GatewayService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GatewayService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gateway/src/gateway.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gateway/src/gateway.service.ts:4\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ping\n                        \n                    \n                \n            \n            \n                \nping()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gateway/src/gateway.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class GatewayService {\n  constructor() {}\n\n  ping(): string {\n    return 'Hello from Gateway Service!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GraphQLGatewayModule.html":{"url":"modules/GraphQLGatewayModule.html","title":"module - GraphQLGatewayModule","body":"\n                   \n\n\n\n\n    Modules\n    GraphQLGatewayModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/graphql/graphql-gateway.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(...subgraphNames: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/graphql/graphql-gateway.module.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                subgraphNames\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, Global, DynamicModule } from '@nestjs/common';\nimport { GraphQLModule } from '@nestjs/graphql';\nimport { ApolloGatewayDriver, ApolloGatewayDriverConfig } from '@nestjs/apollo';\nimport { IntrospectAndCompose } from '@apollo/gateway';\nimport { SubgraphsBuilder } from '@qushah/common';\n\n@Global()\n@Module({})\nexport class GraphQLGatewayModule {\n  static async register(...subgraphNames: string[]): Promise {\n    return {\n      module: GraphQLGatewayModule,\n      imports: [\n        GraphQLModule.forRootAsync({\n          driver: ApolloGatewayDriver,\n          useFactory: async () => {\n            return {\n              gateway: {\n                supergraphSdl: new IntrospectAndCompose({\n                  subgraphs: await SubgraphsBuilder.build(...subgraphNames),\n                }),\n              },\n            };\n          },\n        }),\n      ],\n      exports: [GraphQLModule],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GraphQLMicroserviceModule.html":{"url":"modules/GraphQLMicroserviceModule.html","title":"module - GraphQLMicroserviceModule","body":"\n                   \n\n\n\n\n    Modules\n    GraphQLMicroserviceModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/graphql/graphql-microservice.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { GraphQLModule } from '@nestjs/graphql';\nimport {\n  ApolloFederationDriver,\n  ApolloFederationDriverConfig,\n} from '@nestjs/apollo';\n\n@Module({\n  imports: [\n    GraphQLModule.forRoot({\n      driver: ApolloFederationDriver,\n      autoSchemaFile: {\n        federation: 2,\n      },\n      sortSchema: true,\n    }),\n  ],\n})\nexport class GraphQLMicroserviceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MediaController.html":{"url":"controllers/MediaController.html","title":"controller - MediaController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MediaController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/media/src/media.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/media/src/media.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { MediaService } from './media.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { MediaCommand } from '@qushah/common';\n\n@Controller()\nexport class MediaController {\n  constructor(private readonly mediaService: MediaService) {}\n\n  @MessagePattern({ cmd: MediaCommand.PING_MEDIA })\n  getHello(): string {\n    return this.mediaService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MediaModule.html":{"url":"modules/MediaModule.html","title":"module - MediaModule","body":"\n                   \n\n\n\n\n    Modules\n    MediaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MediaModule\n\n\n\ncluster_MediaModule_imports\n\n\n\ncluster_MediaModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nMediaModule\n\nMediaModule\n\nMediaModule -->\n\nCommonModule->MediaModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nMediaModule -->\n\nGraphQLMicroserviceModule->MediaModule\n\n\n\n\n\nMediaService\n\nMediaService\n\nMediaModule -->\n\nMediaService->MediaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/media/src/media.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MediaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MediaController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MediaController } from './media.controller';\nimport { MediaService } from './media.service';\nimport { CommonModule, GraphQLMicroserviceModule } from '@qushah/common';\nimport { MediaResolver } from './resolvers/media.resolver';\n\n@Module({\n  imports: [CommonModule, GraphQLMicroserviceModule],\n  controllers: [MediaController],\n  providers: [MediaService, MediaResolver],\n})\nexport class MediaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MediaResolver.html":{"url":"classes/MediaResolver.html","title":"class - MediaResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MediaResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/media/src/resolvers/media.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingMedia'})\n                \n            \n\n                    \n                        \n                            Defined in apps/media/src/resolvers/media.resolver.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\n\n@Resolver()\nexport class MediaResolver {\n  @Query(() => String, { name: 'pingMedia' })\n  ping(): string {\n    return 'pong';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MediaService.html":{"url":"injectables/MediaService.html","title":"injectable - MediaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MediaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/media/src/media.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/media/src/media.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class MediaService {\n  getHello(): string {\n    return 'Hello from Media Service!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/NotificationController.html":{"url":"controllers/NotificationController.html","title":"controller - NotificationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  NotificationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/notification/src/notification.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/notification/src/notification.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { NotificationService } from './notification.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { NotificationCommand } from '@qushah/common';\n\n@Controller()\nexport class NotificationController {\n  constructor(private readonly notificationService: NotificationService) {}\n\n  @MessagePattern({ cmd: NotificationCommand.PING_NOTIFICATION })\n  getHello(): string {\n    return this.notificationService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NotificationModule.html":{"url":"modules/NotificationModule.html","title":"module - NotificationModule","body":"\n                   \n\n\n\n\n    Modules\n    NotificationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NotificationModule\n\n\n\ncluster_NotificationModule_providers\n\n\n\ncluster_NotificationModule_imports\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nNotificationModule\n\nNotificationModule\n\nNotificationModule -->\n\nCommonModule->NotificationModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nNotificationModule -->\n\nGraphQLMicroserviceModule->NotificationModule\n\n\n\n\n\nNotificationService\n\nNotificationService\n\nNotificationModule -->\n\nNotificationService->NotificationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/notification/src/notification.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NotificationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            NotificationController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { NotificationController } from './notification.controller';\nimport { NotificationService } from './notification.service';\nimport { CommonModule, GraphQLMicroserviceModule } from '@qushah/common';\nimport { NotificationResolver } from './resolvers/notification.resolver';\n\n@Module({\n  imports: [CommonModule, GraphQLMicroserviceModule],\n  controllers: [NotificationController],\n  providers: [NotificationService, NotificationResolver],\n})\nexport class NotificationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotificationResolver.html":{"url":"classes/NotificationResolver.html","title":"class - NotificationResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotificationResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/notification/src/resolvers/notification.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingNotification'})\n                \n            \n\n                    \n                        \n                            Defined in apps/notification/src/resolvers/notification.resolver.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\n\n@Resolver()\nexport class NotificationResolver {\n  @Query(() => String, { name: 'pingNotification' })\n  ping(): string {\n    return 'pong';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationService.html":{"url":"injectables/NotificationService.html","title":"injectable - NotificationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NotificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/notification/src/notification.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/notification/src/notification.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class NotificationService {\n  getHello(): string {\n    return 'Hello from Notification Service!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Organization.html":{"url":"entities/Organization.html","title":"entity - Organization","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Organization\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/organization/src/entities/organization.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                meta\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                primaryContactName\n                            \n                            \n                                    \n                                    \n                                slug\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrganizationMetadata\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@OneToOne(undefined, meta => meta.organization)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        primaryContactName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column({name: 'primary_contact_name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization.entity.ts:16\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql';\nimport { Column, Entity, OneToOne } from 'typeorm';\nimport { BaseEntity, GraphQLFederationDirective } from '@qushah/common';\nimport { OrganizationMetadata } from './organization-metadata.entity';\n\n@ObjectType()\n@Entity({ name: 'organizations' })\n@GraphQLFederationDirective('@key(fields: \"id\")')\nexport class Organization extends BaseEntity {\n  @Field(() => String)\n  @Column({ unique: true })\n  name: string;\n\n  @Field(() => String)\n  @Column({ unique: true })\n  slug: string;\n\n  @Field(() => String)\n  @Column({ name: 'primary_contact_name' })\n  primaryContactName: string;\n\n  @Field(() => String)\n  @Column()\n  email: string;\n\n  @Field(() => String)\n  @Column()\n  phone: string;\n\n  @Field(() => OrganizationMetadata, { nullable: true })\n  @OneToOne(() => OrganizationMetadata, (meta) => meta.organization)\n  meta?: OrganizationMetadata;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Organization-1.html":{"url":"classes/Organization-1.html","title":"class - Organization-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Organization\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user/src/entities/external/organization.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Directive('@external')\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/entities/external/organization.entity.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive, Field, ObjectType } from '@nestjs/graphql';\nimport { GraphQLFederationDirective } from '@qushah/common';\n\n@ObjectType()\n@GraphQLFederationDirective('@extends') // Extending from Organization Microservice\n@GraphQLFederationDirective('@key(fields: \"id\")') // Federation key\nexport class Organization {\n  @Field(() => String)\n  @Directive('@external') // This field is managed by Organization Microservice\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrganizationController.html":{"url":"controllers/OrganizationController.html","title":"controller - OrganizationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrganizationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/organization/src/organization.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                findOneById\n                            \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/organization/src/organization.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/organization/src/organization.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { OrganizationService } from './organization.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { OrganizationCommand } from '@qushah/common/constants/commands/organization.command';\n\n@Controller()\nexport class OrganizationController {\n  constructor(private readonly organizationService: OrganizationService) {}\n\n  @MessagePattern({ cmd: OrganizationCommand.PING_ORGANIZATION })\n  getHello(): string {\n    return this.organizationService.getHello();\n  }\n\n  @MessagePattern({ cmd: OrganizationCommand.FIND_ORGANIZATION_BY_ID })\n  findOneById(id: string) {\n    return this.organizationService.findOne({ id });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/OrganizationMetadata.html":{"url":"entities/OrganizationMetadata.html","title":"entity - OrganizationMetadata","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  OrganizationMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/organization/src/entities/organization-metadata.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                allowInterestEarning\n                            \n                            \n                                    \n                                    \n                                depositFeePercentage\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                domain\n                            \n                            \n                                    \n                                    \n                                logo\n                            \n                            \n                                    \n                                    \n                                organization\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                primaryColor\n                            \n                            \n                                    \n                                    \n                                rentFeePercentage\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        allowInterestEarning\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column({name: 'allow_interest_earning', type: 'boolean', default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization-metadata.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        depositFeePercentage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column({name: 'deposit_fee_percentage', default: 5, precision: 5, scale: 2, type: 'decimal'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization-metadata.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        domain\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization-metadata.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization-metadata.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        organization\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Organization\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, organization => organization.meta, {cascade: true, onDelete: 'CASCADE', onUpdate: 'CASCADE'})@JoinColumn({name: 'organization_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization-metadata.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        primaryColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Column({name: 'primary_color', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization-metadata.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        rentFeePercentage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column({name: 'rent_fee_percentage', default: 5, precision: 5, scale: 2, type: 'decimal'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization-metadata.entity.ts:38\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, OneToOne } from 'typeorm';\nimport { Field, Float, ObjectType } from '@nestjs/graphql';\nimport { BaseEntity } from '@qushah/common';\nimport { JoinColumn } from 'typeorm';\nimport { Organization } from './organization.entity';\n\n@ObjectType()\n@Entity({ name: 'organizations_metadata' })\nexport class OrganizationMetadata extends BaseEntity {\n  @OneToOne(() => Organization, (organization) => organization.meta, {\n    cascade: true,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n  })\n  @JoinColumn({ name: 'organization_id' })\n  organization: Organization;\n\n  @Field(() => String, { nullable: true })\n  @Column({ name: 'primary_color', nullable: true })\n  primaryColor?: string;\n\n  @Field(() => String, { nullable: true })\n  @Column({ nullable: true })\n  domain?: string;\n\n  @Field(() => String)\n  @Column()\n  logo: string;\n\n  @Field(() => Float)\n  @Column({\n    name: 'rent_fee_percentage',\n    default: 5.0,\n    precision: 5,\n    scale: 2,\n    type: 'decimal',\n  })\n  rentFeePercentage: number;\n\n  @Field(() => Float)\n  @Column({\n    name: 'deposit_fee_percentage',\n    default: 5.0,\n    precision: 5,\n    scale: 2,\n    type: 'decimal',\n  })\n  depositFeePercentage: number;\n\n  @Field(() => Boolean)\n  @Column({ name: 'allow_interest_earning', type: 'boolean', default: false })\n  allowInterestEarning: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrganizationModule.html":{"url":"modules/OrganizationModule.html","title":"module - OrganizationModule","body":"\n                   \n\n\n\n\n    Modules\n    OrganizationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OrganizationModule\n\n\n\ncluster_OrganizationModule_providers\n\n\n\ncluster_OrganizationModule_imports\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nOrganizationModule\n\nOrganizationModule\n\nOrganizationModule -->\n\nCommonModule->OrganizationModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nOrganizationModule -->\n\nDatabaseModule->OrganizationModule\n\n\n\nOrganizationModule -->\n\nDatabaseModule->OrganizationModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nOrganizationModule -->\n\nGraphQLMicroserviceModule->OrganizationModule\n\n\n\n\n\nOrganizationService\n\nOrganizationService\n\nOrganizationModule -->\n\nOrganizationService->OrganizationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/organization/src/organization.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrganizationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrganizationController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { OrganizationController } from './organization.controller';\nimport { OrganizationService } from './organization.service';\nimport {\n  CommonModule,\n  DatabaseModule,\n  GraphQLMicroserviceModule,\n  SCHEMA,\n} from '@qushah/common';\nimport { OrganizationResolver } from './resolvers/organization.resolver';\nimport { Organization } from './entities/organization.entity';\nimport { OrganizationMetadata } from './entities/organization-metadata.entity';\n\n@Module({\n  imports: [\n    DatabaseModule.init(SCHEMA.ORGANIZATION),\n    DatabaseModule.loadEntities([Organization, OrganizationMetadata]),\n    CommonModule,\n    GraphQLMicroserviceModule,\n  ],\n  controllers: [OrganizationController],\n  providers: [OrganizationService, OrganizationResolver],\n})\nexport class OrganizationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrganizationResolver.html":{"url":"classes/OrganizationResolver.html","title":"class - OrganizationResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrganizationResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/organization/src/resolvers/organization.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                organizations\n                            \n                            \n                                    \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(organizationService: OrganizationService)\n                    \n                \n                        \n                            \n                                Defined in apps/organization/src/resolvers/organization.resolver.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationService\n                                                  \n                                                        \n                                                                        OrganizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        organizations\n                        \n                    \n                \n            \n            \n                \n                        \n                    organizations()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: true})\n                \n            \n\n                    \n                        \n                            Defined in apps/organization/src/resolvers/organization.resolver.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingOrganization'})\n                \n            \n\n                    \n                        \n                            Defined in apps/organization/src/resolvers/organization.resolver.ts:10\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\nimport { Organization } from '../entities/organization.entity';\nimport { OrganizationService } from '../organization.service';\n\n@Resolver()\nexport class OrganizationResolver {\n  constructor(private readonly organizationService: OrganizationService) {}\n\n  @Query(() => String, { name: 'pingOrganization' })\n  ping(): string {\n    return 'pong';\n  }\n\n  @Query(() => [Organization], { nullable: true })\n  organizations(): Promise {\n    return this.organizationService.findAll();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrganizationService.html":{"url":"injectables/OrganizationService.html","title":"injectable - OrganizationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrganizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/organization/src/organization.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: Repository)\n                    \n                \n                        \n                            \n                                Defined in apps/organization/src/organization.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/organization/src/organization.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(where: FindOptionsWhere)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/organization/src/organization.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                where\n                                            \n                                                            FindOptionsWhere\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/organization/src/organization.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { Organization } from './entities/organization.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { FindOptionsWhere } from 'typeorm/find-options/FindOptionsWhere';\n\n@Injectable()\nexport class OrganizationService {\n  constructor(\n    @InjectRepository(Organization)\n    private readonly repository: Repository,\n  ) {}\n\n  getHello(): string {\n    return 'Hello from Organization Service!';\n  }\n\n  findAll(): Promise {\n    return this.repository.find({\n      relations: ['meta'],\n    });\n  }\n\n  findOne(where: FindOptionsWhere) {\n    return this.repository.findOne({ where });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PaymentController.html":{"url":"controllers/PaymentController.html","title":"controller - PaymentController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PaymentController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/payment/src/payment.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/payment/src/payment.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { PaymentService } from './payment.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { PaymentCommand } from '@qushah/common';\n\n@Controller()\nexport class PaymentController {\n  constructor(private readonly paymentService: PaymentService) {}\n\n  @MessagePattern({ cmd: PaymentCommand.PING_PAYMENT })\n  getHello(): string {\n    return this.paymentService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PaymentModule.html":{"url":"modules/PaymentModule.html","title":"module - PaymentModule","body":"\n                   \n\n\n\n\n    Modules\n    PaymentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PaymentModule\n\n\n\ncluster_PaymentModule_providers\n\n\n\ncluster_PaymentModule_imports\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nPaymentModule\n\nPaymentModule\n\nPaymentModule -->\n\nCommonModule->PaymentModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nPaymentModule -->\n\nGraphQLMicroserviceModule->PaymentModule\n\n\n\n\n\nPaymentService\n\nPaymentService\n\nPaymentModule -->\n\nPaymentService->PaymentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/payment/src/payment.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PaymentService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PaymentController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PaymentController } from './payment.controller';\nimport { PaymentService } from './payment.service';\nimport { CommonModule, GraphQLMicroserviceModule } from '@qushah/common';\nimport { PaymentResolver } from './resolvers/payment.resolver';\n\n@Module({\n  imports: [CommonModule, GraphQLMicroserviceModule],\n  controllers: [PaymentController],\n  providers: [PaymentService, PaymentResolver],\n})\nexport class PaymentModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaymentResolver.html":{"url":"classes/PaymentResolver.html","title":"class - PaymentResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaymentResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/payment/src/resolvers/payment.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingPayment'})\n                \n            \n\n                    \n                        \n                            Defined in apps/payment/src/resolvers/payment.resolver.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\n\n@Resolver()\nexport class PaymentResolver {\n  @Query(() => String, { name: 'pingPayment' })\n  ping(): string {\n    return 'pong';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PaymentService.html":{"url":"injectables/PaymentService.html","title":"injectable - PaymentService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PaymentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/payment/src/payment.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/payment/src/payment.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class PaymentService {\n  getHello(): string {\n    return 'Hello from Payment Service!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PropertyController.html":{"url":"controllers/PropertyController.html","title":"controller - PropertyController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PropertyController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/property/src/property.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/property/src/property.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { PropertyService } from './property.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { PropertyCommand } from '@qushah/common';\n\n@Controller()\nexport class PropertyController {\n  constructor(private readonly propertyService: PropertyService) {}\n\n  @MessagePattern({ cmd: PropertyCommand.PING_PROPERTY })\n  getHello(): string {\n    return this.propertyService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PropertyModule.html":{"url":"modules/PropertyModule.html","title":"module - PropertyModule","body":"\n                   \n\n\n\n\n    Modules\n    PropertyModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PropertyModule\n\n\n\ncluster_PropertyModule_imports\n\n\n\ncluster_PropertyModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nPropertyModule\n\nPropertyModule\n\nPropertyModule -->\n\nCommonModule->PropertyModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nPropertyModule -->\n\nGraphQLMicroserviceModule->PropertyModule\n\n\n\n\n\nPropertyService\n\nPropertyService\n\nPropertyModule -->\n\nPropertyService->PropertyModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/property/src/property.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PropertyService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PropertyController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PropertyController } from './property.controller';\nimport { PropertyService } from './property.service';\nimport { CommonModule, GraphQLMicroserviceModule } from '@qushah/common';\nimport { PropertyResolver } from './resolvers/property.resolver';\n\n@Module({\n  imports: [CommonModule, GraphQLMicroserviceModule],\n  controllers: [PropertyController],\n  providers: [PropertyService, PropertyResolver],\n})\nexport class PropertyModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PropertyResolver.html":{"url":"classes/PropertyResolver.html","title":"class - PropertyResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PropertyResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/property/src/resolvers/property.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingProperty'})\n                \n            \n\n                    \n                        \n                            Defined in apps/property/src/resolvers/property.resolver.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\n\n@Resolver()\nexport class PropertyResolver {\n  @Query(() => String, { name: 'pingProperty' })\n  ping(): string {\n    return 'pong';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PropertyService.html":{"url":"injectables/PropertyService.html","title":"injectable - PropertyService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PropertyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/property/src/property.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/property/src/property.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class PropertyService {\n  getHello(): string {\n    return 'Hello from Property Service!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Role.html":{"url":"entities/Role.html","title":"entity - Role","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user/src/entities/role.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/entities/role.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@PrimaryColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/entities/role.entity.ts:9\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql';\nimport { BaseEntity, Column, Entity, PrimaryColumn } from 'typeorm';\n\n@ObjectType()\n@Entity({ name: 'roles' })\nexport class Role extends BaseEntity {\n  @Field(() => String)\n  @PrimaryColumn()\n  name: string;\n\n  @Field(() => String, { nullable: true })\n  @Column({ nullable: true })\n  description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SeederModule.html":{"url":"modules/SeederModule.html","title":"module - SeederModule","body":"\n                   \n\n\n\n\n    Modules\n    SeederModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SeederModule\n\n\n\ncluster_SeederModule_exports\n\n\n\ncluster_SeederModule_providers\n\n\n\n\nSeederService \n\nSeederService \n\n\n\nSeederModule\n\nSeederModule\n\nSeederService  -->\n\nSeederModule->SeederService \n\n\n\n\n\nSeederService\n\nSeederService\n\nSeederModule -->\n\nSeederService->SeederModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/user/src/seeder/seeder.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SeederService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SeederService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { SeederService } from './seeder.service';\nimport { Role } from '../entities/role.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Role])],\n  providers: [SeederService],\n  exports: [SeederService],\n})\nexport class SeederModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SeederService.html":{"url":"injectables/SeederService.html","title":"injectable - SeederService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SeederService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user/src/seeder/seeder.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                seed\n                            \n                            \n                                    Private\n                                    Async\n                                seedRoles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in apps/user/src/seeder/seeder.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        seed\n                        \n                    \n                \n            \n            \n                \n                        \n                    seed()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/user/src/seeder/seeder.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        seedRoles\n                        \n                    \n                \n            \n            \n                \n                        \n                    seedRoles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/user/src/seeder/seeder.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Role } from '../entities/role.entity';\nimport { Roles } from '@qushah/common';\n\n@Injectable()\nexport class SeederService {\n  constructor(\n    @InjectRepository(Role) private roleRepository: Repository,\n  ) {}\n\n  async seed() {\n    await this.seedRoles();\n    console.log('✅ Database seeding completed.');\n  }\n\n  private async seedRoles() {\n    const roles = Object.values(Roles);\n    for (const roleName of roles) {\n      const roleExists = await this.roleRepository.findOne({\n        where: { name: roleName },\n      });\n      if (!roleExists) {\n        await this.roleRepository.save(\n          this.roleRepository.create({ name: roleName }),\n        );\n        console.log(`Inserted Role: ${roleName}`);\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SubgraphsBuilder.html":{"url":"classes/SubgraphsBuilder.html","title":"class - SubgraphsBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SubgraphsBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/utils/subgraphs-builder.util.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Async\n                                build\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        build\n                        \n                    \n                \n            \n            \n                \n                        \n                    build(...graphNames: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/utils/subgraphs-builder.util.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                graphNames\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ServiceEndpointDefinition } from '@apollo/gateway/src/config';\nimport { ConfigHelper } from '@qushah/common';\n\nexport class SubgraphsBuilder {\n  static async build(\n    ...graphNames: string[]\n  ): Promise {\n    const configHelper = await ConfigHelper.getInstance();\n\n    return graphNames.map((graphName) => {\n      const keyPart = graphName?.split('_HOST')?.[0];\n      const key = keyPart || graphName;\n      const { host, port } = configHelper.getMicroServiceHosts(key);\n      return {\n        name: graphName,\n        url: `${host}:${port}/graphql`,\n      };\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user/src/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                    \n                                lastName\n                            \n                            \n                                    \n                                    Optional\n                                organization\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                organizationId\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/entities/user.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/entities/user.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/entities/user.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        organization\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Organization\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/entities/user.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        organizationId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Column({name: 'organization_id', type: 'uuid', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/entities/user.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/entities/user.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/entities/user.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@ManyToOne(undefined)@JoinColumn({name: 'role_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/entities/user.entity.ts:40\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql';\nimport { Column, Entity, JoinColumn, ManyToOne } from 'typeorm';\nimport { BaseEntity, GraphQLFederationDirective } from '@qushah/common';\nimport { Role } from './role.entity';\nimport { Organization } from './external/organization.entity';\n\n/*\n TODO: Add userType - Individual & Business. \n  Make firstName, lastName nullable, add name field.\n  Add check in migration file to ensure firstName, lastName is\n  not null when user type is individual, and name is not null type is business.\n  Write a hook to join firstName, lastName before saving for individuals.\n*/\n@ObjectType()\n@Entity({ name: 'users' })\n@GraphQLFederationDirective('@key(fields: \"id\")')\nexport class User extends BaseEntity {\n  @Field(() => String)\n  @Column()\n  firstName: string;\n\n  @Field(() => String)\n  @Column()\n  lastName: string;\n\n  @Field(() => String)\n  @Column()\n  email: string;\n\n  @Column()\n  password: string;\n\n  @Field(() => String)\n  @Column()\n  phone: string;\n\n  @Field(() => Role)\n  @ManyToOne(() => Role)\n  @JoinColumn({ name: 'role_id' })\n  role: Role;\n\n  @Field(() => String, { nullable: true })\n  @Column({ name: 'organization_id', type: 'uuid', nullable: true })\n  organizationId?: string;\n\n  @Field(() => [Organization], { nullable: true })\n  organization?: Organization;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User-1.html":{"url":"classes/User-1.html","title":"class - User-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/organization/src/entities/external/user.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                organization\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                organizationId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/external/user.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        organization\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Organization\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Directive('@requires(fields: \"organizationId\")')\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/external/user.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        organizationId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Directive('@external')\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/external/user.entity.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive, Field, ObjectType } from '@nestjs/graphql';\nimport { Organization } from '../organization.entity';\nimport { GraphQLFederationDirective } from '@qushah/common';\n\n@ObjectType()\n@GraphQLFederationDirective('@extends') // 🚀 Extending User from User microservice\n@GraphQLFederationDirective('@key(fields: \"id\")') // Federated entity\nexport class User {\n  @Field(() => String)\n  id: string;\n\n  @Field(() => String, { nullable: true })\n  @Directive('@external') // organizationId is stored in User service\n  organizationId?: string;\n\n  @Field(() => Organization, { nullable: true })\n  @Directive('@requires(fields: \"organizationId\")') // Requires orgId to fetch org\n  organization?: Organization;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user/src/user.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/user/src/user.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { UserCommand } from '@qushah/common';\n\n@Controller()\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @MessagePattern({ cmd: UserCommand.PING_USER })\n  getHello(): string {\n    return this.userService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nClientsModule\n\nClientsModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nClientsModule->UserModule\n\n\n\n\n\nCommonModule\n\nCommonModule\n\nUserModule -->\n\nCommonModule->UserModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nUserModule -->\n\nDatabaseModule->UserModule\n\n\n\nUserModule -->\n\nDatabaseModule->UserModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nUserModule -->\n\nGraphQLMicroserviceModule->UserModule\n\n\n\n\n\nSeederModule\n\nSeederModule\n\nUserModule -->\n\nSeederModule->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/user/src/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ClientsModule\n                        \n                        \n                            CommonModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                        \n                            SeederModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserController } from './user.controller';\nimport { UserService } from './user.service';\nimport {\n  ClientsModule,\n  CommonModule,\n  DatabaseModule,\n  GraphQLMicroserviceModule,\n  MicroServiceClient,\n  SCHEMA,\n} from '@qushah/common';\nimport { UserResolver } from './resolvers/user.resolver';\nimport { User } from './entities/user.entity';\nimport { Role } from './entities/role.entity';\nimport { SeederModule } from './seeder/seeder.module';\n\n@Module({\n  imports: [\n    CommonModule,\n    GraphQLMicroserviceModule,\n    DatabaseModule.init(SCHEMA.USER),\n    DatabaseModule.loadEntities([User, Role]),\n    ClientsModule.register(MicroServiceClient.ORGANIZATION_CLIENT),\n    SeederModule,\n  ],\n  controllers: [UserController],\n  providers: [UserService, UserResolver],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserResolver.html":{"url":"classes/UserResolver.html","title":"class - UserResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user/src/resolvers/user.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createUser\n                            \n                            \n                                    \n                                ping\n                            \n                            \n                                    \n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in apps/user/src/resolvers/user.resolver.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(input: CreateUserInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)\n                \n            \n\n                    \n                        \n                            Defined in apps/user/src/resolvers/user.resolver.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            CreateUserInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingUser'})\n                \n            \n\n                    \n                        \n                            Defined in apps/user/src/resolvers/user.resolver.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        users\n                        \n                    \n                \n            \n            \n                \n                        \n                    users()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: true})\n                \n            \n\n                    \n                        \n                            Defined in apps/user/src/resolvers/user.resolver.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Args, Mutation, Query, Resolver } from '@nestjs/graphql';\nimport { User } from '../entities/user.entity';\nimport { UserService } from '../user.service';\nimport { CreateUserInput } from '../dtos/create-user.input';\n\n@Resolver(User)\nexport class UserResolver {\n  constructor(private readonly userService: UserService) {}\n\n  @Query(() => String, { name: 'pingUser' })\n  ping(): string {\n    return 'pong';\n  }\n\n  @Query(() => [User], { nullable: true })\n  users(): Promise {\n    return this.userService.find();\n  }\n\n  @Mutation(() => User)\n  createUser(@Args() input: CreateUserInput): Promise {\n    return this.userService.create(input);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserResolver-1.html":{"url":"classes/UserResolver-1.html","title":"class - UserResolver-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/organization/src/resolvers/external/user.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                organization\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(organizationService: OrganizationService)\n                    \n                \n                        \n                            \n                                Defined in apps/organization/src/resolvers/external/user.resolver.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationService\n                                                  \n                                                        \n                                                                        OrganizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        organization\n                        \n                    \n                \n            \n            \n                \n                        \n                    organization(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResolveField(undefined, {nullable: true})\n                \n            \n\n                    \n                        \n                            Defined in apps/organization/src/resolvers/external/user.resolver.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Parent, ResolveField, Resolver } from '@nestjs/graphql';\nimport { User } from '../../entities/external/user.entity';\nimport { Organization } from '../../entities/organization.entity';\nimport { OrganizationService } from '../../organization.service';\n\n@Resolver(() => User)\nexport class UserResolver {\n  constructor(private readonly organizationService: OrganizationService) {}\n\n  @ResolveField(() => Organization, { nullable: true })\n  async organization(@Parent() user: User): Promise {\n    if (!user.organizationId) return null;\n    return this.organizationService.findOne({ id: user.organizationId });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user/src/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                find\n                            \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(organizationClient: ClientProxy, repository: Repository)\n                    \n                \n                        \n                            \n                                Defined in apps/user/src/user.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationClient\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(input: CreateUserInput)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/user/src/user.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            CreateUserInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \nfind()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/user/src/user.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/user/src/user.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { User } from './entities/user.entity';\nimport { MicroServiceClient } from '@qushah/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CreateUserInput } from './dtos/create-user.input';\n\n@Injectable()\nexport class UserService {\n  constructor(\n    @Inject(MicroServiceClient.ORGANIZATION_CLIENT)\n    private readonly organizationClient: ClientProxy,\n    @InjectRepository(User)\n    private readonly repository: Repository,\n  ) {}\n\n  getHello(): string {\n    return 'Hello from User Service!';\n  }\n\n  find(): Promise {\n    return this.repository.find();\n  }\n\n  create(input: CreateUserInput): Promise {\n    // TODO: Hash password\n    return this.repository.save(input);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/auth/src/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/auth/src/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/auth/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/auth/src/resolvers/auth.resolver.ts\n            \n            class\n            AuthResolver\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/documentation/src/documentation.controller.ts\n            \n            controller\n            DocumentationController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/documentation/src/documentation.service.ts\n            \n            injectable\n            DocumentationService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/documentation/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/escrow/src/escrow.controller.ts\n            \n            controller\n            EscrowController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/escrow/src/escrow.service.ts\n            \n            injectable\n            EscrowService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/escrow/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/escrow/src/resolvers/escrow.resolver.ts\n            \n            class\n            EscrowResolver\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/escrow/src/typeorm.data-source.ts\n            \n            variable\n            TypeormDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/gateway/src/gateway.module.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/gateway/src/gateway.service.ts\n            \n            injectable\n            GatewayService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        apps/gateway/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/media/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/media/src/media.controller.ts\n            \n            controller\n            MediaController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/media/src/media.service.ts\n            \n            injectable\n            MediaService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/media/src/resolvers/media.resolver.ts\n            \n            class\n            MediaResolver\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/media/src/typeorm.data-source.ts\n            \n            variable\n            TypeormDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/notification/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/notification/src/notification.controller.ts\n            \n            controller\n            NotificationController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/notification/src/notification.service.ts\n            \n            injectable\n            NotificationService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/notification/src/resolvers/notification.resolver.ts\n            \n            class\n            NotificationResolver\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/notification/src/typeorm.data-source.ts\n            \n            variable\n            TypeormDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/organization/src/entities/external/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/organization/src/entities/organization-metadata.entity.ts\n            \n            entity\n            OrganizationMetadata\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/organization/src/entities/organization-metadata.entity.ts\n            \n            class\n            OrganizationMetadata\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/organization/src/entities/organization.entity.ts\n            \n            entity\n            Organization\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/organization/src/entities/organization.entity.ts\n            \n            class\n            Organization\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        apps/organization/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/organization/src/migrations/1741518145374-CreateOrganizationAndMetaTable.ts\n            \n            class\n            CreateOrganizationAndMetaTable1741518145374\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/organization/src/organization.controller.ts\n            \n            controller\n            OrganizationController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/organization/src/organization.service.ts\n            \n            injectable\n            OrganizationService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/organization/src/resolvers/external/user.resolver.ts\n            \n            class\n            UserResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/organization/src/resolvers/organization.resolver.ts\n            \n            class\n            OrganizationResolver\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        apps/organization/src/typeorm.data-source.ts\n            \n            variable\n            TypeormDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/payment/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/payment/src/payment.controller.ts\n            \n            controller\n            PaymentController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/payment/src/payment.service.ts\n            \n            injectable\n            PaymentService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/payment/src/resolvers/payment.resolver.ts\n            \n            class\n            PaymentResolver\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/payment/src/typeorm.data-source.ts\n            \n            variable\n            TypeormDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/property/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/property/src/property.controller.ts\n            \n            controller\n            PropertyController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/property/src/property.service.ts\n            \n            injectable\n            PropertyService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/property/src/resolvers/property.resolver.ts\n            \n            class\n            PropertyResolver\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/property/src/typeorm.data-source.ts\n            \n            variable\n            TypeormDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/user/src/dtos/create-user.input.ts\n            \n            class\n            CreateUserInput\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/user/src/entities/external/organization.entity.ts\n            \n            class\n            Organization\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/user/src/entities/role.entity.ts\n            \n            entity\n            Role\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/user/src/entities/role.entity.ts\n            \n            class\n            Role\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/user/src/entities/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/user/src/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                        apps/user/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/user/src/migrations/1741519642145-CreateRoleTable.ts\n            \n            class\n            CreateRoleTable1741519642145\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/user/src/migrations/1741519705062-CreateUserTable.ts\n            \n            class\n            CreateUserTable1741519705062\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/user/src/resolvers/user.resolver.ts\n            \n            class\n            UserResolver\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/user/src/seeder/seeder.service.ts\n            \n            injectable\n            SeederService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        apps/user/src/seeder/seeder.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/user/src/typeorm.data-source.ts\n            \n            variable\n            TypeormDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/user/src/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/user/src/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                libs/common/src/common.service.ts\n            \n            injectable\n            CommonService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/config/config.helper.ts\n            \n            class\n            ConfigHelper\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                libs/common/src/config/config.service.ts\n            \n            injectable\n            AppConfigService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/auth.command.ts\n            \n            variable\n            AuthCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/escrow.command.ts\n            \n            variable\n            EscrowCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/media.command.ts\n            \n            variable\n            MediaCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/notification.command.ts\n            \n            variable\n            NotificationCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/organization.command.ts\n            \n            variable\n            OrganizationCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/payment.command.ts\n            \n            variable\n            PaymentCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/property.command.ts\n            \n            variable\n            PropertyCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/user.command.ts\n            \n            variable\n            UserCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/environment.constant.ts\n            \n            variable\n            ENVIRONMENT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/schema.constant.ts\n            \n            variable\n            SCHEMA\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/database/entities/base.entity.ts\n            \n            entity\n            BaseEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/database/entities/base.entity.ts\n            \n            class\n            BaseEntity\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        libs/common/src/decorators/column-order.decorator.ts\n            \n            function\n            ColumnOrder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/decorators/column-order.decorator.ts\n            \n            function\n            getColumnOrder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/decorators/column-order.decorator.ts\n            \n            variable\n            ORDER_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/decorators/graphql-federation-directive.decorator.ts\n            \n            function\n            GraphQLFederationDirective\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/decorators/graphql-federation-directive.decorator.ts\n            \n            variable\n            isDocEnv\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/utils/bootstrapper.util.ts\n            \n            class\n            Bootstrapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/common/src/utils/data-source.util.ts\n            \n            class\n            DataSource\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/common/src/utils/database.util.ts\n            \n            class\n            DatabaseUtil\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/common/src/utils/subgraphs-builder.util.ts\n            \n            class\n            SubgraphsBuilder\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        typeorm-cli.ts\n            \n            variable\n            argv\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        typeorm-cli.ts\n            \n            variable\n            dataSourcePath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        typeorm-cli.ts\n            \n            variable\n            typeormCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        typeorm-cli.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @apollo/gateway : ^2.9.3\n        \n            @apollo/server : ^4.11.3\n        \n            @apollo/subgraph : ^2.9.3\n        \n            @nestjs/apollo : ^12.2.2\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.3.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/graphql : ^12.2.2\n        \n            @nestjs/microservices : ^10.4.15\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/typeorm : ^11.0.0\n        \n            @types/yargs : ^17.0.33\n        \n            dotenv : ^16.4.7\n        \n            graphql : ^16.10.0\n        \n            ioredis : ^5.4.2\n        \n            joi : ^17.13.3\n        \n            pg : ^8.13.1\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.20\n        \n            yargs : ^17.7.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            MicroServiceClient   (libs/.../micro-service-client.enum.ts)\n                        \n                        \n                            Roles   (libs/.../roles.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/common/src/enums/micro-service-client.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        MicroServiceClient\n                    \n                \n                        \n                            \n                                 AUTH_CLIENT\n                            \n                        \n                        \n                            \n                                Value : AUTH_CLIENT\n                            \n                        \n                        \n                            \n                                 ESCROW_CLIENT\n                            \n                        \n                        \n                            \n                                Value : ESCROW_CLIENT\n                            \n                        \n                        \n                            \n                                 MEDIA_CLIENT\n                            \n                        \n                        \n                            \n                                Value : MEDIA_CLIENT\n                            \n                        \n                        \n                            \n                                 NOTIFICATION_CLIENT\n                            \n                        \n                        \n                            \n                                Value : NOTIFICATION_CLIENT\n                            \n                        \n                        \n                            \n                                 ORGANIZATION_CLIENT\n                            \n                        \n                        \n                            \n                                Value : ORGANIZATION_CLIENT\n                            \n                        \n                        \n                            \n                                 PAYMENT_CLIENT\n                            \n                        \n                        \n                            \n                                Value : PAYMENT_CLIENT\n                            \n                        \n                        \n                            \n                                 PROPERTY_CLIENT\n                            \n                        \n                        \n                            \n                                Value : PROPERTY_CLIENT\n                            \n                        \n                        \n                            \n                                 USER_CLIENT\n                            \n                        \n                        \n                            \n                                Value : USER_CLIENT\n                            \n                        \n            \n        \n\n    libs/common/src/enums/roles.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Roles\n                    \n                \n                        \n                            \n                                 SUPER_ADMIN\n                            \n                        \n                        \n                            \n                                Value : SUPER_ADMIN\n                            \n                        \n                        \n                            \n                                 OWNER\n                            \n                        \n                        \n                            \n                                Value : OWNER\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : ADMIN\n                            \n                        \n                        \n                            \n                                 MEMBER\n                            \n                        \n                        \n                            \n                                Value : MEMBER\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../seeder.ts)\n                        \n                        \n                            ColumnOrder   (libs/.../column-order.decorator.ts)\n                        \n                        \n                            getColumnOrder   (libs/.../column-order.decorator.ts)\n                        \n                        \n                            GraphQLFederationDirective   (libs/.../graphql-federation-directive.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/auth/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/documentation/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/escrow/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/gateway/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/media/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/notification/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/organization/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/payment/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/property/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/user/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/user/src/seeder/seeder.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    libs/common/src/decorators/column-order.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ColumnOrder\n                        \n                    \n                \n            \n            \n                \nColumnOrder(value: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     PropertyDecorator\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getColumnOrder\n                        \n                    \n                \n            \n            \n                \ngetColumnOrder(target, propertyKey, defaultVal: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                propertyKey\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                defaultVal\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    libs/common/src/decorators/graphql-federation-directive.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GraphQLFederationDirective\n                        \n                    \n                \n            \n            \n                \nGraphQLFederationDirective(directive: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                directive\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ClassDecorator\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nQushah Backend\nDescription\nQushah Escrow System backend containing microservices, gateway, libs, etc.\nPrerequisites\nTo be able to run this project on machine, the following must be installed:\n\nNodeJS 22 LTS\npnpm\nRedis\n\nProject setup\nMake sure pnpm is installed\nExample :$ npm install --global pnpmInstall dependencies\nExample :$ pnpm installInstall Redis\nFollow the official docs to install Redis on your machine.\nCompile and run the project\nExample :# development\n$ pnpm run start\n\n# watch mode\n$ pnpm run start:dev\n\n# production mode\n$ pnpm run start:prodRun tests\nExample :# unit tests\n$ pnpm run test\n\n# e2e tests\n$ pnpm run test:e2e\n\n# test coverage\n$ pnpm run test:covTypeorm CLI Helper Tool\nThe Typeorm CLI Helper tool lets you run typeorm CLI commands without worrying\nabout DataSources and path resolutions.\nLearn how to use the tool here.\nStructure\nExample :qushah-backend/\n│\n├── apps/\n│   ├── auth/        # Authentication Service\n│   ├── user/       # User Management Service\n│   ├── escrow/      # Escrow and Deposits Service\n│   ├── organization/    # Organization management Service\n│   ├── payment/    # Payments and Transactions Service\n│   ├── property/  # Property Listings Service\n│   ├── notification/      # Notifications Service\n│   └── gateway/     # API Gateway (separate app within the repo)\n│\n└── libs/                   # Shared Libraries (for DTOs, Interfaces, etc.)\n    └── common/             # Common utilities, interceptors, and guards\nArchitecture\nExample :            [Frontend (Angular)]\n                     │\n              [GraphQL Gateway]\n                     │\n     ┌──────────┬─────┬───────┬──────────────┬───────────┐\n     │          │     │       │              │           │\n [Auth]     [User]    │ [Property]     [Escrow]    [Payment]\n     │                │                      │\n [Notification]      [Organization]        [Disputes]\nConcerns\nHere are the key concerns for each microservice in this architecture:\n1. auth (Authentication and Authorization)\n\nSecurity: Ensuring the system is secure from unauthorized access. This includes strong password policies, token-based authentication (e.g., JWT), and OAuth if required.\nToken Expiry and Refresh: Managing token expiration and refresh mechanisms. Implement token blacklisting for security.\nRate Limiting: Protecting against brute-force attacks by implementing rate limiting or CAPTCHA.\nSecure API Communication: Ensuring all communication (especially authentication data) is encrypted with HTTPS.\nUser Roles and Permissions: Managing user roles and ensuring each user (tenant, landlord, admin) has the correct permissions for their actions.\n\n2. user (User Management)\n\nUser Data Management: Ensuring that personal data is secure, especially sensitive information like emails, addresses, and phone numbers.\nData Privacy: Complying with regulations like GDPR or CCPA, especially regarding the collection and storage of user data.\nUser Profile Updates: Allowing users to update their profiles (e.g., changing names, contact details) while maintaining data integrity.\nError Handling: Handling errors effectively, such as invalid user data, and providing clear feedback to users.\nScalability: Ensuring the system can handle large numbers of users (tenants, landlords).\n\n3. property (Property Management)\n\nProperty Data Validation: Ensuring that property details are accurate, complete, and properly validated before being listed.\nSearch Functionality: Providing a fast and efficient way for tenants to search for properties (by location, price, features, etc.).\nProperty Availability: Managing the availability of properties and preventing double-booking or issues with properties already rented.\nImage and Media Handling: Handling and storing images, videos, and 3D scans securely and efficiently. Integrating with media service when required.\nData Consistency: Ensuring that any updates to the property data (e.g., status changes, price updates) are consistent and reflected across all services.\n\n4. escrow (Escrow Service)\n\nDeposit Security: Ensuring that the deposit is secure, especially when handling large amounts of money.\nTransaction Auditing: Providing an auditable trail of deposit and release actions for transparency and security.\nEscrow Release Conditions: Implementing clear rules on when the deposit should be released to either the tenant or landlord.\nDispute Management: Handling any disputes regarding the deposit, such as property damage or failure to pay rent.\nCompliance: Ensuring that escrow services comply with local financial and regulatory standards (especially for handling money).\nEvent-Driven Updates: Integrating with other services (e.g., notifying users about escrow releases or disputes) using event-driven architecture.\n\n5. organization (Organization Management)\n\nMulti-Tenant Support: Managing organizations and their members, ensuring proper isolation between different organizations.\nAccess Control: Implementing role-based access control within organizations.\nBilling and Subscriptions: Managing organization-level billing and payments.\nOrganization Verification: Ensuring that organizations are verified before allowing transactions.\n\n6. payment (Payment Service)\n\nPayment Gateway Integration: Integrating with external payment providers (e.g., UPI, Paytm, Razorpay) for processing payments.\nTransaction Security: Ensuring secure handling of payments and sensitive financial data. Use of encryption and secure protocols.\nTransaction Failures: Handling payment failures and retries in case of network or gateway issues.\nPayment Confirmation: Sending clear confirmation of successful payments and generating receipts.\nRecurring Payments: Supporting recurring rent payments (e.g., monthly payments) and ensuring they are processed on time.\n\n7. notification (Notification Service)\n\nNotification Delivery: Ensuring timely delivery of notifications (SMS, email, push notifications) to users.\nOpt-in/Opt-out Preferences: Allowing users to manage their notification preferences.\n\n8. gateway (API Gateway)\n\nRequest Routing: Efficiently routing requests to the appropriate microservice based on the endpoint and service.\nSecurity: Ensuring that requests passing through the gateway are authenticated and authorized.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppConfigModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ClientsModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CommonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DocumentationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EscrowModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GatewayModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GraphQLGatewayModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GraphQLMicroserviceModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MediaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NotificationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrganizationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PaymentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PropertyModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SeederModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_imports\n\n\n\ncluster_CommonModule_exports\n\n\n\ncluster_CommonModule_providers\n\n\n\ncluster_DocumentationModule\n\n\n\ncluster_DocumentationModule_providers\n\n\n\ncluster_EscrowModule\n\n\n\ncluster_EscrowModule_providers\n\n\n\ncluster_GatewayModule\n\n\n\ncluster_GatewayModule_imports\n\n\n\ncluster_GatewayModule_providers\n\n\n\ncluster_MediaModule\n\n\n\ncluster_MediaModule_providers\n\n\n\ncluster_NotificationModule\n\n\n\ncluster_NotificationModule_providers\n\n\n\ncluster_OrganizationModule\n\n\n\ncluster_OrganizationModule_imports\n\n\n\ncluster_OrganizationModule_providers\n\n\n\ncluster_PaymentModule\n\n\n\ncluster_PaymentModule_providers\n\n\n\ncluster_PropertyModule\n\n\n\ncluster_PropertyModule_providers\n\n\n\ncluster_SeederModule\n\n\n\ncluster_SeederModule_exports\n\n\n\ncluster_SeederModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nCommonModule->AuthModule\n\n\n\n\n\nCommonService \n\nCommonService \n\nCommonService  -->\n\nCommonModule->CommonService \n\n\n\n\n\nEscrowModule\n\nEscrowModule\n\nEscrowModule -->\n\nCommonModule->EscrowModule\n\n\n\n\n\nGatewayModule\n\nGatewayModule\n\nGatewayModule -->\n\nCommonModule->GatewayModule\n\n\n\n\n\nMediaModule\n\nMediaModule\n\nMediaModule -->\n\nCommonModule->MediaModule\n\n\n\n\n\nNotificationModule\n\nNotificationModule\n\nNotificationModule -->\n\nCommonModule->NotificationModule\n\n\n\n\n\nOrganizationModule\n\nOrganizationModule\n\nOrganizationModule -->\n\nCommonModule->OrganizationModule\n\n\n\n\n\nPaymentModule\n\nPaymentModule\n\nPaymentModule -->\n\nCommonModule->PaymentModule\n\n\n\n\n\nPropertyModule\n\nPropertyModule\n\nPropertyModule -->\n\nCommonModule->PropertyModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nCommonModule->UserModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nAuthModule -->\n\nGraphQLMicroserviceModule->AuthModule\n\n\n\nEscrowModule -->\n\nGraphQLMicroserviceModule->EscrowModule\n\n\n\nMediaModule -->\n\nGraphQLMicroserviceModule->MediaModule\n\n\n\nNotificationModule -->\n\nGraphQLMicroserviceModule->NotificationModule\n\n\n\nOrganizationModule -->\n\nGraphQLMicroserviceModule->OrganizationModule\n\n\n\nPaymentModule -->\n\nGraphQLMicroserviceModule->PaymentModule\n\n\n\nPropertyModule -->\n\nGraphQLMicroserviceModule->PropertyModule\n\n\n\nUserModule -->\n\nGraphQLMicroserviceModule->UserModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nAppConfigModule\n\nAppConfigModule\n\nCommonModule -->\n\nAppConfigModule->CommonModule\n\n\n\n\n\nCommonService\n\nCommonService\n\nCommonModule -->\n\nCommonService->CommonModule\n\n\n\n\n\nDocumentationService\n\nDocumentationService\n\n\n\nDocumentationModule\n\nDocumentationModule\n\nDocumentationModule -->\n\nDocumentationService->DocumentationModule\n\n\n\n\n\nEscrowService\n\nEscrowService\n\nEscrowModule -->\n\nEscrowService->EscrowModule\n\n\n\n\n\nGraphQLGatewayModule\n\nGraphQLGatewayModule\n\nGatewayModule -->\n\nGraphQLGatewayModule->GatewayModule\n\n\n\n\n\nGatewayService\n\nGatewayService\n\nGatewayModule -->\n\nGatewayService->GatewayModule\n\n\n\n\n\nMediaService\n\nMediaService\n\nMediaModule -->\n\nMediaService->MediaModule\n\n\n\n\n\nNotificationService\n\nNotificationService\n\nNotificationModule -->\n\nNotificationService->NotificationModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nOrganizationModule -->\n\nDatabaseModule->OrganizationModule\n\n\n\nOrganizationModule -->\n\nDatabaseModule->OrganizationModule\n\n\n\nUserModule -->\n\nDatabaseModule->UserModule\n\n\n\nUserModule -->\n\nDatabaseModule->UserModule\n\n\n\n\n\nOrganizationService\n\nOrganizationService\n\nOrganizationModule -->\n\nOrganizationService->OrganizationModule\n\n\n\n\n\nPaymentService\n\nPaymentService\n\nPaymentModule -->\n\nPaymentService->PaymentModule\n\n\n\n\n\nPropertyService\n\nPropertyService\n\nPropertyModule -->\n\nPropertyService->PropertyModule\n\n\n\n\n\nSeederService \n\nSeederService \n\n\n\nSeederModule\n\nSeederModule\n\nSeederService  -->\n\nSeederModule->SeederService \n\n\n\nUserModule -->\n\nSeederModule->UserModule\n\n\n\n\n\nSeederService\n\nSeederService\n\nSeederModule -->\n\nSeederService->SeederModule\n\n\n\n\n\nClientsModule\n\nClientsModule\n\nUserModule -->\n\nClientsModule->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        17 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    5 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    13 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    25 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            argv   (typeorm-cli.ts)\n                        \n                        \n                            AuthCommand   (libs/.../auth.command.ts)\n                        \n                        \n                            dataSourcePath   (typeorm-cli.ts)\n                        \n                        \n                            ENVIRONMENT   (libs/.../environment.constant.ts)\n                        \n                        \n                            EscrowCommand   (libs/.../escrow.command.ts)\n                        \n                        \n                            isDocEnv   (libs/.../graphql-federation-directive.decorator.ts)\n                        \n                        \n                            MediaCommand   (libs/.../media.command.ts)\n                        \n                        \n                            NotificationCommand   (libs/.../notification.command.ts)\n                        \n                        \n                            ORDER_KEY   (libs/.../column-order.decorator.ts)\n                        \n                        \n                            OrganizationCommand   (libs/.../organization.command.ts)\n                        \n                        \n                            PaymentCommand   (libs/.../payment.command.ts)\n                        \n                        \n                            PropertyCommand   (libs/.../property.command.ts)\n                        \n                        \n                            SCHEMA   (libs/.../schema.constant.ts)\n                        \n                        \n                            typeormCommand   (typeorm-cli.ts)\n                        \n                        \n                            TypeormDataSource   (apps/.../typeorm.data-source.ts)\n                        \n                        \n                            TypeormDataSource   (apps/.../typeorm.data-source.ts)\n                        \n                        \n                            TypeormDataSource   (apps/.../typeorm.data-source.ts)\n                        \n                        \n                            TypeormDataSource   (apps/.../typeorm.data-source.ts)\n                        \n                        \n                            TypeormDataSource   (apps/.../typeorm.data-source.ts)\n                        \n                        \n                            TypeormDataSource   (apps/.../typeorm.data-source.ts)\n                        \n                        \n                            TypeormDataSource   (apps/.../typeorm.data-source.ts)\n                        \n                        \n                               (typeorm-cli.ts)\n                        \n                        \n                               (apps/.../gateway.module.ts)\n                        \n                        \n                            UserCommand   (libs/.../user.command.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    typeorm-cli.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        argv\n                        \n                    \n                \n            \n                \n                    \n                        Default value : yargs(process.argv.slice(2))\n  .option('microservice', {\n    alias: 'm',\n    type: 'string',\n    describe: 'The name of the microservice',\n    demandOption: true,\n  })\n  .option('command', {\n    alias: 'c',\n    type: 'string',\n    describe: 'TypeORM CLI command (e.g., generate, run, revert, seed)',\n    demandOption: true,\n  })\n  .option('args', {\n    alias: 'a',\n    type: 'string',\n    describe: 'Additional arguments for the TypeORM CLI command (optional)',\n    default: '',\n  })\n  .option('title', {\n    alias: 't',\n    type: 'string',\n    describe:\n      'Title for migration file. Needed while running generate (optional)',\n    default: '',\n  })\n  .help().argv\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSourcePath\n                        \n                    \n                \n            \n                \n                    \n                        Default value : path.join(\n  __dirname,\n  `./apps/${microservice}/src/typeorm.data-source.ts`,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        typeormCommand\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli.js migration:${command} ${title ? './apps/' + microservice + '/src/migrations/' + title : ''} -d ${dataSourcePath} ${args || ''}`\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : argv as {\n  microservice: string;\n  command: string;\n  args?: string;\n  title?: string;\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/auth.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AuthCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_AUTH: 'PING_AUTH',\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/environment.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ENVIRONMENT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  REDIS_HOST: 'REDIS_HOST',\n  REDIS_PORT: 'REDIS_PORT',\n  AUTH_PORT: 'AUTH_PORT',\n  ESCROW_PORT: 'ESCROW_PORT',\n  GATEWAY_PORT: 'GATEWAY_PORT',\n  MEDIA_PORT: 'MEDIA_PORT',\n  NOTIFICATION_PORT: 'NOTIFICATION_PORT',\n  ORGANIZATION_PORT: 'ORGANIZATION_PORT',\n  PAYMENT_PORT: 'PAYMENT_PORT',\n  PROPERTY_PORT: 'PROPERTY_PORT',\n  USER_PORT: 'USER_PORT',\n  AUTH_HOST: 'AUTH_HOST',\n  ESCROW_HOST: 'ESCROW_HOST',\n  GATEWAY_HOST: 'GATEWAY_HOST',\n  MEDIA_HOST: 'MEDIA_HOST',\n  NOTIFICATION_HOST: 'NOTIFICATION_HOST',\n  ORGANIZATION_HOST: 'ORGANIZATION_HOST',\n  PAYMENT_HOST: 'PAYMENT_HOST',\n  PROPERTY_HOST: 'PROPERTY_HOST',\n  USER_HOST: 'USER_HOST',\n  DATABASE_TYPE: 'DATABASE_TYPE',\n  DATABASE_HOST: 'DATABASE_HOST',\n  DATABASE_PORT: 'DATABASE_PORT',\n  DATABASE_USERNAME: 'DATABASE_USERNAME',\n  DATABASE_PASSWORD: 'DATABASE_PASSWORD',\n  DATABASE_NAME: 'DATABASE_NAME',\n  IS_DOC_ENV: process.env.IS_DOC_ENV === 'true',\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/escrow.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EscrowCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_ESCROW: 'PING_ESCROW',\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/decorators/graphql-federation-directive.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isDocEnv\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ENVIRONMENT.IS_DOC_ENV\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/media.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MediaCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_MEDIA: 'PING_MEDIA',\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/notification.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NotificationCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_NOTIFICATION: 'PING_NOTIFICATION',\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/decorators/column-order.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ORDER_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol.for('order_key')\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/organization.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        OrganizationCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_ORGANIZATION: 'PING_ORGANIZATION',\n  FIND_ORGANIZATION_BY_ID: 'FIND_ORGANIZATION_BY_ID',\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/payment.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PaymentCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_PAYMENT: 'PING_PAYMENT',\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/property.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PropertyCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_PROPERTY: 'PING_PROPERTY',\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/schema.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SCHEMA\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  ORGANIZATION: 'organization',\n  USER: 'user',\n}\n                    \n                \n\n\n        \n    \n\n    apps/escrow/src/typeorm.data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TypeormDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DataSource.getInstance('escrow')\n                    \n                \n\n\n        \n    \n\n    apps/media/src/typeorm.data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TypeormDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DataSource.getInstance('media')\n                    \n                \n\n\n        \n    \n\n    apps/notification/src/typeorm.data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TypeormDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DataSource.getInstance('notification')\n                    \n                \n\n\n        \n    \n\n    apps/organization/src/typeorm.data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TypeormDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DataSource.getInstance('organization')\n                    \n                \n\n\n        \n    \n\n    apps/payment/src/typeorm.data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TypeormDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DataSource.getInstance('payment')\n                    \n                \n\n\n        \n    \n\n    apps/property/src/typeorm.data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TypeormDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DataSource.getInstance('property')\n                    \n                \n\n\n        \n    \n\n    apps/user/src/typeorm.data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TypeormDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DataSource.getInstance('user')\n                    \n                \n\n\n        \n    \n\n    apps/gateway/src/gateway.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : ENVIRONMENT\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/user.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_USER: 'PING_USER',\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/running-migrations-and-seeders.html":{"url":"additional-documentation/running-migrations-and-seeders.html","title":"additional-page - Running Migrations and Seeders","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMigration CLI Manual\nThis CLI is designed to streamline database migration management in a multi-microservice NestJS project using TypeORM.\nPrerequisites\n\nEnsure pnpm is installed globally.\nEnsure TypeORM and ts-node are installed as dependencies in the project.\nEnsure you have a .env file properly set up for database connections.\n\nUsage\nThe general syntax for the migration command:\nExample :pnpm migration -m  -c  [-a ]Parameters:\n\n-m, --microservice → Specifies the target microservice (e.g., auth, escrow, user, etc.).\n-c, --command → Specifies the TypeORM migration command to run (e.g., generate, run, revert, seed, etc.).\n-t, --title (optional) → Title for migration file. Needed while running generate.\n-a, --args (optional) → Additional arguments passed to TypeORM CLI.\n\n\nAvailable Commands\n1. Generate a Migration\nCreates a new migration file based on changes in entity definitions.\nExample :pnpm migration -m organization -c generate -t CreateOrganization\n-m organization → Runs migration for the organization microservice.\n-c generate → Generates a migration file.\n-t \"CreateOrganization\" → Specifies the migration file name.\n\n\n2. Run Migrations\nApplies pending migrations to the database.\nExample :pnpm migration -m escrow -c run\n-m escrow → Runs migrations for the escrow microservice.\n-c run → Executes pending migrations.\n\n\n3. Revert Last Migration\nRolls back the most recent migration.\nExample :pnpm migration -m user -c revert\n-m user → Targets the user microservice.\n-c revert → Rolls back the latest migration.\n\n\n4. Show Migration Status\nLists applied and pending migrations.\nExample :pnpm migration -m property -c show\n-m property → Targets the property microservice.\n-c show → Displays migration history.\n\n\n5. Run Seeder\nExecutes the seed script for a microservice.\nExample :pnpm migration -m user -c seed\n-m user → Targets the user microservice.\n-c seed → Runs the seeder script located at apps//src/seeder/seeder.ts.\n\n\nNotes\n\nThe -m flag is mandatory to specify which microservice's migration should be executed.\nThe CLI automatically resolves the correct TypeORM DataSource file based on the microservice name.\nIf no changes are detected when generating a migration, the CLI will not throw an error but will log a warning\ninstead.\nIf -c seed is used, the CLI will execute the corresponding seeder.ts file for the specified microservice. Seeders\nare used to populate the database with initial data and should be located at\napps//src/seeder/seeder.ts.\n\nTroubleshooting\nError: \"No changes in database schema were found\"\n\nEnsure that your entities are properly configured and registered in the microservice's DataSource.\nVerify that the database is up to date with the latest migrations.\n\nError: \"Cannot find module 'typeorm'\"\n\nRun pnpm install to ensure dependencies are correctly installed.\n\n\nFuture Enhancements\n\nAutomate versioning with Release Please integration.\nSupport interactive mode for selecting microservices and commands.\nEnhance error handling and logging.\n\n\nThis CLI provides an efficient way to manage database migrations across multiple microservices in a monorepo setup.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{"url":"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html","title":"additional-page - How to use migration tool","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMigration CLI Manual\nThis CLI is designed to streamline database migration management in a multi-microservice NestJS project using TypeORM.\nPrerequisites\n\nEnsure pnpm is installed globally.\nEnsure TypeORM and ts-node are installed as dependencies in the project.\nEnsure you have a .env file properly set up for database connections.\n\nUsage\nThe general syntax for the migration command:\nExample :pnpm migration -m  -c  [-a ]Parameters:\n\n-m, --microservice → Specifies the target microservice (e.g., auth, escrow, user, etc.).\n-c, --command → Specifies the TypeORM migration command to run (e.g., generate, run, revert, seed, etc.).\n-t, --title (optional) → Title for migration file. Needed while running generate.\n-a, --args (optional) → Additional arguments passed to TypeORM CLI.\n\n\nAvailable Commands\n1. Generate a Migration\nCreates a new migration file based on changes in entity definitions.\nExample :pnpm migration -m organization -c generate -t CreateOrganization\n-m organization → Runs migration for the organization microservice.\n-c generate → Generates a migration file.\n-t \"CreateOrganization\" → Specifies the migration file name.\n\n\n2. Run Migrations\nApplies pending migrations to the database.\nExample :pnpm migration -m escrow -c run\n-m escrow → Runs migrations for the escrow microservice.\n-c run → Executes pending migrations.\n\n\n3. Revert Last Migration\nRolls back the most recent migration.\nExample :pnpm migration -m user -c revert\n-m user → Targets the user microservice.\n-c revert → Rolls back the latest migration.\n\n\n4. Show Migration Status\nLists applied and pending migrations.\nExample :pnpm migration -m property -c show\n-m property → Targets the property microservice.\n-c show → Displays migration history.\n\n\n5. Run Seeder\nExecutes the seed script for a microservice.\nExample :pnpm migration -m user -c seed\n-m user → Targets the user microservice.\n-c seed → Runs the seeder script located at apps//src/seeder/seeder.ts.\n\n\nNotes\n\nThe -m flag is mandatory to specify which microservice's migration should be executed.\nThe CLI automatically resolves the correct TypeORM DataSource file based on the microservice name.\nIf no changes are detected when generating a migration, the CLI will not throw an error but will log a warning\ninstead.\nIf -c seed is used, the CLI will execute the corresponding seeder.ts file for the specified microservice. Seeders\nare used to populate the database with initial data and should be located at\napps//src/seeder/seeder.ts.\n\nTroubleshooting\nError: \"No changes in database schema were found\"\n\nEnsure that your entities are properly configured and registered in the microservice's DataSource.\nVerify that the database is up to date with the latest migrations.\n\nError: \"Cannot find module 'typeorm'\"\n\nRun pnpm install to ensure dependencies are correctly installed.\n\n\nFuture Enhancements\n\nAutomate versioning with Release Please integration.\nSupport interactive mode for selecting microservices and commands.\nEnhance error handling and logging.\n\n\nThis CLI provides an efficient way to manage database migrations across multiple microservices in a monorepo setup.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
