var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AuthController.html",[0,1.195,1,2.69]],["body/controllers/AuthController.html",[0,1.813,1,4.08,2,1.397,3,0.195,4,0.195,5,0.151,6,3.845,7,0.526,8,0.844,9,2.225,10,1.338,11,0.017,12,2.387,13,2.254,14,0.556,15,4.454,16,0.618,17,0.761,18,0.297,19,0.556,20,3.897,21,3.845,22,3.097,23,2.027,24,3.444,25,4.454,26,0.195,27,0.077,28,2.027,29,1.927,30,2.387,31,4.454,32,0.683,33,4.454,34,0.012,35,0.012]],["title/modules/AuthModule.html",[36,0.614,37,2.69]],["body/modules/AuthModule.html",[1,4.304,2,1.693,3,0.176,4,0.176,5,0.136,11,0.017,18,0.297,19,0.502,20,4.254,21,3.468,26,0.176,27,0.069,34,0.012,35,0.012,36,0.982,37,5.256,38,1.26,39,1.507,40,1.738,41,1.738,42,1.579,43,2.512,44,1.579,45,3.468,46,3.468,47,3.468,48,2.885,49,3.03,50,2.336,51,1.738,52,1.655,53,4.017,54,1.935,55,4.017,56,1.107,57,3.811,58,4.017]],["title/classes/AuthResolver.html",[27,0.066,57,2.69]],["body/classes/AuthResolver.html",[3,0.208,4,0.208,5,0.162,7,0.563,8,0.881,10,1.431,11,0.017,14,0.595,16,0.661,17,0.872,18,0.208,26,0.208,27,0.082,32,0.731,34,0.013,35,0.013,57,4.26,59,1.873,60,4.114,61,3.523,62,2.553,63,1.592,64,6.033,65,4.765,66,3.233,67,3.233,68,1.873,69,2.553]],["title/injectables/AuthService.html",[20,2.315,70,0.922]],["body/injectables/AuthService.html",[3,0.22,4,0.22,5,0.17,7,0.594,8,0.911,9,2.325,11,0.016,14,0.627,16,0.697,17,0.822,18,0.22,19,0.627,20,3.789,26,0.22,27,0.087,32,0.771,34,0.013,35,0.013,70,1.509,71,2.07,72,4.336,73,5.022,74,2.407,75,4.336,76,2.285]],["title/entities/BaseEntity.html",[77,2.169,78,2.485]],["body/entities/BaseEntity.html",[3,0.107,4,0.107,5,0.083,7,0.29,10,1.556,11,0.017,13,1.243,14,0.647,18,0.227,26,0.107,27,0.042,32,0.708,34,0.008,35,0.008,63,1.217,68,0.965,77,2.153,78,3.009,79,1.492,80,2.12,81,2.027,82,4.612,83,1.857,84,4.612,85,4.83,86,4.612,87,1.699,88,6.521,89,2.456,90,3.265,91,2.456,92,3.782,93,4.488,94,2.456,95,3.265,96,2.991,97,2.456,98,2.67,99,2.456,100,2.456,101,2.456,102,3.265,103,2.456,104,3.782,105,3.782,106,3.257,107,3.782,108,3.782,109,3.782,110,1.177,111,4.327,112,2.925,113,3.567,114,2.925,115,2.456,116,3.782,117,2.456,118,2.456,119,1.899,120,2.12,121,4.612,122,1.316,123,2.456,124,2.456,125,3.186,126,2.925,127,2.456,128,2.456,129,2.925,130,4.473,131,2.456,132,2.456,133,2.456,134,2.456,135,2.456,136,2.456,137,5.181,138,2.12,139,3.782,140,2.12,141,2.456,142,2.456,143,2.456,144,1.602,145,2.12,146,1.602,147,2.456,148,2.12,149,2.456,150,3.782,151,2.12,152,2.456,153,2.456,154,2.456,155,2.456,156,2.456,157,2.456,158,2.12,159,2.456,160,3.782,161,2.456,162,3.782,163,2.456,164,2.456,165,2.456]],["title/classes/Bootstrapper.html",[27,0.066,166,2.946]],["body/classes/Bootstrapper.html",[3,0.167,4,0.167,5,0.13,7,0.452,8,0.762,11,0.017,14,0.477,16,0.53,18,0.279,19,0.477,23,1.739,26,0.167,27,0.066,34,0.011,35,0.011,36,0.616,56,1.053,59,1.502,63,1.008,83,1.37,87,1.253,98,2.698,122,3.184,125,3.806,166,4.035,167,3.3,168,3.383,169,5.218,170,5.218,171,3.822,172,1.654,173,5.218,174,2.971,175,3.3,176,2.955,177,3.822,178,4.505,179,2.493,180,3.822,181,3.636,182,2.698,183,3.3,184,3.3,185,3.3,186,3.822,187,3.822,188,3.3,189,2.955,190,2.322,191,3.822,192,3.88,193,3.822,194,3.822,195,3.822,196,3.822,197,3.822,198,3.822]],["title/modules/ClientsModule.html",[36,0.614,199,2.946]],["body/modules/ClientsModule.html",[3,0.17,4,0.17,5,0.132,8,0.569,11,0.017,14,0.486,16,0.541,17,0.791,18,0.262,19,0.486,23,1.772,26,0.17,27,0.067,32,0.598,34,0.011,35,0.011,36,0.967,38,1.222,44,1.531,54,1.396,63,1.395,83,1.396,87,1.277,122,2.833,125,3.416,168,3.01,172,1.685,174,3.01,178,4.563,181,2.218,182,2.75,184,3.362,188,3.362,189,3.012,190,3.212,192,3.212,199,4.976,200,3.895,201,3.362,202,5.286,203,3.895,204,3.362,205,3.01,206,4.087,207,3.012,208,5.286,209,5.286,210,3.895,211,3.895,212,3.895,213,3.895]],["title/modules/CommonModule.html",[36,0.614,48,1.57]],["body/modules/CommonModule.html",[3,0.185,4,0.185,5,0.144,11,0.016,18,0.274,19,0.529,26,0.185,27,0.073,34,0.012,35,0.012,36,1.008,38,1.328,39,1.588,40,1.832,41,1.832,42,1.664,43,2.579,44,2.459,48,3.068,50,2.418,51,1.832,52,1.744,54,2.003,214,3.654,215,3.654,216,3.654,217,3.654,218,4.636,219,4.974,220,4.233,221,4.233,222,4.233]],["title/injectables/CommonService.html",[70,0.922,219,2.485]],["body/injectables/CommonService.html",[3,0.244,4,0.244,5,0.189,11,0.016,18,0.244,19,0.695,26,0.244,27,0.096,34,0.014,35,0.014,70,1.607,71,2.295,219,4.332,223,4.807]],["title/classes/ConfigHelper.html",[27,0.066,174,2.169]],["body/classes/ConfigHelper.html",[3,0.099,4,0.099,5,0.077,7,0.267,8,0.518,11,0.017,14,0.794,16,0.688,17,0.838,18,0.235,26,0.099,27,0.039,32,0.917,34,0.008,35,0.008,56,0.623,59,0.888,63,1.154,81,1.9,83,1.568,87,2.027,96,1.144,122,3.061,125,3.94,168,2.491,172,2.144,174,3.065,175,1.952,176,1.748,179,2.313,181,1.287,183,3.778,190,3.629,192,3.629,205,2.019,224,1.952,225,5.339,226,4.376,227,4.366,228,3.061,229,4.278,230,3.546,231,3.546,232,3.546,233,4.376,234,2.855,235,3.546,236,2.26,237,3.061,238,2.26,239,1.748,240,2.855,241,2.26,242,3.546,243,2.26,244,2.26,245,3.546,246,2.26,247,2.26,248,2.26,249,2.26,250,2.26,251,2.26,252,3.061,253,2.504,254,2.26,255,1.952,256,1.596,257,4.376,258,2.26,259,2.26,260,1.952,261,1.952,262,2.26,263,2.26,264,2.26,265,2.26,266,2.26,267,2.26,268,2.26,269,2.26,270,2.742,271,4.955,272,2.26,273,2.504,274,2.26,275,2.504,276,2.26,277,2.26,278,2.26,279,2.26,280,2.26,281,2.26]],["title/classes/CreateOrganization1740356244243.html",[27,0.066,282,2.946]],["body/classes/CreateOrganization1740356244243.html",[3,0.109,4,0.109,5,0.084,7,0.294,8,0.557,11,0.016,14,0.58,16,0.53,17,0.327,18,0.109,26,0.109,27,0.043,34,0.008,35,0.008,59,0.977,63,1.631,81,2.046,83,1.368,85,4.501,87,1.524,90,3.295,95,3.295,102,3.295,110,1.191,144,4.163,146,1.621,148,6.029,168,3.381,172,1.652,181,3.381,205,2.969,240,3.032,282,4.032,283,4.501,284,2.146,285,3.817,286,4.647,287,5.938,288,3.295,289,3.817,290,2.485,291,3.817,292,6.544,293,2.485,294,3.817,295,2.485,296,5.626,297,3.817,298,5.127,299,3.817,300,3.817,301,6.382,302,6.382,303,3.295,304,2.146,305,1.922,306,1.922,307,5.938,308,5.214,309,6.184,310,2.485,311,4.012,312,2.485,313,2.485,314,3.817,315,5.214,316,2.146,317,2.146,318,2.146,319,2.146,320,3.817,321,2.952,322,2.146,323,2.146,324,2.146,325,1.755,326,4.012,327,2.485,328,2.485,329,2.485,330,3.817,331,2.485,332,3.817,333,2.485,334,2.485,335,2.485,336,2.485,337,3.295,338,2.146,339,3.817,340,2.485]],["title/classes/DataSource.html",[27,0.066,106,2.69]],["body/classes/DataSource.html",[3,0.167,4,0.167,5,0.177,7,0.45,8,0.76,11,0.017,14,0.476,16,0.529,17,0.781,18,0.259,26,0.167,27,0.066,32,0.584,34,0.011,35,0.011,59,1.496,63,1.005,79,2.314,83,1.365,87,1.706,106,4.187,110,1.825,122,3.178,172,1.648,179,2.484,190,2.314,192,2.314,229,4.494,270,2.944,273,2.688,275,2.688,325,2.688,341,4.494,342,3.287,343,5.205,344,3.808,345,4.494,346,3.808,347,3.808,348,4.494,349,4.025,350,3.287,351,3.808,352,2.944,353,3.808,354,3.808,355,3.808,356,3.808,357,3.808,358,6.375,359,3.808,360,3.808,361,3.808,362,3.808,363,3.808,364,3.808,365,3.808,366,3.287,367,3.287,368,3.287,369,3.808,370,3.808,371,3.808,372,3.808,373,3.808]],["title/modules/DatabaseModule.html",[36,0.614,374,2.485]],["body/modules/DatabaseModule.html",[3,0.151,4,0.151,5,0.117,8,0.504,11,0.017,14,0.431,16,0.479,17,0.88,18,0.246,19,0.431,26,0.151,27,0.06,32,0.746,34,0.01,35,0.01,36,0.906,38,1.082,54,1.236,56,0.95,63,0.91,79,2.953,83,1.236,87,1.845,96,2.459,122,2.604,125,3.204,168,1.964,172,1.492,174,2.767,181,1.964,182,2.435,189,3.758,190,2.953,192,2.953,207,4.351,270,3.758,273,3.431,275,3.431,325,2.435,345,5.768,367,2.977,368,2.977,374,3.671,375,3.448,376,3.448,377,4.859,378,3.448,379,4.859,380,2.977,381,4.859,382,2.435,383,3.448,384,2.977,385,3.448,386,3.448,387,4.859,388,3.448,389,3.448,390,3.448,391,3.448,392,2.977]],["title/controllers/DocumentationController.html",[0,1.195,393,2.69]],["body/controllers/DocumentationController.html",[0,1.899,2,1.502,3,0.209,4,0.209,5,0.162,7,0.566,8,0.884,9,2.286,10,1.438,11,0.017,14,0.598,16,0.664,17,0.797,18,0.265,19,0.598,26,0.209,27,0.083,28,2.178,29,2.072,32,0.735,34,0.013,35,0.013,393,4.273,394,4.133,395,4.787,396,4.032,397,4.133,398,4.787]],["title/modules/DocumentationModule.html",[36,0.614,399,2.69]],["body/modules/DocumentationModule.html",[2,1.834,3,0.198,4,0.198,5,0.154,11,0.016,18,0.283,19,0.566,26,0.198,27,0.078,34,0.012,35,0.012,36,1.042,38,1.422,39,1.701,40,1.961,41,1.961,42,1.781,43,2.666,44,1.781,50,2.529,51,1.961,52,1.868,54,1.625,393,4.567,396,4.4,397,3.913,399,5.112,400,3.913,401,3.913,402,4.533,403,4.533]],["title/injectables/DocumentationService.html",[70,0.922,396,2.315]],["body/injectables/DocumentationService.html",[3,0.221,4,0.221,5,0.171,7,0.597,8,0.913,9,2.329,11,0.016,14,0.63,16,0.7,17,0.824,18,0.221,19,0.63,26,0.221,27,0.087,32,0.774,34,0.013,35,0.013,70,1.514,71,2.08,74,2.419,396,3.801,404,4.357,405,5.047,406,5.047]],["title/controllers/EscrowController.html",[0,1.195,407,2.69]],["body/controllers/EscrowController.html",[0,1.813,2,1.397,3,0.195,4,0.195,5,0.151,7,0.526,8,0.844,9,2.225,10,1.338,11,0.017,12,2.387,13,2.254,14,0.556,16,0.618,17,0.761,18,0.297,19,0.556,22,3.097,23,2.027,26,0.195,27,0.077,28,2.027,29,1.927,30,2.387,32,0.683,34,0.012,35,0.012,56,1.227,407,4.08,408,3.845,409,4.454,410,3.897,411,3.845,412,3.444,413,4.454,414,4.454]],["title/modules/EscrowModule.html",[36,0.614,415,2.69]],["body/modules/EscrowModule.html",[2,1.693,3,0.176,4,0.176,5,0.136,11,0.017,18,0.297,19,0.502,26,0.176,27,0.069,34,0.012,35,0.012,36,0.982,38,1.26,39,1.507,40,1.738,41,1.738,42,1.579,43,2.512,44,1.579,48,2.885,49,3.03,50,2.336,51,1.738,52,1.655,54,1.935,56,1.107,407,4.304,410,4.254,411,3.468,415,5.256,416,3.468,417,3.468,418,4.017,419,4.017,420,4.017,421,3.811,422,4.017]],["title/classes/EscrowResolver.html",[27,0.066,421,2.69]],["body/classes/EscrowResolver.html",[3,0.208,4,0.208,5,0.162,7,0.563,8,0.881,10,1.431,11,0.017,14,0.595,16,0.661,17,0.872,18,0.208,26,0.208,27,0.082,32,0.731,34,0.013,35,0.013,59,1.873,61,3.523,62,2.553,63,1.592,66,3.233,67,3.233,68,1.873,69,2.553,421,4.26,423,4.114,424,6.033,425,4.765]],["title/injectables/EscrowService.html",[70,0.922,410,2.315]],["body/injectables/EscrowService.html",[3,0.22,4,0.22,5,0.17,7,0.594,8,0.911,9,2.325,11,0.016,14,0.627,16,0.697,17,0.822,18,0.22,19,0.627,26,0.22,27,0.087,32,0.771,34,0.013,35,0.013,70,1.509,71,2.07,74,2.407,76,2.285,410,3.789,426,4.336,427,5.022,428,4.336]],["title/modules/GatewayModule.html",[36,0.614,429,2.69]],["body/modules/GatewayModule.html",[3,0.169,4,0.169,5,0.131,11,0.017,18,0.261,19,0.483,26,0.169,27,0.067,34,0.011,35,0.011,36,0.963,38,1.213,39,1.45,40,1.673,41,1.673,42,1.519,43,2.463,44,1.519,48,2.853,50,2.276,51,1.673,52,1.593,54,1.885,56,1.065,125,2.201,256,3.713,429,5.218,430,3.337,431,3.337,432,3.337,433,4.377,434,4.516,435,2.989,436,3.865,437,4.54,438,4.54,439,4.54,440,4.54,441,4.54,442,4.54,443,4.54,444,4.54,445,3.865]],["title/injectables/GatewayService.html",[70,0.922,434,2.485]],["body/injectables/GatewayService.html",[3,0.213,4,0.213,5,0.165,7,0.577,8,0.894,11,0.016,14,0.765,16,0.677,17,0.807,18,0.213,19,0.609,26,0.213,27,0.084,32,0.749,34,0.013,35,0.013,61,3.553,70,1.482,71,2.011,74,2.339,76,2.22,234,4.367,434,3.995,446,4.212,447,4.878,448,4.878,449,3.772]],["title/modules/GraphQLGatewayModule.html",[36,0.614,433,2.485]],["body/modules/GraphQLGatewayModule.html",[3,0.167,4,0.167,5,0.129,8,0.556,11,0.017,14,0.476,16,0.529,17,0.781,18,0.292,19,0.476,26,0.167,27,0.066,32,0.799,34,0.011,35,0.011,36,0.955,38,1.195,44,1.496,54,1.365,56,1.049,63,1.005,68,1.496,83,1.365,87,1.248,122,2.789,168,3.377,172,1.648,179,2.484,181,2.168,201,3.287,205,2.964,206,4.025,207,2.944,384,3.287,433,3.869,449,2.944,450,4.494,451,3.808,452,5.205,453,3.808,454,3.808,455,4.494,456,5.205,457,3.808,458,2.944,459,5.205,460,3.287,461,2.688,462,3.808,463,3.287,464,3.808,465,3.808,466,3.808]],["title/modules/GraphQLMicroserviceModule.html",[36,0.614,49,1.649]],["body/modules/GraphQLMicroserviceModule.html",[3,0.212,4,0.212,5,0.165,11,0.017,18,0.292,19,0.606,26,0.212,27,0.084,34,0.013,35,0.013,36,0.984,38,1.523,49,2.642,54,1.74,68,1.908,96,2.457,450,4.192,455,4.192,458,3.755,463,4.192,467,4.855,468,6.105,469,4.855,470,4.855,471,4.855,472,4.855,473,3.755,474,4.855]],["title/controllers/MediaController.html",[0,1.195,475,2.69]],["body/controllers/MediaController.html",[0,1.813,2,1.397,3,0.195,4,0.195,5,0.151,7,0.526,8,0.844,9,2.225,10,1.338,11,0.017,12,2.387,13,2.254,14,0.556,16,0.618,17,0.761,18,0.297,19,0.556,22,3.097,23,2.027,26,0.195,27,0.077,28,2.027,29,1.927,30,2.387,32,0.683,34,0.012,35,0.012,56,1.227,475,4.08,476,3.845,477,4.454,478,3.897,479,3.845,480,3.444,481,4.454,482,4.454]],["title/modules/MediaModule.html",[36,0.614,483,2.69]],["body/modules/MediaModule.html",[2,1.693,3,0.176,4,0.176,5,0.136,11,0.017,18,0.297,19,0.502,26,0.176,27,0.069,34,0.012,35,0.012,36,0.982,38,1.26,39,1.507,40,1.738,41,1.738,42,1.579,43,2.512,44,1.579,48,2.885,49,3.03,50,2.336,51,1.738,52,1.655,54,1.935,56,1.107,475,4.304,478,4.254,479,3.468,483,5.256,484,3.468,485,3.468,486,4.017,487,4.017,488,4.017,489,3.811,490,4.017]],["title/classes/MediaResolver.html",[27,0.066,489,2.69]],["body/classes/MediaResolver.html",[3,0.208,4,0.208,5,0.162,7,0.563,8,0.881,10,1.431,11,0.017,14,0.595,16,0.661,17,0.872,18,0.208,26,0.208,27,0.082,32,0.731,34,0.013,35,0.013,59,1.873,61,3.523,62,2.553,63,1.592,66,3.233,67,3.233,68,1.873,69,2.553,489,4.26,491,4.114,492,6.033,493,4.765]],["title/injectables/MediaService.html",[70,0.922,478,2.315]],["body/injectables/MediaService.html",[3,0.22,4,0.22,5,0.17,7,0.594,8,0.911,9,2.325,11,0.016,14,0.627,16,0.697,17,0.822,18,0.22,19,0.627,26,0.22,27,0.087,32,0.771,34,0.013,35,0.013,70,1.509,71,2.07,74,2.407,76,2.285,478,3.789,494,4.336,495,5.022,496,4.336]],["title/controllers/NotificationController.html",[0,1.195,497,2.69]],["body/controllers/NotificationController.html",[0,1.813,2,1.397,3,0.195,4,0.195,5,0.151,7,0.526,8,0.844,9,2.225,10,1.338,11,0.017,12,2.387,13,2.254,14,0.556,16,0.618,17,0.761,18,0.297,19,0.556,22,3.097,23,2.027,26,0.195,27,0.077,28,2.027,29,1.927,30,2.387,32,0.683,34,0.012,35,0.012,56,1.227,497,4.08,498,3.845,499,4.454,500,3.897,501,3.845,502,3.444,503,4.454,504,4.454]],["title/modules/NotificationModule.html",[36,0.614,505,2.69]],["body/modules/NotificationModule.html",[2,1.693,3,0.176,4,0.176,5,0.136,11,0.017,18,0.297,19,0.502,26,0.176,27,0.069,34,0.012,35,0.012,36,0.982,38,1.26,39,1.507,40,1.738,41,1.738,42,1.579,43,2.512,44,1.579,48,2.885,49,3.03,50,2.336,51,1.738,52,1.655,54,1.935,56,1.107,497,4.304,500,4.254,501,3.468,505,5.256,506,3.468,507,3.468,508,4.017,509,4.017,510,4.017,511,3.811,512,4.017]],["title/classes/NotificationResolver.html",[27,0.066,511,2.69]],["body/classes/NotificationResolver.html",[3,0.208,4,0.208,5,0.162,7,0.563,8,0.881,10,1.431,11,0.017,14,0.595,16,0.661,17,0.872,18,0.208,26,0.208,27,0.082,32,0.731,34,0.013,35,0.013,59,1.873,61,3.523,62,2.553,63,1.592,66,3.233,67,3.233,68,1.873,69,2.553,511,4.26,513,4.114,514,6.033,515,4.765]],["title/injectables/NotificationService.html",[70,0.922,500,2.315]],["body/injectables/NotificationService.html",[3,0.22,4,0.22,5,0.17,7,0.594,8,0.911,9,2.325,11,0.016,14,0.627,16,0.697,17,0.822,18,0.22,19,0.627,26,0.22,27,0.087,32,0.771,34,0.013,35,0.013,70,1.509,71,2.07,74,2.407,76,2.285,500,3.789,516,4.336,517,5.022,518,4.336]],["title/entities/Organization.html",[77,2.169,519,2.169]],["body/entities/Organization.html",[3,0.134,4,0.134,5,0.104,7,0.362,10,1.929,11,0.017,14,0.802,17,0.974,18,0.253,26,0.134,27,0.053,34,0.01,35,0.01,56,0.845,63,1.527,68,1.205,77,2.543,78,2.914,79,1.863,81,2.394,83,1.601,87,2.106,93,3.154,96,3.114,110,1.47,111,5.127,112,3.454,119,2.371,126,4.758,129,4.967,303,4.549,304,3.856,305,4.075,306,4.075,311,3.856,519,3,520,2.647,521,5.269,522,3.856,523,3.066,524,4.014,525,2.647,526,3.066,527,4.467,528,3.066,529,4.467,530,3.066,531,3.066,532,2.647,533,3.066,534,3.066,535,3.856,536,2.647]],["title/controllers/OrganizationController.html",[0,1.195,537,2.69]],["body/controllers/OrganizationController.html",[0,1.813,2,1.397,3,0.195,4,0.195,5,0.151,7,0.526,8,0.844,9,2.225,10,1.338,11,0.017,12,2.387,13,2.254,14,0.556,16,0.618,17,0.761,18,0.297,19,0.556,22,3.097,23,2.027,26,0.195,27,0.077,28,2.027,29,1.927,30,2.387,32,0.683,34,0.012,35,0.012,537,4.08,538,3.845,539,4.454,540,3.652,541,3.444,542,3.444,543,4.454,544,4.454,545,4.454]],["title/entities/OrganizationMetadata.html",[77,2.169,524,2.485]],["body/entities/OrganizationMetadata.html",[3,0.102,4,0.102,5,0.079,7,0.276,10,1.815,11,0.017,14,0.755,17,0.846,18,0.239,26,0.102,27,0.04,34,0.008,35,0.008,56,0.643,63,1.441,68,0.917,77,2.069,78,2.371,79,1.417,81,1.948,83,1.807,87,2.257,93,4.267,96,3.163,98,3.559,110,1.742,111,4.673,112,2.81,119,1.804,129,4.673,144,3.775,316,3.138,317,3.855,318,3.855,319,3.138,321,4.475,322,3.138,323,3.138,324,4.717,325,2.566,326,3.138,337,4.717,473,3.898,519,3.656,522,2.014,524,2.371,525,3.138,532,3.855,535,3.138,546,5.396,547,2.014,548,4.465,549,4.465,550,4.465,551,4.465,552,2.333,553,5.041,554,4.352,555,5.041,556,2.333,557,2.333,558,2.333,559,2.333,560,2.333,561,3.634,562,3.634,563,3.634,564,2.333,565,2.333,566,2.333,567,2.333,568,2.333,569,4.465,570,3.634,571,2.333,572,3.634]],["title/modules/OrganizationModule.html",[36,0.614,573,2.69]],["body/modules/OrganizationModule.html",[2,1.554,3,0.155,4,0.155,5,0.12,11,0.017,18,0.309,19,0.443,26,0.155,27,0.061,34,0.011,35,0.011,36,0.92,38,1.112,39,1.33,40,1.534,41,1.534,42,1.393,43,2.353,44,1.393,48,2.778,49,2.917,50,2.143,51,1.534,52,1.461,54,1.775,56,0.976,374,4.244,380,3.06,382,2.502,519,2.82,524,3.231,536,3.06,537,4.032,540,3.838,541,2.741,573,5.23,574,3.06,575,3.06,576,3.06,577,3.544,578,3.544,579,3.497,580,3.544,581,2.741,582,3.544,583,3.544,584,3.06,585,3.544,586,3.544]],["title/classes/OrganizationResolver.html",[27,0.066,579,2.69]],["body/classes/OrganizationResolver.html",[3,0.167,4,0.167,5,0.13,7,0.452,8,0.762,10,1.567,11,0.017,14,0.742,16,0.724,17,0.783,18,0.26,26,0.167,27,0.066,28,1.739,29,1.654,32,0.801,34,0.011,35,0.011,59,1.502,61,3.232,62,2.797,63,1.568,66,3.184,67,2.797,68,1.502,69,2.048,83,1.37,87,1.253,93,3.685,96,2.641,172,1.654,205,2.971,234,2.493,519,2.971,540,3.928,541,2.955,579,3.685,581,2.955,587,3.3,588,6.385,589,3.822,590,3.822,591,3.822,592,5.218,593,3.822,594,3.822]],["title/injectables/OrganizationService.html",[70,0.922,540,2.169]],["body/injectables/OrganizationService.html",[3,0.175,4,0.175,5,0.136,7,0.473,8,0.786,9,2.133,11,0.017,14,0.76,16,0.747,17,0.709,18,0.285,19,0.5,26,0.175,27,0.069,29,1.731,32,0.826,34,0.011,35,0.011,63,1.056,70,1.303,71,1.649,74,1.918,76,1.821,83,1.434,87,1.312,110,1.918,126,3.094,172,1.731,205,3.065,225,3.454,234,3.512,382,2.825,519,3.065,540,3.065,581,3.094,595,3.454,596,6.507,597,4.001,598,6.993,599,4.001,600,4.001,601,4.001,602,4.001,603,4.001,604,4.001,605,4.001]],["title/controllers/PaymentController.html",[0,1.195,606,2.69]],["body/controllers/PaymentController.html",[0,1.813,2,1.397,3,0.195,4,0.195,5,0.151,7,0.526,8,0.844,9,2.225,10,1.338,11,0.017,12,2.387,13,2.254,14,0.556,16,0.618,17,0.761,18,0.297,19,0.556,22,3.097,23,2.027,26,0.195,27,0.077,28,2.027,29,1.927,30,2.387,32,0.683,34,0.012,35,0.012,56,1.227,606,4.08,607,3.845,608,4.454,609,3.897,610,3.845,611,3.444,612,4.454,613,4.454]],["title/modules/PaymentModule.html",[36,0.614,614,2.69]],["body/modules/PaymentModule.html",[2,1.693,3,0.176,4,0.176,5,0.136,11,0.017,18,0.297,19,0.502,26,0.176,27,0.069,34,0.012,35,0.012,36,0.982,38,1.26,39,1.507,40,1.738,41,1.738,42,1.579,43,2.512,44,1.579,48,2.885,49,3.03,50,2.336,51,1.738,52,1.655,54,1.935,56,1.107,606,4.304,609,4.254,610,3.468,614,5.256,615,3.468,616,4.017,617,3.468,618,4.017,619,4.017,620,3.811,621,4.017]],["title/classes/PaymentResolver.html",[27,0.066,620,2.69]],["body/classes/PaymentResolver.html",[3,0.208,4,0.208,5,0.162,7,0.563,8,0.881,10,1.431,11,0.017,14,0.595,16,0.661,17,0.872,18,0.208,26,0.208,27,0.082,32,0.731,34,0.013,35,0.013,59,1.873,61,3.523,62,2.553,63,1.592,66,3.233,67,3.233,68,1.873,69,2.553,620,4.26,622,4.114,623,6.033,624,4.765]],["title/injectables/PaymentService.html",[70,0.922,609,2.315]],["body/injectables/PaymentService.html",[3,0.22,4,0.22,5,0.17,7,0.594,8,0.911,9,2.325,11,0.016,14,0.627,16,0.697,17,0.822,18,0.22,19,0.627,26,0.22,27,0.087,32,0.771,34,0.013,35,0.013,70,1.509,71,2.07,74,2.407,76,2.285,609,3.789,625,4.336,626,5.022,627,4.336]],["title/controllers/PropertyController.html",[0,1.195,628,2.69]],["body/controllers/PropertyController.html",[0,1.813,2,1.397,3,0.195,4,0.195,5,0.151,7,0.526,8,0.844,9,2.225,10,1.338,11,0.017,12,2.387,13,2.254,14,0.556,16,0.618,17,0.761,18,0.297,19,0.556,22,3.097,23,2.027,26,0.195,27,0.077,28,2.027,29,1.927,30,2.387,32,0.683,34,0.012,35,0.012,56,1.227,628,4.08,629,3.845,630,4.454,631,3.897,632,3.845,633,3.444,634,4.454,635,4.454]],["title/modules/PropertyModule.html",[36,0.614,636,2.69]],["body/modules/PropertyModule.html",[2,1.693,3,0.176,4,0.176,5,0.136,11,0.017,18,0.297,19,0.502,26,0.176,27,0.069,34,0.012,35,0.012,36,0.982,38,1.26,39,1.507,40,1.738,41,1.738,42,1.579,43,2.512,44,1.579,48,2.885,49,3.03,50,2.336,51,1.738,52,1.655,54,1.935,56,1.107,628,4.304,631,4.254,632,3.468,636,5.256,637,3.468,638,4.017,639,3.468,640,4.017,641,4.017,642,3.811,643,4.017]],["title/classes/PropertyResolver.html",[27,0.066,642,2.69]],["body/classes/PropertyResolver.html",[3,0.208,4,0.208,5,0.162,7,0.563,8,0.881,10,1.431,11,0.017,14,0.595,16,0.661,17,0.872,18,0.208,26,0.208,27,0.082,32,0.731,34,0.013,35,0.013,59,1.873,61,3.523,62,2.553,63,1.592,66,3.233,67,3.233,68,1.873,69,2.553,642,4.26,644,4.114,645,6.033,646,4.765]],["title/injectables/PropertyService.html",[70,0.922,631,2.315]],["body/injectables/PropertyService.html",[3,0.22,4,0.22,5,0.17,7,0.594,8,0.911,9,2.325,11,0.016,14,0.627,16,0.697,17,0.822,18,0.22,19,0.627,26,0.22,27,0.087,32,0.771,34,0.013,35,0.013,70,1.509,71,2.07,74,2.407,76,2.285,631,3.789,647,4.336,648,5.022,649,4.336]],["title/modules/QushahConfigModule.html",[36,0.614,218,2.485]],["body/modules/QushahConfigModule.html",[3,0.199,4,0.199,5,0.154,11,0.016,18,0.283,19,0.569,26,0.199,27,0.079,34,0.012,35,0.012,36,0.944,38,1.428,54,1.632,96,2.304,218,3.823,253,3.215,255,3.931,260,3.931,261,3.931,650,4.553,651,5.06,652,4.553,653,4.553,654,3.931,655,7.374,656,3.931,657,4.553,658,3.931,659,3.931,660,3.931,661,3.931,662,3.931,663,3.931,664,4.553,665,4.553,666,4.553,667,3.931,668,3.931,669,4.553]],["title/injectables/QushahConfigService.html",[70,0.922,227,2.69]],["body/injectables/QushahConfigService.html",[3,0.189,4,0.189,5,0.147,7,0.511,8,0.827,11,0.017,14,0.708,16,0.6,17,0.833,18,0.248,19,0.54,26,0.189,27,0.075,28,1.967,29,1.87,32,0.663,34,0.012,35,0.012,63,1.495,70,1.371,71,1.781,83,2.031,87,2.072,172,2.735,227,4.001,228,4.892,234,2.82,237,4.892,239,4.888,240,2.82,252,6.171,253,3.052,670,3.731,671,4.322,672,4.322,673,4.322,674,4.322]],["title/classes/SubgraphsBuilder.html",[27,0.066,461,2.69]],["body/classes/SubgraphsBuilder.html",[3,0.174,4,0.174,5,0.135,7,0.471,8,0.784,11,0.017,14,0.498,16,0.553,17,0.8,18,0.235,26,0.174,27,0.069,32,0.824,34,0.011,35,0.011,56,1.098,59,1.566,63,1.417,83,1.429,87,1.307,122,3.254,125,3.699,168,3.457,172,1.725,174,3.057,181,2.269,182,2.814,190,2.422,192,2.422,205,3.057,240,2.6,461,3.791,675,4.635,676,3.441,677,6.071,678,3.986,679,3.986,680,5.369,681,3.986,682,3.986,683,3.986,684,5.369,685,3.986,686,5.369,687,3.986,688,3.986,689,3.986]],["title/controllers/UserController.html",[0,1.195,690,2.69]],["body/controllers/UserController.html",[0,1.813,2,1.397,3,0.195,4,0.195,5,0.151,7,0.526,8,0.844,9,2.225,10,1.338,11,0.017,12,2.387,13,2.254,14,0.556,16,0.618,17,0.761,18,0.297,19,0.556,22,3.097,23,2.027,26,0.195,27,0.077,28,2.027,29,1.927,30,2.387,32,0.683,34,0.012,35,0.012,56,1.227,690,4.08,691,3.845,692,4.454,693,3.897,694,3.845,695,3.444,696,4.454,697,4.454]],["title/modules/UserModule.html",[36,0.614,698,2.69]],["body/modules/UserModule.html",[2,1.693,3,0.176,4,0.176,5,0.136,11,0.017,18,0.297,19,0.502,26,0.176,27,0.069,34,0.012,35,0.012,36,0.982,38,1.26,39,1.507,40,1.738,41,1.738,42,1.579,43,2.512,44,1.579,48,2.885,49,3.03,50,2.336,51,1.738,52,1.655,54,1.935,56,1.107,690,4.304,693,4.254,694,3.468,698,5.256,699,3.468,700,4.017,701,3.468,702,4.017,703,4.017,704,3.811,705,4.017]],["title/classes/UserResolver.html",[27,0.066,704,2.69]],["body/classes/UserResolver.html",[3,0.208,4,0.208,5,0.162,7,0.563,8,0.881,10,1.431,11,0.017,14,0.595,16,0.661,17,0.872,18,0.208,26,0.208,27,0.082,32,0.731,34,0.013,35,0.013,59,1.873,61,3.523,62,2.553,63,1.592,66,3.233,67,3.233,68,1.873,69,2.553,704,4.26,706,4.114,707,6.033,708,4.765]],["title/injectables/UserService.html",[70,0.922,693,2.315]],["body/injectables/UserService.html",[3,0.22,4,0.22,5,0.17,7,0.594,8,0.911,9,2.325,11,0.016,14,0.627,16,0.697,17,0.822,18,0.22,19,0.627,26,0.22,27,0.087,32,0.771,34,0.013,35,0.013,70,1.509,71,2.07,74,2.407,76,2.285,693,3.789,709,4.336,710,5.022,711,4.336]],["title/coverage.html",[712,4.027]],["body/coverage.html",[0,1.769,1,1.133,5,0.054,6,1.385,11,0.017,20,0.975,24,1.241,27,0.113,34,0.006,35,0.006,42,2.288,57,1.133,60,1.385,70,1.481,72,1.385,77,1.972,78,1.752,80,2.318,87,0.526,106,1.133,110,1.941,113,1.241,114,1.241,140,5.283,166,1.241,167,1.385,174,0.914,179,1.047,219,1.047,223,1.385,224,1.385,227,1.133,256,1.133,282,1.241,283,1.385,284,1.385,298,1.385,341,1.385,342,1.385,349,4.001,393,1.133,394,1.385,396,0.975,404,1.385,407,1.133,408,1.385,410,0.975,412,1.241,421,1.133,423,1.385,426,1.385,434,1.047,435,1.241,446,1.385,461,1.133,475,1.133,476,1.385,478,0.975,480,1.241,489,1.133,491,1.385,494,1.385,497,1.133,498,1.385,500,0.975,502,1.241,511,1.133,513,1.385,516,1.385,519,1.529,520,2.318,524,1.752,537,1.133,538,1.385,540,0.914,542,1.241,546,2.318,547,2.318,579,1.133,587,1.385,595,1.385,606,1.133,607,1.385,609,0.975,611,1.241,620,1.133,622,1.385,625,1.385,628,1.133,629,1.385,631,0.975,633,1.241,642,1.133,644,1.385,647,1.385,670,1.385,675,1.385,676,1.385,690,1.133,691,1.385,693,0.975,695,1.241,704,1.133,706,1.385,709,1.385,712,1.241,713,1.385,714,1.605,715,1.605,716,6.724,717,7.133,718,1.385,719,7.418,720,1.385,721,1.385,722,1.385,723,4.467,724,6.925,725,2.686,726,1.385,727,1.385,728,1.385,729,1.385,730,1.385,731,2.686,732,1.605,733,1.385,734,3.463,735,1.385,736,1.385,737,1.385,738,1.385,739,1.385,740,1.385,741,1.385,742,1.385,743,1.385,744,1.385,745,1.385,746,1.385,747,1.385,748,1.385,749,1.385,750,1.385,751,1.605,752,2.678,753,2.678,754,1.385,755,3.495,756,1.385,757,1.385,758,1.385,759,1.605]],["title/dependencies.html",[39,1.72,760,2.743]],["body/dependencies.html",[11,0.017,19,0.547,23,1.992,34,0.012,35,0.012,39,1.642,68,1.72,110,2.099,176,3.385,253,3.091,348,3.779,382,3.091,458,3.385,460,3.779,651,3.779,761,5.713,762,4.378,763,4.378,764,4.378,765,5.713,766,6.361,767,4.378,768,4.378,769,4.378,770,4.378,771,4.378,772,4.378,773,4.378,774,4.378,775,3.779,776,4.378,777,4.378,778,4.378,779,4.378,780,4.378,781,4.378,782,4.378,783,4.378,784,4.378,785,4.378,786,4.378,787,4.378,788,4.378,789,4.378]],["title/miscellaneous/enumerations.html",[790,1.931,791,3.957]],["body/miscellaneous/enumerations.html",[7,0.585,11,0.016,34,0.013,35,0.013,76,2.812,146,4.901,790,3.007,791,4.273,792,6.179,793,4.949,794,6.179,795,4.949,796,6.179,797,6.179,798,6.179,799,6.179,800,6.179,801,6.179,802,6.179]],["title/miscellaneous/functions.html",[790,1.931,803,3.957]],["body/miscellaneous/functions.html",[7,0.467,11,0.014,16,0.549,34,0.011,35,0.011,42,3.12,63,1.409,83,1.914,87,1.751,98,4.572,113,4.13,114,4.13,130,3.414,144,2.58,146,3.484,172,2.311,716,3.414,718,3.414,720,3.414,721,3.414,726,3.414,727,3.414,729,3.414,733,3.414,736,3.414,738,3.414,740,3.414,752,3.058,753,4.676,790,2.403,803,3.414,804,7.422,805,4.611,806,3.955,807,3.955,808,3.955,809,5.341,810,5.341]],["title/index.html",[7,0.376,811,3.178,812,3.178]],["body/index.html",[11,0.016,34,0.004,35,0.004,39,0.384,43,0.422,52,0.422,75,2.121,76,2.427,81,1.317,87,0.335,110,0.872,120,0.883,138,2.121,145,0.883,151,2.121,158,0.883,185,0.883,204,0.883,206,0.791,240,0.667,273,0.722,275,0.722,288,0.883,305,1.9,306,0.791,321,0.791,338,0.883,350,0.883,366,0.883,392,0.883,428,3.983,449,3.568,473,0.791,496,3.983,518,3.776,554,0.883,627,3.983,649,4.474,667,0.883,668,1.571,711,4.724,712,0.791,713,1.571,775,2.572,813,5.911,814,2.457,815,0.883,816,2.979,817,1.023,818,1.819,819,1.819,820,3.415,821,1.023,822,3.983,823,2.457,824,1.819,825,1.023,826,1.819,827,1.023,828,1.023,829,1.023,830,4.614,831,2.457,832,1.023,833,1.023,834,1.023,835,3.784,836,1.023,837,1.819,838,1.023,839,1.023,840,1.023,841,1.023,842,1.023,843,1.023,844,1.023,845,1.023,846,1.819,847,1.023,848,1.023,849,2.457,850,1.023,851,1.023,852,1.023,853,1.023,854,2.121,855,1.819,856,2.457,857,1.023,858,1.023,859,1.819,860,1.023,861,1.023,862,1.023,863,1.023,864,1.023,865,2.457,866,1.819,867,1.023,868,0.883,869,2.979,870,3.415,871,1.023,872,4.1,873,1.819,874,1.023,875,4.374,876,3.784,877,1.023,878,1.023,879,1.023,880,1.819,881,1.023,882,1.023,883,1.023,884,1.819,885,1.023,886,1.023,887,1.023,888,1.023,889,1.023,890,1.023,891,1.023,892,2.979,893,1.819,894,1.023,895,2.457,896,1.819,897,2.457,898,2.121,899,1.023,900,4.1,901,6,902,3.784,903,1.819,904,1.819,905,1.023,906,1.023,907,1.023,908,2.979,909,4.474,910,1.023,911,1.023,912,1.819,913,1.023,914,1.819,915,3.415,916,1.023,917,1.023,918,1.023,919,1.023,920,2.979,921,2.457,922,1.819,923,1.023,924,1.023,925,1.023,926,1.023,927,2.457,928,1.023,929,2.457,930,4.374,931,5.014,932,1.023,933,1.023,934,1.819,935,1.819,936,1.819,937,1.819,938,1.023,939,1.023,940,1.819,941,1.023,942,1.819,943,1.023,944,1.023,945,1.023,946,1.819,947,1.023,948,1.023,949,1.023,950,1.023,951,1.023,952,1.819,953,1.023,954,2.979,955,1.819,956,3.415,957,2.457,958,3.784,959,1.023,960,1.023,961,1.023,962,1.819,963,1.023,964,1.023,965,1.023,966,5.182,967,1.023,968,1.023,969,1.819,970,1.023,971,3.415,972,2.979,973,1.023,974,2.979,975,1.819,976,3.415,977,1.819,978,1.023,979,0.883,980,1.023,981,1.023,982,1.023,983,1.023,984,1.023,985,1.023,986,1.023,987,1.819,988,1.023,989,1.819,990,1.819,991,1.023,992,1.023,993,1.819,994,1.023,995,1.819,996,1.819,997,1.023,998,1.023,999,1.819,1000,1.023,1001,1.023,1002,1.023,1003,1.819,1004,2.457,1005,1.819,1006,2.457,1007,2.457,1008,1.819,1009,1.819,1010,2.457,1011,1.023,1012,1.819,1013,1.023,1014,1.023,1015,1.023,1016,2.457,1017,1.023,1018,3.415,1019,1.023,1020,1.819,1021,2.457,1022,1.023,1023,1.023,1024,1.023,1025,1.819,1026,1.023,1027,1.023,1028,1.023,1029,1.023,1030,1.023,1031,1.023,1032,1.023,1033,1.023,1034,2.457,1035,1.023,1036,1.023,1037,1.023,1038,1.819,1039,1.023,1040,1.023,1041,1.819,1042,1.819,1043,1.023,1044,1.023,1045,1.819,1046,1.023,1047,1.023,1048,1.023,1049,1.023,1050,1.023,1051,1.023,1052,1.023,1053,2.457,1054,1.819,1055,1.023,1056,1.023,1057,1.819,1058,1.023,1059,1.023,1060,1.023,1061,1.023,1062,1.819,1063,1.023,1064,1.023,1065,1.023,1066,1.023,1067,1.819,1068,1.023,1069,2.121,1070,1.023,1071,1.023,1072,1.023,1073,1.023,1074,1.023,1075,1.023,1076,1.023,1077,1.023,1078,1.023,1079,1.023,1080,1.023,1081,1.819,1082,1.023,1083,1.819,1084,1.819,1085,1.023,1086,1.819,1087,1.023,1088,1.023,1089,1.023,1090,1.819,1091,1.023,1092,1.023,1093,1.023,1094,1.023,1095,1.023,1096,1.023,1097,2.457,1098,1.023,1099,1.023,1100,1.023,1101,1.023,1102,1.023,1103,1.819,1104,1.023,1105,1.023,1106,3.784,1107,1.023,1108,1.023,1109,1.819,1110,1.023,1111,1.023,1112,1.023,1113,1.023,1114,1.023,1115,1.023,1116,1.023,1117,1.023,1118,1.023,1119,1.023,1120,1.023,1121,1.023,1122,1.023,1123,1.023,1124,1.023,1125,1.023,1126,1.023,1127,1.023,1128,1.023,1129,1.023,1130,1.023,1131,1.023,1132,1.023,1133,1.819,1134,2.457,1135,1.023,1136,1.023,1137,1.023,1138,1.023,1139,1.023,1140,1.023,1141,1.023,1142,1.023,1143,1.023,1144,1.023,1145,1.023,1146,1.023,1147,1.023,1148,1.819,1149,1.023,1150,1.023,1151,1.023,1152,1.023,1153,1.023,1154,1.819,1155,1.023,1156,1.023]],["title/modules.html",[38,1.634]],["body/modules.html",[11,0.012,34,0.012,35,0.012,37,2.964,38,1.317,48,1.73,49,1.817,199,3.246,218,2.739,374,2.739,399,2.964,415,2.964,429,2.964,433,2.739,483,2.964,505,2.964,573,2.964,614,2.964,636,2.964,698,2.964,1069,6.53,1157,7.564,1158,7.564,1159,7.758,1160,6.9,1161,6.9]],["title/overview.html",[1162,4.495]],["body/overview.html",[2,0.805,11,0.016,20,2.881,34,0.008,35,0.008,36,0.413,37,4.552,38,0.805,39,0.963,40,1.111,41,1.111,42,1.009,43,1.058,44,1.009,45,2.216,46,2.216,47,2.216,48,2.979,49,2.916,50,1.693,51,1.111,52,1.058,59,1.009,71,1.058,79,1.56,214,2.216,215,2.216,216,2.216,217,2.216,218,3.093,219,4.08,374,3.093,396,2.881,399,3.743,400,2.216,401,2.216,410,2.881,415,4.552,416,2.216,417,2.216,429,4.552,430,2.216,431,2.216,432,2.216,433,3.093,434,3.093,478,2.881,483,4.552,484,2.216,485,2.216,500,2.881,505,4.552,506,2.216,507,2.216,540,2.699,573,4.757,574,2.216,575,2.216,576,2.216,609,2.881,614,4.552,615,2.216,617,2.216,631,2.881,636,4.552,637,2.216,639,2.216,693,2.881,698,4.552,699,2.216,701,2.216,979,2.216,1162,2.216,1163,3.912,1164,2.567,1165,2.567]],["title/properties.html",[81,2.457,760,2.743]],["body/properties.html",[11,0.016,34,0.014,35,0.014,81,3.068,815,4.942,1166,5.724,1167,5.724,1168,5.724,1169,5.724,1170,5.724]],["title/miscellaneous/variables.html",[352,3.545,790,1.931]],["body/miscellaneous/variables.html",[5,0.062,7,0.215,11,0.017,17,0.752,24,2.303,34,0.006,35,0.006,63,0.48,83,1.068,87,2.121,96,1.508,110,2.623,144,4.678,146,4.624,239,1.406,256,2.671,349,5.081,352,1.406,412,2.303,435,1.406,437,2.571,438,2.571,439,2.571,440,2.571,441,2.571,442,2.571,443,2.571,444,2.571,480,2.303,502,2.303,542,2.303,584,1.57,611,2.303,633,2.303,654,2.571,656,2.571,658,2.571,659,2.571,660,2.571,661,2.571,662,2.571,663,2.571,695,2.303,722,1.57,723,5.749,728,1.57,730,1.57,735,1.57,737,1.57,739,1.57,741,1.57,742,1.57,743,1.57,744,1.57,745,1.57,746,1.57,747,1.57,748,1.57,749,1.57,750,1.57,752,1.406,753,2.303,754,2.571,755,4.165,756,3.266,757,3.266,758,2.571,790,1.105,805,1.57,822,1.57,854,2.571,868,1.57,898,3.266,909,1.57,1171,1.819,1172,1.819,1173,1.819,1174,1.819,1175,1.819,1176,1.819,1177,1.819,1178,1.819,1179,5.471,1180,1.819,1181,1.819,1182,1.819,1183,1.819,1184,4.373,1185,1.819,1186,4.373,1187,2.979,1188,1.819,1189,1.819,1190,3.783,1191,2.979,1192,1.819,1193,1.819,1194,1.819,1195,1.819,1196,1.819,1197,4.373,1198,1.819,1199,1.819,1200,1.819,1201,1.819,1202,1.819,1203,1.819,1204,1.819,1205,1.819,1206,1.819,1207,1.819,1208,1.819,1209,1.819,1210,1.819,1211,1.819,1212,1.819,1213,2.979,1214,5.91,1215,2.979,1216,2.979,1217,2.979,1218,2.979,1219,2.979,1220,2.979,1221,2.979,1222,2.979,1223,2.979,1224,2.979,1225,2.979,1226,2.979,1227,2.979,1228,2.979,1229,1.819,1230,2.979,1231,2.979,1232,2.979,1233,1.819,1234,1.819,1235,1.819,1236,1.819,1237,1.819,1238,1.819,1239,1.819,1240,2.979]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"modules/QushahConfigModule.html":{},"injectables/QushahConfigService.html":{},"classes/SubgraphsBuilder.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":716,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["0.0.1",{"_index":1167,"title":{},"body":{"properties.html":{}}}],["0.2.0",{"_index":784,"title":{},"body":{"dependencies.html":{}}}],["0.3.20",{"_index":787,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":719,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":717,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":725,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":734,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":751,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":732,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":731,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":120,"title":{},"body":{"entities/BaseEntity.html":{},"index.html":{}}}],["10.0.0",{"_index":766,"title":{},"body":{"dependencies.html":{}}}],["10.4.15",{"_index":768,"title":{},"body":{"dependencies.html":{}}}],["11.0.0",{"_index":771,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":1165,"title":{},"body":{"overview.html":{}}}],["12.2.2",{"_index":765,"title":{},"body":{"dependencies.html":{}}}],["16",{"_index":1163,"title":{},"body":{"overview.html":{}}}],["16.10.0",{"_index":776,"title":{},"body":{"dependencies.html":{}}}],["16.4.7",{"_index":774,"title":{},"body":{"dependencies.html":{}}}],["17.0.33",{"_index":773,"title":{},"body":{"dependencies.html":{}}}],["17.13.3",{"_index":779,"title":{},"body":{"dependencies.html":{}}}],["17.7.2",{"_index":789,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":473,"title":{},"body":{"modules/GraphQLMicroserviceModule.html":{},"entities/OrganizationMetadata.html":{},"index.html":{}}}],["2.9.3",{"_index":761,"title":{},"body":{"dependencies.html":{}}}],["22",{"_index":828,"title":{},"body":{"index.html":{}}}],["3",{"_index":979,"title":{},"body":{"index.html":{},"overview.html":{}}}],["3.3.0",{"_index":767,"title":{},"body":{"dependencies.html":{}}}],["3d",{"_index":1006,"title":{},"body":{"index.html":{}}}],["4",{"_index":1017,"title":{},"body":{"index.html":{}}}],["4.11.3",{"_index":763,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":321,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{},"entities/OrganizationMetadata.html":{},"index.html":{}}}],["5.0",{"_index":572,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["5.4.2",{"_index":778,"title":{},"body":{"dependencies.html":{}}}],["5432",{"_index":362,"title":{},"body":{"classes/DataSource.html":{}}}],["6",{"_index":1080,"title":{},"body":{"index.html":{}}}],["7",{"_index":1105,"title":{},"body":{"index.html":{}}}],["7.8.1",{"_index":786,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1131,"title":{},"body":{"index.html":{}}}],["8.13.1",{"_index":781,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":1164,"title":{},"body":{"overview.html":{}}}],["9996",{"_index":147,"title":{},"body":{"entities/BaseEntity.html":{}}}],["__dirname",{"_index":584,"title":{},"body":{"modules/OrganizationModule.html":{},"miscellaneous/variables.html":{}}}],["abstract",{"_index":118,"title":{},"body":{"entities/BaseEntity.html":{}}}],["abuse",{"_index":1145,"title":{},"body":{"index.html":{}}}],["access",{"_index":904,"title":{},"body":{"index.html":{}}}],["accessible",{"_index":1108,"title":{},"body":{"index.html":{}}}],["accessors",{"_index":232,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["accurate",{"_index":981,"title":{},"body":{"index.html":{}}}],["actions",{"_index":940,"title":{},"body":{"index.html":{}}}],["add",{"_index":331,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["adding",{"_index":1074,"title":{},"body":{"index.html":{}}}],["additional",{"_index":1194,"title":{},"body":{"miscellaneous/variables.html":{}}}],["addresses",{"_index":945,"title":{},"body":{"index.html":{}}}],["admin",{"_index":938,"title":{},"body":{"index.html":{}}}],["against",{"_index":923,"title":{},"body":{"index.html":{}}}],["alias",{"_index":1184,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allow_interest_earning",{"_index":323,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{},"entities/OrganizationMetadata.html":{}}}],["allowing",{"_index":957,"title":{},"body":{"index.html":{}}}],["allowinterestearning",{"_index":548,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["already",{"_index":1000,"title":{},"body":{"index.html":{}}}],["alter",{"_index":330,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["amounts",{"_index":1019,"title":{},"body":{"index.html":{}}}],["angular",{"_index":894,"title":{},"body":{"index.html":{}}}],["api",{"_index":876,"title":{},"body":{"index.html":{}}}],["apollo/gateway",{"_index":460,"title":{},"body":{"modules/GraphQLGatewayModule.html":{},"dependencies.html":{}}}],["apollo/gateway/src/config",{"_index":682,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["apollo/server",{"_index":762,"title":{},"body":{"dependencies.html":{}}}],["apollo/subgraph",{"_index":764,"title":{},"body":{"dependencies.html":{}}}],["apollofederationdriver",{"_index":468,"title":{},"body":{"modules/GraphQLMicroserviceModule.html":{}}}],["apollofederationdriverconfig",{"_index":469,"title":{},"body":{"modules/GraphQLMicroserviceModule.html":{}}}],["apollogatewaydriver",{"_index":456,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["apollogatewaydriverconfig",{"_index":457,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["app",{"_index":185,"title":{},"body":{"classes/Bootstrapper.html":{},"index.html":{}}}],["app.connectmicroservice",{"_index":187,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["app.listen(port",{"_index":196,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["app.startallmicroservices",{"_index":194,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["appcontext",{"_index":258,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["appcontext.get(configservice",{"_index":262,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["applying",{"_index":1146,"title":{},"body":{"index.html":{}}}],["appropriate",{"_index":1135,"title":{},"body":{"index.html":{}}}],["apps",{"_index":868,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["apps/${microservice}/src/typeorm.data",{"_index":1203,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/${schema}/**/**.entity{.ts,.js",{"_index":369,"title":{},"body":{"classes/DataSource.html":{}}}],["apps/${schema}/src/migrations/**/*{.ts,.js",{"_index":371,"title":{},"body":{"classes/DataSource.html":{}}}],["apps/${schema}/src/subscriber/**/*{.ts,.js",{"_index":373,"title":{},"body":{"classes/DataSource.html":{}}}],["apps/.../gateway.module.ts",{"_index":1180,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../main.ts",{"_index":804,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../typeorm.data",{"_index":1179,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/auth/src/auth.controller.ts",{"_index":6,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["apps/auth/src/auth.controller.ts:11",{"_index":15,"title":{},"body":{"controllers/AuthController.html":{}}}],["apps/auth/src/auth.module.ts",{"_index":53,"title":{},"body":{"modules/AuthModule.html":{}}}],["apps/auth/src/auth.resolver.ts",{"_index":60,"title":{},"body":{"classes/AuthResolver.html":{},"coverage.html":{}}}],["apps/auth/src/auth.resolver.ts:6",{"_index":65,"title":{},"body":{"classes/AuthResolver.html":{}}}],["apps/auth/src/auth.service.ts",{"_index":72,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["apps/auth/src/auth.service.ts:5",{"_index":73,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/auth/src/main.ts",{"_index":718,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/documentation/src/documentation.controller.ts",{"_index":394,"title":{},"body":{"controllers/DocumentationController.html":{},"coverage.html":{}}}],["apps/documentation/src/documentation.controller.ts:9",{"_index":395,"title":{},"body":{"controllers/DocumentationController.html":{}}}],["apps/documentation/src/documentation.module.ts",{"_index":402,"title":{},"body":{"modules/DocumentationModule.html":{}}}],["apps/documentation/src/documentation.service.ts",{"_index":404,"title":{},"body":{"injectables/DocumentationService.html":{},"coverage.html":{}}}],["apps/documentation/src/documentation.service.ts:5",{"_index":405,"title":{},"body":{"injectables/DocumentationService.html":{}}}],["apps/documentation/src/main.ts",{"_index":720,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/escrow/src/escrow.controller.ts",{"_index":408,"title":{},"body":{"controllers/EscrowController.html":{},"coverage.html":{}}}],["apps/escrow/src/escrow.controller.ts:11",{"_index":409,"title":{},"body":{"controllers/EscrowController.html":{}}}],["apps/escrow/src/escrow.module.ts",{"_index":419,"title":{},"body":{"modules/EscrowModule.html":{}}}],["apps/escrow/src/escrow.resolver.ts",{"_index":423,"title":{},"body":{"classes/EscrowResolver.html":{},"coverage.html":{}}}],["apps/escrow/src/escrow.resolver.ts:6",{"_index":425,"title":{},"body":{"classes/EscrowResolver.html":{}}}],["apps/escrow/src/escrow.service.ts",{"_index":426,"title":{},"body":{"injectables/EscrowService.html":{},"coverage.html":{}}}],["apps/escrow/src/escrow.service.ts:5",{"_index":427,"title":{},"body":{"injectables/EscrowService.html":{}}}],["apps/escrow/src/main.ts",{"_index":721,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/escrow/src/typeorm.data",{"_index":722,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/gateway/src/gateway.module.ts",{"_index":435,"title":{},"body":{"modules/GatewayModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/gateway/src/gateway.service.ts",{"_index":446,"title":{},"body":{"injectables/GatewayService.html":{},"coverage.html":{}}}],["apps/gateway/src/gateway.service.ts:4",{"_index":447,"title":{},"body":{"injectables/GatewayService.html":{}}}],["apps/gateway/src/gateway.service.ts:7",{"_index":448,"title":{},"body":{"injectables/GatewayService.html":{}}}],["apps/gateway/src/main.ts",{"_index":726,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/media/src/main.ts",{"_index":727,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/media/src/media.controller.ts",{"_index":476,"title":{},"body":{"controllers/MediaController.html":{},"coverage.html":{}}}],["apps/media/src/media.controller.ts:11",{"_index":477,"title":{},"body":{"controllers/MediaController.html":{}}}],["apps/media/src/media.module.ts",{"_index":487,"title":{},"body":{"modules/MediaModule.html":{}}}],["apps/media/src/media.resolver.ts",{"_index":491,"title":{},"body":{"classes/MediaResolver.html":{},"coverage.html":{}}}],["apps/media/src/media.resolver.ts:6",{"_index":493,"title":{},"body":{"classes/MediaResolver.html":{}}}],["apps/media/src/media.service.ts",{"_index":494,"title":{},"body":{"injectables/MediaService.html":{},"coverage.html":{}}}],["apps/media/src/media.service.ts:5",{"_index":495,"title":{},"body":{"injectables/MediaService.html":{}}}],["apps/media/src/typeorm.data",{"_index":728,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/notification/src/main.ts",{"_index":729,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/notification/src/notification.controller.ts",{"_index":498,"title":{},"body":{"controllers/NotificationController.html":{},"coverage.html":{}}}],["apps/notification/src/notification.controller.ts:11",{"_index":499,"title":{},"body":{"controllers/NotificationController.html":{}}}],["apps/notification/src/notification.module.ts",{"_index":509,"title":{},"body":{"modules/NotificationModule.html":{}}}],["apps/notification/src/notification.resolver.ts",{"_index":513,"title":{},"body":{"classes/NotificationResolver.html":{},"coverage.html":{}}}],["apps/notification/src/notification.resolver.ts:6",{"_index":515,"title":{},"body":{"classes/NotificationResolver.html":{}}}],["apps/notification/src/notification.service.ts",{"_index":516,"title":{},"body":{"injectables/NotificationService.html":{},"coverage.html":{}}}],["apps/notification/src/notification.service.ts:5",{"_index":517,"title":{},"body":{"injectables/NotificationService.html":{}}}],["apps/notification/src/typeorm.data",{"_index":730,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/organization/src/entities/organization",{"_index":546,"title":{},"body":{"entities/OrganizationMetadata.html":{},"coverage.html":{}}}],["apps/organization/src/entities/organization.entity.ts",{"_index":520,"title":{},"body":{"entities/Organization.html":{},"coverage.html":{}}}],["apps/organization/src/entities/organization.entity.ts:11",{"_index":530,"title":{},"body":{"entities/Organization.html":{}}}],["apps/organization/src/entities/organization.entity.ts:15",{"_index":534,"title":{},"body":{"entities/Organization.html":{}}}],["apps/organization/src/entities/organization.entity.ts:19",{"_index":533,"title":{},"body":{"entities/Organization.html":{}}}],["apps/organization/src/entities/organization.entity.ts:23",{"_index":523,"title":{},"body":{"entities/Organization.html":{}}}],["apps/organization/src/entities/organization.entity.ts:27",{"_index":531,"title":{},"body":{"entities/Organization.html":{}}}],["apps/organization/src/entities/organization.entity.ts:31",{"_index":528,"title":{},"body":{"entities/Organization.html":{}}}],["apps/organization/src/main.ts",{"_index":733,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/organization/src/migrations/1740356244243",{"_index":283,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{},"coverage.html":{}}}],["apps/organization/src/organization.controller.ts",{"_index":538,"title":{},"body":{"controllers/OrganizationController.html":{},"coverage.html":{}}}],["apps/organization/src/organization.controller.ts:11",{"_index":539,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["apps/organization/src/organization.module.ts",{"_index":577,"title":{},"body":{"modules/OrganizationModule.html":{}}}],["apps/organization/src/organization.resolver.ts",{"_index":587,"title":{},"body":{"classes/OrganizationResolver.html":{},"coverage.html":{}}}],["apps/organization/src/organization.resolver.ts:10",{"_index":593,"title":{},"body":{"classes/OrganizationResolver.html":{}}}],["apps/organization/src/organization.resolver.ts:15",{"_index":591,"title":{},"body":{"classes/OrganizationResolver.html":{}}}],["apps/organization/src/organization.resolver.ts:6",{"_index":590,"title":{},"body":{"classes/OrganizationResolver.html":{}}}],["apps/organization/src/organization.service.ts",{"_index":595,"title":{},"body":{"injectables/OrganizationService.html":{},"coverage.html":{}}}],["apps/organization/src/organization.service.ts:13",{"_index":601,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["apps/organization/src/organization.service.ts:17",{"_index":600,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["apps/organization/src/organization.service.ts:7",{"_index":599,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["apps/organization/src/typeorm.data",{"_index":735,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/payment/src/main.ts",{"_index":736,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/payment/src/payment.controller.ts",{"_index":607,"title":{},"body":{"controllers/PaymentController.html":{},"coverage.html":{}}}],["apps/payment/src/payment.controller.ts:11",{"_index":608,"title":{},"body":{"controllers/PaymentController.html":{}}}],["apps/payment/src/payment.module.ts",{"_index":618,"title":{},"body":{"modules/PaymentModule.html":{}}}],["apps/payment/src/payment.resolver.ts",{"_index":622,"title":{},"body":{"classes/PaymentResolver.html":{},"coverage.html":{}}}],["apps/payment/src/payment.resolver.ts:6",{"_index":624,"title":{},"body":{"classes/PaymentResolver.html":{}}}],["apps/payment/src/payment.service.ts",{"_index":625,"title":{},"body":{"injectables/PaymentService.html":{},"coverage.html":{}}}],["apps/payment/src/payment.service.ts:5",{"_index":626,"title":{},"body":{"injectables/PaymentService.html":{}}}],["apps/payment/src/typeorm.data",{"_index":737,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/property/src/main.ts",{"_index":738,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/property/src/property.controller.ts",{"_index":629,"title":{},"body":{"controllers/PropertyController.html":{},"coverage.html":{}}}],["apps/property/src/property.controller.ts:11",{"_index":630,"title":{},"body":{"controllers/PropertyController.html":{}}}],["apps/property/src/property.module.ts",{"_index":640,"title":{},"body":{"modules/PropertyModule.html":{}}}],["apps/property/src/property.resolver.ts",{"_index":644,"title":{},"body":{"classes/PropertyResolver.html":{},"coverage.html":{}}}],["apps/property/src/property.resolver.ts:6",{"_index":646,"title":{},"body":{"classes/PropertyResolver.html":{}}}],["apps/property/src/property.service.ts",{"_index":647,"title":{},"body":{"injectables/PropertyService.html":{},"coverage.html":{}}}],["apps/property/src/property.service.ts:5",{"_index":648,"title":{},"body":{"injectables/PropertyService.html":{}}}],["apps/property/src/typeorm.data",{"_index":739,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/user/src/main.ts",{"_index":740,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/user/src/typeorm.data",{"_index":741,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/user/src/user.controller.ts",{"_index":691,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["apps/user/src/user.controller.ts:11",{"_index":692,"title":{},"body":{"controllers/UserController.html":{}}}],["apps/user/src/user.module.ts",{"_index":702,"title":{},"body":{"modules/UserModule.html":{}}}],["apps/user/src/user.resolver.ts",{"_index":706,"title":{},"body":{"classes/UserResolver.html":{},"coverage.html":{}}}],["apps/user/src/user.resolver.ts:6",{"_index":708,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/user/src/user.service.ts",{"_index":709,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["apps/user/src/user.service.ts:5",{"_index":710,"title":{},"body":{"injectables/UserService.html":{}}}],["architecture",{"_index":892,"title":{},"body":{"index.html":{}}}],["args",{"_index":1213,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arguments",{"_index":1195,"title":{},"body":{"miscellaneous/variables.html":{}}}],["argv",{"_index":756,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ascending",{"_index":165,"title":{},"body":{"entities/BaseEntity.html":{}}}],["async",{"_index":168,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"modules/DatabaseModule.html":{},"modules/GraphQLGatewayModule.html":{},"classes/SubgraphsBuilder.html":{}}}],["attacks",{"_index":926,"title":{},"body":{"index.html":{}}}],["auditable",{"_index":1023,"title":{},"body":{"index.html":{}}}],["auditing",{"_index":1022,"title":{},"body":{"index.html":{}}}],["auth",{"_index":75,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["auth.controller",{"_index":55,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.resolver",{"_index":58,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":21,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth_client",{"_index":796,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth_host",{"_index":437,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["auth_port",{"_index":1216,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authcommand",{"_index":24,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authcommand.ping_auth",{"_index":31,"title":{},"body":{"controllers/AuthController.html":{}}}],["authcontroller",{"_index":1,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticated",{"_index":1139,"title":{},"body":{"index.html":{}}}],["authentication",{"_index":869,"title":{},"body":{"index.html":{}}}],["authmodule",{"_index":37,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1170,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":899,"title":{},"body":{"index.html":{}}}],["authorized",{"_index":1140,"title":{},"body":{"index.html":{}}}],["authresolver",{"_index":57,"title":{"classes/AuthResolver.html":{}},"body":{"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"coverage.html":{}}}],["authservice",{"_index":20,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["autoloadentities",{"_index":389,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["automatically",{"_index":1117,"title":{},"body":{"index.html":{}}}],["autoschemafile",{"_index":471,"title":{},"body":{"modules/GraphQLMicroserviceModule.html":{}}}],["availability",{"_index":995,"title":{},"body":{"index.html":{}}}],["available",{"_index":1161,"title":{},"body":{"modules.html":{}}}],["await",{"_index":181,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"modules/DatabaseModule.html":{},"modules/GraphQLGatewayModule.html":{},"classes/SubgraphsBuilder.html":{}}}],["backend",{"_index":814,"title":{},"body":{"index.html":{}}}],["balancing",{"_index":1141,"title":{},"body":{"index.html":{}}}],["base",{"_index":1079,"title":{},"body":{"index.html":{}}}],["based",{"_index":151,"title":{},"body":{"entities/BaseEntity.html":{},"index.html":{}}}],["baseentity",{"_index":78,"title":{"entities/BaseEntity.html":{}},"body":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"coverage.html":{}}}],["baseentitytypeorm",{"_index":104,"title":{},"body":{"entities/BaseEntity.html":{}}}],["baseentitytypeorm.usedatasource.call(this",{"_index":124,"title":{},"body":{"entities/BaseEntity.html":{}}}],["before",{"_index":985,"title":{},"body":{"index.html":{}}}],["being",{"_index":158,"title":{},"body":{"entities/BaseEntity.html":{},"index.html":{}}}],["blacklisting",{"_index":919,"title":{},"body":{"index.html":{}}}],["booking",{"_index":998,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":324,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{},"entities/OrganizationMetadata.html":{}}}],["bootstrap",{"_index":42,"title":{},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["bootstrapper",{"_index":166,"title":{"classes/Bootstrapper.html":{}},"body":{"classes/Bootstrapper.html":{},"coverage.html":{}}}],["both",{"_index":157,"title":{},"body":{"entities/BaseEntity.html":{}}}],["browse",{"_index":1159,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1157,"title":{},"body":{"modules.html":{}}}],["brute",{"_index":924,"title":{},"body":{"index.html":{}}}],["build",{"_index":677,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["build(...graphnames",{"_index":678,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["builder.util.ts",{"_index":676,"title":{},"body":{"classes/SubgraphsBuilder.html":{},"coverage.html":{}}}],["builder.util.ts:5",{"_index":679,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["c",{"_index":1189,"title":{},"body":{"miscellaneous/variables.html":{}}}],["caching",{"_index":1154,"title":{},"body":{"index.html":{}}}],["captcha",{"_index":928,"title":{},"body":{"index.html":{}}}],["cascade",{"_index":337,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{},"entities/OrganizationMetadata.html":{}}}],["cascade'})@joincolumn({name",{"_index":564,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["case",{"_index":1055,"title":{},"body":{"index.html":{}}}],["ccpa",{"_index":951,"title":{},"body":{"index.html":{}}}],["changes",{"_index":1013,"title":{},"body":{"index.html":{}}}],["changing",{"_index":960,"title":{},"body":{"index.html":{}}}],["channel",{"_index":1089,"title":{},"body":{"index.html":{}}}],["channels",{"_index":1091,"title":{},"body":{"index.html":{}}}],["character",{"_index":301,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["check",{"_index":132,"title":{},"body":{"entities/BaseEntity.html":{}}}],["class",{"_index":27,"title":{"classes/AuthResolver.html":{},"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"classes/EscrowResolver.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"classes/SubgraphsBuilder.html":{},"classes/UserResolver.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"modules/QushahConfigModule.html":{},"injectables/QushahConfigService.html":{},"classes/SubgraphsBuilder.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["classes",{"_index":59,"title":{},"body":{"classes/AuthResolver.html":{},"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"classes/EscrowResolver.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"classes/SubgraphsBuilder.html":{},"classes/UserResolver.html":{},"overview.html":{}}}],["clear",{"_index":972,"title":{},"body":{"index.html":{}}}],["cli",{"_index":854,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["cli.ts",{"_index":755,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["client.enum.ts",{"_index":794,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["clients",{"_index":211,"title":{},"body":{"modules/ClientsModule.html":{}}}],["clientsmodule",{"_index":199,"title":{"modules/ClientsModule.html":{}},"body":{"modules/ClientsModule.html":{},"modules.html":{}}}],["clientsmoduleoptions",{"_index":209,"title":{},"body":{"modules/ClientsModule.html":{}}}],["cluster_authmodule",{"_index":45,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":46,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":47,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_commonmodule",{"_index":214,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_exports",{"_index":215,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_imports",{"_index":217,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_providers",{"_index":216,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_documentationmodule",{"_index":400,"title":{},"body":{"modules/DocumentationModule.html":{},"overview.html":{}}}],["cluster_documentationmodule_providers",{"_index":401,"title":{},"body":{"modules/DocumentationModule.html":{},"overview.html":{}}}],["cluster_escrowmodule",{"_index":416,"title":{},"body":{"modules/EscrowModule.html":{},"overview.html":{}}}],["cluster_escrowmodule_imports",{"_index":418,"title":{},"body":{"modules/EscrowModule.html":{}}}],["cluster_escrowmodule_providers",{"_index":417,"title":{},"body":{"modules/EscrowModule.html":{},"overview.html":{}}}],["cluster_gatewaymodule",{"_index":430,"title":{},"body":{"modules/GatewayModule.html":{},"overview.html":{}}}],["cluster_gatewaymodule_imports",{"_index":432,"title":{},"body":{"modules/GatewayModule.html":{},"overview.html":{}}}],["cluster_gatewaymodule_providers",{"_index":431,"title":{},"body":{"modules/GatewayModule.html":{},"overview.html":{}}}],["cluster_mediamodule",{"_index":484,"title":{},"body":{"modules/MediaModule.html":{},"overview.html":{}}}],["cluster_mediamodule_imports",{"_index":486,"title":{},"body":{"modules/MediaModule.html":{}}}],["cluster_mediamodule_providers",{"_index":485,"title":{},"body":{"modules/MediaModule.html":{},"overview.html":{}}}],["cluster_notificationmodule",{"_index":506,"title":{},"body":{"modules/NotificationModule.html":{},"overview.html":{}}}],["cluster_notificationmodule_imports",{"_index":508,"title":{},"body":{"modules/NotificationModule.html":{}}}],["cluster_notificationmodule_providers",{"_index":507,"title":{},"body":{"modules/NotificationModule.html":{},"overview.html":{}}}],["cluster_organizationmodule",{"_index":574,"title":{},"body":{"modules/OrganizationModule.html":{},"overview.html":{}}}],["cluster_organizationmodule_imports",{"_index":575,"title":{},"body":{"modules/OrganizationModule.html":{},"overview.html":{}}}],["cluster_organizationmodule_providers",{"_index":576,"title":{},"body":{"modules/OrganizationModule.html":{},"overview.html":{}}}],["cluster_paymentmodule",{"_index":615,"title":{},"body":{"modules/PaymentModule.html":{},"overview.html":{}}}],["cluster_paymentmodule_imports",{"_index":616,"title":{},"body":{"modules/PaymentModule.html":{}}}],["cluster_paymentmodule_providers",{"_index":617,"title":{},"body":{"modules/PaymentModule.html":{},"overview.html":{}}}],["cluster_propertymodule",{"_index":637,"title":{},"body":{"modules/PropertyModule.html":{},"overview.html":{}}}],["cluster_propertymodule_imports",{"_index":638,"title":{},"body":{"modules/PropertyModule.html":{}}}],["cluster_propertymodule_providers",{"_index":639,"title":{},"body":{"modules/PropertyModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":699,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":700,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":701,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cmd",{"_index":30,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{}}}],["collection",{"_index":953,"title":{},"body":{"index.html":{}}}],["column",{"_index":129,"title":{},"body":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{}}}],["column.propertyname",{"_index":142,"title":{},"body":{"entities/BaseEntity.html":{}}}],["column.target",{"_index":131,"title":{},"body":{"entities/BaseEntity.html":{}}}],["columnmetadata",{"_index":116,"title":{},"body":{"entities/BaseEntity.html":{}}}],["columnorder",{"_index":113,"title":{},"body":{"entities/BaseEntity.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["columnorder(9999",{"_index":121,"title":{},"body":{"entities/BaseEntity.html":{}}}],["columnorder(9999)@field(undefined",{"_index":92,"title":{},"body":{"entities/BaseEntity.html":{}}}],["columnorder(9999)@field(undefined)@createdatecolumn({name",{"_index":89,"title":{},"body":{"entities/BaseEntity.html":{}}}],["columnorder(undefined)@field(undefined)@primarygeneratedcolumn",{"_index":99,"title":{},"body":{"entities/BaseEntity.html":{}}}],["columnorder(value",{"_index":806,"title":{},"body":{"miscellaneous/functions.html":{}}}],["columns",{"_index":150,"title":{},"body":{"entities/BaseEntity.html":{}}}],["command",{"_index":1190,"title":{},"body":{"miscellaneous/variables.html":{}}}],["commands",{"_index":858,"title":{},"body":{"index.html":{}}}],["common",{"_index":884,"title":{},"body":{"index.html":{}}}],["common.service",{"_index":221,"title":{},"body":{"modules/CommonModule.html":{}}}],["commonmodule",{"_index":48,"title":{"modules/CommonModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["commonservice",{"_index":219,"title":{"injectables/CommonService.html":{}},"body":{"modules/CommonModule.html":{},"injectables/CommonService.html":{},"coverage.html":{},"overview.html":{}}}],["communication",{"_index":929,"title":{},"body":{"index.html":{}}}],["compared",{"_index":159,"title":{},"body":{"entities/BaseEntity.html":{}}}],["compile",{"_index":843,"title":{},"body":{"index.html":{}}}],["complete",{"_index":982,"title":{},"body":{"index.html":{}}}],["compliance",{"_index":1035,"title":{},"body":{"index.html":{}}}],["complicating",{"_index":1076,"title":{},"body":{"index.html":{}}}],["comply",{"_index":1036,"title":{},"body":{"index.html":{}}}],["complying",{"_index":948,"title":{},"body":{"index.html":{}}}],["compressing",{"_index":1118,"title":{},"body":{"index.html":{}}}],["compression",{"_index":1115,"title":{},"body":{"index.html":{}}}],["concerns",{"_index":896,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":1027,"title":{},"body":{"index.html":{}}}],["config.service",{"_index":254,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["confighelper",{"_index":174,"title":{"classes/ConfigHelper.html":{}},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"modules/DatabaseModule.html":{},"classes/SubgraphsBuilder.html":{},"coverage.html":{}}}],["confighelper.databaseconfig",{"_index":385,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["confighelper.getinstance",{"_index":182,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/DatabaseModule.html":{},"classes/SubgraphsBuilder.html":{}}}],["confighelper.getmicroservicehosts(key",{"_index":687,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["confighelper.getmoduleport(module.name",{"_index":195,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["confighelper.instance",{"_index":257,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["confighelper.instance.qushahconfigservice",{"_index":264,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["confighelper.redisconfig",{"_index":184,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{}}}],["configmodule",{"_index":255,"title":{},"body":{"classes/ConfigHelper.html":{},"modules/QushahConfigModule.html":{}}}],["configmodule.forroot",{"_index":260,"title":{},"body":{"classes/ConfigHelper.html":{},"modules/QushahConfigModule.html":{}}}],["configservice",{"_index":252,"title":{},"body":{"classes/ConfigHelper.html":{},"injectables/QushahConfigService.html":{}}}],["confirmation",{"_index":1057,"title":{},"body":{"index.html":{}}}],["connection",{"_index":890,"title":{},"body":{"index.html":{}}}],["consistency",{"_index":1011,"title":{},"body":{"index.html":{}}}],["consistent",{"_index":1014,"title":{},"body":{"index.html":{}}}],["const",{"_index":125,"title":{},"body":{"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"modules/DatabaseModule.html":{},"modules/GatewayModule.html":{},"classes/SubgraphsBuilder.html":{}}}],["constraint",{"_index":309,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["constructor",{"_index":234,"title":{},"body":{"classes/ConfigHelper.html":{},"injectables/GatewayService.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"injectables/QushahConfigService.html":{}}}],["constructor(configservice",{"_index":671,"title":{},"body":{"injectables/QushahConfigService.html":{}}}],["constructor(organizationservice",{"_index":589,"title":{},"body":{"classes/OrganizationResolver.html":{}}}],["constructor(private",{"_index":28,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DocumentationController.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResolver.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"injectables/QushahConfigService.html":{},"controllers/UserController.html":{}}}],["constructor(repository",{"_index":597,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["consume",{"_index":1112,"title":{},"body":{"index.html":{}}}],["contact",{"_index":961,"title":{},"body":{"index.html":{}}}],["containing",{"_index":817,"title":{},"body":{"index.html":{}}}],["controller",{"_index":0,"title":{"controllers/AuthController.html":{},"controllers/DocumentationController.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AuthController.html":{},"controllers/DocumentationController.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["correct",{"_index":939,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":712,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":297,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["created_at",{"_index":90,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganization1740356244243.html":{}}}],["createdat",{"_index":82,"title":{},"body":{"entities/BaseEntity.html":{}}}],["createdatecolumn",{"_index":105,"title":{},"body":{"entities/BaseEntity.html":{}}}],["createorganization.ts",{"_index":284,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{},"coverage.html":{}}}],["createorganization.ts:18",{"_index":293,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["createorganization.ts:4",{"_index":290,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["createorganization.ts:6",{"_index":295,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["createorganization1740356244243",{"_index":282,"title":{"classes/CreateOrganization1740356244243.html":{}},"body":{"classes/CreateOrganization1740356244243.html":{},"coverage.html":{}}}],["currencies",{"_index":1075,"title":{},"body":{"index.html":{}}}],["currency",{"_index":1068,"title":{},"body":{"index.html":{}}}],["custom",{"_index":139,"title":{},"body":{"entities/BaseEntity.html":{}}}],["d",{"_index":1212,"title":{},"body":{"miscellaneous/variables.html":{}}}],["damage",{"_index":1031,"title":{},"body":{"index.html":{}}}],["data",{"_index":931,"title":{},"body":{"index.html":{}}}],["database",{"_index":275,"title":{},"body":{"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"index.html":{}}}],["database_host",{"_index":659,"title":{},"body":{"modules/QushahConfigModule.html":{},"miscellaneous/variables.html":{}}}],["database_name",{"_index":663,"title":{},"body":{"modules/QushahConfigModule.html":{},"miscellaneous/variables.html":{}}}],["database_password",{"_index":662,"title":{},"body":{"modules/QushahConfigModule.html":{},"miscellaneous/variables.html":{}}}],["database_port",{"_index":660,"title":{},"body":{"modules/QushahConfigModule.html":{},"miscellaneous/variables.html":{}}}],["database_type",{"_index":658,"title":{},"body":{"modules/QushahConfigModule.html":{},"miscellaneous/variables.html":{}}}],["database_username",{"_index":661,"title":{},"body":{"modules/QushahConfigModule.html":{},"miscellaneous/variables.html":{}}}],["databaseconfig",{"_index":233,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["databasemodule",{"_index":374,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/DatabaseModule.html":{},"modules/OrganizationModule.html":{},"modules.html":{},"overview.html":{}}}],["databasemodule.forroot",{"_index":583,"title":{},"body":{"modules/OrganizationModule.html":{}}}],["datasource",{"_index":106,"title":{"classes/DataSource.html":{}},"body":{"entities/BaseEntity.html":{},"classes/DataSource.html":{},"coverage.html":{}}}],["datasource.entitymetadatasmap.get(this",{"_index":127,"title":{},"body":{"entities/BaseEntity.html":{}}}],["datasource.getinstance('escrow",{"_index":1233,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource.getinstance('media",{"_index":1235,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource.getinstance('notification",{"_index":1234,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource.getinstance('organization",{"_index":1236,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource.getinstance('payment",{"_index":1237,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource.getinstance('property",{"_index":1238,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource.getinstance('user",{"_index":1239,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasourcepath",{"_index":757,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["datasources",{"_index":861,"title":{},"body":{"index.html":{}}}],["date",{"_index":88,"title":{},"body":{"entities/BaseEntity.html":{}}}],["db",{"_index":366,"title":{},"body":{"classes/DataSource.html":{},"index.html":{}}}],["decimal",{"_index":555,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["declarations",{"_index":41,"title":{},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorator",{"_index":152,"title":{},"body":{"entities/BaseEntity.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"entities/BaseEntity.html":{},"controllers/DocumentationController.html":{},"controllers/EscrowController.html":{},"classes/EscrowResolver.html":{},"controllers/MediaController.html":{},"classes/MediaResolver.html":{},"controllers/NotificationController.html":{},"classes/NotificationResolver.html":{},"entities/Organization.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"controllers/PaymentController.html":{},"classes/PaymentResolver.html":{},"controllers/PropertyController.html":{},"classes/PropertyResolver.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{}}}],["default",{"_index":144,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganization1740356244243.html":{},"entities/OrganizationMetadata.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["default('development",{"_index":669,"title":{},"body":{"modules/QushahConfigModule.html":{}}}],["defaultval",{"_index":810,"title":{},"body":{"miscellaneous/functions.html":{}}}],["defined",{"_index":14,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"controllers/DocumentationController.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"controllers/MediaController.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"injectables/QushahConfigService.html":{},"classes/SubgraphsBuilder.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":336,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["deleted_at",{"_index":95,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganization1740356244243.html":{}}}],["deletedat",{"_index":84,"title":{},"body":{"entities/BaseEntity.html":{}}}],["deletedatecolumn",{"_index":107,"title":{},"body":{"entities/BaseEntity.html":{}}}],["deliveries",{"_index":1094,"title":{},"body":{"index.html":{}}}],["delivery",{"_index":1081,"title":{},"body":{"index.html":{}}}],["demandoption",{"_index":1187,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dependencies",{"_index":39,"title":{"dependencies.html":{}},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["deposit",{"_index":1018,"title":{},"body":{"index.html":{}}}],["deposit_fee_percentage",{"_index":322,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{},"entities/OrganizationMetadata.html":{}}}],["depositfeepercentage",{"_index":549,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["deposits",{"_index":871,"title":{},"body":{"index.html":{}}}],["describe",{"_index":1186,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":815,"title":{},"body":{"index.html":{},"properties.html":{}}}],["details",{"_index":962,"title":{},"body":{"index.html":{}}}],["developers",{"_index":1153,"title":{},"body":{"index.html":{}}}],["development",{"_index":392,"title":{},"body":{"modules/DatabaseModule.html":{},"index.html":{}}}],["dispute",{"_index":1030,"title":{},"body":{"index.html":{}}}],["disputes",{"_index":895,"title":{},"body":{"index.html":{}}}],["distributed",{"_index":1142,"title":{},"body":{"index.html":{}}}],["docs",{"_index":842,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":713,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["documentation.controller",{"_index":403,"title":{},"body":{"modules/DocumentationModule.html":{}}}],["documentation.service",{"_index":397,"title":{},"body":{"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{}}}],["documentationcontroller",{"_index":393,"title":{"controllers/DocumentationController.html":{}},"body":{"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"coverage.html":{}}}],["documentationmodule",{"_index":399,"title":{"modules/DocumentationModule.html":{}},"body":{"modules/DocumentationModule.html":{},"modules.html":{},"overview.html":{}}}],["documentationservice",{"_index":396,"title":{"injectables/DocumentationService.html":{}},"body":{"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"coverage.html":{},"overview.html":{}}}],["domain",{"_index":317,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{},"entities/OrganizationMetadata.html":{}}}],["dotenv",{"_index":348,"title":{},"body":{"classes/DataSource.html":{},"dependencies.html":{}}}],["dotenv.config",{"_index":354,"title":{},"body":{"classes/DataSource.html":{}}}],["double",{"_index":997,"title":{},"body":{"index.html":{}}}],["down",{"_index":288,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{},"index.html":{}}}],["down(queryrunner",{"_index":291,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["downloads",{"_index":1111,"title":{},"body":{"index.html":{}}}],["driven",{"_index":1042,"title":{},"body":{"index.html":{}}}],["driver",{"_index":463,"title":{},"body":{"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{}}}],["drop",{"_index":339,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["dtos",{"_index":882,"title":{},"body":{"index.html":{}}}],["dynamic",{"_index":1087,"title":{},"body":{"index.html":{}}}],["dynamically",{"_index":387,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["dynamicmodule",{"_index":207,"title":{},"body":{"modules/ClientsModule.html":{},"modules/DatabaseModule.html":{},"modules/GraphQLGatewayModule.html":{}}}],["e.g",{"_index":909,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["e2e",{"_index":851,"title":{},"body":{"index.html":{}}}],["each",{"_index":897,"title":{},"body":{"index.html":{}}}],["easily",{"_index":1107,"title":{},"body":{"index.html":{}}}],["easy",{"_index":1128,"title":{},"body":{"index.html":{}}}],["effectively",{"_index":968,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":990,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":1009,"title":{},"body":{"index.html":{}}}],["email",{"_index":305,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{},"entities/Organization.html":{},"index.html":{}}}],["emails",{"_index":944,"title":{},"body":{"index.html":{}}}],["enable",{"_index":391,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["encrypted",{"_index":932,"title":{},"body":{"index.html":{}}}],["encryption",{"_index":1051,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":1136,"title":{},"body":{"index.html":{}}}],["endpoints",{"_index":1148,"title":{},"body":{"index.html":{}}}],["ensuring",{"_index":901,"title":{},"body":{"index.html":{}}}],["entities",{"_index":79,"title":{},"body":{"entities/BaseEntity.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"overview.html":{}}}],["entities/*.entity{.ts,.js",{"_index":585,"title":{},"body":{"modules/OrganizationModule.html":{}}}],["entities/organization",{"_index":582,"title":{},"body":{"modules/OrganizationModule.html":{}}}],["entities/organization.entity",{"_index":581,"title":{},"body":{"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{}}}],["entitiespath",{"_index":379,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["entity",{"_index":77,"title":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{}},"body":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"coverage.html":{}}}],["enumerations",{"_index":791,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":353,"title":{},"body":{"classes/DataSource.html":{}}}],["environment",{"_index":351,"title":{},"body":{"classes/DataSource.html":{}}}],["environmentconstant",{"_index":256,"title":{},"body":{"classes/ConfigHelper.html":{},"modules/GatewayModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environmentconstant.database_password",{"_index":274,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["environmentconstant.database_username",{"_index":272,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["error",{"_index":965,"title":{},"body":{"index.html":{}}}],["errors",{"_index":967,"title":{},"body":{"index.html":{}}}],["escrow",{"_index":428,"title":{},"body":{"injectables/EscrowService.html":{},"index.html":{}}}],["escrow.controller",{"_index":420,"title":{},"body":{"modules/EscrowModule.html":{}}}],["escrow.resolver",{"_index":422,"title":{},"body":{"modules/EscrowModule.html":{}}}],["escrow.service",{"_index":411,"title":{},"body":{"controllers/EscrowController.html":{},"modules/EscrowModule.html":{}}}],["escrow_client",{"_index":797,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["escrow_host",{"_index":438,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["escrow_port",{"_index":1217,"title":{},"body":{"miscellaneous/variables.html":{}}}],["escrowcommand",{"_index":412,"title":{},"body":{"controllers/EscrowController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["escrowcommand.ping_escrow",{"_index":413,"title":{},"body":{"controllers/EscrowController.html":{}}}],["escrowcontroller",{"_index":407,"title":{"controllers/EscrowController.html":{}},"body":{"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"coverage.html":{}}}],["escrowmodule",{"_index":415,"title":{"modules/EscrowModule.html":{}},"body":{"modules/EscrowModule.html":{},"modules.html":{},"overview.html":{}}}],["escrowresolver",{"_index":421,"title":{"classes/EscrowResolver.html":{}},"body":{"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"coverage.html":{}}}],["escrowservice",{"_index":410,"title":{"injectables/EscrowService.html":{}},"body":{"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"injectables/EscrowService.html":{},"coverage.html":{},"overview.html":{}}}],["especially",{"_index":930,"title":{},"body":{"index.html":{}}}],["etc",{"_index":820,"title":{},"body":{"index.html":{}}}],["evenly",{"_index":1143,"title":{},"body":{"index.html":{}}}],["event",{"_index":1041,"title":{},"body":{"index.html":{}}}],["example",{"_index":835,"title":{},"body":{"index.html":{}}}],["exist",{"_index":134,"title":{},"body":{"entities/BaseEntity.html":{}}}],["expiration",{"_index":916,"title":{},"body":{"index.html":{}}}],["expiry",{"_index":913,"title":{},"body":{"index.html":{}}}],["export",{"_index":26,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"modules/QushahConfigModule.html":{},"injectables/QushahConfigService.html":{},"classes/SubgraphsBuilder.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":44,"title":{},"body":{"modules/AuthModule.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/GraphQLGatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":770,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":119,"title":{},"body":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{}}}],["external",{"_index":1046,"title":{},"body":{"index.html":{}}}],["failed",{"_index":1093,"title":{},"body":{"index.html":{}}}],["failure",{"_index":1032,"title":{},"body":{"index.html":{}}}],["failures",{"_index":1053,"title":{},"body":{"index.html":{}}}],["fallback",{"_index":143,"title":{},"body":{"entities/BaseEntity.html":{}}}],["false",{"_index":325,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"entities/OrganizationMetadata.html":{}}}],["fast",{"_index":989,"title":{},"body":{"index.html":{}}}],["faster",{"_index":1120,"title":{},"body":{"index.html":{}}}],["features",{"_index":994,"title":{},"body":{"index.html":{}}}],["federation",{"_index":472,"title":{},"body":{"modules/GraphQLMicroserviceModule.html":{}}}],["feedback",{"_index":973,"title":{},"body":{"index.html":{}}}],["field",{"_index":111,"title":{},"body":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{}}}],["field(undefined",{"_index":525,"title":{},"body":{"entities/Organization.html":{},"entities/OrganizationMetadata.html":{}}}],["field(undefined)@column",{"_index":522,"title":{},"body":{"entities/Organization.html":{},"entities/OrganizationMetadata.html":{}}}],["field(undefined)@column({name",{"_index":532,"title":{},"body":{"entities/Organization.html":{},"entities/OrganizationMetadata.html":{}}}],["field(undefined)@column({unique",{"_index":529,"title":{},"body":{"entities/Organization.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"modules/QushahConfigModule.html":{},"injectables/QushahConfigService.html":{},"classes/SubgraphsBuilder.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["files",{"_index":1106,"title":{},"body":{"index.html":{}}}],["financial",{"_index":1038,"title":{},"body":{"index.html":{}}}],["findall",{"_index":596,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["fk_efaca847c588a9817470f7c6ca8",{"_index":332,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["float",{"_index":569,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["follow",{"_index":840,"title":{},"body":{"index.html":{}}}],["following",{"_index":825,"title":{},"body":{"index.html":{}}}],["force",{"_index":925,"title":{},"body":{"index.html":{}}}],["foreign",{"_index":333,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["forroot",{"_index":376,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["forroot(entitiespath",{"_index":377,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["free",{"_index":1127,"title":{},"body":{"index.html":{}}}],["frequency",{"_index":1098,"title":{},"body":{"index.html":{}}}],["frontend",{"_index":893,"title":{},"body":{"index.html":{}}}],["function",{"_index":140,"title":{},"body":{"entities/BaseEntity.html":{},"coverage.html":{}}}],["functionality",{"_index":988,"title":{},"body":{"index.html":{}}}],["functions",{"_index":803,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gateway",{"_index":449,"title":{},"body":{"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"index.html":{}}}],["gateway.module.ts",{"_index":451,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["gateway.module.ts:10",{"_index":453,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["gateway.service",{"_index":436,"title":{},"body":{"modules/GatewayModule.html":{}}}],["gateway_host",{"_index":1225,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gateway_port",{"_index":1218,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gatewaymodule",{"_index":429,"title":{"modules/GatewayModule.html":{}},"body":{"modules/GatewayModule.html":{},"modules.html":{},"overview.html":{}}}],["gatewayservice",{"_index":434,"title":{"injectables/GatewayService.html":{}},"body":{"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"coverage.html":{},"overview.html":{}}}],["gdpr",{"_index":950,"title":{},"body":{"index.html":{}}}],["generate",{"_index":1191,"title":{},"body":{"miscellaneous/variables.html":{}}}],["generating",{"_index":1060,"title":{},"body":{"index.html":{}}}],["getcolumnorder",{"_index":114,"title":{},"body":{"entities/BaseEntity.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getcolumnorder(target",{"_index":808,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getcolumnorder(target.prototype",{"_index":141,"title":{},"body":{"entities/BaseEntity.html":{}}}],["getconfig",{"_index":228,"title":{},"body":{"classes/ConfigHelper.html":{},"injectables/QushahConfigService.html":{}}}],["getconfig(key",{"_index":237,"title":{},"body":{"classes/ConfigHelper.html":{},"injectables/QushahConfigService.html":{}}}],["getdatabaseconfig",{"_index":250,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/DocumentationController.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"injectables/EscrowService.html":{},"controllers/MediaController.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"injectables/NotificationService.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"injectables/PropertyService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["getinstance",{"_index":229,"title":{},"body":{"classes/ConfigHelper.html":{},"classes/DataSource.html":{}}}],["getinstance(schema",{"_index":343,"title":{},"body":{"classes/DataSource.html":{}}}],["getmicroservicehosts",{"_index":230,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["getmicroservicehosts(microservicename",{"_index":242,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["getmoduleport",{"_index":231,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["getmoduleport(modulename",{"_index":245,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["getordersafely",{"_index":128,"title":{},"body":{"entities/BaseEntity.html":{}}}],["getordersafely(xcolumn",{"_index":161,"title":{},"body":{"entities/BaseEntity.html":{}}}],["getordersafely(ycolumn",{"_index":163,"title":{},"body":{"entities/BaseEntity.html":{}}}],["getredisconfig",{"_index":248,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["getting",{"_index":811,"title":{"index.html":{}},"body":{}}],["global",{"_index":206,"title":{},"body":{"modules/ClientsModule.html":{},"modules/GraphQLGatewayModule.html":{},"index.html":{}}}],["graph",{"_index":1160,"title":{},"body":{"modules.html":{}}}],["graphname",{"_index":686,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["graphname?.split('_host')?.[0",{"_index":685,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["graphnames",{"_index":680,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["graphnames.map((graphname",{"_index":683,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["graphql",{"_index":775,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["graphqlgatewaymodule",{"_index":433,"title":{"modules/GraphQLGatewayModule.html":{}},"body":{"modules/GatewayModule.html":{},"modules/GraphQLGatewayModule.html":{},"modules.html":{},"overview.html":{}}}],["graphqlgatewaymodule.register",{"_index":445,"title":{},"body":{"modules/GatewayModule.html":{}}}],["graphqlmicroservicemodule",{"_index":49,"title":{"modules/GraphQLMicroserviceModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/EscrowModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["graphqlmodule",{"_index":455,"title":{},"body":{"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{}}}],["graphqlmodule.forroot",{"_index":470,"title":{},"body":{"modules/GraphQLMicroserviceModule.html":{}}}],["graphqlmodule.forrootasync",{"_index":462,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["growing",{"_index":1078,"title":{},"body":{"index.html":{}}}],["guards",{"_index":887,"title":{},"body":{"index.html":{}}}],["handle",{"_index":975,"title":{},"body":{"index.html":{}}}],["handling",{"_index":966,"title":{},"body":{"index.html":{}}}],["hello",{"_index":74,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DocumentationService.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"injectables/MediaService.html":{},"injectables/NotificationService.html":{},"injectables/OrganizationService.html":{},"injectables/PaymentService.html":{},"injectables/PropertyService.html":{},"injectables/UserService.html":{}}}],["help().argv",{"_index":1201,"title":{},"body":{"miscellaneous/variables.html":{}}}],["helper",{"_index":855,"title":{},"body":{"index.html":{}}}],["here",{"_index":866,"title":{},"body":{"index.html":{}}}],["high",{"_index":145,"title":{},"body":{"entities/BaseEntity.html":{},"index.html":{}}}],["host",{"_index":190,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/SubgraphsBuilder.html":{}}}],["host}:${port}/graphql",{"_index":689,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["https",{"_index":933,"title":{},"body":{"index.html":{}}}],["id",{"_index":85,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganization1740356244243.html":{}}}],["identifier",{"_index":714,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":1002,"title":{},"body":{"index.html":{}}}],["images",{"_index":1004,"title":{},"body":{"index.html":{}}}],["implement",{"_index":918,"title":{},"body":{"index.html":{}}}],["implementing",{"_index":927,"title":{},"body":{"index.html":{}}}],["implements",{"_index":285,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["import",{"_index":18,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"modules/QushahConfigModule.html":{},"injectables/QushahConfigService.html":{},"classes/SubgraphsBuilder.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":54,"title":{},"body":{"modules/AuthModule.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/QushahConfigModule.html":{},"modules/UserModule.html":{}}}],["improve",{"_index":1156,"title":{},"body":{"index.html":{}}}],["in/opt",{"_index":1100,"title":{},"body":{"index.html":{}}}],["includes",{"_index":905,"title":{},"body":{"index.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"controllers/DocumentationController.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"controllers/MediaController.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"injectables/QushahConfigService.html":{},"classes/SubgraphsBuilder.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"modules/QushahConfigModule.html":{},"injectables/QushahConfigService.html":{},"classes/SubgraphsBuilder.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["information",{"_index":943,"title":{},"body":{"index.html":{}}}],["init",{"_index":169,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["init(module",{"_index":170,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["initially",{"_index":1070,"title":{},"body":{"index.html":{}}}],["injectable",{"_index":70,"title":{"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/DocumentationService.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"injectables/MediaService.html":{},"injectables/NotificationService.html":{},"injectables/OrganizationService.html":{},"injectables/PaymentService.html":{},"injectables/PropertyService.html":{},"injectables/QushahConfigService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/DocumentationService.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"injectables/MediaService.html":{},"injectables/NotificationService.html":{},"injectables/OrganizationService.html":{},"injectables/PaymentService.html":{},"injectables/PropertyService.html":{},"injectables/QushahConfigService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":71,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/DocumentationService.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"injectables/MediaService.html":{},"injectables/NotificationService.html":{},"injectables/OrganizationService.html":{},"injectables/PaymentService.html":{},"injectables/PropertyService.html":{},"injectables/QushahConfigService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectrepository",{"_index":602,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["injectrepository(organization",{"_index":603,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["inr",{"_index":1071,"title":{},"body":{"index.html":{}}}],["install",{"_index":837,"title":{},"body":{"index.html":{}}}],["installed",{"_index":826,"title":{},"body":{"index.html":{}}}],["installinstall",{"_index":839,"title":{},"body":{"index.html":{}}}],["instance",{"_index":226,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["instances",{"_index":1144,"title":{},"body":{"index.html":{}}}],["integer",{"_index":327,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["integrating",{"_index":1010,"title":{},"body":{"index.html":{}}}],["integration",{"_index":1045,"title":{},"body":{"index.html":{}}}],["integrity",{"_index":964,"title":{},"body":{"index.html":{}}}],["interceptors",{"_index":886,"title":{},"body":{"index.html":{}}}],["interfaces",{"_index":883,"title":{},"body":{"index.html":{}}}],["introspectandcompose",{"_index":459,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["introspection",{"_index":1150,"title":{},"body":{"index.html":{}}}],["invalid",{"_index":970,"title":{},"body":{"index.html":{}}}],["ioredis",{"_index":777,"title":{},"body":{"dependencies.html":{}}}],["isglobal",{"_index":261,"title":{},"body":{"classes/ConfigHelper.html":{},"modules/QushahConfigModule.html":{}}}],["issues",{"_index":999,"title":{},"body":{"index.html":{}}}],["joi",{"_index":651,"title":{},"body":{"modules/QushahConfigModule.html":{},"dependencies.html":{}}}],["joi.number().required",{"_index":657,"title":{},"body":{"modules/QushahConfigModule.html":{}}}],["joi.object",{"_index":653,"title":{},"body":{"modules/QushahConfigModule.html":{}}}],["joi.string",{"_index":665,"title":{},"body":{"modules/QushahConfigModule.html":{}}}],["joi.string().required",{"_index":655,"title":{},"body":{"modules/QushahConfigModule.html":{}}}],["joincolumn",{"_index":570,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["jwt",{"_index":910,"title":{},"body":{"index.html":{}}}],["key",{"_index":240,"title":{},"body":{"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"injectables/QushahConfigService.html":{},"classes/SubgraphsBuilder.html":{},"index.html":{}}}],["keypart",{"_index":684,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["landlord",{"_index":937,"title":{},"body":{"index.html":{}}}],["landlords",{"_index":978,"title":{},"body":{"index.html":{}}}],["large",{"_index":976,"title":{},"body":{"index.html":{}}}],["later",{"_index":1072,"title":{},"body":{"index.html":{}}}],["learn",{"_index":864,"title":{},"body":{"index.html":{}}}],["legend",{"_index":40,"title":{},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["lets",{"_index":857,"title":{},"body":{"index.html":{}}}],["libraries",{"_index":881,"title":{},"body":{"index.html":{}}}],["libs",{"_index":819,"title":{},"body":{"index.html":{}}}],["libs/.../auth.command.ts",{"_index":1171,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../column",{"_index":805,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/.../environment.constant.ts",{"_index":1172,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../escrow.command.ts",{"_index":1173,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../media.command.ts",{"_index":1174,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../micro",{"_index":793,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../notification.command.ts",{"_index":1175,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../organization.command.ts",{"_index":1176,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../payment.command.ts",{"_index":1177,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../property.command.ts",{"_index":1178,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../user.command.ts",{"_index":1181,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/common/src/clients/clients.module.ts",{"_index":200,"title":{},"body":{"modules/ClientsModule.html":{}}}],["libs/common/src/clients/clients.module.ts:12",{"_index":203,"title":{},"body":{"modules/ClientsModule.html":{}}}],["libs/common/src/common.module.ts",{"_index":220,"title":{},"body":{"modules/CommonModule.html":{}}}],["libs/common/src/common.service.ts",{"_index":223,"title":{},"body":{"injectables/CommonService.html":{},"coverage.html":{}}}],["libs/common/src/config/config.helper.ts",{"_index":224,"title":{},"body":{"classes/ConfigHelper.html":{},"coverage.html":{}}}],["libs/common/src/config/config.helper.ts:13",{"_index":241,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.helper.ts:31",{"_index":249,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.helper.ts:37",{"_index":251,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.helper.ts:51",{"_index":246,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.helper.ts:57",{"_index":243,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.helper.ts:67",{"_index":238,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.helper.ts:8",{"_index":236,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.helper.ts:9",{"_index":235,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.module.ts",{"_index":650,"title":{},"body":{"modules/QushahConfigModule.html":{}}}],["libs/common/src/config/config.service.ts",{"_index":670,"title":{},"body":{"injectables/QushahConfigService.html":{},"coverage.html":{}}}],["libs/common/src/config/config.service.ts:5",{"_index":672,"title":{},"body":{"injectables/QushahConfigService.html":{}}}],["libs/common/src/config/config.service.ts:8",{"_index":673,"title":{},"body":{"injectables/QushahConfigService.html":{}}}],["libs/common/src/constants/commands/auth.command.ts",{"_index":742,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/commands/escrow.command.ts",{"_index":743,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/commands/media.command.ts",{"_index":744,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/commands/notification.command.ts",{"_index":745,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/commands/organization.command.ts",{"_index":746,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/commands/payment.command.ts",{"_index":747,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/commands/property.command.ts",{"_index":748,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/commands/user.command.ts",{"_index":749,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/environment.constant.ts",{"_index":750,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/database/database.module.ts",{"_index":375,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["libs/common/src/database/database.module.ts:7",{"_index":378,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["libs/common/src/database/entities/base.entity.ts",{"_index":80,"title":{},"body":{"entities/BaseEntity.html":{},"coverage.html":{}}}],["libs/common/src/database/entities/base.entity.ts:20",{"_index":100,"title":{},"body":{"entities/BaseEntity.html":{}}}],["libs/common/src/database/entities/base.entity.ts:25",{"_index":91,"title":{},"body":{"entities/BaseEntity.html":{}}}],["libs/common/src/database/entities/base.entity.ts:30",{"_index":103,"title":{},"body":{"entities/BaseEntity.html":{}}}],["libs/common/src/database/entities/base.entity.ts:35",{"_index":97,"title":{},"body":{"entities/BaseEntity.html":{}}}],["libs/common/src/decorators/column",{"_index":752,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/enums/micro",{"_index":795,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/common/src/graphql/graphql",{"_index":450,"title":{},"body":{"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{}}}],["libs/common/src/utils/bootstrapper.util.ts",{"_index":167,"title":{},"body":{"classes/Bootstrapper.html":{},"coverage.html":{}}}],["libs/common/src/utils/bootstrapper.util.ts:7",{"_index":171,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["libs/common/src/utils/data",{"_index":341,"title":{},"body":{"classes/DataSource.html":{},"coverage.html":{}}}],["libs/common/src/utils/subgraphs",{"_index":675,"title":{},"body":{"classes/SubgraphsBuilder.html":{},"coverage.html":{}}}],["license",{"_index":1168,"title":{},"body":{"properties.html":{}}}],["limiting",{"_index":921,"title":{},"body":{"index.html":{}}}],["limits",{"_index":1147,"title":{},"body":{"index.html":{}}}],["listed",{"_index":986,"title":{},"body":{"index.html":{}}}],["listening",{"_index":198,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["listings",{"_index":874,"title":{},"body":{"index.html":{}}}],["load",{"_index":350,"title":{},"body":{"classes/DataSource.html":{},"index.html":{}}}],["loading",{"_index":1121,"title":{},"body":{"index.html":{}}}],["local",{"_index":1037,"title":{},"body":{"index.html":{}}}],["localhost",{"_index":360,"title":{},"body":{"classes/DataSource.html":{}}}],["location",{"_index":992,"title":{},"body":{"index.html":{}}}],["logger",{"_index":173,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["logger(`${module.name}bootstrap",{"_index":180,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["logger.log(`microservice",{"_index":197,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["logo",{"_index":318,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{},"entities/OrganizationMetadata.html":{}}}],["lts",{"_index":829,"title":{},"body":{"index.html":{}}}],["m",{"_index":1185,"title":{},"body":{"miscellaneous/variables.html":{}}}],["machine",{"_index":824,"title":{},"body":{"index.html":{}}}],["maintaining",{"_index":963,"title":{},"body":{"index.html":{}}}],["make",{"_index":833,"title":{},"body":{"index.html":{}}}],["manage",{"_index":1101,"title":{},"body":{"index.html":{}}}],["management",{"_index":870,"title":{},"body":{"index.html":{}}}],["managing",{"_index":915,"title":{},"body":{"index.html":{}}}],["matching",{"_index":35,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"modules/QushahConfigModule.html":{},"injectables/QushahConfigService.html":{},"classes/SubgraphsBuilder.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["mechanisms",{"_index":917,"title":{},"body":{"index.html":{}}}],["media",{"_index":496,"title":{},"body":{"injectables/MediaService.html":{},"index.html":{}}}],["media.controller",{"_index":488,"title":{},"body":{"modules/MediaModule.html":{}}}],["media.resolver",{"_index":490,"title":{},"body":{"modules/MediaModule.html":{}}}],["media.service",{"_index":479,"title":{},"body":{"controllers/MediaController.html":{},"modules/MediaModule.html":{}}}],["media_client",{"_index":798,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["media_host",{"_index":439,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["media_port",{"_index":1219,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mediacommand",{"_index":480,"title":{},"body":{"controllers/MediaController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mediacommand.ping_media",{"_index":481,"title":{},"body":{"controllers/MediaController.html":{}}}],["mediacontroller",{"_index":475,"title":{"controllers/MediaController.html":{}},"body":{"controllers/MediaController.html":{},"modules/MediaModule.html":{},"coverage.html":{}}}],["mediamodule",{"_index":483,"title":{"modules/MediaModule.html":{}},"body":{"modules/MediaModule.html":{},"modules.html":{},"overview.html":{}}}],["mediaresolver",{"_index":489,"title":{"classes/MediaResolver.html":{}},"body":{"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"coverage.html":{}}}],["mediaservice",{"_index":478,"title":{"injectables/MediaService.html":{}},"body":{"controllers/MediaController.html":{},"modules/MediaModule.html":{},"injectables/MediaService.html":{},"coverage.html":{},"overview.html":{}}}],["message",{"_index":1085,"title":{},"body":{"index.html":{}}}],["messagepattern",{"_index":22,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{}}}],["messagepattern({cmd",{"_index":12,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{}}}],["meta",{"_index":126,"title":{},"body":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"injectables/OrganizationService.html":{}}}],["meta.columns",{"_index":153,"title":{},"body":{"entities/BaseEntity.html":{}}}],["meta.columns].sort((xcolumn",{"_index":154,"title":{},"body":{"entities/BaseEntity.html":{}}}],["meta.organization",{"_index":527,"title":{},"body":{"entities/Organization.html":{}}}],["metadata",{"_index":783,"title":{},"body":{"dependencies.html":{}}}],["metadata.entity",{"_index":536,"title":{},"body":{"entities/Organization.html":{},"modules/OrganizationModule.html":{}}}],["metadata.entity.ts",{"_index":547,"title":{},"body":{"entities/OrganizationMetadata.html":{},"coverage.html":{}}}],["metadata.entity.ts:16",{"_index":565,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["metadata.entity.ts:20",{"_index":567,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["metadata.entity.ts:24",{"_index":558,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["metadata.entity.ts:28",{"_index":559,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["metadata.entity.ts:38",{"_index":568,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["metadata.entity.ts:48",{"_index":556,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["metadata.entity.ts:52",{"_index":552,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"controllers/DocumentationController.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"controllers/MediaController.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"injectables/QushahConfigService.html":{},"classes/SubgraphsBuilder.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["microservice",{"_index":898,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["microservice.module.ts",{"_index":467,"title":{},"body":{"modules/GraphQLMicroserviceModule.html":{}}}],["microserviceclient",{"_index":792,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["microservicename",{"_index":244,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["microservicename}_host`.touppercase",{"_index":279,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["microservicename}_port`.touppercase",{"_index":280,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["microserviceoptions",{"_index":177,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["microservices",{"_index":818,"title":{},"body":{"index.html":{}}}],["migration",{"_index":1198,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migration:${command",{"_index":1210,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migrationinterface",{"_index":286,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["migrations",{"_index":370,"title":{},"body":{"classes/DataSource.html":{}}}],["migrationstablename",{"_index":355,"title":{},"body":{"classes/DataSource.html":{}}}],["miscellaneous",{"_index":790,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mobile",{"_index":1092,"title":{},"body":{"index.html":{}}}],["mode",{"_index":846,"title":{},"body":{"index.html":{}}}],["models",{"_index":891,"title":{},"body":{"index.html":{}}}],["module",{"_index":36,"title":{"modules/AuthModule.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/QushahConfigModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AuthModule.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/QushahConfigModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modulename",{"_index":247,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["modulename?.split('module')?.[0]?.touppercase",{"_index":277,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["modules",{"_index":38,"title":{"modules.html":{}},"body":{"modules/AuthModule.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/QushahConfigModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["money",{"_index":1020,"title":{},"body":{"index.html":{}}}],["monthly",{"_index":1064,"title":{},"body":{"index.html":{}}}],["multi",{"_index":1067,"title":{},"body":{"index.html":{}}}],["multiple",{"_index":1090,"title":{},"body":{"index.html":{}}}],["name",{"_index":63,"title":{},"body":{"classes/AuthResolver.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/EscrowResolver.html":{},"modules/GraphQLGatewayModule.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"injectables/QushahConfigService.html":{},"classes/SubgraphsBuilder.html":{},"classes/UserResolver.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["names",{"_index":204,"title":{},"body":{"modules/ClientsModule.html":{},"index.html":{}}}],["names.map((name",{"_index":212,"title":{},"body":{"modules/ClientsModule.html":{}}}],["needed",{"_index":1199,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nestclientsmodule",{"_index":208,"title":{},"body":{"modules/ClientsModule.html":{}}}],["nestclientsmodule.register(clients",{"_index":213,"title":{},"body":{"modules/ClientsModule.html":{}}}],["nestfactory",{"_index":175,"title":{},"body":{"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{}}}],["nestfactory.create(module",{"_index":186,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["nestfactory.createapplicationcontext",{"_index":259,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["nestjs/apollo",{"_index":458,"title":{},"body":{"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":19,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"modules/DatabaseModule.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"injectables/PropertyService.html":{},"modules/QushahConfigModule.html":{},"injectables/QushahConfigService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":253,"title":{},"body":{"classes/ConfigHelper.html":{},"modules/QushahConfigModule.html":{},"injectables/QushahConfigService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":176,"title":{},"body":{"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{},"dependencies.html":{}}}],["nestjs/graphql",{"_index":68,"title":{},"body":{"classes/AuthResolver.html":{},"entities/BaseEntity.html":{},"classes/EscrowResolver.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"classes/UserResolver.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":23,"title":{},"body":{"controllers/AuthController.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":769,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":382,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/OrganizationModule.html":{},"injectables/OrganizationService.html":{},"dependencies.html":{}}}],["network",{"_index":1056,"title":{},"body":{"index.html":{}}}],["new",{"_index":179,"title":{},"body":{"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/GraphQLGatewayModule.html":{},"coverage.html":{}}}],["node",{"_index":1205,"title":{},"body":{"miscellaneous/variables.html":{}}}],["node:process",{"_index":347,"title":{},"body":{"classes/DataSource.html":{}}}],["node_env",{"_index":664,"title":{},"body":{"modules/QushahConfigModule.html":{}}}],["node_modules/typeorm/cli.js",{"_index":1209,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nodejs",{"_index":827,"title":{},"body":{"index.html":{}}}],["notification",{"_index":518,"title":{},"body":{"injectables/NotificationService.html":{},"index.html":{}}}],["notification.controller",{"_index":510,"title":{},"body":{"modules/NotificationModule.html":{}}}],["notification.resolver",{"_index":512,"title":{},"body":{"modules/NotificationModule.html":{}}}],["notification.service",{"_index":501,"title":{},"body":{"controllers/NotificationController.html":{},"modules/NotificationModule.html":{}}}],["notification_client",{"_index":799,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["notification_host",{"_index":440,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["notification_port",{"_index":1220,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notificationcommand",{"_index":502,"title":{},"body":{"controllers/NotificationController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["notificationcommand.ping_notification",{"_index":503,"title":{},"body":{"controllers/NotificationController.html":{}}}],["notificationcontroller",{"_index":497,"title":{"controllers/NotificationController.html":{}},"body":{"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"coverage.html":{}}}],["notificationmodule",{"_index":505,"title":{"modules/NotificationModule.html":{}},"body":{"modules/NotificationModule.html":{},"modules.html":{},"overview.html":{}}}],["notificationresolver",{"_index":511,"title":{"classes/NotificationResolver.html":{}},"body":{"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"coverage.html":{}}}],["notifications",{"_index":875,"title":{},"body":{"index.html":{}}}],["notificationservice",{"_index":500,"title":{"injectables/NotificationService.html":{}},"body":{"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"coverage.html":{},"overview.html":{}}}],["notifying",{"_index":1043,"title":{},"body":{"index.html":{}}}],["now",{"_index":308,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["npm",{"_index":836,"title":{},"body":{"index.html":{}}}],["null",{"_index":148,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganization1740356244243.html":{}}}],["nullable",{"_index":93,"title":{},"body":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{}}}],["number",{"_index":98,"title":{},"body":{"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"entities/OrganizationMetadata.html":{},"miscellaneous/functions.html":{}}}],["numbers",{"_index":946,"title":{},"body":{"index.html":{}}}],["numeric(5,2",{"_index":320,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["oauth",{"_index":911,"title":{},"body":{"index.html":{}}}],["object",{"_index":1214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["objecttype",{"_index":112,"title":{},"body":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{}}}],["official",{"_index":841,"title":{},"body":{"index.html":{}}}],["ondelete",{"_index":562,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["onetoone",{"_index":535,"title":{},"body":{"entities/Organization.html":{},"entities/OrganizationMetadata.html":{}}}],["onetoone(undefined",{"_index":560,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["onupdate",{"_index":563,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["opt",{"_index":1099,"title":{},"body":{"index.html":{}}}],["optimization",{"_index":1116,"title":{},"body":{"index.html":{}}}],["optimizing",{"_index":1119,"title":{},"body":{"index.html":{}}}],["option('args",{"_index":1193,"title":{},"body":{"miscellaneous/variables.html":{}}}],["option('command",{"_index":1188,"title":{},"body":{"miscellaneous/variables.html":{}}}],["option('microservice",{"_index":1183,"title":{},"body":{"miscellaneous/variables.html":{}}}],["option('title",{"_index":1196,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optional",{"_index":83,"title":{},"body":{"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"modules/GraphQLGatewayModule.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"injectables/QushahConfigService.html":{},"classes/SubgraphsBuilder.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["options",{"_index":189,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/DatabaseModule.html":{}}}],["order",{"_index":137,"title":{},"body":{"entities/BaseEntity.html":{}}}],["order.decorator.ts",{"_index":753,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["order_key",{"_index":754,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["orderxcolumn",{"_index":160,"title":{},"body":{"entities/BaseEntity.html":{}}}],["orderycolumn",{"_index":162,"title":{},"body":{"entities/BaseEntity.html":{}}}],["organization",{"_index":519,"title":{"entities/Organization.html":{}},"body":{"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"coverage.html":{}}}],["organization\".\"organization",{"_index":299,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["organization\".\"organization\"(\"id",{"_index":335,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["organization\".\"organization_metadata",{"_index":315,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["organization.controller",{"_index":578,"title":{},"body":{"modules/OrganizationModule.html":{}}}],["organization.entity",{"_index":571,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["organization.meta",{"_index":561,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["organization.resolver",{"_index":580,"title":{},"body":{"modules/OrganizationModule.html":{}}}],["organization.service",{"_index":541,"title":{},"body":{"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{}}}],["organization_host",{"_index":441,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["organization_id",{"_index":326,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{},"entities/OrganizationMetadata.html":{}}}],["organization_port",{"_index":1221,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organizationcommand",{"_index":542,"title":{},"body":{"controllers/OrganizationController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["organizationcommand.ping_organization",{"_index":544,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["organizationcontroller",{"_index":537,"title":{"controllers/OrganizationController.html":{}},"body":{"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"coverage.html":{}}}],["organizationmetadata",{"_index":524,"title":{"entities/OrganizationMetadata.html":{}},"body":{"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"coverage.html":{}}}],["organizationmodule",{"_index":573,"title":{"modules/OrganizationModule.html":{}},"body":{"modules/OrganizationModule.html":{},"modules.html":{},"overview.html":{}}}],["organizationresolver",{"_index":579,"title":{"classes/OrganizationResolver.html":{}},"body":{"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"coverage.html":{}}}],["organizations",{"_index":588,"title":{},"body":{"classes/OrganizationResolver.html":{}}}],["organizationservice",{"_index":540,"title":{"injectables/OrganizationService.html":{}},"body":{"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"coverage.html":{},"overview.html":{}}}],["out",{"_index":52,"title":{},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":1162,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":760,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameters",{"_index":172,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"modules/GraphQLGatewayModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"injectables/QushahConfigService.html":{},"classes/SubgraphsBuilder.html":{},"miscellaneous/functions.html":{}}}],["party",{"_index":1152,"title":{},"body":{"index.html":{}}}],["pass",{"_index":388,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["passing",{"_index":1137,"title":{},"body":{"index.html":{}}}],["password",{"_index":273,"title":{},"body":{"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"index.html":{}}}],["path",{"_index":862,"title":{},"body":{"index.html":{}}}],["path.join",{"_index":1202,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paths/register",{"_index":1208,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pay",{"_index":1033,"title":{},"body":{"index.html":{}}}],["payment",{"_index":627,"title":{},"body":{"injectables/PaymentService.html":{},"index.html":{}}}],["payment.controller",{"_index":619,"title":{},"body":{"modules/PaymentModule.html":{}}}],["payment.resolver",{"_index":621,"title":{},"body":{"modules/PaymentModule.html":{}}}],["payment.service",{"_index":610,"title":{},"body":{"controllers/PaymentController.html":{},"modules/PaymentModule.html":{}}}],["payment_client",{"_index":800,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["payment_host",{"_index":442,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["payment_port",{"_index":1222,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paymentcommand",{"_index":611,"title":{},"body":{"controllers/PaymentController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["paymentcommand.ping_payment",{"_index":612,"title":{},"body":{"controllers/PaymentController.html":{}}}],["paymentcontroller",{"_index":606,"title":{"controllers/PaymentController.html":{}},"body":{"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"coverage.html":{}}}],["paymentmodule",{"_index":614,"title":{"modules/PaymentModule.html":{}},"body":{"modules/PaymentModule.html":{},"modules.html":{},"overview.html":{}}}],["paymentresolver",{"_index":620,"title":{"classes/PaymentResolver.html":{}},"body":{"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"coverage.html":{}}}],["payments",{"_index":872,"title":{},"body":{"index.html":{}}}],["paymentservice",{"_index":609,"title":{"injectables/PaymentService.html":{}},"body":{"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"coverage.html":{},"overview.html":{}}}],["paytm",{"_index":1048,"title":{},"body":{"index.html":{}}}],["performance",{"_index":1109,"title":{},"body":{"index.html":{}}}],["permissions",{"_index":935,"title":{},"body":{"index.html":{}}}],["personal",{"_index":941,"title":{},"body":{"index.html":{}}}],["personalization",{"_index":1095,"title":{},"body":{"index.html":{}}}],["personalized",{"_index":1096,"title":{},"body":{"index.html":{}}}],["pg",{"_index":780,"title":{},"body":{"dependencies.html":{}}}],["phone",{"_index":306,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{},"entities/Organization.html":{},"index.html":{}}}],["pictures",{"_index":1130,"title":{},"body":{"index.html":{}}}],["ping",{"_index":61,"title":{},"body":{"classes/AuthResolver.html":{},"classes/EscrowResolver.html":{},"injectables/GatewayService.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"classes/UserResolver.html":{}}}],["ping_auth",{"_index":1215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ping_escrow",{"_index":1226,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ping_media",{"_index":1227,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ping_notification",{"_index":1228,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ping_organization",{"_index":1230,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ping_payment",{"_index":1231,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ping_property",{"_index":1232,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ping_user",{"_index":1240,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pingauth",{"_index":64,"title":{},"body":{"classes/AuthResolver.html":{}}}],["pingescrow",{"_index":424,"title":{},"body":{"classes/EscrowResolver.html":{}}}],["pingmedia",{"_index":492,"title":{},"body":{"classes/MediaResolver.html":{}}}],["pingnotification",{"_index":514,"title":{},"body":{"classes/NotificationResolver.html":{}}}],["pingorganization",{"_index":592,"title":{},"body":{"classes/OrganizationResolver.html":{}}}],["pingpayment",{"_index":623,"title":{},"body":{"classes/PaymentResolver.html":{}}}],["pingproperty",{"_index":645,"title":{},"body":{"classes/PropertyResolver.html":{}}}],["pinguser",{"_index":707,"title":{},"body":{"classes/UserResolver.html":{}}}],["pk_2fecc2ceb81f30a7f46be802cbd",{"_index":329,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["pk_472c1f99a32def1b0abb219cd67",{"_index":313,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["pnpm",{"_index":830,"title":{},"body":{"index.html":{}}}],["pnpminstall",{"_index":838,"title":{},"body":{"index.html":{}}}],["policies",{"_index":907,"title":{},"body":{"index.html":{}}}],["pong",{"_index":69,"title":{},"body":{"classes/AuthResolver.html":{},"classes/EscrowResolver.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"classes/UserResolver.html":{}}}],["port",{"_index":192,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/SubgraphsBuilder.html":{}}}],["possibly",{"_index":1073,"title":{},"body":{"index.html":{}}}],["postgres",{"_index":358,"title":{},"body":{"classes/DataSource.html":{}}}],["precision",{"_index":553,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["preferences",{"_index":1097,"title":{},"body":{"index.html":{}}}],["prerequisites",{"_index":821,"title":{},"body":{"index.html":{}}}],["preventing",{"_index":996,"title":{},"body":{"index.html":{}}}],["price",{"_index":993,"title":{},"body":{"index.html":{}}}],["primary",{"_index":314,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["primary_color",{"_index":316,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{},"entities/OrganizationMetadata.html":{}}}],["primary_contact_name",{"_index":304,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{},"entities/Organization.html":{}}}],["primarycolor",{"_index":550,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["primarycontactname",{"_index":521,"title":{},"body":{"entities/Organization.html":{}}}],["primarygeneratedcolumn",{"_index":108,"title":{},"body":{"entities/BaseEntity.html":{}}}],["privacy",{"_index":947,"title":{},"body":{"index.html":{}}}],["private",{"_index":225,"title":{},"body":{"classes/ConfigHelper.html":{},"injectables/OrganizationService.html":{}}}],["process",{"_index":346,"title":{},"body":{"classes/DataSource.html":{}}}],["process.env.database_host",{"_index":359,"title":{},"body":{"classes/DataSource.html":{}}}],["process.env.database_name",{"_index":365,"title":{},"body":{"classes/DataSource.html":{}}}],["process.env.database_password",{"_index":364,"title":{},"body":{"classes/DataSource.html":{}}}],["process.env.database_port",{"_index":361,"title":{},"body":{"classes/DataSource.html":{}}}],["process.env.database_type",{"_index":357,"title":{},"body":{"classes/DataSource.html":{}}}],["process.env.database_username",{"_index":363,"title":{},"body":{"classes/DataSource.html":{}}}],["processed",{"_index":1065,"title":{},"body":{"index.html":{}}}],["processing",{"_index":1050,"title":{},"body":{"index.html":{}}}],["production",{"_index":667,"title":{},"body":{"modules/QushahConfigModule.html":{},"index.html":{}}}],["profile",{"_index":955,"title":{},"body":{"index.html":{}}}],["profiles",{"_index":959,"title":{},"body":{"index.html":{}}}],["project",{"_index":823,"title":{},"body":{"index.html":{}}}],["promise",{"_index":205,"title":{},"body":{"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"modules/GraphQLGatewayModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"classes/SubgraphsBuilder.html":{}}}],["properly",{"_index":983,"title":{},"body":{"index.html":{}}}],["properties",{"_index":81,"title":{"properties.html":{}},"body":{"entities/BaseEntity.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"index.html":{},"properties.html":{}}}],["property",{"_index":649,"title":{},"body":{"injectables/PropertyService.html":{},"index.html":{}}}],["property.controller",{"_index":641,"title":{},"body":{"modules/PropertyModule.html":{}}}],["property.resolver",{"_index":643,"title":{},"body":{"modules/PropertyModule.html":{}}}],["property.service",{"_index":632,"title":{},"body":{"controllers/PropertyController.html":{},"modules/PropertyModule.html":{}}}],["property_client",{"_index":801,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["property_host",{"_index":443,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["property_port",{"_index":1223,"title":{},"body":{"miscellaneous/variables.html":{}}}],["propertycommand",{"_index":633,"title":{},"body":{"controllers/PropertyController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["propertycommand.ping_property",{"_index":634,"title":{},"body":{"controllers/PropertyController.html":{}}}],["propertycontroller",{"_index":628,"title":{"controllers/PropertyController.html":{}},"body":{"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"coverage.html":{}}}],["propertydecorator",{"_index":807,"title":{},"body":{"miscellaneous/functions.html":{}}}],["propertykey",{"_index":809,"title":{},"body":{"miscellaneous/functions.html":{}}}],["propertymodule",{"_index":636,"title":{"modules/PropertyModule.html":{}},"body":{"modules/PropertyModule.html":{},"modules.html":{},"overview.html":{}}}],["propertyresolver",{"_index":642,"title":{"classes/PropertyResolver.html":{}},"body":{"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"coverage.html":{}}}],["propertyservice",{"_index":631,"title":{"injectables/PropertyService.html":{}},"body":{"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"injectables/PropertyService.html":{},"coverage.html":{},"overview.html":{}}}],["protecting",{"_index":922,"title":{},"body":{"index.html":{}}}],["protocols",{"_index":1052,"title":{},"body":{"index.html":{}}}],["prototype",{"_index":133,"title":{},"body":{"entities/BaseEntity.html":{}}}],["providers",{"_index":43,"title":{},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["providing",{"_index":971,"title":{},"body":{"index.html":{}}}],["public",{"_index":287,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["push",{"_index":1084,"title":{},"body":{"index.html":{}}}],["query",{"_index":66,"title":{},"body":{"classes/AuthResolver.html":{},"classes/EscrowResolver.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"classes/UserResolver.html":{}}}],["query(undefined",{"_index":62,"title":{},"body":{"classes/AuthResolver.html":{},"classes/EscrowResolver.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"classes/UserResolver.html":{}}}],["queryrunner",{"_index":292,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["queryrunner.query",{"_index":296,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["queryrunner.query(`drop",{"_index":340,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["qushah",{"_index":813,"title":{},"body":{"index.html":{}}}],["qushah/common",{"_index":56,"title":{},"body":{"modules/AuthModule.html":{},"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{},"modules/DatabaseModule.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/GraphQLGatewayModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/SubgraphsBuilder.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["qushah/common/config",{"_index":222,"title":{},"body":{"modules/CommonModule.html":{}}}],["qushah/common/config/config.helper",{"_index":210,"title":{},"body":{"modules/ClientsModule.html":{}}}],["qushah/common/constants/commands",{"_index":25,"title":{},"body":{"controllers/AuthController.html":{}}}],["qushah/common/constants/commands/organization.command",{"_index":543,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["qushah/common/decorators",{"_index":115,"title":{},"body":{"entities/BaseEntity.html":{}}}],["qushahconfigmodule",{"_index":218,"title":{"modules/QushahConfigModule.html":{}},"body":{"modules/CommonModule.html":{},"modules/QushahConfigModule.html":{},"modules.html":{},"overview.html":{}}}],["qushahconfigservice",{"_index":227,"title":{"injectables/QushahConfigService.html":{}},"body":{"classes/ConfigHelper.html":{},"injectables/QushahConfigService.html":{},"coverage.html":{}}}],["qushahconfigservice(configservice",{"_index":263,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["r",{"_index":1206,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rate",{"_index":920,"title":{},"body":{"index.html":{}}}],["razorpay",{"_index":1049,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":29,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DocumentationController.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"injectables/QushahConfigService.html":{},"controllers/UserController.html":{}}}],["receipts",{"_index":1061,"title":{},"body":{"index.html":{}}}],["recurring",{"_index":1062,"title":{},"body":{"index.html":{}}}],["redis",{"_index":831,"title":{},"body":{"index.html":{}}}],["redis_host",{"_index":654,"title":{},"body":{"modules/QushahConfigModule.html":{},"miscellaneous/variables.html":{}}}],["redis_port",{"_index":656,"title":{},"body":{"modules/QushahConfigModule.html":{},"miscellaneous/variables.html":{}}}],["redisconfig",{"_index":183,"title":{},"body":{"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{}}}],["redisconfig.host",{"_index":191,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["redisconfig.port",{"_index":193,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["reduced",{"_index":1123,"title":{},"body":{"index.html":{}}}],["references",{"_index":334,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["reflect",{"_index":782,"title":{},"body":{"dependencies.html":{}}}],["reflected",{"_index":1015,"title":{},"body":{"index.html":{}}}],["refresh",{"_index":914,"title":{},"body":{"index.html":{}}}],["regarding",{"_index":952,"title":{},"body":{"index.html":{}}}],["register",{"_index":201,"title":{},"body":{"modules/ClientsModule.html":{},"modules/GraphQLGatewayModule.html":{}}}],["register(...names",{"_index":202,"title":{},"body":{"modules/ClientsModule.html":{}}}],["register(...subgraphnames",{"_index":452,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["regulations",{"_index":949,"title":{},"body":{"index.html":{}}}],["regulatory",{"_index":1039,"title":{},"body":{"index.html":{}}}],["rejectunauthorized",{"_index":368,"title":{},"body":{"classes/DataSource.html":{},"modules/DatabaseModule.html":{}}}],["rel_efaca847c588a9817470f7c6ca",{"_index":328,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["relations",{"_index":605,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["release",{"_index":1025,"title":{},"body":{"index.html":{}}}],["released",{"_index":1029,"title":{},"body":{"index.html":{}}}],["releases",{"_index":1044,"title":{},"body":{"index.html":{}}}],["reminders",{"_index":1088,"title":{},"body":{"index.html":{}}}],["rent",{"_index":1034,"title":{},"body":{"index.html":{}}}],["rent_fee_percentage",{"_index":319,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{},"entities/OrganizationMetadata.html":{}}}],["rented",{"_index":1001,"title":{},"body":{"index.html":{}}}],["rentfeepercentage",{"_index":551,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["reorder",{"_index":149,"title":{},"body":{"entities/BaseEntity.html":{}}}],["repo",{"_index":879,"title":{},"body":{"index.html":{}}}],["repository",{"_index":598,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["request",{"_index":1132,"title":{},"body":{"index.html":{}}}],["requests",{"_index":1134,"title":{},"body":{"index.html":{}}}],["required",{"_index":912,"title":{},"body":{"index.html":{}}}],["reset",{"_index":51,"title":{},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resolutions",{"_index":863,"title":{},"body":{"index.html":{}}}],["resolver",{"_index":67,"title":{},"body":{"classes/AuthResolver.html":{},"classes/EscrowResolver.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"classes/UserResolver.html":{}}}],["resolvers",{"_index":889,"title":{},"body":{"index.html":{}}}],["results",{"_index":34,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"modules/QushahConfigModule.html":{},"injectables/QushahConfigService.html":{},"classes/SubgraphsBuilder.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retries",{"_index":1054,"title":{},"body":{"index.html":{}}}],["retrieve",{"_index":136,"title":{},"body":{"entities/BaseEntity.html":{}}}],["return",{"_index":32,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"controllers/DocumentationController.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"controllers/MediaController.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"injectables/QushahConfigService.html":{},"classes/SubgraphsBuilder.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":16,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"controllers/DocumentationController.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"controllers/MediaController.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"injectables/QushahConfigService.html":{},"classes/SubgraphsBuilder.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["revert",{"_index":1192,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roles",{"_index":934,"title":{},"body":{"index.html":{}}}],["routing",{"_index":1133,"title":{},"body":{"index.html":{}}}],["rules",{"_index":1028,"title":{},"body":{"index.html":{}}}],["run",{"_index":822,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["running",{"_index":1200,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rxjs",{"_index":785,"title":{},"body":{"dependencies.html":{}}}],["scalability",{"_index":974,"title":{},"body":{"index.html":{}}}],["scale",{"_index":554,"title":{},"body":{"entities/OrganizationMetadata.html":{},"index.html":{}}}],["scans",{"_index":1007,"title":{},"body":{"index.html":{}}}],["schema",{"_index":345,"title":{},"body":{"classes/DataSource.html":{},"modules/DatabaseModule.html":{}}}],["schemas",{"_index":888,"title":{},"body":{"index.html":{}}}],["search",{"_index":987,"title":{},"body":{"index.html":{}}}],["secure",{"_index":902,"title":{},"body":{"index.html":{}}}],["securely",{"_index":1008,"title":{},"body":{"index.html":{}}}],["security",{"_index":900,"title":{},"body":{"index.html":{}}}],["sending",{"_index":1058,"title":{},"body":{"index.html":{}}}],["sensitive",{"_index":942,"title":{},"body":{"index.html":{}}}],["separate",{"_index":877,"title":{},"body":{"index.html":{}}}],["serial",{"_index":300,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["service",{"_index":76,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"injectables/MediaService.html":{},"injectables/NotificationService.html":{},"injectables/OrganizationService.html":{},"injectables/PaymentService.html":{},"injectables/PropertyService.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["serviceendpointdefinition",{"_index":681,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["services",{"_index":1016,"title":{},"body":{"index.html":{}}}],["set",{"_index":386,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["setup",{"_index":832,"title":{},"body":{"index.html":{}}}],["shared",{"_index":880,"title":{},"body":{"index.html":{}}}],["significant",{"_index":1113,"title":{},"body":{"index.html":{}}}],["slug",{"_index":303,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{},"entities/Organization.html":{}}}],["sms",{"_index":1083,"title":{},"body":{"index.html":{}}}],["sort",{"_index":164,"title":{},"body":{"entities/BaseEntity.html":{}}}],["sortschema",{"_index":474,"title":{},"body":{"modules/GraphQLMicroserviceModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"modules/QushahConfigModule.html":{},"injectables/QushahConfigService.html":{},"classes/SubgraphsBuilder.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["source.ts",{"_index":723,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["source.util.ts",{"_index":342,"title":{},"body":{"classes/DataSource.html":{},"coverage.html":{}}}],["source.util.ts:9",{"_index":344,"title":{},"body":{"classes/DataSource.html":{}}}],["space",{"_index":1114,"title":{},"body":{"index.html":{}}}],["specific",{"_index":1103,"title":{},"body":{"index.html":{}}}],["src/migrations",{"_index":1211,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ssl",{"_index":367,"title":{},"body":{"classes/DataSource.html":{},"modules/DatabaseModule.html":{}}}],["standards",{"_index":1040,"title":{},"body":{"index.html":{}}}],["start",{"_index":844,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":847,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":848,"title":{},"body":{"index.html":{}}}],["started",{"_index":812,"title":{"index.html":{}},"body":{}}],["statements",{"_index":715,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":122,"title":{},"body":{"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"modules/GraphQLGatewayModule.html":{},"classes/SubgraphsBuilder.html":{}}}],["status",{"_index":1012,"title":{},"body":{"index.html":{}}}],["storage",{"_index":954,"title":{},"body":{"index.html":{}}}],["storing",{"_index":1003,"title":{},"body":{"index.html":{}}}],["string",{"_index":17,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"controllers/DocumentationController.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"controllers/MediaController.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"injectables/QushahConfigService.html":{},"classes/SubgraphsBuilder.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["strong",{"_index":906,"title":{},"body":{"index.html":{}}}],["structure",{"_index":867,"title":{},"body":{"index.html":{}}}],["subgraphnames",{"_index":454,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["subgraphs",{"_index":465,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["subgraphsbuilder",{"_index":461,"title":{"classes/SubgraphsBuilder.html":{}},"body":{"modules/GraphQLGatewayModule.html":{},"classes/SubgraphsBuilder.html":{},"coverage.html":{}}}],["subgraphsbuilder.build(...subgraphnames",{"_index":466,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["subscribers",{"_index":372,"title":{},"body":{"classes/DataSource.html":{}}}],["successful",{"_index":1059,"title":{},"body":{"index.html":{}}}],["such",{"_index":969,"title":{},"body":{"index.html":{}}}],["supergraphsdl",{"_index":464,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["support",{"_index":1069,"title":{},"body":{"index.html":{},"modules.html":{}}}],["supporting",{"_index":1063,"title":{},"body":{"index.html":{}}}],["sure",{"_index":834,"title":{},"body":{"index.html":{}}}],["svg",{"_index":1158,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1149,"title":{},"body":{"index.html":{}}}],["symbol.for('order_key",{"_index":1229,"title":{},"body":{"miscellaneous/variables.html":{}}}],["synchronize",{"_index":390,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["system",{"_index":816,"title":{},"body":{"index.html":{}}}],["t",{"_index":239,"title":{},"body":{"classes/ConfigHelper.html":{},"injectables/QushahConfigService.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":298,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":759,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":130,"title":{},"body":{"entities/BaseEntity.html":{},"miscellaneous/functions.html":{}}}],["target.prototype",{"_index":135,"title":{},"body":{"entities/BaseEntity.html":{}}}],["templates",{"_index":1086,"title":{},"body":{"index.html":{}}}],["tenant",{"_index":936,"title":{},"body":{"index.html":{}}}],["tenants",{"_index":977,"title":{},"body":{"index.html":{}}}],["test",{"_index":668,"title":{},"body":{"modules/QushahConfigModule.html":{},"index.html":{}}}],["test:covtypeorm",{"_index":853,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":852,"title":{},"body":{"index.html":{}}}],["tests",{"_index":849,"title":{},"body":{"index.html":{}}}],["third",{"_index":1151,"title":{},"body":{"index.html":{}}}],["this.authservice.gethello",{"_index":33,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.configservice.get(key",{"_index":674,"title":{},"body":{"injectables/QushahConfigService.html":{}}}],["this.documentationservice.gethello",{"_index":398,"title":{},"body":{"controllers/DocumentationController.html":{}}}],["this.escrowservice.gethello",{"_index":414,"title":{},"body":{"controllers/EscrowController.html":{}}}],["this.getconfig",{"_index":271,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environmentconstant.database_host",{"_index":268,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environmentconstant.database_name",{"_index":276,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environmentconstant.database_port",{"_index":269,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environmentconstant.database_type",{"_index":267,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environmentconstant.redis_host",{"_index":265,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environmentconstant.redis_port",{"_index":266,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environmentconstant[`${key}_port",{"_index":278,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.mediaservice.gethello",{"_index":482,"title":{},"body":{"controllers/MediaController.html":{}}}],["this.notificationservice.gethello",{"_index":504,"title":{},"body":{"controllers/NotificationController.html":{}}}],["this.organizationservice.findall",{"_index":594,"title":{},"body":{"classes/OrganizationResolver.html":{}}}],["this.organizationservice.gethello",{"_index":545,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["this.paymentservice.gethello",{"_index":613,"title":{},"body":{"controllers/PaymentController.html":{}}}],["this.propertyservice.gethello",{"_index":635,"title":{},"body":{"controllers/PropertyController.html":{}}}],["this.qushahconfigservice.getconfig(key",{"_index":281,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.repository.find",{"_index":604,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["this.userservice.gethello",{"_index":697,"title":{},"body":{"controllers/UserController.html":{}}}],["through",{"_index":1138,"title":{},"body":{"index.html":{}}}],["time",{"_index":1066,"title":{},"body":{"index.html":{}}}],["timely",{"_index":1082,"title":{},"body":{"index.html":{}}}],["times",{"_index":1122,"title":{},"body":{"index.html":{}}}],["timestamp",{"_index":307,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["title",{"_index":1197,"title":{},"body":{"miscellaneous/variables.html":{}}}],["token",{"_index":908,"title":{},"body":{"index.html":{}}}],["tool",{"_index":856,"title":{},"body":{"index.html":{}}}],["traffic",{"_index":1155,"title":{},"body":{"index.html":{}}}],["trail",{"_index":1024,"title":{},"body":{"index.html":{}}}],["transaction",{"_index":1021,"title":{},"body":{"index.html":{}}}],["transactions",{"_index":873,"title":{},"body":{"index.html":{}}}],["transparency",{"_index":1026,"title":{},"body":{"index.html":{}}}],["transport",{"_index":178,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{}}}],["transport.redis",{"_index":188,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{}}}],["true",{"_index":96,"title":{},"body":{"entities/BaseEntity.html":{},"classes/ConfigHelper.html":{},"modules/DatabaseModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"modules/QushahConfigModule.html":{},"miscellaneous/variables.html":{}}}],["true})@column({name",{"_index":566,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["true})@column({nullable",{"_index":557,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["true})@deletedatecolumn({name",{"_index":94,"title":{},"body":{"entities/BaseEntity.html":{}}}],["true})@onetoone(undefined",{"_index":526,"title":{},"body":{"entities/Organization.html":{}}}],["true})@updatedatecolumn({name",{"_index":101,"title":{},"body":{"entities/BaseEntity.html":{}}}],["ts",{"_index":1204,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tsconfig",{"_index":1207,"title":{},"body":{"miscellaneous/variables.html":{}}}],["type",{"_index":87,"title":{},"body":{"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"modules/GraphQLGatewayModule.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"injectables/QushahConfigService.html":{},"classes/SubgraphsBuilder.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":110,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"injectables/OrganizationService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["typeorm/metadata/columnmetadata",{"_index":117,"title":{},"body":{"entities/BaseEntity.html":{}}}],["typeorm_migrations",{"_index":356,"title":{},"body":{"classes/DataSource.html":{}}}],["typeormcommand",{"_index":758,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeormdatasource",{"_index":349,"title":{},"body":{"classes/DataSource.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeormmodule",{"_index":380,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/OrganizationModule.html":{}}}],["typeormmodule.forfeature([organization",{"_index":586,"title":{},"body":{"modules/OrganizationModule.html":{}}}],["typeormmodule.forrootasync",{"_index":383,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["typeormmoduleoptions",{"_index":381,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["types",{"_index":1104,"title":{},"body":{"index.html":{}}}],["types/yargs",{"_index":772,"title":{},"body":{"dependencies.html":{}}}],["unauthorized",{"_index":903,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":13,"title":{},"body":{"controllers/AuthController.html":{},"entities/BaseEntity.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{}}}],["unique",{"_index":311,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{},"entities/Organization.html":{}}}],["unit",{"_index":850,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":1169,"title":{},"body":{"properties.html":{}}}],["unsubscribing",{"_index":1102,"title":{},"body":{"index.html":{}}}],["up",{"_index":289,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["up(queryrunner",{"_index":294,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["update",{"_index":338,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{},"index.html":{}}}],["updated_at",{"_index":102,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganization1740356244243.html":{}}}],["updatedat",{"_index":86,"title":{},"body":{"entities/BaseEntity.html":{}}}],["updatedatecolumn",{"_index":109,"title":{},"body":{"entities/BaseEntity.html":{}}}],["updates",{"_index":956,"title":{},"body":{"index.html":{}}}],["upi",{"_index":1047,"title":{},"body":{"index.html":{}}}],["uploaded",{"_index":1125,"title":{},"body":{"index.html":{}}}],["uploading",{"_index":1129,"title":{},"body":{"index.html":{}}}],["uploads",{"_index":1110,"title":{},"body":{"index.html":{}}}],["uq_a08804baa7c5d5427067c49a31f",{"_index":312,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["uq_c21e615583a3ebbb0977452afb0",{"_index":310,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["url",{"_index":688,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["usage",{"_index":1124,"title":{},"body":{"index.html":{}}}],["use",{"_index":865,"title":{},"body":{"index.html":{}}}],["usedatasource(datasource",{"_index":123,"title":{},"body":{"entities/BaseEntity.html":{}}}],["usefactory",{"_index":384,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/GraphQLGatewayModule.html":{}}}],["user",{"_index":711,"title":{},"body":{"injectables/UserService.html":{},"index.html":{}}}],["user.controller",{"_index":703,"title":{},"body":{"modules/UserModule.html":{}}}],["user.resolver",{"_index":705,"title":{},"body":{"modules/UserModule.html":{}}}],["user.service",{"_index":694,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user_client",{"_index":802,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["user_host",{"_index":444,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["user_port",{"_index":1224,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usercommand",{"_index":695,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usercommand.ping_user",{"_index":696,"title":{},"body":{"controllers/UserController.html":{}}}],["usercontroller",{"_index":690,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["usermodule",{"_index":698,"title":{"modules/UserModule.html":{}},"body":{"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":270,"title":{},"body":{"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{}}}],["userresolver",{"_index":704,"title":{"classes/UserResolver.html":{}},"body":{"modules/UserModule.html":{},"classes/UserResolver.html":{},"coverage.html":{}}}],["users",{"_index":958,"title":{},"body":{"index.html":{}}}],["userservice",{"_index":693,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":138,"title":{},"body":{"entities/BaseEntity.html":{},"index.html":{}}}],["utilities",{"_index":885,"title":{},"body":{"index.html":{}}}],["valid('development",{"_index":666,"title":{},"body":{"modules/QushahConfigModule.html":{}}}],["validated",{"_index":984,"title":{},"body":{"index.html":{}}}],["validation",{"_index":980,"title":{},"body":{"index.html":{}}}],["validationschema",{"_index":652,"title":{},"body":{"modules/QushahConfigModule.html":{}}}],["value",{"_index":146,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganization1740356244243.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":156,"title":{},"body":{"entities/BaseEntity.html":{}}}],["variable",{"_index":724,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":352,"title":{"miscellaneous/variables.html":{}},"body":{"classes/DataSource.html":{},"miscellaneous/variables.html":{}}}],["varying",{"_index":302,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["version",{"_index":1166,"title":{},"body":{"properties.html":{}}}],["videos",{"_index":1005,"title":{},"body":{"index.html":{}}}],["virus",{"_index":1126,"title":{},"body":{"index.html":{}}}],["volumes",{"_index":1077,"title":{},"body":{"index.html":{}}}],["watch",{"_index":845,"title":{},"body":{"index.html":{}}}],["way",{"_index":991,"title":{},"body":{"index.html":{}}}],["within",{"_index":878,"title":{},"body":{"index.html":{}}}],["without",{"_index":859,"title":{},"body":{"index.html":{}}}],["world",{"_index":406,"title":{},"body":{"injectables/DocumentationService.html":{}}}],["worrying",{"_index":860,"title":{},"body":{"index.html":{}}}],["yargs",{"_index":788,"title":{},"body":{"dependencies.html":{}}}],["yargs(process.argv.slice(2",{"_index":1182,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ycolumn",{"_index":155,"title":{},"body":{"entities/BaseEntity.html":{}}}],["zoom",{"_index":50,"title":{},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/auth.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/auth/src/auth.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { AuthCommand } from '@qushah/common/constants/commands';\n\n@Controller()\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @MessagePattern({ cmd: AuthCommand.PING_AUTH })\n  getHello(): string {\n    return this.authService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nCommonModule->AuthModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nAuthModule -->\n\nGraphQLMicroserviceModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/auth/src/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { CommonModule, GraphQLMicroserviceModule } from '@qushah/common';\nimport { AuthResolver } from './auth.resolver';\n\n@Module({\n  imports: [CommonModule, GraphQLMicroserviceModule],\n  controllers: [AuthController],\n  providers: [AuthService, AuthResolver],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthResolver.html":{"url":"classes/AuthResolver.html","title":"class - AuthResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/auth.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingAuth'})\n                \n            \n\n                    \n                        \n                            Defined in apps/auth/src/auth.resolver.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\n\n@Resolver()\nexport class AuthResolver {\n  @Query(() => String, { name: 'pingAuth' })\n  ping(): string {\n    return 'pong';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/auth/src/auth.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AuthService {\n  getHello(): string {\n    return 'Hello from Auth Service!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/BaseEntity.html":{"url":"entities/BaseEntity.html","title":"entity - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/database/entities/base.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ColumnOrder(9999)@Field(undefined)@CreateDateColumn({name: 'created_at'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/common/src/database/entities/base.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ColumnOrder(9999)@Field(undefined, {nullable: true})@DeleteDateColumn({name: 'deleted_at', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/common/src/database/entities/base.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ColumnOrder(undefined)@Field(undefined)@PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/common/src/database/entities/base.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ColumnOrder(9999)@Field(undefined, {nullable: true})@UpdateDateColumn({name: 'updated_at', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/common/src/database/entities/base.entity.ts:30\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  BaseEntity as BaseEntityTypeOrm,\n  CreateDateColumn,\n  DataSource,\n  DeleteDateColumn,\n  Entity,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { Field, ID, ObjectType } from '@nestjs/graphql';\nimport { ColumnOrder, getColumnOrder } from '@qushah/common/decorators';\nimport { ColumnMetadata } from 'typeorm/metadata/ColumnMetadata';\n\n@ObjectType()\n@Entity()\nexport abstract class BaseEntity extends BaseEntityTypeOrm {\n  @ColumnOrder(-1)\n  @Field(() => ID)\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @ColumnOrder(9999)\n  @Field(() => Date)\n  @CreateDateColumn({ name: 'created_at' })\n  createdAt: Date;\n\n  @ColumnOrder(9999)\n  @Field(() => Date, { nullable: true })\n  @UpdateDateColumn({ name: 'updated_at', nullable: true })\n  updatedAt?: Date;\n\n  @ColumnOrder(9999)\n  @Field(() => Date, { nullable: true })\n  @DeleteDateColumn({ name: 'deleted_at', nullable: true })\n  deletedAt?: Date;\n\n  static useDataSource(dataSource: DataSource) {\n    BaseEntityTypeOrm.useDataSource.call(this, dataSource);\n    const meta = dataSource.entityMetadatasMap.get(this);\n\n    const getOrderSafely = (column: ColumnMetadata) => {\n      const target = column.target as any;\n\n      // Check if the target and its prototype exist\n      if (target && target.prototype) {\n        // Retrieve the column order using the custom getColumnOrder function\n        return getColumnOrder(target.prototype, column.propertyName);\n      }\n\n      // Fallback to a default high order value if target is undefined\n      return 9996;\n    };\n\n    if (meta != null) {\n      // Reorder columns based on custom `@ColumnOrder` decorator\n      meta.columns = [...meta.columns].sort((xColumn, yColumn) => {\n        // Get the order values for both columns being compared\n        const orderXColumn = getOrderSafely(xColumn);\n        const orderYColumn = getOrderSafely(yColumn);\n\n        // Sort in ascending order\n        return orderXColumn - orderYColumn;\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Bootstrapper.html":{"url":"classes/Bootstrapper.html","title":"class - Bootstrapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Bootstrapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/utils/bootstrapper.util.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Async\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init(module: any)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/utils/bootstrapper.util.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                module\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Logger } from '@nestjs/common';\nimport { ConfigHelper } from '@qushah/common';\nimport { NestFactory } from '@nestjs/core';\nimport { MicroserviceOptions, Transport } from '@nestjs/microservices';\n\nexport class Bootstrapper {\n  static async init(module: any) {\n    const logger = new Logger(`${module.name}Bootstrap`);\n    const configHelper = await ConfigHelper.getInstance();\n    const redisConfig = configHelper.redisConfig;\n    const app = await NestFactory.create(module);\n    app.connectMicroservice({\n      transport: Transport.REDIS,\n      options: {\n        host: redisConfig.host,\n        port: redisConfig.port,\n      },\n    });\n    await app.startAllMicroservices();\n    const port: number = configHelper.getModulePort(module.name);\n    await app.listen(port);\n    logger.log(`Microservice listening on port ${port}...`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ClientsModule.html":{"url":"modules/ClientsModule.html","title":"module - ClientsModule","body":"\n                   \n\n\n\n\n    Modules\n    ClientsModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/clients/clients.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(...names: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/clients/clients.module.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                names\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, Global, DynamicModule } from '@nestjs/common';\nimport {\n  ClientsModule as NestClientsModule,\n  ClientsModuleOptions,\n  Transport,\n} from '@nestjs/microservices';\nimport { ConfigHelper } from '@qushah/common/config/config.helper';\n\n@Global()\n@Module({})\nexport class ClientsModule {\n  static async register(...names: string[]): Promise {\n    const configHelper = await ConfigHelper.getInstance();\n    const { host, port } = configHelper.redisConfig;\n    const clients: ClientsModuleOptions = names.map((name) => ({\n      name,\n      transport: Transport.REDIS,\n      options: {\n        host,\n        port,\n      },\n    }));\n    return {\n      module: ClientsModule,\n      imports: [NestClientsModule.register(clients)],\n      exports: [NestClientsModule],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CommonModule.html":{"url":"modules/CommonModule.html","title":"module - CommonModule","body":"\n                   \n\n\n\n\n    Modules\n    CommonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_exports\n\n\n\ncluster_CommonModule_providers\n\n\n\ncluster_CommonModule_imports\n\n\n\n\nQushahConfigModule\n\nQushahConfigModule\n\n\n\nCommonModule\n\nCommonModule\n\nCommonModule -->\n\nQushahConfigModule->CommonModule\n\n\n\n\n\nCommonService \n\nCommonService \n\nCommonService  -->\n\nCommonModule->CommonService \n\n\n\n\n\nCommonService\n\nCommonService\n\nCommonModule -->\n\nCommonService->CommonModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/common.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CommonService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            QushahConfigModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CommonService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CommonService } from './common.service';\nimport { QushahConfigModule } from '@qushah/common/config';\n\n@Module({\n  imports: [QushahConfigModule],\n  providers: [CommonService],\n  exports: [CommonService],\n})\nexport class CommonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CommonService.html":{"url":"injectables/CommonService.html","title":"injectable - CommonService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CommonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/common.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class CommonService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigHelper.html":{"url":"classes/ConfigHelper.html","title":"class - ConfigHelper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/config/config.helper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                instance\n                            \n                            \n                                    Private\n                                qushahConfigService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getConfig\n                            \n                            \n                                    Static\n                                    Async\n                                getInstance\n                            \n                            \n                                getMicroServiceHosts\n                            \n                            \n                                getModulePort\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    redisConfig\n                                \n                                \n                                    databaseConfig\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Private\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in libs/common/src/config/config.helper.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        instance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigHelper\n\n                    \n                \n                    \n                        \n                                Defined in libs/common/src/config/config.helper.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        qushahConfigService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QushahConfigService\n\n                    \n                \n                    \n                        \n                                Defined in libs/common/src/config/config.helper.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getConfig\n                        \n                    \n                \n            \n            \n                \ngetConfig(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/config/config.helper.ts:67\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        getInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    getInstance()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/config/config.helper.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMicroServiceHosts\n                        \n                    \n                \n            \n            \n                \ngetMicroServiceHosts(microserviceName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/config/config.helper.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                microserviceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { host: any; port: any; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getModulePort\n                        \n                    \n                \n            \n            \n                \ngetModulePort(moduleName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/config/config.helper.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                moduleName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        redisConfig\n                    \n                \n\n                \n                    \n                        getredisConfig()\n                    \n                \n                            \n                                \n                                    Defined in libs/common/src/config/config.helper.ts:31\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        databaseConfig\n                    \n                \n\n                \n                    \n                        getdatabaseConfig()\n                    \n                \n                            \n                                \n                                    Defined in libs/common/src/config/config.helper.ts:37\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ConfigService } from '@nestjs/config';\nimport { QushahConfigService } from './config.service';\nimport { NestFactory } from '@nestjs/core';\nimport { ConfigModule } from '@nestjs/config';\nimport { EnvironmentConstant } from '@qushah/common';\n\nexport class ConfigHelper {\n  private static instance: ConfigHelper;\n  private qushahConfigService: QushahConfigService;\n\n  private constructor() {}\n\n  static async getInstance(): Promise {\n    if (!ConfigHelper.instance) {\n      const appContext = await NestFactory.createApplicationContext(\n        ConfigModule.forRoot({\n          isGlobal: true,\n        }),\n      );\n\n      const configService = appContext.get(ConfigService);\n      const qushahConfigService = new QushahConfigService(configService);\n\n      ConfigHelper.instance = new ConfigHelper();\n      ConfigHelper.instance.qushahConfigService = qushahConfigService;\n    }\n\n    return ConfigHelper.instance;\n  }\n\n  get redisConfig() {\n    const host = this.getConfig(EnvironmentConstant.REDIS_HOST);\n    const port = this.getConfig(EnvironmentConstant.REDIS_PORT);\n    return { host, port };\n  }\n\n  get databaseConfig() {\n    const type = this.getConfig(EnvironmentConstant.DATABASE_TYPE);\n    const host = this.getConfig(EnvironmentConstant.DATABASE_HOST);\n    const port = this.getConfig(EnvironmentConstant.DATABASE_PORT);\n    const username = this.getConfig(\n      EnvironmentConstant.DATABASE_USERNAME,\n    );\n    const password = this.getConfig(\n      EnvironmentConstant.DATABASE_PASSWORD,\n    );\n    const database = this.getConfig(EnvironmentConstant.DATABASE_NAME);\n    return { type, host, port, username, password, database };\n  }\n\n  getModulePort(moduleName: string) {\n    const key = moduleName?.split('Module')?.[0]?.toUpperCase();\n    if (!key) return;\n    return this.getConfig(EnvironmentConstant[`${key}_PORT`]);\n  }\n\n  getMicroServiceHosts(microserviceName: string) {\n    const host = this.getConfig(\n      `${microserviceName}_HOST`.toUpperCase(),\n    );\n    const port = this.getConfig(\n      `${microserviceName}_PORT`.toUpperCase(),\n    );\n    return { host, port };\n  }\n\n  getConfig(key: string) {\n    return this.qushahConfigService.getConfig(key);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrganization1740356244243.html":{"url":"classes/CreateOrganization1740356244243.html","title":"class - CreateOrganization1740356244243","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrganization1740356244243\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/organization/src/migrations/1740356244243-CreateOrganization.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'CreateOrganization1740356244243'\n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/migrations/1740356244243-CreateOrganization.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/organization/src/migrations/1740356244243-CreateOrganization.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/organization/src/migrations/1740356244243-CreateOrganization.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class CreateOrganization1740356244243 implements MigrationInterface {\n  name = 'CreateOrganization1740356244243';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `CREATE TABLE \"organization\".\"organization\" (\"id\" SERIAL NOT NULL, \"name\" character varying NOT NULL, \"slug\" character varying NOT NULL, \"primary_contact_name\" character varying NOT NULL, \"email\" character varying NOT NULL, \"phone\" character varying NOT NULL, \"created_at\" TIMESTAMP NOT NULL DEFAULT now(), \"updated_at\" TIMESTAMP DEFAULT now(), \"deleted_at\" TIMESTAMP, CONSTRAINT \"UQ_c21e615583a3ebbb0977452afb0\" UNIQUE (\"name\"), CONSTRAINT \"UQ_a08804baa7c5d5427067c49a31f\" UNIQUE (\"slug\"), CONSTRAINT \"PK_472c1f99a32def1b0abb219cd67\" PRIMARY KEY (\"id\"))`,\n    );\n    await queryRunner.query(\n      `CREATE TABLE \"organization\".\"organization_metadata\" (\"id\" SERIAL NOT NULL, \"primary_color\" character varying, \"domain\" character varying, \"logo\" character varying NOT NULL, \"rent_fee_percentage\" numeric(5,2) NOT NULL DEFAULT '5', \"deposit_fee_percentage\" numeric(5,2) NOT NULL DEFAULT '5', \"allow_interest_earning\" boolean NOT NULL DEFAULT false, \"organization_id\" integer, \"created_at\" TIMESTAMP NOT NULL DEFAULT now(), \"updated_at\" TIMESTAMP DEFAULT now(), \"deleted_at\" TIMESTAMP, CONSTRAINT \"REL_efaca847c588a9817470f7c6ca\" UNIQUE (\"organization_id\"), CONSTRAINT \"PK_2fecc2ceb81f30a7f46be802cbd\" PRIMARY KEY (\"id\"))`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"organization\".\"organization_metadata\" ADD CONSTRAINT \"FK_efaca847c588a9817470f7c6ca8\" FOREIGN KEY (\"organization_id\") REFERENCES \"organization\".\"organization\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `ALTER TABLE \"organization\".\"organization_metadata\" DROP CONSTRAINT \"FK_efaca847c588a9817470f7c6ca8\"`,\n    );\n    await queryRunner.query(\n      `DROP TABLE \"organization\".\"organization_metadata\"`,\n    );\n    await queryRunner.query(`DROP TABLE \"organization\".\"organization\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DataSource.html":{"url":"classes/DataSource.html","title":"class - DataSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/utils/data-source.util.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        getInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    getInstance(schema: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/utils/data-source.util.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                schema\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import process from 'node:process';\nimport * as dotenv from 'dotenv';\nimport { DataSource as TypeormDataSource } from 'typeorm';\n\n// Load environment variables from .env file\ndotenv.config();\n\nexport class DataSource {\n  static getInstance(schema: string) {\n    return new TypeormDataSource({\n      migrationsTableName: 'typeorm_migrations',\n      type: (process.env.DATABASE_TYPE as 'postgres') || 'postgres',\n      host: process.env.DATABASE_HOST || 'localhost',\n      port: +process.env.DATABASE_PORT || 5432,\n      username: process.env.DATABASE_USERNAME || 'postgres',\n      password: process.env.DATABASE_PASSWORD || 'postgres',\n      database: process.env.DATABASE_NAME || 'my-db',\n      ssl: { rejectUnauthorized: false },\n      schema,\n      entities: [`apps/${schema}/**/**.entity{.ts,.js}`],\n      migrations: [`apps/${schema}/src/migrations/**/*{.ts,.js}`],\n      subscribers: [`apps/${schema}/src/subscriber/**/*{.ts,.js}`],\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/database/database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(entitiesPath: string[], schema: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/database/database.module.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entitiesPath\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                schema\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, DynamicModule } from '@nestjs/common';\nimport { TypeOrmModule, TypeOrmModuleOptions } from '@nestjs/typeorm';\nimport { ConfigHelper } from '@qushah/common';\n\n@Module({})\nexport class DatabaseModule {\n  static forRoot(entitiesPath: string[], schema: string): DynamicModule {\n    return {\n      module: DatabaseModule,\n      imports: [\n        TypeOrmModule.forRootAsync({\n          useFactory: async () => {\n            const configHelper = await ConfigHelper.getInstance();\n            const { type, host, port, username, password, database } =\n              configHelper.databaseConfig;\n            const options: TypeOrmModuleOptions = {\n              type,\n              host,\n              port,\n              username,\n              password,\n              database,\n              schema: schema, // Set schema dynamically\n              entities: entitiesPath, // Pass entities dynamically\n              autoLoadEntities: true,\n              // synchronize: true, // Enable only for development\n              ssl: { rejectUnauthorized: false },\n            };\n\n            return options;\n          },\n        }),\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DocumentationController.html":{"url":"controllers/DocumentationController.html","title":"controller - DocumentationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DocumentationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/documentation/src/documentation.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in apps/documentation/src/documentation.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { DocumentationService } from './documentation.service';\n\n@Controller()\nexport class DocumentationController {\n  constructor(private readonly documentationService: DocumentationService) {}\n\n  @Get()\n  getHello(): string {\n    return this.documentationService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DocumentationModule.html":{"url":"modules/DocumentationModule.html","title":"module - DocumentationModule","body":"\n                   \n\n\n\n\n    Modules\n    DocumentationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DocumentationModule\n\n\n\ncluster_DocumentationModule_providers\n\n\n\n\nDocumentationService\n\nDocumentationService\n\n\n\nDocumentationModule\n\nDocumentationModule\n\nDocumentationModule -->\n\nDocumentationService->DocumentationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/documentation/src/documentation.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DocumentationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DocumentationController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DocumentationController } from './documentation.controller';\nimport { DocumentationService } from './documentation.service';\n\n@Module({\n  imports: [],\n  controllers: [DocumentationController],\n  providers: [DocumentationService],\n})\nexport class DocumentationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DocumentationService.html":{"url":"injectables/DocumentationService.html","title":"injectable - DocumentationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DocumentationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/documentation/src/documentation.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/documentation/src/documentation.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class DocumentationService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/EscrowController.html":{"url":"controllers/EscrowController.html","title":"controller - EscrowController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  EscrowController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/escrow/src/escrow.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/escrow/src/escrow.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { EscrowService } from './escrow.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { EscrowCommand } from '@qushah/common';\n\n@Controller()\nexport class EscrowController {\n  constructor(private readonly escrowService: EscrowService) {}\n\n  @MessagePattern({ cmd: EscrowCommand.PING_ESCROW })\n  getHello(): string {\n    return this.escrowService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EscrowModule.html":{"url":"modules/EscrowModule.html","title":"module - EscrowModule","body":"\n                   \n\n\n\n\n    Modules\n    EscrowModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EscrowModule\n\n\n\ncluster_EscrowModule_providers\n\n\n\ncluster_EscrowModule_imports\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nEscrowModule\n\nEscrowModule\n\nEscrowModule -->\n\nCommonModule->EscrowModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nEscrowModule -->\n\nGraphQLMicroserviceModule->EscrowModule\n\n\n\n\n\nEscrowService\n\nEscrowService\n\nEscrowModule -->\n\nEscrowService->EscrowModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/escrow/src/escrow.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            EscrowService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            EscrowController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { EscrowController } from './escrow.controller';\nimport { EscrowService } from './escrow.service';\nimport { CommonModule, GraphQLMicroserviceModule } from '@qushah/common';\nimport { EscrowResolver } from './escrow.resolver';\n\n@Module({\n  imports: [CommonModule, GraphQLMicroserviceModule],\n  controllers: [EscrowController],\n  providers: [EscrowService, EscrowResolver],\n})\nexport class EscrowModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EscrowResolver.html":{"url":"classes/EscrowResolver.html","title":"class - EscrowResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EscrowResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/escrow/src/escrow.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingEscrow'})\n                \n            \n\n                    \n                        \n                            Defined in apps/escrow/src/escrow.resolver.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\n\n@Resolver()\nexport class EscrowResolver {\n  @Query(() => String, { name: 'pingEscrow' })\n  ping(): string {\n    return 'pong';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EscrowService.html":{"url":"injectables/EscrowService.html","title":"injectable - EscrowService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EscrowService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/escrow/src/escrow.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/escrow/src/escrow.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class EscrowService {\n  getHello(): string {\n    return 'Hello from Escrow Service!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GatewayModule.html":{"url":"modules/GatewayModule.html","title":"module - GatewayModule","body":"\n                   \n\n\n\n\n    Modules\n    GatewayModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GatewayModule\n\n\n\ncluster_GatewayModule_providers\n\n\n\ncluster_GatewayModule_imports\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nGatewayModule\n\nGatewayModule\n\nGatewayModule -->\n\nCommonModule->GatewayModule\n\n\n\n\n\nGraphQLGatewayModule\n\nGraphQLGatewayModule\n\nGatewayModule -->\n\nGraphQLGatewayModule->GatewayModule\n\n\n\n\n\nGatewayService\n\nGatewayService\n\nGatewayModule -->\n\nGatewayService->GatewayModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/gateway/src/gateway.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GatewayService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            GraphQLGatewayModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { GatewayService } from './gateway.service';\nimport {\n  CommonModule,\n  EnvironmentConstant,\n  GraphQLGatewayModule,\n} from '@qushah/common';\n\nconst {\n  AUTH_HOST,\n  ESCROW_HOST,\n  MEDIA_HOST,\n  NOTIFICATION_HOST,\n  ORGANIZATION_HOST,\n  PAYMENT_HOST,\n  PROPERTY_HOST,\n  USER_HOST,\n} = EnvironmentConstant;\n\n@Module({\n  imports: [\n    CommonModule,\n    GraphQLGatewayModule.register(\n      AUTH_HOST,\n      ESCROW_HOST,\n      MEDIA_HOST,\n      NOTIFICATION_HOST,\n      ORGANIZATION_HOST,\n      PAYMENT_HOST,\n      PROPERTY_HOST,\n      USER_HOST,\n    ),\n  ],\n  providers: [GatewayService],\n})\nexport class GatewayModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GatewayService.html":{"url":"injectables/GatewayService.html","title":"injectable - GatewayService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GatewayService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gateway/src/gateway.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gateway/src/gateway.service.ts:4\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ping\n                        \n                    \n                \n            \n            \n                \nping()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gateway/src/gateway.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class GatewayService {\n  constructor() {}\n\n  ping(): string {\n    return 'Hello from Gateway Service!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GraphQLGatewayModule.html":{"url":"modules/GraphQLGatewayModule.html","title":"module - GraphQLGatewayModule","body":"\n                   \n\n\n\n\n    Modules\n    GraphQLGatewayModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/graphql/graphql-gateway.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(...subgraphNames: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/graphql/graphql-gateway.module.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                subgraphNames\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, Global, DynamicModule } from '@nestjs/common';\nimport { GraphQLModule } from '@nestjs/graphql';\nimport { ApolloGatewayDriver, ApolloGatewayDriverConfig } from '@nestjs/apollo';\nimport { IntrospectAndCompose } from '@apollo/gateway';\nimport { SubgraphsBuilder } from '@qushah/common';\n\n@Global()\n@Module({})\nexport class GraphQLGatewayModule {\n  static async register(...subgraphNames: string[]): Promise {\n    return {\n      module: GraphQLGatewayModule,\n      imports: [\n        GraphQLModule.forRootAsync({\n          driver: ApolloGatewayDriver,\n          useFactory: async () => {\n            return {\n              gateway: {\n                supergraphSdl: new IntrospectAndCompose({\n                  subgraphs: await SubgraphsBuilder.build(...subgraphNames),\n                }),\n              },\n            };\n          },\n        }),\n      ],\n      exports: [GraphQLModule],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GraphQLMicroserviceModule.html":{"url":"modules/GraphQLMicroserviceModule.html","title":"module - GraphQLMicroserviceModule","body":"\n                   \n\n\n\n\n    Modules\n    GraphQLMicroserviceModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/graphql/graphql-microservice.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { GraphQLModule } from '@nestjs/graphql';\nimport {\n  ApolloFederationDriver,\n  ApolloFederationDriverConfig,\n} from '@nestjs/apollo';\n\n@Module({\n  imports: [\n    GraphQLModule.forRoot({\n      driver: ApolloFederationDriver,\n      autoSchemaFile: {\n        federation: 2,\n      },\n      sortSchema: true,\n    }),\n  ],\n})\nexport class GraphQLMicroserviceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MediaController.html":{"url":"controllers/MediaController.html","title":"controller - MediaController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MediaController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/media/src/media.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/media/src/media.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { MediaService } from './media.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { MediaCommand } from '@qushah/common';\n\n@Controller()\nexport class MediaController {\n  constructor(private readonly mediaService: MediaService) {}\n\n  @MessagePattern({ cmd: MediaCommand.PING_MEDIA })\n  getHello(): string {\n    return this.mediaService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MediaModule.html":{"url":"modules/MediaModule.html","title":"module - MediaModule","body":"\n                   \n\n\n\n\n    Modules\n    MediaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MediaModule\n\n\n\ncluster_MediaModule_providers\n\n\n\ncluster_MediaModule_imports\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nMediaModule\n\nMediaModule\n\nMediaModule -->\n\nCommonModule->MediaModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nMediaModule -->\n\nGraphQLMicroserviceModule->MediaModule\n\n\n\n\n\nMediaService\n\nMediaService\n\nMediaModule -->\n\nMediaService->MediaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/media/src/media.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MediaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MediaController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MediaController } from './media.controller';\nimport { MediaService } from './media.service';\nimport { CommonModule, GraphQLMicroserviceModule } from '@qushah/common';\nimport { MediaResolver } from './media.resolver';\n\n@Module({\n  imports: [CommonModule, GraphQLMicroserviceModule],\n  controllers: [MediaController],\n  providers: [MediaService, MediaResolver],\n})\nexport class MediaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MediaResolver.html":{"url":"classes/MediaResolver.html","title":"class - MediaResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MediaResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/media/src/media.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingMedia'})\n                \n            \n\n                    \n                        \n                            Defined in apps/media/src/media.resolver.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\n\n@Resolver()\nexport class MediaResolver {\n  @Query(() => String, { name: 'pingMedia' })\n  ping(): string {\n    return 'pong';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MediaService.html":{"url":"injectables/MediaService.html","title":"injectable - MediaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MediaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/media/src/media.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/media/src/media.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class MediaService {\n  getHello(): string {\n    return 'Hello from Media Service!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/NotificationController.html":{"url":"controllers/NotificationController.html","title":"controller - NotificationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  NotificationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/notification/src/notification.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/notification/src/notification.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { NotificationService } from './notification.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { NotificationCommand } from '@qushah/common';\n\n@Controller()\nexport class NotificationController {\n  constructor(private readonly notificationService: NotificationService) {}\n\n  @MessagePattern({ cmd: NotificationCommand.PING_NOTIFICATION })\n  getHello(): string {\n    return this.notificationService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NotificationModule.html":{"url":"modules/NotificationModule.html","title":"module - NotificationModule","body":"\n                   \n\n\n\n\n    Modules\n    NotificationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NotificationModule\n\n\n\ncluster_NotificationModule_providers\n\n\n\ncluster_NotificationModule_imports\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nNotificationModule\n\nNotificationModule\n\nNotificationModule -->\n\nCommonModule->NotificationModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nNotificationModule -->\n\nGraphQLMicroserviceModule->NotificationModule\n\n\n\n\n\nNotificationService\n\nNotificationService\n\nNotificationModule -->\n\nNotificationService->NotificationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/notification/src/notification.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NotificationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            NotificationController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { NotificationController } from './notification.controller';\nimport { NotificationService } from './notification.service';\nimport { CommonModule, GraphQLMicroserviceModule } from '@qushah/common';\nimport { NotificationResolver } from './notification.resolver';\n\n@Module({\n  imports: [CommonModule, GraphQLMicroserviceModule],\n  controllers: [NotificationController],\n  providers: [NotificationService, NotificationResolver],\n})\nexport class NotificationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotificationResolver.html":{"url":"classes/NotificationResolver.html","title":"class - NotificationResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotificationResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/notification/src/notification.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingNotification'})\n                \n            \n\n                    \n                        \n                            Defined in apps/notification/src/notification.resolver.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\n\n@Resolver()\nexport class NotificationResolver {\n  @Query(() => String, { name: 'pingNotification' })\n  ping(): string {\n    return 'pong';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationService.html":{"url":"injectables/NotificationService.html","title":"injectable - NotificationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NotificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/notification/src/notification.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/notification/src/notification.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class NotificationService {\n  getHello(): string {\n    return 'Hello from Notification Service!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Organization.html":{"url":"entities/Organization.html","title":"entity - Organization","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Organization\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/organization/src/entities/organization.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                meta\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                primaryContactName\n                            \n                            \n                                    \n                                    \n                                slug\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrganizationMetadata\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@OneToOne(undefined, meta => meta.organization)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        primaryContactName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column({name: 'primary_contact_name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization.entity.ts:15\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql';\nimport { Column, Entity, OneToOne } from 'typeorm';\nimport { BaseEntity } from '@qushah/common';\nimport { OrganizationMetadata } from './organization-metadata.entity';\n\n@ObjectType()\n@Entity()\nexport class Organization extends BaseEntity {\n  @Field(() => String)\n  @Column({ unique: true })\n  name: string;\n\n  @Field(() => String)\n  @Column({ unique: true })\n  slug: string;\n\n  @Field(() => String)\n  @Column({ name: 'primary_contact_name' })\n  primaryContactName: string;\n\n  @Field(() => String)\n  @Column()\n  email: string;\n\n  @Field(() => String)\n  @Column()\n  phone: string;\n\n  @Field(() => OrganizationMetadata, { nullable: true })\n  @OneToOne(() => OrganizationMetadata, (meta) => meta.organization)\n  meta?: OrganizationMetadata;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrganizationController.html":{"url":"controllers/OrganizationController.html","title":"controller - OrganizationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrganizationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/organization/src/organization.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/organization/src/organization.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { OrganizationService } from './organization.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { OrganizationCommand } from '@qushah/common/constants/commands/organization.command';\n\n@Controller()\nexport class OrganizationController {\n  constructor(private readonly organizationService: OrganizationService) {}\n\n  @MessagePattern({ cmd: OrganizationCommand.PING_ORGANIZATION })\n  getHello(): string {\n    return this.organizationService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/OrganizationMetadata.html":{"url":"entities/OrganizationMetadata.html","title":"entity - OrganizationMetadata","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  OrganizationMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/organization/src/entities/organization-metadata.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                allowInterestEarning\n                            \n                            \n                                    \n                                    \n                                depositFeePercentage\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                domain\n                            \n                            \n                                    \n                                    \n                                logo\n                            \n                            \n                                    \n                                    \n                                organization\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                primaryColor\n                            \n                            \n                                    \n                                    \n                                rentFeePercentage\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        allowInterestEarning\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column({name: 'allow_interest_earning', type: 'boolean', default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization-metadata.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        depositFeePercentage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column({name: 'deposit_fee_percentage', default: 5, precision: 5, scale: 2, type: 'decimal'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization-metadata.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        domain\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization-metadata.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization-metadata.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        organization\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Organization\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, organization => organization.meta, {cascade: true, onDelete: 'CASCADE', onUpdate: 'CASCADE'})@JoinColumn({name: 'organization_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization-metadata.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        primaryColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Column({name: 'primary_color', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization-metadata.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        rentFeePercentage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column({name: 'rent_fee_percentage', default: 5, precision: 5, scale: 2, type: 'decimal'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization-metadata.entity.ts:38\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, OneToOne } from 'typeorm';\nimport { Field, Float, ObjectType } from '@nestjs/graphql';\nimport { BaseEntity } from '@qushah/common';\nimport { JoinColumn } from 'typeorm';\nimport { Organization } from './organization.entity';\n\n@ObjectType()\n@Entity()\nexport class OrganizationMetadata extends BaseEntity {\n  @OneToOne(() => Organization, (organization) => organization.meta, {\n    cascade: true,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n  })\n  @JoinColumn({ name: 'organization_id' })\n  organization: Organization;\n\n  @Field(() => String, { nullable: true })\n  @Column({ name: 'primary_color', nullable: true })\n  primaryColor?: string;\n\n  @Field(() => String, { nullable: true })\n  @Column({ nullable: true })\n  domain?: string;\n\n  @Field(() => String)\n  @Column()\n  logo: string;\n\n  @Field(() => Float)\n  @Column({\n    name: 'rent_fee_percentage',\n    default: 5.0,\n    precision: 5,\n    scale: 2,\n    type: 'decimal',\n  })\n  rentFeePercentage: number;\n\n  @Field(() => Float)\n  @Column({\n    name: 'deposit_fee_percentage',\n    default: 5.0,\n    precision: 5,\n    scale: 2,\n    type: 'decimal',\n  })\n  depositFeePercentage: number;\n\n  @Field(() => Boolean)\n  @Column({ name: 'allow_interest_earning', type: 'boolean', default: false })\n  allowInterestEarning: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrganizationModule.html":{"url":"modules/OrganizationModule.html","title":"module - OrganizationModule","body":"\n                   \n\n\n\n\n    Modules\n    OrganizationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OrganizationModule\n\n\n\ncluster_OrganizationModule_imports\n\n\n\ncluster_OrganizationModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nOrganizationModule\n\nOrganizationModule\n\nOrganizationModule -->\n\nCommonModule->OrganizationModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nOrganizationModule -->\n\nDatabaseModule->OrganizationModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nOrganizationModule -->\n\nGraphQLMicroserviceModule->OrganizationModule\n\n\n\n\n\nOrganizationService\n\nOrganizationService\n\nOrganizationModule -->\n\nOrganizationService->OrganizationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/organization/src/organization.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrganizationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrganizationController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { OrganizationController } from './organization.controller';\nimport { OrganizationService } from './organization.service';\nimport {\n  CommonModule,\n  DatabaseModule,\n  GraphQLMicroserviceModule,\n} from '@qushah/common';\nimport { OrganizationResolver } from './organization.resolver';\nimport { Organization } from './entities/organization.entity';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { OrganizationMetadata } from './entities/organization-metadata.entity';\n\n@Module({\n  imports: [\n    DatabaseModule.forRoot(\n      [__dirname + '/entities/*.entity{.ts,.js}'],\n      'organization',\n    ),\n    TypeOrmModule.forFeature([Organization, OrganizationMetadata]),\n    CommonModule,\n    GraphQLMicroserviceModule,\n  ],\n  controllers: [OrganizationController],\n  providers: [OrganizationService, OrganizationResolver],\n})\nexport class OrganizationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrganizationResolver.html":{"url":"classes/OrganizationResolver.html","title":"class - OrganizationResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrganizationResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/organization/src/organization.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                organizations\n                            \n                            \n                                    \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(organizationService: OrganizationService)\n                    \n                \n                        \n                            \n                                Defined in apps/organization/src/organization.resolver.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationService\n                                                  \n                                                        \n                                                                        OrganizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        organizations\n                        \n                    \n                \n            \n            \n                \n                        \n                    organizations()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: true})\n                \n            \n\n                    \n                        \n                            Defined in apps/organization/src/organization.resolver.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingOrganization'})\n                \n            \n\n                    \n                        \n                            Defined in apps/organization/src/organization.resolver.ts:10\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\nimport { Organization } from './entities/organization.entity';\nimport { OrganizationService } from './organization.service';\n\n@Resolver()\nexport class OrganizationResolver {\n  constructor(private readonly organizationService: OrganizationService) {}\n\n  @Query(() => String, { name: 'pingOrganization' })\n  ping(): string {\n    return 'pong';\n  }\n\n  @Query(() => [Organization], { nullable: true })\n  organizations(): Promise {\n    return this.organizationService.findAll();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrganizationService.html":{"url":"injectables/OrganizationService.html","title":"injectable - OrganizationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrganizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/organization/src/organization.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: Repository)\n                    \n                \n                        \n                            \n                                Defined in apps/organization/src/organization.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/organization/src/organization.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/organization/src/organization.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { Organization } from './entities/organization.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\n\n@Injectable()\nexport class OrganizationService {\n  constructor(\n    @InjectRepository(Organization)\n    private readonly repository: Repository,\n  ) {}\n\n  getHello(): string {\n    return 'Hello from Organization Service!';\n  }\n\n  findAll(): Promise {\n    return this.repository.find({\n      relations: ['meta'],\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PaymentController.html":{"url":"controllers/PaymentController.html","title":"controller - PaymentController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PaymentController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/payment/src/payment.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/payment/src/payment.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { PaymentService } from './payment.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { PaymentCommand } from '@qushah/common';\n\n@Controller()\nexport class PaymentController {\n  constructor(private readonly paymentService: PaymentService) {}\n\n  @MessagePattern({ cmd: PaymentCommand.PING_PAYMENT })\n  getHello(): string {\n    return this.paymentService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PaymentModule.html":{"url":"modules/PaymentModule.html","title":"module - PaymentModule","body":"\n                   \n\n\n\n\n    Modules\n    PaymentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PaymentModule\n\n\n\ncluster_PaymentModule_imports\n\n\n\ncluster_PaymentModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nPaymentModule\n\nPaymentModule\n\nPaymentModule -->\n\nCommonModule->PaymentModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nPaymentModule -->\n\nGraphQLMicroserviceModule->PaymentModule\n\n\n\n\n\nPaymentService\n\nPaymentService\n\nPaymentModule -->\n\nPaymentService->PaymentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/payment/src/payment.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PaymentService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PaymentController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PaymentController } from './payment.controller';\nimport { PaymentService } from './payment.service';\nimport { CommonModule, GraphQLMicroserviceModule } from '@qushah/common';\nimport { PaymentResolver } from './payment.resolver';\n\n@Module({\n  imports: [CommonModule, GraphQLMicroserviceModule],\n  controllers: [PaymentController],\n  providers: [PaymentService, PaymentResolver],\n})\nexport class PaymentModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaymentResolver.html":{"url":"classes/PaymentResolver.html","title":"class - PaymentResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaymentResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/payment/src/payment.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingPayment'})\n                \n            \n\n                    \n                        \n                            Defined in apps/payment/src/payment.resolver.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\n\n@Resolver()\nexport class PaymentResolver {\n  @Query(() => String, { name: 'pingPayment' })\n  ping(): string {\n    return 'pong';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PaymentService.html":{"url":"injectables/PaymentService.html","title":"injectable - PaymentService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PaymentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/payment/src/payment.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/payment/src/payment.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class PaymentService {\n  getHello(): string {\n    return 'Hello from Payment Service!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PropertyController.html":{"url":"controllers/PropertyController.html","title":"controller - PropertyController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PropertyController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/property/src/property.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/property/src/property.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { PropertyService } from './property.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { PropertyCommand } from '@qushah/common';\n\n@Controller()\nexport class PropertyController {\n  constructor(private readonly propertyService: PropertyService) {}\n\n  @MessagePattern({ cmd: PropertyCommand.PING_PROPERTY })\n  getHello(): string {\n    return this.propertyService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PropertyModule.html":{"url":"modules/PropertyModule.html","title":"module - PropertyModule","body":"\n                   \n\n\n\n\n    Modules\n    PropertyModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PropertyModule\n\n\n\ncluster_PropertyModule_imports\n\n\n\ncluster_PropertyModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nPropertyModule\n\nPropertyModule\n\nPropertyModule -->\n\nCommonModule->PropertyModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nPropertyModule -->\n\nGraphQLMicroserviceModule->PropertyModule\n\n\n\n\n\nPropertyService\n\nPropertyService\n\nPropertyModule -->\n\nPropertyService->PropertyModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/property/src/property.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PropertyService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PropertyController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PropertyController } from './property.controller';\nimport { PropertyService } from './property.service';\nimport { CommonModule, GraphQLMicroserviceModule } from '@qushah/common';\nimport { PropertyResolver } from './property.resolver';\n\n@Module({\n  imports: [CommonModule, GraphQLMicroserviceModule],\n  controllers: [PropertyController],\n  providers: [PropertyService, PropertyResolver],\n})\nexport class PropertyModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PropertyResolver.html":{"url":"classes/PropertyResolver.html","title":"class - PropertyResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PropertyResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/property/src/property.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingProperty'})\n                \n            \n\n                    \n                        \n                            Defined in apps/property/src/property.resolver.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\n\n@Resolver()\nexport class PropertyResolver {\n  @Query(() => String, { name: 'pingProperty' })\n  ping(): string {\n    return 'pong';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PropertyService.html":{"url":"injectables/PropertyService.html","title":"injectable - PropertyService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PropertyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/property/src/property.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/property/src/property.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class PropertyService {\n  getHello(): string {\n    return 'Hello from Property Service!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/QushahConfigModule.html":{"url":"modules/QushahConfigModule.html","title":"module - QushahConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    QushahConfigModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/config/config.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { ConfigModule } from '@nestjs/config';\nimport { Module } from '@nestjs/common';\nimport Joi from 'joi';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      validationSchema: Joi.object({\n        REDIS_HOST: Joi.string().required(),\n        REDIS_PORT: Joi.number().required(),\n        DATABASE_TYPE: Joi.string().required(),\n        DATABASE_HOST: Joi.string().required(),\n        DATABASE_PORT: Joi.string().required(),\n        DATABASE_USERNAME: Joi.string().required(),\n        DATABASE_PASSWORD: Joi.string().required(),\n        DATABASE_NAME: Joi.string().required(),\n        NODE_ENV: Joi.string()\n          .valid('development', 'production', 'test')\n          .default('development'),\n      }),\n    }),\n  ],\n})\nexport class QushahConfigModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QushahConfigService.html":{"url":"injectables/QushahConfigService.html","title":"injectable - QushahConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QushahConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/config/config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in libs/common/src/config/config.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getConfig\n                        \n                    \n                \n            \n            \n                \ngetConfig(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/config/config.service.ts:8\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class QushahConfigService {\n  constructor(private readonly configService: ConfigService) {}\n\n  getConfig(key: string): T {\n    return this.configService.get(key);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SubgraphsBuilder.html":{"url":"classes/SubgraphsBuilder.html","title":"class - SubgraphsBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SubgraphsBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/utils/subgraphs-builder.util.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Async\n                                build\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        build\n                        \n                    \n                \n            \n            \n                \n                        \n                    build(...graphNames: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/utils/subgraphs-builder.util.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                graphNames\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ServiceEndpointDefinition } from '@apollo/gateway/src/config';\nimport { ConfigHelper } from '@qushah/common';\n\nexport class SubgraphsBuilder {\n  static async build(\n    ...graphNames: string[]\n  ): Promise {\n    const configHelper = await ConfigHelper.getInstance();\n\n    return graphNames.map((graphName) => {\n      const keyPart = graphName?.split('_HOST')?.[0];\n      const key = keyPart || graphName;\n      const { host, port } = configHelper.getMicroServiceHosts(key);\n      return {\n        name: graphName,\n        url: `${host}:${port}/graphql`,\n      };\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user/src/user.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/user/src/user.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { UserCommand } from '@qushah/common';\n\n@Controller()\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @MessagePattern({ cmd: UserCommand.PING_USER })\n  getHello(): string {\n    return this.userService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nCommonModule->UserModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nUserModule -->\n\nGraphQLMicroserviceModule->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/user/src/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserController } from './user.controller';\nimport { UserService } from './user.service';\nimport { CommonModule, GraphQLMicroserviceModule } from '@qushah/common';\nimport { UserResolver } from './user.resolver';\n\n@Module({\n  imports: [CommonModule, GraphQLMicroserviceModule],\n  controllers: [UserController],\n  providers: [UserService, UserResolver],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserResolver.html":{"url":"classes/UserResolver.html","title":"class - UserResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user/src/user.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingUser'})\n                \n            \n\n                    \n                        \n                            Defined in apps/user/src/user.resolver.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\n\n@Resolver()\nexport class UserResolver {\n  @Query(() => String, { name: 'pingUser' })\n  ping(): string {\n    return 'pong';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user/src/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/user/src/user.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class UserService {\n  getHello(): string {\n    return 'Hello from User Service!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/auth/src/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/auth/src/auth.resolver.ts\n            \n            class\n            AuthResolver\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/auth/src/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/auth/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/documentation/src/documentation.controller.ts\n            \n            controller\n            DocumentationController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/documentation/src/documentation.service.ts\n            \n            injectable\n            DocumentationService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/documentation/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/escrow/src/escrow.controller.ts\n            \n            controller\n            EscrowController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/escrow/src/escrow.resolver.ts\n            \n            class\n            EscrowResolver\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/escrow/src/escrow.service.ts\n            \n            injectable\n            EscrowService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/escrow/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/escrow/src/typeorm.data-source.ts\n            \n            variable\n            TypeormDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/gateway/src/gateway.module.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/gateway/src/gateway.service.ts\n            \n            injectable\n            GatewayService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        apps/gateway/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/media/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/media/src/media.controller.ts\n            \n            controller\n            MediaController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/media/src/media.resolver.ts\n            \n            class\n            MediaResolver\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/media/src/media.service.ts\n            \n            injectable\n            MediaService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/media/src/typeorm.data-source.ts\n            \n            variable\n            TypeormDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/notification/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/notification/src/notification.controller.ts\n            \n            controller\n            NotificationController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/notification/src/notification.resolver.ts\n            \n            class\n            NotificationResolver\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/notification/src/notification.service.ts\n            \n            injectable\n            NotificationService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/notification/src/typeorm.data-source.ts\n            \n            variable\n            TypeormDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/organization/src/entities/organization-metadata.entity.ts\n            \n            entity\n            OrganizationMetadata\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/organization/src/entities/organization-metadata.entity.ts\n            \n            class\n            OrganizationMetadata\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/organization/src/entities/organization.entity.ts\n            \n            entity\n            Organization\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/organization/src/entities/organization.entity.ts\n            \n            class\n            Organization\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        apps/organization/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/organization/src/migrations/1740356244243-CreateOrganization.ts\n            \n            class\n            CreateOrganization1740356244243\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/organization/src/organization.controller.ts\n            \n            controller\n            OrganizationController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/organization/src/organization.resolver.ts\n            \n            class\n            OrganizationResolver\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/organization/src/organization.service.ts\n            \n            injectable\n            OrganizationService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        apps/organization/src/typeorm.data-source.ts\n            \n            variable\n            TypeormDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/payment/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/payment/src/payment.controller.ts\n            \n            controller\n            PaymentController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/payment/src/payment.resolver.ts\n            \n            class\n            PaymentResolver\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/payment/src/payment.service.ts\n            \n            injectable\n            PaymentService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/payment/src/typeorm.data-source.ts\n            \n            variable\n            TypeormDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/property/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/property/src/property.controller.ts\n            \n            controller\n            PropertyController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/property/src/property.resolver.ts\n            \n            class\n            PropertyResolver\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/property/src/property.service.ts\n            \n            injectable\n            PropertyService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/property/src/typeorm.data-source.ts\n            \n            variable\n            TypeormDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/user/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/user/src/typeorm.data-source.ts\n            \n            variable\n            TypeormDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/user/src/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/user/src/user.resolver.ts\n            \n            class\n            UserResolver\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/user/src/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/common/src/common.service.ts\n            \n            injectable\n            CommonService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/config/config.helper.ts\n            \n            class\n            ConfigHelper\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                libs/common/src/config/config.service.ts\n            \n            injectable\n            QushahConfigService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/auth.command.ts\n            \n            variable\n            AuthCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/escrow.command.ts\n            \n            variable\n            EscrowCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/media.command.ts\n            \n            variable\n            MediaCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/notification.command.ts\n            \n            variable\n            NotificationCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/organization.command.ts\n            \n            variable\n            OrganizationCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/payment.command.ts\n            \n            variable\n            PaymentCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/property.command.ts\n            \n            variable\n            PropertyCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/user.command.ts\n            \n            variable\n            UserCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/environment.constant.ts\n            \n            variable\n            EnvironmentConstant\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/database/entities/base.entity.ts\n            \n            entity\n            BaseEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/database/entities/base.entity.ts\n            \n            class\n            BaseEntity\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        libs/common/src/decorators/column-order.decorator.ts\n            \n            function\n            ColumnOrder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/decorators/column-order.decorator.ts\n            \n            function\n            getColumnOrder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/decorators/column-order.decorator.ts\n            \n            variable\n            ORDER_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/utils/bootstrapper.util.ts\n            \n            class\n            Bootstrapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/common/src/utils/data-source.util.ts\n            \n            class\n            DataSource\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/common/src/utils/subgraphs-builder.util.ts\n            \n            class\n            SubgraphsBuilder\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        typeorm-cli.ts\n            \n            variable\n            argv\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        typeorm-cli.ts\n            \n            variable\n            dataSourcePath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        typeorm-cli.ts\n            \n            variable\n            typeormCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        typeorm-cli.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @apollo/gateway : ^2.9.3\n        \n            @apollo/server : ^4.11.3\n        \n            @apollo/subgraph : ^2.9.3\n        \n            @nestjs/apollo : ^12.2.2\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.3.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/graphql : ^12.2.2\n        \n            @nestjs/microservices : ^10.4.15\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/typeorm : ^11.0.0\n        \n            @types/yargs : ^17.0.33\n        \n            dotenv : ^16.4.7\n        \n            graphql : ^16.10.0\n        \n            ioredis : ^5.4.2\n        \n            joi : ^17.13.3\n        \n            pg : ^8.13.1\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.20\n        \n            yargs : ^17.7.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            MicroServiceClient   (libs/.../micro-service-client.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/common/src/enums/micro-service-client.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        MicroServiceClient\n                    \n                \n                        \n                            \n                                 AUTH_CLIENT\n                            \n                        \n                        \n                            \n                                Value : AUTH_CLIENT\n                            \n                        \n                        \n                            \n                                 ESCROW_CLIENT\n                            \n                        \n                        \n                            \n                                Value : ESCROW_CLIENT\n                            \n                        \n                        \n                            \n                                 MEDIA_CLIENT\n                            \n                        \n                        \n                            \n                                Value : MEDIA_CLIENT\n                            \n                        \n                        \n                            \n                                 NOTIFICATION_CLIENT\n                            \n                        \n                        \n                            \n                                Value : NOTIFICATION_CLIENT\n                            \n                        \n                        \n                            \n                                 PAYMENT_CLIENT\n                            \n                        \n                        \n                            \n                                Value : PAYMENT_CLIENT\n                            \n                        \n                        \n                            \n                                 PROPERTY_CLIENT\n                            \n                        \n                        \n                            \n                                Value : PROPERTY_CLIENT\n                            \n                        \n                        \n                            \n                                 USER_CLIENT\n                            \n                        \n                        \n                            \n                                Value : USER_CLIENT\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            ColumnOrder   (libs/.../column-order.decorator.ts)\n                        \n                        \n                            getColumnOrder   (libs/.../column-order.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/auth/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/documentation/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/escrow/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/notification/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/gateway/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/media/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/organization/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/payment/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/property/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/user/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    libs/common/src/decorators/column-order.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ColumnOrder\n                        \n                    \n                \n            \n            \n                \nColumnOrder(value: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     PropertyDecorator\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getColumnOrder\n                        \n                    \n                \n            \n            \n                \ngetColumnOrder(target, propertyKey, defaultVal: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                propertyKey\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                defaultVal\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nQushah Backend\nDescription\nQushah Escrow System backend containing microservices, gateway, libs, etc.\nPrerequisites\nTo be able to run this project on machine, the following must be installed:\n\nNodeJS 22 LTS\npnpm\nRedis\n\nProject setup\nMake sure pnpm is installed\nExample :$ npm install --global pnpmInstall dependencies\nExample :$ pnpm installInstall Redis\nFollow the official docs to install Redis on your machine.\nCompile and run the project\nExample :# development\n$ pnpm run start\n\n# watch mode\n$ pnpm run start:dev\n\n# production mode\n$ pnpm run start:prodRun tests\nExample :# unit tests\n$ pnpm run test\n\n# e2e tests\n$ pnpm run test:e2e\n\n# test coverage\n$ pnpm run test:covTypeorm CLI Helper Tool\nThe Typeorm CLI Helper tool lets you run typeorm CLI commands without worrying\nabout DataSources and path resolutions.\nLearn how to use the tool here.\nStructure\nExample :qushah-backend/\n│\n├── apps/\n│   ├── qushah-auth/        # Authentication Service\n│   ├── qushah-user/       # User Management Service\n│   ├── qushah-escrow/      # Escrow and Deposits Service\n│   ├── qushah-payment/    # Payments and Transactions Service\n│   ├── qushah-property/  # Property Listings Service\n│   ├── qushah-notification/      # Notifications Service\n│   └── qushah-gateway/     # API Gateway (separate app within the repo)\n│\n└── libs/                   # Shared Libraries (for DTOs, Interfaces, etc.)\n    ├── common/             # Common utilities, interceptors, and guards\n    ├── graphql/            # Shared GraphQL schemas and resolvers\n    └── db/                 # Database connection and models\nArchitecture\nExample :            [Frontend (Angular)]\n                     │\n              [GraphQL Gateway]\n                     │\n     ┌──────────┬────────────┬──────────────┬───────────┐\n     │          │            │              │           │\n [Auth]     [User]     [Property]     [Escrow]    [Payment]\n     │                                      │\n [Notification]                                [Disputes]\nConcerns\nHere are the key concerns for each microservice in this architecture:\n1. qushah-auth (Authentication and Authorization)\n\nSecurity: Ensuring the system is secure from unauthorized access. This includes strong password policies, token-based authentication (e.g., JWT), and OAuth if required.\nToken Expiry and Refresh: Managing token expiration and refresh mechanisms. Implement token blacklisting for security.\nRate Limiting: Protecting against brute-force attacks by implementing rate limiting or CAPTCHA.\nSecure API Communication: Ensuring all communication (especially authentication data) is encrypted with HTTPS.\nUser Roles and Permissions: Managing user roles and ensuring each user (tenant, landlord, admin) has the correct permissions for their actions.\n\n2. qushah-user (User Management)\n\nUser Data Management: Ensuring that personal data is secure, especially sensitive information like emails, addresses, and phone numbers.\nData Privacy: Complying with regulations like GDPR or CCPA, especially regarding the collection and storage of user data.\nUser Profile Updates: Allowing users to update their profiles (e.g., changing names, contact details) while maintaining data integrity.\nError Handling: Handling errors effectively, such as invalid user data, and providing clear feedback to users.\nScalability: Ensuring the system can handle large numbers of users (tenants, landlords).\n\n3. qushah-property (Property Management)\n\nProperty Data Validation: Ensuring that property details are accurate, complete, and properly validated before being listed.\nSearch Functionality: Providing a fast and efficient way for tenants to search for properties (by location, price, features, etc.).\nProperty Availability: Managing the availability of properties and preventing double-booking or issues with properties already rented.\nImage and Media Handling: Handling and storing images, videos, and 3D scans securely and efficiently. Integrating with media service when required.\nData Consistency: Ensuring that any updates to the property data (e.g., status changes, price updates) are consistent and reflected across all services.\n\n4. qushah-escrow (Escrow Service)\n\nDeposit Security: Ensuring that the deposit is secure, especially when handling large amounts of money.\nTransaction Auditing: Providing an auditable trail of deposit and release actions for transparency and security.\nEscrow Release Conditions: Implementing clear rules on when the deposit should be released to either the tenant or landlord.\nDispute Management: Handling any disputes regarding the deposit, such as property damage or failure to pay rent.\nCompliance: Ensuring that escrow services comply with local financial and regulatory standards (especially for handling money).\nEvent-Driven Updates: Integrating with other services (e.g., notifying users about escrow releases or disputes) using event-driven architecture.\n\n5. qushah-payment (Payment Service)\n\nPayment Gateway Integration: Integrating with external payment providers (e.g., UPI, Paytm, Razorpay) for processing payments.\nTransaction Security: Ensuring secure handling of payments and sensitive financial data. Use of encryption and secure protocols.\nTransaction Failures: Handling payment failures and retries in case of network or gateway issues.\nPayment Confirmation: Sending clear confirmation of successful payments and generating receipts.\nRecurring Payments: Supporting recurring rent payments (e.g., monthly payments) and ensuring they are processed on time.\nMulti-currency Support: Initially handling INR and later possibly adding other currencies, without complicating the architecture.\nScalability: Ensuring the service can handle large volumes of transactions, especially for a growing user base.\n\n6. qushah-notification (Notification Service)\n\nNotification Delivery: Ensuring timely delivery of notifications (SMS, email, push notifications) to users.\nMessage Templates: Using dynamic templates for notifications (e.g., rent payment reminders, property status updates).\nMulti-channel Support: Ensuring support for multiple communication channels (SMS, email, mobile push notifications, etc.).\nHandling Failures: Managing failed notification deliveries and retries, e.g., if an email service is down.\nPersonalization: Allowing notifications to be personalized based on user preferences (e.g., notification frequency, type of notifications).\nOpt-in/Opt-out Preferences: Allowing users to manage their notification preferences (e.g., unsubscribing from specific types of notifications).\n\n7. qushah-media (Media Handling)\n\nStorage: Securely storing large media files (images, videos, 3D scans) and ensuring they are easily accessible.\nPerformance: Ensuring that media uploads and downloads are fast and efficient, especially for large files.\nScalability: Managing storage at scale as media files (especially 3D scans) can consume significant space.\nCompression and Optimization: Automatically compressing and optimizing media files for faster loading times and reduced storage usage.\nSecurity: Protecting media files from unauthorized access and ensuring that the uploaded files are virus-free.\nIntegration: Providing an easy API for other microservices to use (e.g., for uploading profile pictures, property images, etc.).\n\n8. qushah-gateway (API Gateway)\n\nRequest Routing: Efficiently routing requests to the appropriate microservice based on the endpoint and service.\nSecurity: Ensuring that requests passing through the gateway are authenticated and authorized.\nLoad Balancing: Ensuring requests are distributed evenly across multiple instances of each microservice for scalability.\nRate Limiting: Preventing abuse of the system by applying rate limits on specific endpoints.\nAPI Documentation: Providing clear API documentation (e.g., using Swagger or GraphQL introspection) for the frontend and third-party developers.\nCaching: Implementing caching for high-traffic endpoints to improve performance.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ClientsModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CommonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DocumentationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EscrowModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GatewayModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GraphQLGatewayModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GraphQLMicroserviceModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MediaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NotificationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrganizationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PaymentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PropertyModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        QushahConfigModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_imports\n\n\n\ncluster_CommonModule_exports\n\n\n\ncluster_CommonModule_providers\n\n\n\ncluster_DocumentationModule\n\n\n\ncluster_DocumentationModule_providers\n\n\n\ncluster_EscrowModule\n\n\n\ncluster_EscrowModule_providers\n\n\n\ncluster_GatewayModule\n\n\n\ncluster_GatewayModule_imports\n\n\n\ncluster_GatewayModule_providers\n\n\n\ncluster_MediaModule\n\n\n\ncluster_MediaModule_providers\n\n\n\ncluster_NotificationModule\n\n\n\ncluster_NotificationModule_providers\n\n\n\ncluster_OrganizationModule\n\n\n\ncluster_OrganizationModule_imports\n\n\n\ncluster_OrganizationModule_providers\n\n\n\ncluster_PaymentModule\n\n\n\ncluster_PaymentModule_providers\n\n\n\ncluster_PropertyModule\n\n\n\ncluster_PropertyModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nCommonModule->AuthModule\n\n\n\n\n\nCommonService \n\nCommonService \n\nCommonService  -->\n\nCommonModule->CommonService \n\n\n\n\n\nEscrowModule\n\nEscrowModule\n\nEscrowModule -->\n\nCommonModule->EscrowModule\n\n\n\n\n\nGatewayModule\n\nGatewayModule\n\nGatewayModule -->\n\nCommonModule->GatewayModule\n\n\n\n\n\nMediaModule\n\nMediaModule\n\nMediaModule -->\n\nCommonModule->MediaModule\n\n\n\n\n\nNotificationModule\n\nNotificationModule\n\nNotificationModule -->\n\nCommonModule->NotificationModule\n\n\n\n\n\nOrganizationModule\n\nOrganizationModule\n\nOrganizationModule -->\n\nCommonModule->OrganizationModule\n\n\n\n\n\nPaymentModule\n\nPaymentModule\n\nPaymentModule -->\n\nCommonModule->PaymentModule\n\n\n\n\n\nPropertyModule\n\nPropertyModule\n\nPropertyModule -->\n\nCommonModule->PropertyModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nCommonModule->UserModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nAuthModule -->\n\nGraphQLMicroserviceModule->AuthModule\n\n\n\nEscrowModule -->\n\nGraphQLMicroserviceModule->EscrowModule\n\n\n\nMediaModule -->\n\nGraphQLMicroserviceModule->MediaModule\n\n\n\nNotificationModule -->\n\nGraphQLMicroserviceModule->NotificationModule\n\n\n\nOrganizationModule -->\n\nGraphQLMicroserviceModule->OrganizationModule\n\n\n\nPaymentModule -->\n\nGraphQLMicroserviceModule->PaymentModule\n\n\n\nPropertyModule -->\n\nGraphQLMicroserviceModule->PropertyModule\n\n\n\nUserModule -->\n\nGraphQLMicroserviceModule->UserModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nQushahConfigModule\n\nQushahConfigModule\n\nCommonModule -->\n\nQushahConfigModule->CommonModule\n\n\n\n\n\nCommonService\n\nCommonService\n\nCommonModule -->\n\nCommonService->CommonModule\n\n\n\n\n\nDocumentationService\n\nDocumentationService\n\n\n\nDocumentationModule\n\nDocumentationModule\n\nDocumentationModule -->\n\nDocumentationService->DocumentationModule\n\n\n\n\n\nEscrowService\n\nEscrowService\n\nEscrowModule -->\n\nEscrowService->EscrowModule\n\n\n\n\n\nGraphQLGatewayModule\n\nGraphQLGatewayModule\n\nGatewayModule -->\n\nGraphQLGatewayModule->GatewayModule\n\n\n\n\n\nGatewayService\n\nGatewayService\n\nGatewayModule -->\n\nGatewayService->GatewayModule\n\n\n\n\n\nMediaService\n\nMediaService\n\nMediaModule -->\n\nMediaService->MediaModule\n\n\n\n\n\nNotificationService\n\nNotificationService\n\nNotificationModule -->\n\nNotificationService->NotificationModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nOrganizationModule -->\n\nDatabaseModule->OrganizationModule\n\n\n\n\n\nOrganizationService\n\nOrganizationService\n\nOrganizationModule -->\n\nOrganizationService->OrganizationModule\n\n\n\n\n\nPaymentService\n\nPaymentService\n\nPaymentModule -->\n\nPaymentService->PaymentModule\n\n\n\n\n\nPropertyService\n\nPropertyService\n\nPropertyModule -->\n\nPropertyService->PropertyModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        16 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    12 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    16 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            argv   (typeorm-cli.ts)\n                        \n                        \n                            AuthCommand   (libs/.../auth.command.ts)\n                        \n                        \n                            dataSourcePath   (typeorm-cli.ts)\n                        \n                        \n                            EnvironmentConstant   (libs/.../environment.constant.ts)\n                        \n                        \n                            EscrowCommand   (libs/.../escrow.command.ts)\n                        \n                        \n                            MediaCommand   (libs/.../media.command.ts)\n                        \n                        \n                            NotificationCommand   (libs/.../notification.command.ts)\n                        \n                        \n                            ORDER_KEY   (libs/.../column-order.decorator.ts)\n                        \n                        \n                            OrganizationCommand   (libs/.../organization.command.ts)\n                        \n                        \n                            PaymentCommand   (libs/.../payment.command.ts)\n                        \n                        \n                            PropertyCommand   (libs/.../property.command.ts)\n                        \n                        \n                            typeormCommand   (typeorm-cli.ts)\n                        \n                        \n                            TypeormDataSource   (apps/.../typeorm.data-source.ts)\n                        \n                        \n                            TypeormDataSource   (apps/.../typeorm.data-source.ts)\n                        \n                        \n                            TypeormDataSource   (apps/.../typeorm.data-source.ts)\n                        \n                        \n                            TypeormDataSource   (apps/.../typeorm.data-source.ts)\n                        \n                        \n                            TypeormDataSource   (apps/.../typeorm.data-source.ts)\n                        \n                        \n                            TypeormDataSource   (apps/.../typeorm.data-source.ts)\n                        \n                        \n                            TypeormDataSource   (apps/.../typeorm.data-source.ts)\n                        \n                        \n                               (typeorm-cli.ts)\n                        \n                        \n                               (apps/.../gateway.module.ts)\n                        \n                        \n                            UserCommand   (libs/.../user.command.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    typeorm-cli.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        argv\n                        \n                    \n                \n            \n                \n                    \n                        Default value : yargs(process.argv.slice(2))\n  .option('microservice', {\n    alias: 'm',\n    type: 'string',\n    describe: 'The name of the microservice',\n    demandOption: true,\n  })\n  .option('command', {\n    alias: 'c',\n    type: 'string',\n    describe: 'TypeORM CLI command (e.g., generate, run, revert)',\n    demandOption: true,\n  })\n  .option('args', {\n    alias: 'a',\n    type: 'string',\n    describe: 'Additional arguments for the TypeORM CLI command (optional)',\n    default: '',\n  })\n  .option('title', {\n    alias: 't',\n    type: 'string',\n    describe:\n      'Title for migration file. Needed while running generate (optional)',\n    default: '',\n  })\n  .help().argv\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSourcePath\n                        \n                    \n                \n            \n                \n                    \n                        Default value : path.join(\n  __dirname,\n  `./apps/${microservice}/src/typeorm.data-source.ts`,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        typeormCommand\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli.js migration:${command} ${title ? './apps/' + microservice + '/src/migrations/' + title : ''} -d ${dataSourcePath} ${args || ''}`\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : argv as {\n  microservice: string;\n  command: string;\n  args?: string;\n  title?: string;\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/auth.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AuthCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_AUTH: 'PING_AUTH',\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/environment.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EnvironmentConstant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  REDIS_HOST: 'REDIS_HOST',\n  REDIS_PORT: 'REDIS_PORT',\n  AUTH_PORT: 'AUTH_PORT',\n  ESCROW_PORT: 'ESCROW_PORT',\n  GATEWAY_PORT: 'GATEWAY_PORT',\n  MEDIA_PORT: 'MEDIA_PORT',\n  NOTIFICATION_PORT: 'NOTIFICATION_PORT',\n  ORGANIZATION_PORT: 'ORGANIZATION_PORT',\n  PAYMENT_PORT: 'PAYMENT_PORT',\n  PROPERTY_PORT: 'PROPERTY_PORT',\n  USER_PORT: 'USER_PORT',\n  AUTH_HOST: 'AUTH_HOST',\n  ESCROW_HOST: 'ESCROW_HOST',\n  GATEWAY_HOST: 'GATEWAY_HOST',\n  MEDIA_HOST: 'MEDIA_HOST',\n  NOTIFICATION_HOST: 'NOTIFICATION_HOST',\n  ORGANIZATION_HOST: 'ORGANIZATION_HOST',\n  PAYMENT_HOST: 'PAYMENT_HOST',\n  PROPERTY_HOST: 'PROPERTY_HOST',\n  USER_HOST: 'USER_HOST',\n  DATABASE_TYPE: 'DATABASE_TYPE',\n  DATABASE_HOST: 'DATABASE_HOST',\n  DATABASE_PORT: 'DATABASE_PORT',\n  DATABASE_USERNAME: 'DATABASE_USERNAME',\n  DATABASE_PASSWORD: 'DATABASE_PASSWORD',\n  DATABASE_NAME: 'DATABASE_NAME',\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/escrow.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EscrowCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_ESCROW: 'PING_ESCROW',\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/media.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MediaCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_MEDIA: 'PING_MEDIA',\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/notification.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NotificationCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_NOTIFICATION: 'PING_NOTIFICATION',\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/decorators/column-order.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ORDER_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol.for('order_key')\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/organization.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        OrganizationCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_ORGANIZATION: 'PING_ORGANIZATION',\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/payment.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PaymentCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_PAYMENT: 'PING_PAYMENT',\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/property.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PropertyCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_PROPERTY: 'PING_PROPERTY',\n}\n                    \n                \n\n\n        \n    \n\n    apps/escrow/src/typeorm.data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TypeormDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DataSource.getInstance('escrow')\n                    \n                \n\n\n        \n    \n\n    apps/notification/src/typeorm.data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TypeormDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DataSource.getInstance('notification')\n                    \n                \n\n\n        \n    \n\n    apps/media/src/typeorm.data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TypeormDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DataSource.getInstance('media')\n                    \n                \n\n\n        \n    \n\n    apps/organization/src/typeorm.data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TypeormDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DataSource.getInstance('organization')\n                    \n                \n\n\n        \n    \n\n    apps/payment/src/typeorm.data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TypeormDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DataSource.getInstance('payment')\n                    \n                \n\n\n        \n    \n\n    apps/property/src/typeorm.data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TypeormDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DataSource.getInstance('property')\n                    \n                \n\n\n        \n    \n\n    apps/user/src/typeorm.data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TypeormDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DataSource.getInstance('user')\n                    \n                \n\n\n        \n    \n\n    apps/gateway/src/gateway.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : EnvironmentConstant\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/user.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_USER: 'PING_USER',\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
