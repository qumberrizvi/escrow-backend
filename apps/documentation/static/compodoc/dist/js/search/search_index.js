var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppConfigModule.html",[0,0.72,1,2.74]],["body/modules/AppConfigModule.html",[0,1.109,1,4.223,2,1.664,3,0.203,4,0.203,5,0.129,6,4.952,7,0.312,8,0.013,9,4.31,10,3.571,11,0.777,12,5.485,13,1.863,14,4.31,15,4.31,16,2.1,17,4.952,18,4.952,19,4.31,20,7.826,21,4.31,22,4.952,23,4.31,24,4.31,25,4.31,26,4.31,27,4.31,28,4.31,29,4.952,30,4.952,31,4.952,32,4.31,33,4.31,34,4.952,35,0.203,36,0.143,37,0.01,38,0.01]],["title/injectables/AppConfigService.html",[39,1.069,40,2.948]],["body/injectables/AppConfigService.html",[3,0.194,4,0.194,5,0.123,7,0.275,8,0.014,10,3.404,11,0.741,35,0.194,36,0.136,37,0.01,38,0.01,39,1.598,40,4.407,41,2.002,42,4.109,43,0.482,44,0.922,45,5.319,46,2.509,47,4.721,48,6.619,49,0.624,50,4.721,51,2.117,52,1.202,53,1.538,54,1.542,55,5.319,56,0.76,57,4.721,58,4.542,59,2.642,60,0.685,61,2.087,62,1.922,63,0.831,64,4.721]],["title/controllers/AuthController.html",[65,1.426,66,2.948]],["body/controllers/AuthController.html",[3,0.199,4,0.199,5,0.126,7,0.326,8,0.014,11,0.762,35,0.199,36,0.14,37,0.01,38,0.01,43,0.496,44,0.939,49,0.496,56,0.698,60,0.704,61,2.146,62,1.975,63,0.854,65,2.17,66,4.486,67,1.692,68,4.224,69,2.622,70,1.314,71,2.716,72,2.579,73,4.853,74,4.31,75,4.224,76,3.481,77,2.343,78,3.809,79,4.853,80,2.716,81,4.853,82,4.853]],["title/modules/AuthModule.html",[0,0.72,83,2.948]],["body/modules/AuthModule.html",[0,1.154,2,1.483,3,0.181,4,0.181,5,0.115,7,0.327,8,0.014,11,0.693,13,2.2,35,0.181,36,0.127,37,0.01,38,0.01,66,4.729,67,2.039,74,4.686,75,3.84,83,5.698,84,1.66,85,2.037,86,2.037,87,1.796,88,2.78,89,1.796,90,3.84,91,3.84,92,3.84,93,3.3,94,3.446,95,2.699,96,2.037,97,1.951,98,4.412,99,4.412,100,1.154,101,4.216,102,4.412]],["title/classes/AuthResolver.html",[36,0.118,101,2.948]],["body/classes/AuthResolver.html",[3,0.212,4,0.212,5,0.134,7,0.232,8,0.014,35,0.212,36,0.149,37,0.011,38,0.011,43,0.527,44,0.976,49,0.527,52,1.272,56,0.793,60,0.749,63,0.909,70,1.398,101,4.665,103,1.672,104,4.493,105,3.936,106,2.889,107,6.47,108,5.163,109,3.621,110,3.438,111,1.672,112,2.889]],["title/injectables/AuthService.html",[39,1.069,74,2.566]],["body/injectables/AuthService.html",[3,0.222,4,0.222,5,0.141,7,0.244,8,0.013,11,0.85,35,0.222,36,0.156,37,0.011,38,0.011,39,1.743,41,2.296,43,0.553,44,1.006,49,0.553,56,0.748,60,0.785,63,0.953,69,2.728,74,4.184,113,4.714,114,5.416,115,2.74,116,3.905,117,2.395]],["title/entities/BaseEntity.html",[118,1.599,119,2.288]],["body/entities/BaseEntity.html",[3,0.111,4,0.111,5,0.07,7,0.27,8,0.014,16,2.686,35,0.111,36,0.078,37,0.007,38,0.007,43,0.276,49,0.57,52,0.982,53,1.268,54,1.41,56,0.56,63,0.879,70,1.513,72,1.436,111,0.876,118,1.612,119,2.794,120,1.248,121,2.353,122,1.612,123,4.994,124,4.994,125,2.653,126,4.994,127,5.462,128,2.703,129,3.234,130,2.703,131,4.121,132,3.609,133,2.703,134,3.234,135,2.703,136,2.703,137,2.703,138,2.703,139,3.234,140,2.703,141,4.121,142,4.121,143,4.121,144,2.953,145,4.121,146,2.703,147,4.121,148,0.908,149,3.364,150,2.306,151,3.919,152,3.234,153,2.703,154,4.121,155,2.703,156,1.949,157,2.703,158,2.703,159,1.697,160,1.513,161,2.703,162,4.994,163,2.703,164,2.703,165,2.703,166,1.368,167,2.703,168,2.703,169,2.903,170,3.234,171,2.703,172,2.703,173,2.761,174,4.027,175,2.703,176,2.703,177,2.703,178,2.703,179,2.703,180,2.703,181,5.585,182,1.949,183,4.121,184,2.353,185,2.703,186,2.703,187,2.703,188,1.599,189,2.703,190,1.599,191,2.703,192,1.811,193,2.703,194,4.121,195,1.949,196,2.703,197,2.703,198,2.703,199,2.703,200,2.703,201,2.703,202,2.353,203,2.703,204,4.121,205,2.703,206,4.121,207,2.703,208,2.703,209,2.703]],["title/classes/Bootstrapper.html",[36,0.118,210,3.209]],["body/classes/Bootstrapper.html",[0,0.734,3,0.171,4,0.171,5,0.109,7,0.307,8,0.014,11,0.654,35,0.171,36,0.12,37,0.009,38,0.009,43,0.426,44,0.85,49,0.426,51,1.303,52,0.82,53,0.946,54,1.052,60,0.605,77,2.013,100,1.09,103,1.351,166,3.225,169,3.441,210,4.419,211,3.629,212,2.818,213,4.419,214,5.63,215,4.17,216,5.63,217,5.63,218,3.329,219,3.273,220,3.007,221,4.17,222,4.9,223,2.466,224,4.17,225,3.151,226,3.007,227,3.629,228,3.629,229,3.273,230,4.17,231,4.17,232,3.629,233,3.273,234,2.617,235,4.17,236,4.284,237,4.17,238,4.17,239,3.273,240,4.17,241,4.17,242,4.17,243,4.17,244,4.17]],["title/modules/ClientsModule.html",[0,0.72,245,3.209]],["body/modules/ClientsModule.html",[0,1.138,2,1.441,3,0.176,4,0.176,5,0.112,7,0.291,8,0.014,11,0.673,13,1.613,35,0.176,36,0.123,37,0.009,38,0.009,44,0.647,49,0.438,51,1.339,52,1.128,53,0.973,54,1.082,56,0.725,60,0.622,63,0.755,77,2.07,89,1.745,166,2.902,169,3.121,212,2.536,218,3.392,222,4.993,225,1.979,226,3.092,228,3.732,232,3.732,233,3.365,234,3.601,236,3.601,245,5.418,246,4.288,247,3.732,248,5.737,249,4.288,250,3.732,251,2.648,252,4.502,253,3.092,254,5.737,255,5.737,256,4.288,257,4.288,258,4.288,259,4.288]],["title/modules/CommonModule.html",[0,0.72,93,1.808]],["body/modules/CommonModule.html",[0,1.182,1,5.07,2,1.556,3,0.19,4,0.19,5,0.121,7,0.302,8,0.013,11,0.727,13,2.271,35,0.19,36,0.133,37,0.01,38,0.01,84,1.742,85,2.138,86,2.138,87,1.885,88,2.847,89,2.733,93,3.493,95,2.786,96,2.138,97,2.047,260,4.031,261,4.031,262,4.031,263,4.031,264,5.413,265,4.631,266,4.631,267,4.631]],["title/injectables/CommonService.html",[39,1.069,264,2.74]],["body/injectables/CommonService.html",[3,0.244,4,0.244,5,0.155,7,0.267,8,0.013,11,0.933,35,0.244,36,0.171,37,0.012,38,0.012,39,1.844,41,2.521,264,4.726,268,5.175]],["title/classes/ConfigHelper.html",[36,0.118,218,2.418]],["body/classes/ConfigHelper.html",[3,0.106,4,0.106,5,0.067,7,0.265,8,0.014,9,2.252,10,2.874,14,2.252,15,2.252,16,1.097,35,0.106,36,0.074,37,0.007,38,0.007,40,4.83,43,0.264,44,0.601,45,3.469,46,2.582,48,3.469,49,0.702,51,1.706,52,0.956,53,1.52,54,1.227,55,3.469,56,0.771,58,1.734,59,2.72,60,0.792,63,1.142,100,0.677,103,0.838,122,1.559,166,3.151,169,3.582,212,2.149,218,3.486,219,2.031,220,1.866,223,2.357,225,1.195,227,4.23,234,4.072,236,4.072,251,1.84,269,2.252,270,4.489,271,4.86,272,4.752,273,3.986,274,3.986,275,3.986,276,4.86,277,3.986,278,2.588,279,2.588,280,2.588,281,3.986,282,2.588,283,2.588,284,3.986,285,2.588,286,2.588,287,2.588,288,2.588,289,2.588,290,2.588,291,2.588,292,1.734,293,4.86,294,2.588,295,2.588,296,2.588,297,2.588,298,2.588,299,2.588,300,2.588,301,2.588,302,2.588,303,2.588,304,3.128,305,2.588,306,2.23,307,2.588,308,2.502,309,2.588,310,2.588,311,2.588,312,3.986,313,2.588,314,2.588,315,2.588]],["title/classes/CreateOrganizationAndMetaTable1741518145374.html",[36,0.118,316,3.209]],["body/classes/CreateOrganizationAndMetaTable1741518145374.html",[3,0.115,4,0.115,5,0.073,7,0.125,8,0.013,35,0.115,36,0.08,37,0.007,38,0.007,43,0.285,44,0.637,49,0.52,51,1.319,52,1.31,53,1.156,54,1.065,56,0.313,59,2.849,60,0.612,103,0.904,122,1.651,125,3.24,129,3.313,134,3.313,139,3.313,148,0.938,188,4.233,190,1.65,192,4.997,212,2.836,225,2.961,251,2.621,316,4.455,317,4.94,318,2.428,319,3.313,320,3.996,321,5.034,322,3.313,323,2.829,324,2.79,325,3.313,326,5.511,327,2.79,328,3.313,329,2.79,330,3.313,331,4.625,332,5.091,333,3.996,334,3.674,335,5.384,336,5.384,337,3.674,338,2.428,339,1.751,340,1.751,341,5.034,342,4.455,343,5.228,344,2.79,345,4.431,346,2.79,347,2.79,348,3.313,349,5.677,350,2.428,351,2.428,352,2.428,353,2.428,354,4.221,355,2.496,356,2.829,357,2.428,358,2.428,359,2.428,360,2.012,361,3.671,362,2.79,363,2.79,364,3.674,365,2.428,366,4.221,367,2.428,368,2.428,369,2.428,370,3.674,371,2.19,372,3.674,373,2.79,374,2.19]],["title/classes/CreateRoleTable1741519642145.html",[36,0.118,375,3.209]],["body/classes/CreateRoleTable1741519642145.html",[3,0.162,4,0.162,5,0.103,7,0.177,8,0.013,35,0.162,36,0.113,37,0.009,38,0.009,43,0.402,44,0.817,49,0.632,51,1.692,52,1.454,53,1.405,54,1.367,56,0.442,59,2.205,60,0.785,103,1.276,122,2.119,148,1.324,188,2.33,190,2.33,192,2.64,212,3.192,225,2.501,251,3.077,319,4.251,320,4.858,321,5.668,322,4.251,323,3.63,325,4.251,326,6.001,328,4.251,330,3.092,331,3.906,335,4.251,336,4.251,343,3.092,348,3.092,374,3.092,375,5.232,376,5.801,377,3.429,378,3.94,379,3.94,380,3.94,381,4.714,382,2.841,383,3.94]],["title/classes/CreateUserInput.html",[36,0.118,384,2.74]],["body/classes/CreateUserInput.html",[3,0.14,4,0.14,5,0.089,7,0.258,8,0.014,35,0.14,36,0.165,37,0.008,38,0.008,43,0.349,49,0.742,53,1.65,56,0.906,70,1.969,100,0.894,103,1.107,111,1.107,122,1.918,149,4.142,306,3.208,339,3.598,340,3.598,384,3.285,385,6.442,386,2.975,387,4.499,388,4.499,389,4.499,390,5.732,391,2.9,392,4.461,393,3.419,394,3.419,395,3.419,396,3.419,397,3.419,398,3.419,399,3.419,400,3.419,401,4.915,402,3.419,403,4.903,404,4.903,405,4.267,406,3.419,407,2.975]],["title/classes/CreateUserTable1741519705062.html",[36,0.118,408,3.209]],["body/classes/CreateUserTable1741519705062.html",[3,0.136,4,0.136,5,0.086,7,0.149,8,0.013,35,0.136,36,0.095,37,0.008,38,0.008,43,0.339,44,0.724,49,0.575,51,1.498,52,1.343,53,1.279,54,1.21,56,0.372,59,2.684,60,0.695,103,1.074,122,1.876,125,2.548,129,2.603,134,2.603,139,2.603,148,1.114,188,3.651,190,1.961,192,4.719,212,3.019,225,2.85,251,2.85,306,1.855,319,3.764,320,4.423,321,5.36,322,3.764,323,3.214,325,3.764,326,5.767,328,3.764,330,2.603,331,4.452,333,3.764,334,2.886,335,5.36,336,5.36,339,2.081,340,2.081,341,4.423,342,3.764,343,4.423,348,2.603,361,2.391,364,4.174,365,2.886,367,2.886,368,2.886,369,2.886,371,2.603,372,2.886,374,2.603,381,2.886,387,2.603,388,2.603,391,2.426,408,4.846,409,5.374,410,2.886,411,3.316,412,3.316,413,3.316,414,6.175,415,3.316,416,4.796,417,4.796]],["title/classes/DataSource.html",[36,0.118,144,2.418]],["body/classes/DataSource.html",[3,0.172,4,0.172,5,0.147,7,0.288,8,0.014,35,0.172,36,0.121,37,0.009,38,0.009,43,0.429,44,0.854,49,0.429,51,1.312,52,0.825,53,1.284,54,1.06,56,0.718,60,0.609,63,0.739,103,1.36,120,1.938,144,3.783,148,1.411,166,3.236,223,2.483,234,2.636,236,2.636,272,4.923,292,2.814,304,3.296,306,2.35,308,2.636,360,3.028,418,4.923,419,3.654,420,5.657,421,4.199,422,3.165,423,4.199,424,4.199,425,4.923,426,4.44,427,4.199,428,3.296,429,3.296,430,4.199,431,4.199,432,4.199,433,4.199,434,6.845,435,4.199,436,4.199,437,4.199,438,4.199,439,4.199,440,4.199,441,4.199,442,4.199,443,3.654,444,3.654,445,4.199,446,3.028,447,4.199,448,4.199,449,4.199]],["title/modules/DatabaseModule.html",[0,0.72,450,2.418]],["body/modules/DatabaseModule.html",[0,1.003,2,1.136,3,0.139,4,0.139,5,0.088,7,0.297,8,0.014,11,0.531,13,1.272,16,1.433,35,0.139,36,0.14,37,0.008,38,0.008,44,0.51,49,0.497,51,1.519,52,0.956,53,1.414,54,1.227,56,0.771,60,0.705,63,1.003,100,0.884,120,2.245,144,4.286,148,1.136,166,3.152,169,2.75,212,1.495,213,2.653,218,2.876,225,1.561,226,2.438,233,3.817,234,3.053,236,3.053,253,4.76,304,3.817,306,2.721,308,3.053,360,2.438,422,3.486,443,2.942,444,2.942,450,3.369,451,3.381,452,4.864,453,3.381,454,4.864,455,3.381,456,5.422,457,6.23,458,3.381,459,4.864,460,3.381,461,4.864,462,2.265,463,2.942,464,2.942,465,3.381,466,2.942,467,3.381,468,2.653,469,3.381,470,3.381,471,3.381]],["title/classes/DatabaseUtil.html",[36,0.118,156,2.948]],["body/classes/DatabaseUtil.html",[3,0.186,4,0.186,5,0.118,8,0.014,35,0.186,36,0.13,37,0.01,38,0.01,43,0.462,44,0.897,49,0.462,56,0.667,60,0.656,63,0.797,103,1.467,156,4.288,166,3.36,169,3.207,341,4.668,342,3.554,355,2.677,472,3.94,473,7.053,474,4.528,475,4.528,476,4.528,477,4.668,478,4.528,479,4.528,480,3.265,481,4.528,482,4.528,483,4.528,484,4.528,485,4.528,486,4.528,487,4.528,488,4.528,489,4.528,490,4.528,491,3.554,492,4.528,493,4.528,494,4.528,495,4.528,496,3.94,497,3.265,498,4.528,499,4.528,500,3.94,501,4.528,502,4.528,503,4.528,504,3.265,505,4.528,506,3.94,507,4.528,508,4.528]],["title/controllers/DocumentationController.html",[65,1.426,509,2.948]],["body/controllers/DocumentationController.html",[3,0.213,4,0.213,5,0.135,7,0.292,8,0.014,11,0.814,35,0.213,36,0.149,37,0.011,38,0.011,43,0.53,44,0.979,49,0.53,56,0.728,60,0.752,61,2.292,62,2.11,63,0.913,65,2.262,67,1.808,69,2.687,70,1.404,509,4.678,510,4.512,511,5.185,512,4.444,513,4.512,514,5.185]],["title/modules/DocumentationModule.html",[0,0.72,515,2.948]],["body/modules/DocumentationModule.html",[0,1.218,2,1.657,3,0.203,4,0.203,5,0.128,7,0.311,8,0.013,11,0.774,13,1.856,35,0.203,36,0.142,37,0.01,38,0.01,67,2.192,84,1.856,85,2.277,86,2.277,87,2.008,88,2.933,89,2.008,95,2.902,96,2.277,97,2.181,509,4.989,512,4.829,513,4.293,515,5.548,516,4.293,517,4.293,518,4.932,519,4.932]],["title/injectables/DocumentationService.html",[39,1.069,512,2.566]],["body/injectables/DocumentationService.html",[3,0.223,4,0.223,5,0.142,7,0.245,8,0.013,11,0.854,35,0.223,36,0.157,37,0.011,38,0.011,39,1.747,41,2.307,43,0.556,44,1.009,49,0.556,56,0.75,60,0.789,63,0.958,69,2.732,115,2.752,512,4.195,520,4.735,521,5.441,522,5.441]],["title/controllers/EscrowController.html",[65,1.426,523,2.948]],["body/controllers/EscrowController.html",[3,0.199,4,0.199,5,0.126,7,0.326,8,0.014,11,0.762,35,0.199,36,0.14,37,0.01,38,0.01,43,0.496,44,0.939,49,0.496,56,0.698,60,0.704,61,2.146,62,1.975,63,0.854,65,2.17,67,1.692,69,2.622,70,1.314,71,2.716,72,2.579,76,3.481,77,2.343,80,2.716,100,1.269,523,4.486,524,4.224,525,4.853,526,4.31,527,4.224,528,3.809,529,4.853,530,4.853]],["title/modules/EscrowModule.html",[0,0.72,531,2.948]],["body/modules/EscrowModule.html",[0,1.154,2,1.483,3,0.181,4,0.181,5,0.115,7,0.327,8,0.014,11,0.693,13,2.2,35,0.181,36,0.127,37,0.01,38,0.01,67,2.039,84,1.66,85,2.037,86,2.037,87,1.796,88,2.78,89,1.796,93,3.3,94,3.446,95,2.699,96,2.037,97,1.951,100,1.154,523,4.729,526,4.686,527,3.84,531,5.698,532,3.84,533,3.84,534,4.412,535,4.412,536,4.412,537,4.216,538,4.412]],["title/classes/EscrowResolver.html",[36,0.118,537,2.948]],["body/classes/EscrowResolver.html",[3,0.212,4,0.212,5,0.134,7,0.232,8,0.014,35,0.212,36,0.149,37,0.011,38,0.011,43,0.527,44,0.976,49,0.527,52,1.272,56,0.793,60,0.749,63,0.909,70,1.398,103,1.672,105,3.936,106,2.889,109,3.621,110,3.438,111,1.672,112,2.889,537,4.665,539,4.493,540,6.47,541,5.163]],["title/injectables/EscrowService.html",[39,1.069,526,2.566]],["body/injectables/EscrowService.html",[3,0.222,4,0.222,5,0.141,7,0.244,8,0.013,11,0.85,35,0.222,36,0.156,37,0.011,38,0.011,39,1.743,41,2.296,43,0.553,44,1.006,49,0.553,56,0.748,60,0.785,63,0.953,69,2.728,115,2.74,117,2.395,526,4.184,542,4.714,543,5.416,544,3.629]],["title/modules/GatewayModule.html",[0,0.72,545,2.948]],["body/modules/GatewayModule.html",[0,1.134,2,1.431,3,0.175,4,0.175,5,0.111,7,0.29,8,0.014,11,0.668,13,2.148,35,0.175,36,0.123,37,0.009,38,0.009,84,1.602,85,1.966,86,1.966,87,1.733,88,2.731,89,1.733,93,3.267,95,2.636,96,1.966,97,1.882,100,1.113,169,2.056,292,3.826,545,5.661,546,3.706,547,3.706,548,3.706,549,4.81,550,4.952,551,3.342,552,4.258,553,4.969,554,4.969,555,4.969,556,4.969,557,4.969,558,4.969,559,4.969,560,4.969,561,4.258]],["title/injectables/GatewayService.html",[39,1.069,550,2.74]],["body/injectables/GatewayService.html",[3,0.217,4,0.217,5,0.137,7,0.237,8,0.013,11,0.828,35,0.217,36,0.152,37,0.011,38,0.011,39,1.714,41,2.236,43,0.539,44,0.99,46,3.792,49,0.67,56,0.736,60,0.765,63,0.928,105,3.966,115,2.669,117,2.332,550,4.394,562,4.591,563,5.275,564,5.275,565,4.14]],["title/modules/GraphQLGatewayModule.html",[0,0.72,549,2.74]],["body/modules/GraphQLGatewayModule.html",[0,1.126,2,1.411,3,0.172,4,0.172,5,0.109,7,0.321,8,0.014,11,0.659,13,1.58,35,0.172,36,0.121,37,0.009,38,0.009,44,0.634,49,0.429,51,1.312,52,0.825,53,0.953,54,1.06,56,0.718,60,0.609,63,0.996,89,1.709,100,1.098,111,1.36,166,2.862,212,2.828,223,2.483,225,1.938,247,3.654,251,2.611,252,4.44,253,3.028,466,3.654,549,4.286,565,3.296,566,4.923,567,4.199,568,5.657,569,4.199,570,4.199,571,4.923,572,5.657,573,4.199,574,3.296,575,5.657,576,3.654,577,3.028,578,4.199,579,3.654,580,4.199,581,4.199,582,4.199]],["title/modules/GraphQLMicroserviceModule.html",[0,0.72,94,1.887]],["body/modules/GraphQLMicroserviceModule.html",[0,1.151,2,1.765,3,0.216,4,0.216,5,0.137,7,0.32,8,0.014,11,0.824,13,1.976,16,2.227,35,0.216,36,0.151,37,0.011,38,0.011,94,3.019,111,1.701,355,3.106,566,4.571,571,4.571,574,4.122,579,4.571,583,5.252,584,6.54,585,5.252,586,5.252,587,5.252,588,3.52,589,5.252]],["title/controllers/MediaController.html",[65,1.426,590,2.948]],["body/controllers/MediaController.html",[3,0.199,4,0.199,5,0.126,7,0.326,8,0.014,11,0.762,35,0.199,36,0.14,37,0.01,38,0.01,43,0.496,44,0.939,49,0.496,56,0.698,60,0.704,61,2.146,62,1.975,63,0.854,65,2.17,67,1.692,69,2.622,70,1.314,71,2.716,72,2.579,76,3.481,77,2.343,80,2.716,100,1.269,590,4.486,591,4.224,592,4.853,593,4.31,594,4.224,595,3.809,596,4.853,597,4.853]],["title/modules/MediaModule.html",[0,0.72,598,2.948]],["body/modules/MediaModule.html",[0,1.154,2,1.483,3,0.181,4,0.181,5,0.115,7,0.327,8,0.014,11,0.693,13,2.2,35,0.181,36,0.127,37,0.01,38,0.01,67,2.039,84,1.66,85,2.037,86,2.037,87,1.796,88,2.78,89,1.796,93,3.3,94,3.446,95,2.699,96,2.037,97,1.951,100,1.154,590,4.729,593,4.686,594,3.84,598,5.698,599,3.84,600,3.84,601,4.412,602,4.412,603,4.412,604,4.216,605,4.412]],["title/classes/MediaResolver.html",[36,0.118,604,2.948]],["body/classes/MediaResolver.html",[3,0.212,4,0.212,5,0.134,7,0.232,8,0.014,35,0.212,36,0.149,37,0.011,38,0.011,43,0.527,44,0.976,49,0.527,52,1.272,56,0.793,60,0.749,63,0.909,70,1.398,103,1.672,105,3.936,106,2.889,109,3.621,110,3.438,111,1.672,112,2.889,604,4.665,606,4.493,607,6.47,608,5.163]],["title/injectables/MediaService.html",[39,1.069,593,2.566]],["body/injectables/MediaService.html",[3,0.222,4,0.222,5,0.141,7,0.244,8,0.013,11,0.85,35,0.222,36,0.156,37,0.011,38,0.011,39,1.743,41,2.296,43,0.553,44,1.006,49,0.553,56,0.748,60,0.785,63,0.953,69,2.728,115,2.74,117,2.395,593,4.184,609,4.714,610,5.416,611,4.714]],["title/controllers/NotificationController.html",[65,1.426,612,2.948]],["body/controllers/NotificationController.html",[3,0.199,4,0.199,5,0.126,7,0.326,8,0.014,11,0.762,35,0.199,36,0.14,37,0.01,38,0.01,43,0.496,44,0.939,49,0.496,56,0.698,60,0.704,61,2.146,62,1.975,63,0.854,65,2.17,67,1.692,69,2.622,70,1.314,71,2.716,72,2.579,76,3.481,77,2.343,80,2.716,100,1.269,612,4.486,613,4.224,614,4.853,615,4.31,616,4.224,617,3.809,618,4.853,619,4.853]],["title/modules/NotificationModule.html",[0,0.72,620,2.948]],["body/modules/NotificationModule.html",[0,1.154,2,1.483,3,0.181,4,0.181,5,0.115,7,0.327,8,0.014,11,0.693,13,2.2,35,0.181,36,0.127,37,0.01,38,0.01,67,2.039,84,1.66,85,2.037,86,2.037,87,1.796,88,2.78,89,1.796,93,3.3,94,3.446,95,2.699,96,2.037,97,1.951,100,1.154,612,4.729,615,4.686,616,3.84,620,5.698,621,3.84,622,3.84,623,4.412,624,4.412,625,4.412,626,4.216,627,4.412]],["title/classes/NotificationResolver.html",[36,0.118,626,2.948]],["body/classes/NotificationResolver.html",[3,0.212,4,0.212,5,0.134,7,0.232,8,0.014,35,0.212,36,0.149,37,0.011,38,0.011,43,0.527,44,0.976,49,0.527,52,1.272,56,0.793,60,0.749,63,0.909,70,1.398,103,1.672,105,3.936,106,2.889,109,3.621,110,3.438,111,1.672,112,2.889,626,4.665,628,4.493,629,6.47,630,5.163]],["title/injectables/NotificationService.html",[39,1.069,615,2.566]],["body/injectables/NotificationService.html",[3,0.222,4,0.222,5,0.141,7,0.244,8,0.013,11,0.85,35,0.222,36,0.156,37,0.011,38,0.011,39,1.743,41,2.296,43,0.553,44,1.006,49,0.553,56,0.748,60,0.785,63,0.953,69,2.728,115,2.74,117,2.395,615,4.184,631,4.714,632,5.416,633,4.714]],["title/entities/Organization.html",[118,1.599,634,1.599]],["body/entities/Organization.html",[3,0.138,4,0.138,5,0.088,7,0.28,8,0.014,16,2.795,35,0.138,36,0.097,37,0.008,38,0.008,43,0.344,49,0.701,52,1.296,53,1.559,54,1.225,56,0.88,70,1.86,100,0.881,111,1.092,118,1.899,119,2.716,120,1.556,122,1.899,125,1.791,132,2.579,148,1.133,149,3.96,150,2.716,159,2.116,170,5.175,173,4.602,337,4.95,338,4.224,339,3.57,340,3.57,345,4.224,392,2.116,634,2.225,635,2.934,636,5.688,637,3.81,638,3.371,639,4.418,640,3.371,641,4.854,642,3.371,643,4.854,644,3.371,645,3.371,646,2.934,647,3.371,648,3.371,649,4.224,650,2.116,651,2.934,652,2.646,653,2.431]],["title/classes/Organization-1.html",[36,0.099,160,1.917,634,1.34]],["body/classes/Organization-1.html",[3,0.203,4,0.203,5,0.128,7,0.283,8,0.014,35,0.203,36,0.142,37,0.01,38,0.01,43,0.504,49,0.504,53,1.119,56,0.776,59,2.76,70,1.336,100,1.289,103,1.598,111,1.598,122,2.459,125,3.871,149,3.872,150,3.517,588,3.305,634,2.85,650,3.096,653,3.556,654,4.293,655,4.932,656,4.932,657,3.871,658,4.293,659,4.293,660,3.946,661,4.293,662,4.932]],["title/controllers/OrganizationController.html",[65,1.426,663,2.948]],["body/controllers/OrganizationController.html",[3,0.177,4,0.177,5,0.112,7,0.311,8,0.014,11,0.678,35,0.177,36,0.124,37,0.01,38,0.01,43,0.441,44,0.87,49,0.589,51,1.349,52,0.849,53,0.98,54,1.09,56,0.809,60,0.836,61,1.909,62,1.758,63,1.014,65,2.01,67,1.506,69,2.507,70,1.561,71,3.225,72,3.062,76,3.63,77,2.085,80,3.225,125,3.062,663,4.156,664,3.758,665,5.764,666,5.764,667,4.318,668,4.318,669,3.63,670,3.114,671,3.389,672,4.318,673,4.318,674,4.318,675,4.318,676,3.758]],["title/entities/OrganizationMetadata.html",[118,1.599,639,2.74]],["body/entities/OrganizationMetadata.html",[3,0.108,4,0.108,5,0.068,7,0.267,8,0.014,16,2.854,35,0.108,36,0.076,37,0.007,38,0.007,43,0.268,49,0.666,52,1.232,53,1.671,54,1.389,56,0.774,70,1.767,100,0.687,111,0.851,118,1.577,119,2.256,120,1.213,122,1.577,132,3.466,148,1.355,149,3.65,150,2.256,159,1.649,173,4.371,188,3.705,239,4.319,350,3.509,351,4.27,352,4.27,353,3.509,355,3.254,356,4.198,357,3.509,358,3.509,359,5.166,360,2.907,361,2.907,370,5.166,392,2.531,634,2.7,637,2.062,639,2.702,646,4.27,649,3.509,677,5.858,678,2.286,679,4.906,680,4.906,681,4.906,682,4.906,683,2.627,684,5.503,685,5.503,686,5.503,687,2.627,688,2.286,689,2.627,690,2.627,691,2.627,692,4.032,693,4.032,694,4.032,695,2.627,696,2.627,697,2.286,698,2.627,699,2.627,700,4.906,701,3.509,702,2.286,703,2.627,704,4.032]],["title/modules/OrganizationModule.html",[0,0.72,705,2.948]],["body/modules/OrganizationModule.html",[0,1.095,2,1.337,3,0.163,4,0.163,5,0.104,7,0.334,8,0.014,11,0.624,13,2.052,35,0.163,36,0.114,37,0.009,38,0.009,67,1.902,84,1.497,85,1.837,86,1.837,87,1.619,88,2.638,89,1.619,93,3.202,94,3.344,95,2.517,96,1.837,97,1.759,100,1.04,422,2.226,450,4.386,634,1.556,639,3.654,651,3.463,663,4.486,669,4.053,670,2.869,705,5.763,706,3.463,707,3.463,708,3.463,709,3.979,710,3.979,711,3.932,712,3.979,713,2.869,714,3.979,715,3.979,716,3.979]],["title/classes/OrganizationResolver.html",[36,0.118,711,2.948]],["body/classes/OrganizationResolver.html",[3,0.173,4,0.173,5,0.11,7,0.288,8,0.014,16,2.404,35,0.173,36,0.121,37,0.009,38,0.009,43,0.43,44,0.856,46,2.239,49,0.654,51,1.316,52,1.26,53,0.956,54,1.063,56,0.719,60,0.822,61,1.863,62,1.715,63,0.998,70,1.536,103,1.365,105,3.642,106,3.173,109,3.586,110,3.012,111,1.365,112,2.358,132,3.012,251,2.617,634,2.218,652,5.38,669,4.122,670,3.038,711,4.088,713,3.038,717,3.667,718,3.667,719,4.213,720,4.213,721,5.67,722,4.213,723,4.213]],["title/injectables/OrganizationService.html",[39,1.069,669,2.288]],["body/injectables/OrganizationService.html",[3,0.164,4,0.164,5,0.104,7,0.316,8,0.014,11,0.629,35,0.164,36,0.115,37,0.009,38,0.009,39,1.432,41,1.698,43,0.409,44,0.827,46,2.911,49,0.686,51,1.711,52,1.077,53,1.243,54,1.382,56,0.615,60,0.905,62,1.63,63,1.099,69,2.43,115,2.026,117,1.771,148,1.346,170,3.143,251,2.529,270,2.684,462,2.684,634,2.143,669,3.065,713,2.888,724,3.486,725,6.712,726,5.478,727,3.486,728,5.696,729,4.005,730,4.005,731,5.478,732,6.712,733,4.005,734,4.005,735,3.143,736,4.005,737,4.005,738,4.005,739,3.486,740,4.005,741,4.005]],["title/controllers/PaymentController.html",[65,1.426,742,2.948]],["body/controllers/PaymentController.html",[3,0.199,4,0.199,5,0.126,7,0.326,8,0.014,11,0.762,35,0.199,36,0.14,37,0.01,38,0.01,43,0.496,44,0.939,49,0.496,56,0.698,60,0.704,61,2.146,62,1.975,63,0.854,65,2.17,67,1.692,69,2.622,70,1.314,71,2.716,72,2.579,76,3.481,77,2.343,80,2.716,100,1.269,742,4.486,743,4.224,744,4.853,745,4.31,746,4.224,747,3.809,748,4.853,749,4.853]],["title/modules/PaymentModule.html",[0,0.72,750,2.948]],["body/modules/PaymentModule.html",[0,1.154,2,1.483,3,0.181,4,0.181,5,0.115,7,0.327,8,0.014,11,0.693,13,2.2,35,0.181,36,0.127,37,0.01,38,0.01,67,2.039,84,1.66,85,2.037,86,2.037,87,1.796,88,2.78,89,1.796,93,3.3,94,3.446,95,2.699,96,2.037,97,1.951,100,1.154,742,4.729,745,4.686,746,3.84,750,5.698,751,3.84,752,4.412,753,3.84,754,4.412,755,4.412,756,4.216,757,4.412]],["title/classes/PaymentResolver.html",[36,0.118,756,2.948]],["body/classes/PaymentResolver.html",[3,0.212,4,0.212,5,0.134,7,0.232,8,0.014,35,0.212,36,0.149,37,0.011,38,0.011,43,0.527,44,0.976,49,0.527,52,1.272,56,0.793,60,0.749,63,0.909,70,1.398,103,1.672,105,3.936,106,2.889,109,3.621,110,3.438,111,1.672,112,2.889,756,4.665,758,4.493,759,6.47,760,5.163]],["title/injectables/PaymentService.html",[39,1.069,745,2.566]],["body/injectables/PaymentService.html",[3,0.222,4,0.222,5,0.141,7,0.244,8,0.013,11,0.85,35,0.222,36,0.156,37,0.011,38,0.011,39,1.743,41,2.296,43,0.553,44,1.006,49,0.553,56,0.748,60,0.785,63,0.953,69,2.728,115,2.74,117,2.395,745,4.184,761,4.714,762,5.416,763,4.714]],["title/entities/Permission.html",[118,1.599,764,3.209]],["body/entities/Permission.html",[3,0.22,4,0.22,5,0.14,7,0.298,8,0.013,35,0.22,36,0.154,37,0.011,38,0.011,43,0.548,49,0.548,52,1.414,53,1.218,56,0.744,111,1.739,118,2.593,119,3.709,120,2.478,122,2.593,148,1.804,150,3.709,159,3.37,764,5.203,765,4.672,766,5.368]],["title/controllers/PropertyController.html",[65,1.426,767,2.948]],["body/controllers/PropertyController.html",[3,0.199,4,0.199,5,0.126,7,0.326,8,0.014,11,0.762,35,0.199,36,0.14,37,0.01,38,0.01,43,0.496,44,0.939,49,0.496,56,0.698,60,0.704,61,2.146,62,1.975,63,0.854,65,2.17,67,1.692,69,2.622,70,1.314,71,2.716,72,2.579,76,3.481,77,2.343,80,2.716,100,1.269,767,4.486,768,4.224,769,4.853,770,4.31,771,4.224,772,3.809,773,4.853,774,4.853]],["title/modules/PropertyModule.html",[0,0.72,775,2.948]],["body/modules/PropertyModule.html",[0,1.154,2,1.483,3,0.181,4,0.181,5,0.115,7,0.327,8,0.014,11,0.693,13,2.2,35,0.181,36,0.127,37,0.01,38,0.01,67,2.039,84,1.66,85,2.037,86,2.037,87,1.796,88,2.78,89,1.796,93,3.3,94,3.446,95,2.699,96,2.037,97,1.951,100,1.154,767,4.729,770,4.686,771,3.84,775,5.698,776,3.84,777,3.84,778,4.412,779,4.412,780,4.412,781,4.216,782,4.412]],["title/classes/PropertyResolver.html",[36,0.118,781,2.948]],["body/classes/PropertyResolver.html",[3,0.212,4,0.212,5,0.134,7,0.232,8,0.014,35,0.212,36,0.149,37,0.011,38,0.011,43,0.527,44,0.976,49,0.527,52,1.272,56,0.793,60,0.749,63,0.909,70,1.398,103,1.672,105,3.936,106,2.889,109,3.621,110,3.438,111,1.672,112,2.889,781,4.665,783,4.493,784,6.47,785,5.163]],["title/injectables/PropertyService.html",[39,1.069,770,2.566]],["body/injectables/PropertyService.html",[3,0.222,4,0.222,5,0.141,7,0.244,8,0.013,11,0.85,35,0.222,36,0.156,37,0.011,38,0.011,39,1.743,41,2.296,43,0.553,44,1.006,49,0.553,56,0.748,60,0.785,63,0.953,69,2.728,115,2.74,117,2.395,770,4.184,786,4.714,787,5.416,788,3.629]],["title/entities/Role.html",[118,1.599,391,2.068]],["body/entities/Role.html",[3,0.188,4,0.188,5,0.119,7,0.269,8,0.014,16,2.831,35,0.188,36,0.132,37,0.01,38,0.01,43,0.468,49,0.612,52,1.393,53,1.36,56,0.846,70,1.623,111,1.483,118,2.343,119,3.353,120,2.114,122,2.343,132,3.548,148,1.539,149,3.737,150,3.353,159,2.874,173,4.015,382,4.815,391,3.031,392,2.874,688,3.985,789,3.985,790,4.579,791,4.579,792,4.579,793,5.991,794,3.594]],["title/modules/SeederModule.html",[0,0.72,795,2.74]],["body/modules/SeederModule.html",[0,1.304,2,1.152,3,0.141,4,0.141,5,0.089,7,0.311,8,0.014,11,0.538,13,1.29,35,0.141,36,0.141,37,0.008,38,0.008,44,0.517,49,0.586,51,1.794,52,1.129,53,1.706,54,1.449,60,0.832,63,0.603,87,1.395,88,1.453,89,1.395,117,2.172,120,2.65,166,3.494,169,2.372,212,2.172,213,3.856,219,2.691,220,2.472,225,2.65,229,2.691,253,4.14,270,3.292,308,2.152,450,2.027,456,5.457,463,2.984,464,2.984,795,3.847,796,3.428,797,4.913,798,3.428,799,3.428,800,6.27,801,3.428,802,5.457,803,2.297,804,4.913,805,3.428,806,3.428,807,2.297,808,3.428,809,3.428,810,3.428,811,3.428,812,3.428,813,2.691,814,3.428,815,3.428,816,3.428,817,3.428,818,3.428,819,3.428,820,3.428,821,3.428,822,3.428,823,3.428,824,3.428,825,3.428]],["title/injectables/SeederService.html",[39,1.069,807,2.74]],["body/injectables/SeederService.html",[3,0.161,4,0.161,5,0.102,7,0.314,8,0.014,11,0.614,35,0.161,36,0.113,37,0.009,38,0.009,39,1.41,41,1.66,43,0.4,44,0.814,46,2.865,49,0.63,51,1.223,52,1.213,53,0.888,54,0.988,60,0.782,100,1.023,148,1.315,169,2.979,212,3.186,225,2.848,270,4.455,391,2.728,401,3.072,462,2.623,728,5.218,735,3.072,794,4.233,803,4.455,807,3.614,826,3.407,827,6.648,828,3.915,829,3.915,830,5.393,831,3.915,832,3.915,833,3.407,834,3.915,835,3.915,836,3.915,837,6.648,838,5.393,839,3.915,840,3.915,841,3.915,842,3.915]],["title/classes/SubgraphsBuilder.html",[36,0.118,577,2.948]],["body/classes/SubgraphsBuilder.html",[3,0.18,4,0.18,5,0.114,7,0.262,8,0.014,35,0.18,36,0.126,37,0.01,38,0.01,43,0.447,44,0.878,49,0.447,51,1.368,52,1.144,53,0.994,54,1.106,56,0.733,59,2.451,60,0.635,63,1.024,100,1.145,103,1.419,166,3.306,169,3.361,212,2.889,218,3.441,225,2.022,226,3.159,234,2.75,236,2.75,251,2.686,577,4.196,843,5.064,844,3.812,845,6.534,846,4.381,847,4.381,848,5.819,849,4.381,850,4.381,851,4.381,852,5.819,853,4.381,854,5.819,855,4.381,856,4.381,857,4.381]],["title/entities/User.html",[118,1.599,858,1.808]],["body/entities/User.html",[3,0.126,4,0.126,5,0.08,7,0.285,8,0.014,16,2.69,35,0.126,36,0.088,37,0.007,38,0.007,43,0.313,49,0.72,52,0.89,53,1.663,54,1.501,56,0.878,70,1.91,100,0.801,111,0.993,118,1.771,119,2.534,120,1.415,122,1.771,125,1.628,132,3.529,148,1.03,149,3.947,150,2.534,159,1.924,173,4.727,306,3.013,333,3.554,339,3.38,340,3.38,361,3.265,387,4.226,388,4.226,389,4.226,391,3.568,392,2.842,634,2.688,637,4.668,650,1.924,653,2.21,697,2.667,701,3.941,858,2.002,859,2.667,860,3.065,861,3.065,862,3.065,863,3.065,864,3.065,865,3.065,866,3.065,867,3.065,868,3.065,869,4.528,870,3.065,871,3.065,872,2.406]],["title/classes/User-1.html",[36,0.099,160,1.917,858,1.515]],["body/classes/User-1.html",[3,0.162,4,0.162,5,0.103,7,0.279,8,0.014,16,2.302,35,0.162,36,0.114,37,0.009,38,0.009,43,0.404,49,0.633,53,1.407,54,1.685,56,0.811,70,1.679,100,1.033,103,1.28,111,1.28,117,1.748,118,1.546,122,2.123,125,3.547,132,3.547,149,3.735,150,3.038,389,5.673,392,3.892,634,2.896,650,2.481,653,2.85,657,3.102,658,3.44,659,3.44,660,2.481,661,3.44,702,3.44,858,3.093,873,3.44,874,3.953,875,3.953,876,3.953,877,3.953,878,3.953,879,3.953,880,3.953,881,3.953,882,3.953,883,3.953,884,3.953,885,3.953]],["title/controllers/UserController.html",[65,1.426,886,2.948]],["body/controllers/UserController.html",[3,0.199,4,0.199,5,0.126,7,0.326,8,0.014,11,0.762,35,0.199,36,0.14,37,0.01,38,0.01,43,0.496,44,0.939,49,0.496,56,0.698,60,0.704,61,2.146,62,1.975,63,0.854,65,2.17,67,1.692,69,2.622,70,1.314,71,2.716,72,2.579,76,3.481,77,2.343,80,2.716,100,1.269,886,4.486,887,4.224,888,4.853,889,4.061,890,3.809,891,3.809,892,4.853,893,4.853]],["title/modules/UserModule.html",[0,0.72,894,2.948]],["body/modules/UserModule.html",[0,1.069,2,1.278,3,0.156,4,0.156,5,0.099,7,0.336,8,0.014,11,0.597,13,1.989,35,0.156,36,0.109,37,0.009,38,0.009,67,1.844,84,1.431,85,1.756,86,1.756,87,1.548,88,2.576,89,1.548,93,3.158,94,3.298,95,2.441,96,1.756,97,1.682,100,0.995,391,3.074,422,2.129,450,4.333,795,4.624,807,2.549,833,3.311,858,1.682,886,4.382,889,4.224,890,2.986,894,5.785,895,3.311,896,3.311,897,3.311,898,3.804,899,3.804,900,3.319,901,3.804,902,2.986,903,3.804,904,3.804,905,3.804,906,3.804]],["title/classes/UserResolver.html",[36,0.118,900,2.566]],["body/classes/UserResolver.html",[3,0.153,4,0.153,5,0.097,7,0.293,8,0.014,16,2.208,35,0.153,36,0.107,37,0.009,38,0.009,43,0.38,44,0.786,46,1.978,49,0.664,51,1.627,52,1.279,53,1.182,54,1.314,56,0.674,60,0.871,61,1.646,62,1.515,63,1.057,70,1.627,103,1.206,105,3.456,106,2.914,109,3.361,110,1.978,111,1.206,112,2.083,132,2.767,251,3.003,384,4.359,858,2.655,872,5.106,889,4.195,890,2.922,900,3.269,902,2.922,907,3.24,908,5.208,909,3.723,910,3.723,911,3.723,912,3.723,913,3.723,914,4.532,915,5.208,916,3.723,917,3.723,918,2.684,919,5.208,920,3.24,921,3.24,922,3.723,923,3.723,924,3.723,925,3.723]],["title/classes/UserResolver-1.html",[36,0.099,160,1.917,900,2.151]],["body/classes/UserResolver-1.html",[3,0.172,4,0.172,5,0.109,7,0.308,8,0.014,16,2.398,35,0.172,36,0.121,37,0.009,38,0.009,43,0.429,44,0.854,46,2.231,49,0.578,51,1.767,52,1.112,53,1.284,54,1.428,60,0.609,61,1.856,62,1.709,63,0.996,70,1.137,103,1.36,110,3.005,111,1.36,125,2.231,132,3.005,192,2.814,212,2.828,251,2.611,634,2.677,669,4.118,670,3.028,676,3.654,713,3.028,718,3.654,858,3.325,900,3.55,926,3.654,927,4.199,928,4.199,929,4.199,930,4.199,931,4.199,932,5.657,933,4.199,934,4.199,935,5.657]],["title/injectables/UserService.html",[39,1.069,889,2.418]],["body/injectables/UserService.html",[3,0.151,4,0.151,5,0.096,7,0.318,8,0.014,11,0.577,35,0.151,36,0.106,37,0.009,38,0.009,39,1.35,41,1.559,43,0.376,44,0.779,46,2.743,49,0.661,51,1.613,52,1.173,53,1.172,54,1.303,56,0.579,60,0.865,62,1.497,63,1.05,69,2.343,115,1.86,117,1.626,148,1.236,169,2.493,212,2.638,225,2.384,251,2.987,270,2.464,306,2.889,384,4.336,391,1.86,462,2.464,727,3.201,728,5.547,735,2.886,739,3.201,858,2.283,889,3.053,902,2.886,914,4.494,920,3.201,921,3.201,936,3.201,937,5.163,938,5.079,939,3.678,940,5.163,941,3.678,942,3.678,943,3.678,944,5.163,945,3.678,946,3.201,947,3.678,948,5.163,949,3.678,950,3.678,951,3.678]],["title/coverage.html",[952,4.36]],["body/coverage.html",[5,0.041,8,0.014,36,0.212,37,0.004,38,0.004,39,1.68,40,1.131,42,1.365,53,0.356,65,2.011,66,1.131,68,1.365,74,0.984,78,1.231,87,2.428,101,1.131,104,1.365,113,1.365,118,1.932,119,1.486,121,2.312,144,0.927,148,1.366,151,1.231,152,1.231,156,1.131,184,5.594,210,1.231,211,1.365,218,0.927,223,0.927,264,1.051,268,1.365,269,1.365,292,1.051,316,1.231,317,1.365,318,1.365,331,1.131,375,1.231,376,1.365,377,1.365,384,1.051,385,1.365,386,1.365,391,1.344,408,1.231,409,1.365,410,1.365,418,1.365,419,1.365,422,0.878,426,4.131,472,1.365,477,6.482,509,1.131,510,1.365,512,0.984,520,1.365,523,1.131,524,1.365,526,0.984,528,1.231,537,1.131,539,1.365,542,1.365,550,1.051,551,1.231,562,1.365,577,1.131,588,1.78,590,1.131,591,1.365,593,0.984,595,1.231,604,1.131,606,1.365,609,1.365,612,1.131,613,1.365,615,0.984,617,1.231,626,1.131,628,1.365,631,1.365,634,1.351,635,2.312,639,1.78,650,0.984,654,1.365,663,1.131,664,1.365,669,0.878,671,1.231,677,2.312,678,2.312,711,1.131,717,1.365,724,1.365,742,1.131,743,1.365,745,0.984,747,1.231,756,1.131,758,1.365,761,1.365,764,2.085,765,2.312,767,1.131,768,1.365,770,0.984,772,1.231,781,1.131,783,1.365,786,1.365,789,2.312,807,1.78,826,1.365,843,1.365,844,1.365,858,1.527,859,2.312,873,1.365,886,1.131,887,1.365,889,0.927,891,1.231,900,1.667,907,1.365,926,1.365,936,1.365,952,1.231,953,1.568,954,1.568,955,1.568,956,7.459,957,1.365,958,7.857,959,1.365,960,1.365,961,1.365,962,4.58,963,7.29,964,4.549,965,1.365,966,1.365,967,1.365,968,1.365,969,1.365,970,4.94,971,2.656,972,2.656,973,1.365,974,3.455,975,1.365,976,1.365,977,1.365,978,1.365,979,1.365,980,2.656,981,1.365,982,1.365,983,1.365,984,1.365,985,1.365,986,1.365,987,1.365,988,1.365,989,1.365,990,1.365,991,1.365,992,1.365,993,1.568,994,1.568,995,1.365,996,2.711,997,2.711,998,1.365,999,2.085,1000,2.085,1001,1.365,1002,3.538,1003,1.365,1004,1.365,1005,1.365,1006,1.568]],["title/dependencies.html",[84,1.847,1007,2.982]],["body/dependencies.html",[8,0.014,10,3.302,11,0.719,12,3.985,36,0.172,37,0.01,38,0.01,77,2.211,84,1.723,111,1.483,148,1.539,220,3.302,405,3.985,425,3.985,462,3.068,574,3.594,576,3.985,946,3.985,1008,5.991,1009,4.579,1010,4.579,1011,4.579,1012,5.991,1013,6.678,1014,4.579,1015,4.579,1016,4.579,1017,4.579,1018,4.579,1019,4.579,1020,4.579,1021,4.579,1022,4.579,1023,4.579,1024,4.579,1025,4.579,1026,3.985,1027,4.579,1028,4.579,1029,4.579,1030,4.579,1031,4.579,1032,4.579,1033,4.579,1034,4.579,1035,4.579,1036,4.579,1037,4.579,1038,4.579,1039,4.579,1040,4.579]],["title/miscellaneous/enumerations.html",[1041,2.151,1042,4.274]],["body/miscellaneous/enumerations.html",[8,0.014,37,0.01,38,0.01,43,0.49,117,2.73,190,4.801,401,4.846,1041,3.01,1042,4.174,1043,6.174,1044,4.796,1045,6.174,1046,4.796,1047,6.174,1048,4.796,1049,6.174,1050,6.174,1051,6.174,1052,6.174,1053,6.174,1054,6.174,1055,6.174,1056,6.174,1057,4.796,1058,6.174,1059,6.174,1060,5.373,1061,6.174]],["title/miscellaneous/functions.html",[1041,2.151,1062,4.274]],["body/miscellaneous/functions.html",[8,0.012,37,0.009,38,0.009,43,0.414,51,1.964,52,1.236,53,1.427,54,1.586,56,0.62,60,0.802,87,3.398,151,4.339,152,4.339,174,2.926,188,2.4,190,3.269,239,5.297,477,3.185,588,3.704,650,3.47,657,3.185,957,3.532,959,3.532,960,3.532,965,3.532,966,3.532,968,3.532,973,3.532,976,3.532,978,3.532,981,3.532,996,3.185,997,4.934,999,3.185,1000,4.339,1041,2.547,1062,3.532,1063,7.781,1064,4.811,1065,3.532,1066,4.059,1067,4.059,1068,4.059,1069,5.528,1070,5.528,1071,4.059,1072,4.059]],["title/index.html",[43,0.35,1073,3.426,1074,3.426]],["body/index.html",[8,0.013,32,1.25,33,2.145,37,0.004,38,0.004,59,0.804,84,0.54,88,0.609,97,0.635,116,2.334,117,2.699,122,1.266,148,0.828,160,0.804,182,1.036,195,2.334,202,1.25,229,1.128,250,1.25,252,1.128,306,0.804,339,0.902,340,0.902,355,0.85,356,0.963,371,1.128,382,1.036,391,0.727,407,1.25,496,5.647,497,1.036,500,1.25,504,1.036,506,1.25,544,3.724,565,4.362,611,2.145,633,4.102,634,1.972,652,3.012,660,1.547,763,4.629,788,3.863,794,1.934,802,2.817,858,2.699,872,3.699,952,1.128,1026,1.25,1060,1.25,1075,3.237,1076,3.237,1077,3.237,1078,1.437,1079,1.128,1080,2.465,1081,2.54,1082,1.128,1083,4.007,1084,2.54,1085,2.465,1086,1.437,1087,1.934,1088,1.437,1089,1.437,1090,1.437,1091,4.362,1092,3.237,1093,1.128,1094,1.437,1095,1.437,1096,3.699,1097,1.437,1098,1.934,1099,1.437,1100,1.437,1101,1.437,1102,1.437,1103,1.437,1104,1.437,1105,1.437,1106,1.437,1107,1.437,1108,1.934,1109,1.437,1110,1.437,1111,3.237,1112,1.437,1113,1.437,1114,1.437,1115,1.437,1116,2.334,1117,2.465,1118,2.817,1119,1.437,1120,1.128,1121,1.437,1122,1.437,1123,1.437,1124,1.437,1125,1.437,1126,1.437,1127,2.145,1128,2.465,1129,1.437,1130,1.25,1131,3.838,1132,3.635,1133,1.437,1134,5.319,1135,2.465,1136,1.25,1137,3.237,1138,3.237,1139,1.437,1140,2.465,1141,1.437,1142,1.437,1143,1.437,1144,1.437,1145,1.437,1146,2.465,1147,1.437,1148,1.437,1149,1.437,1150,3.237,1151,1.437,1152,1.437,1153,3.237,1154,2.465,1155,2.465,1156,1.437,1157,4.713,1158,4.713,1159,1.437,1160,3.237,1161,1.437,1162,1.437,1163,1.437,1164,3.838,1165,3.398,1166,1.437,1167,1.437,1168,2.465,1169,1.437,1170,2.465,1171,4.319,1172,1.437,1173,1.437,1174,1.437,1175,2.465,1176,2.465,1177,1.437,1178,1.437,1179,1.437,1180,1.437,1181,1.437,1182,3.237,1183,1.437,1184,2.465,1185,4.319,1186,4.666,1187,1.437,1188,1.437,1189,2.465,1190,2.817,1191,2.465,1192,2.465,1193,1.437,1194,2.465,1195,1.437,1196,1.437,1197,1.437,1198,2.465,1199,1.437,1200,1.437,1201,1.437,1202,1.437,1203,1.437,1204,2.465,1205,1.437,1206,1.437,1207,1.437,1208,3.838,1209,3.237,1210,1.437,1211,1.437,1212,1.437,1213,2.465,1214,1.437,1215,1.437,1216,1.128,1217,4.362,1218,1.437,1219,1.437,1220,2.465,1221,1.437,1222,3.237,1223,3.237,1224,1.437,1225,1.437,1226,1.437,1227,2.465,1228,2.465,1229,1.437,1230,1.437,1231,1.437,1232,1.437,1233,1.128,1234,1.437,1235,2.465,1236,1.437,1237,2.465,1238,1.437,1239,1.437,1240,1.128,1241,1.128,1242,1.437,1243,2.465,1244,1.437,1245,2.465,1246,1.437,1247,1.437,1248,1.437,1249,2.465,1250,1.437,1251,1.437,1252,1.437,1253,1.437,1254,1.437,1255,1.437,1256,1.437,1257,1.437,1258,1.437,1259,2.465,1260,3.237,1261,1.437,1262,1.128,1263,1.128,1264,1.437,1265,1.437,1266,1.128,1267,3.759,1268,1.437,1269,2.465,1270,3.237,1271,1.437,1272,1.437,1273,1.437,1274,1.934,1275,1.437,1276,1.437,1277,1.437,1278,1.437,1279,1.25,1280,1.437,1281,1.437,1282,1.437,1283,2.465,1284,1.437,1285,1.437,1286,1.437,1287,2.465,1288,1.437,1289,1.437,1290,2.465,1291,2.465,1292,1.437,1293,1.437,1294,1.036,1295,1.036,1296,1.437,1297,1.437,1298,1.437,1299,1.437,1300,1.437,1301,2.465,1302,2.465,1303,1.437,1304,1.437,1305,1.437,1306,1.437,1307,1.25,1308,1.128,1309,1.437,1310,1.437,1311,1.437,1312,1.437,1313,1.437,1314,1.437,1315,1.437,1316,2.465,1317,1.437,1318,1.437,1319,1.437,1320,2.465,1321,1.437,1322,1.437,1323,1.128,1324,1.437,1325,2.465,1326,1.437,1327,1.437,1328,1.437,1329,1.437,1330,2.465,1331,1.437,1332,1.437,1333,1.437,1334,1.437,1335,1.437,1336,2.465,1337,1.128,1338,1.437,1339,2.465,1340,2.465,1341,1.437,1342,1.437,1343,1.437,1344,1.437,1345,1.437,1346,1.437]],["title/modules.html",[2,1.867]],["body/modules.html",[1,3.034,2,1.521,8,0.01,37,0.01,38,0.01,83,3.265,93,2.002,94,2.09,245,3.554,450,2.677,515,3.265,531,3.265,545,3.265,549,3.034,598,3.265,620,3.265,705,3.265,750,3.265,775,3.265,795,3.034,894,3.265,1295,5.768,1347,7.519,1348,5.902,1349,8.222,1350,8,1351,8]],["title/overview.html",[1352,4.835]],["body/overview.html",[0,0.486,1,3.388,2,0.927,8,0.014,37,0.007,38,0.007,41,1.169,67,0.962,74,3.174,83,4.928,84,1.038,85,1.273,86,1.273,87,1.123,88,1.169,89,1.123,90,2.401,91,2.401,92,2.401,93,3.378,94,3.294,95,1.932,96,1.273,97,1.22,103,0.894,120,1.273,160,1.544,260,2.401,261,2.401,262,2.401,263,2.401,264,4.446,450,3.776,512,3.174,515,4.069,516,2.401,517,2.401,526,3.174,531,4.928,532,2.401,533,2.401,545,4.928,546,2.401,547,2.401,548,2.401,549,3.388,550,3.388,593,3.174,598,4.928,599,2.401,600,2.401,615,3.174,620,4.928,621,2.401,622,2.401,669,2.829,705,5.302,706,2.401,707,2.401,708,2.401,745,3.174,750,4.928,751,2.401,753,2.401,770,3.174,775,4.928,776,2.401,777,2.401,795,3.388,889,2.99,894,5.419,895,2.401,896,2.401,897,2.401,995,2.401,1307,2.401,1352,2.401,1353,2.759,1354,2.759,1355,2.759,1356,2.759]],["title/properties.html",[122,1.921,1007,2.982]],["body/properties.html",[8,0.013,37,0.011,38,0.011,122,2.238,382,4.126,544,3.835,788,3.835,1132,4.126,1136,4.98,1190,4.98,1267,4.98,1279,4.98,1294,4.126,1357,5.723,1358,5.723,1359,5.723,1360,5.723,1361,5.723,1362,5.723,1363,5.723,1364,5.723,1365,5.723,1366,5.723]],["title/miscellaneous/variables.html",[428,3.854,1041,2.151]],["body/miscellaneous/variables.html",[5,0.051,8,0.014,16,1.719,19,2.787,21,2.787,23,2.787,24,2.787,25,2.787,26,2.787,27,2.787,28,2.787,37,0.005,38,0.005,43,0.201,52,0.386,53,1.581,54,0.808,56,0.681,58,1.316,78,2.513,148,1.958,188,4.529,190,4.486,292,2.717,422,1.792,426,5.468,428,1.542,480,2.309,528,2.513,551,1.542,553,2.787,554,2.787,555,2.787,556,2.787,557,2.787,558,2.787,559,2.787,560,2.787,588,2.146,595,2.513,617,2.513,634,1.253,660,2.545,671,2.513,747,2.513,772,2.513,803,1.316,858,1.416,891,2.513,918,2.309,961,1.709,962,6.143,967,1.709,969,1.709,975,1.709,977,1.709,979,1.709,982,1.709,983,1.709,984,1.709,985,1.709,986,1.709,987,1.709,988,1.709,989,1.709,990,1.709,991,1.709,992,1.709,996,1.542,997,2.513,998,2.787,999,1.542,1000,2.513,1001,2.787,1002,4.483,1003,3.529,1004,3.529,1005,2.787,1041,1.233,1064,1.709,1065,1.709,1083,1.416,1116,2.309,1130,1.709,1165,1.416,1367,1.964,1368,1.964,1369,1.964,1370,1.964,1371,1.964,1372,1.964,1373,1.964,1374,1.964,1375,1.964,1376,5.826,1377,1.964,1378,1.964,1379,1.964,1380,1.964,1381,4.676,1382,1.542,1383,4.676,1384,3.202,1385,1.964,1386,1.542,1387,3.182,1388,1.542,1389,1.964,1390,1.316,1391,1.542,1392,1.964,1393,3.67,1394,1.416,1395,1.542,1396,1.416,1397,1.964,1398,1.964,1399,1.964,1400,1.964,1401,1.542,1402,1.542,1403,1.964,1404,1.964,1405,1.964,1406,1.964,1407,1.964,1408,1.964,1409,1.964,1410,6.461,1411,3.202,1412,3.202,1413,3.202,1414,3.202,1415,3.202,1416,3.202,1417,3.202,1418,3.202,1419,3.202,1420,3.202,1421,3.202,1422,1.964,1423,1.964,1424,3.202,1425,1.964,1426,3.202,1427,3.202,1428,1.964,1429,3.202,1430,3.202,1431,3.202,1432,3.202,1433,1.964,1434,1.964,1435,1.964,1436,1.964,1437,1.964,1438,1.964,1439,1.964,1440,3.202]],["title/additional-documentation/running-migrations-and-seeders.html",[446,1.866,1390,1.734,1396,1.866,1441,2.252,1442,2.031]],["body/additional-documentation/running-migrations-and-seeders.html",[0,0.4,5,0.161,8,0.012,37,0.006,38,0.006,51,0.71,52,0.708,54,0.909,58,2.997,84,1.355,116,1.639,118,0.889,120,1.049,127,1.784,144,2.13,148,1.982,160,1.272,174,1.639,182,1.639,195,2.597,223,1.344,308,3.88,323,2.413,355,1.344,356,1.523,422,1.272,429,1.784,446,4.457,468,1.784,480,3.999,491,4.353,497,1.639,504,1.639,544,3.409,634,1.749,660,4.331,788,2.997,803,3.716,813,2.827,858,2.733,918,1.639,938,1.784,1079,2.827,1081,2.827,1082,1.784,1083,4.457,1084,2.827,1087,3.51,1091,5.032,1093,1.784,1096,4.63,1098,1.784,1108,1.784,1116,4.457,1120,2.827,1132,1.639,1165,2.597,1186,1.784,1216,3.993,1217,1.784,1233,2.827,1240,1.784,1241,1.784,1262,1.784,1263,3.51,1266,1.784,1274,1.784,1294,1.639,1295,1.639,1308,1.784,1323,1.784,1337,1.784,1348,1.784,1382,5.591,1386,5.591,1387,3.51,1388,3.993,1390,1.523,1391,1.784,1393,2.827,1394,5.567,1395,1.784,1396,1.639,1401,1.784,1402,1.784,1442,1.784,1443,1.978,1444,1.978,1445,1.978,1446,1.978,1447,1.978,1448,1.978,1449,1.978,1450,1.978,1451,1.978,1452,3.892,1453,1.978,1454,1.978,1455,1.978,1456,3.134,1457,3.892,1458,1.978,1459,1.978,1460,3.892,1461,3.134,1462,1.978,1463,3.134,1464,3.134,1465,1.978,1466,3.892,1467,3.134,1468,3.892,1469,1.978,1470,1.978,1471,1.978,1472,1.978,1473,3.134,1474,3.134,1475,3.134,1476,1.978,1477,1.978,1478,1.978,1479,1.978,1480,3.134,1481,1.978,1482,1.978,1483,1.978,1484,1.978,1485,1.978,1486,1.978,1487,1.978,1488,1.978,1489,3.134,1490,1.978,1491,1.978,1492,1.978,1493,1.978,1494,1.978,1495,1.978,1496,1.978,1497,1.978,1498,1.978,1499,1.978,1500,1.978,1501,1.978,1502,1.978,1503,1.978,1504,1.978,1505,1.978,1506,1.978,1507,1.978,1508,1.978,1509,1.978,1510,1.978,1511,1.978,1512,1.978,1513,1.978]],["title/additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html",[1118,2.252,1127,2.252,1390,1.734,1394,1.866,1441,2.252]],["body/additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html",[0,0.4,5,0.161,8,0.012,37,0.006,38,0.006,51,0.71,52,0.708,54,0.909,58,2.997,84,1.355,116,1.639,118,0.889,120,1.049,127,1.784,144,2.13,148,1.982,160,1.272,174,1.639,182,1.639,195,2.597,223,1.344,308,3.88,323,2.413,355,1.344,356,1.523,422,1.272,429,1.784,446,4.457,468,1.784,480,3.999,491,4.353,497,1.639,504,1.639,544,3.409,634,1.749,660,4.331,788,2.997,803,3.716,813,2.827,858,2.733,918,1.639,938,1.784,1079,2.827,1081,2.827,1082,1.784,1083,4.457,1084,2.827,1087,3.51,1091,5.032,1093,1.784,1096,4.63,1098,1.784,1108,1.784,1116,4.457,1120,2.827,1132,1.639,1165,2.597,1186,1.784,1216,3.993,1217,1.784,1233,2.827,1240,1.784,1241,1.784,1262,1.784,1263,3.51,1266,1.784,1274,1.784,1294,1.639,1295,1.639,1308,1.784,1323,1.784,1337,1.784,1348,1.784,1382,5.591,1386,5.591,1387,3.51,1388,3.993,1390,1.523,1391,1.784,1393,2.827,1394,5.567,1395,1.784,1396,1.639,1401,1.784,1402,1.784,1442,1.784,1443,1.978,1444,1.978,1445,1.978,1446,1.978,1447,1.978,1448,1.978,1449,1.978,1450,1.978,1451,1.978,1452,3.892,1453,1.978,1454,1.978,1455,1.978,1456,3.134,1457,3.892,1458,1.978,1459,1.978,1460,3.892,1461,3.134,1462,1.978,1463,3.134,1464,3.134,1465,1.978,1466,3.892,1467,3.134,1468,3.892,1469,1.978,1470,1.978,1471,1.978,1472,1.978,1473,3.134,1474,3.134,1475,3.134,1476,1.978,1477,1.978,1478,1.978,1479,1.978,1480,3.134,1481,1.978,1482,1.978,1483,1.978,1484,1.978,1485,1.978,1486,1.978,1487,1.978,1488,1.978,1489,3.134,1490,1.978,1491,1.978,1492,1.978,1493,1.978,1494,1.978,1495,1.978,1496,1.978,1497,1.978,1498,1.978,1499,1.978,1500,1.978,1501,1.978,1502,1.978,1503,1.978,1504,1.978,1505,1.978,1506,1.978,1507,1.978,1508,1.978,1509,1.978,1510,1.978,1511,1.978,1512,1.978,1513,1.978]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"entities/Permission.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"entities/Role.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["0",{"_index":477,"title":{},"body":{"classes/DatabaseUtil.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["0.0.1",{"_index":1358,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":1024,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":1035,"title":{},"body":{"dependencies.html":{}}}],["0.3.20",{"_index":1038,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1023,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":958,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":956,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":964,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":970,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":974,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":972,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":971,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":980,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":160,"title":{"classes/Organization-1.html":{},"classes/User-1.html":{},"classes/UserResolver-1.html":{}},"body":{"entities/BaseEntity.html":{},"index.html":{},"overview.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["10",{"_index":481,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["10.0.0",{"_index":1013,"title":{},"body":{"dependencies.html":{}}}],["10.4.15",{"_index":1015,"title":{},"body":{"dependencies.html":{}}}],["11.0.0",{"_index":1018,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":502,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["12.2.2",{"_index":1012,"title":{},"body":{"dependencies.html":{}}}],["13",{"_index":1355,"title":{},"body":{"overview.html":{}}}],["16.10.0",{"_index":1027,"title":{},"body":{"dependencies.html":{}}}],["16.4.7",{"_index":1025,"title":{},"body":{"dependencies.html":{}}}],["17",{"_index":1353,"title":{},"body":{"overview.html":{}}}],["17.0.33",{"_index":1020,"title":{},"body":{"dependencies.html":{}}}],["17.13.3",{"_index":1030,"title":{},"body":{"dependencies.html":{}}}],["17.7.2",{"_index":1040,"title":{},"body":{"dependencies.html":{}}}],["19",{"_index":508,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["2",{"_index":355,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/DatabaseUtil.html":{},"modules/GraphQLMicroserviceModule.html":{},"entities/OrganizationMetadata.html":{},"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["2.9.3",{"_index":1008,"title":{},"body":{"dependencies.html":{}}}],["22",{"_index":1089,"title":{},"body":{"index.html":{}}}],["26",{"_index":1356,"title":{},"body":{"overview.html":{}}}],["3",{"_index":504,"title":{},"body":{"classes/DatabaseUtil.html":{},"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["3.3.0",{"_index":1014,"title":{},"body":{"dependencies.html":{}}}],["3d",{"_index":1256,"title":{},"body":{"index.html":{}}}],["4",{"_index":1266,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["4.11.3",{"_index":1010,"title":{},"body":{"dependencies.html":{}}}],["48",{"_index":478,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["5",{"_index":356,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"entities/OrganizationMetadata.html":{},"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["5.0",{"_index":704,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["5.1.1",{"_index":1021,"title":{},"body":{"dependencies.html":{}}}],["5.4.2",{"_index":1029,"title":{},"body":{"dependencies.html":{}}}],["5432",{"_index":438,"title":{},"body":{"classes/DataSource.html":{}}}],["6",{"_index":1307,"title":{},"body":{"index.html":{},"overview.html":{}}}],["7",{"_index":506,"title":{},"body":{"classes/DatabaseUtil.html":{},"index.html":{}}}],["7${randombytes.substring(1",{"_index":503,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["7.8.1",{"_index":1037,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":500,"title":{},"body":{"classes/DatabaseUtil.html":{},"index.html":{}}}],["8.13.1",{"_index":1032,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":1354,"title":{},"body":{"overview.html":{}}}],["9996",{"_index":191,"title":{},"body":{"entities/BaseEntity.html":{}}}],["__dirname",{"_index":1399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["abstract",{"_index":158,"title":{},"body":{"entities/BaseEntity.html":{}}}],["access",{"_index":1160,"title":{},"body":{"index.html":{}}}],["accessors",{"_index":275,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["accurate",{"_index":1231,"title":{},"body":{"index.html":{}}}],["action",{"_index":417,"title":{},"body":{"classes/CreateUserTable1741519705062.html":{}}}],["actions",{"_index":1192,"title":{},"body":{"index.html":{}}}],["add",{"_index":365,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["additional",{"_index":1390,"title":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}},"body":{"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["addresses",{"_index":1197,"title":{},"body":{"index.html":{}}}],["admin",{"_index":1060,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["against",{"_index":1178,"title":{},"body":{"index.html":{}}}],["alias",{"_index":1381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allow_interest_earning",{"_index":358,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"entities/OrganizationMetadata.html":{}}}],["allowing",{"_index":1209,"title":{},"body":{"index.html":{}}}],["allowinterestearning",{"_index":679,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["already",{"_index":1250,"title":{},"body":{"index.html":{}}}],["amounts",{"_index":1268,"title":{},"body":{"index.html":{}}}],["angular",{"_index":1152,"title":{},"body":{"index.html":{}}}],["api",{"_index":1138,"title":{},"body":{"index.html":{}}}],["apollo/gateway",{"_index":576,"title":{},"body":{"modules/GraphQLGatewayModule.html":{},"dependencies.html":{}}}],["apollo/gateway/src/config",{"_index":850,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["apollo/server",{"_index":1009,"title":{},"body":{"dependencies.html":{}}}],["apollo/subgraph",{"_index":1011,"title":{},"body":{"dependencies.html":{}}}],["apollofederationdriver",{"_index":584,"title":{},"body":{"modules/GraphQLMicroserviceModule.html":{}}}],["apollofederationdriverconfig",{"_index":585,"title":{},"body":{"modules/GraphQLMicroserviceModule.html":{}}}],["apollogatewaydriver",{"_index":572,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["apollogatewaydriverconfig",{"_index":573,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["app",{"_index":229,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/SeederModule.html":{},"index.html":{}}}],["app.close",{"_index":816,"title":{},"body":{"modules/SeederModule.html":{}}}],["app.connectmicroservice",{"_index":231,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["app.get(service",{"_index":814,"title":{},"body":{"modules/SeederModule.html":{}}}],["app.listen(port",{"_index":242,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["app.startallmicroservices",{"_index":238,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["app.useglobalpipes(new",{"_index":241,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["appconfigmodule",{"_index":1,"title":{"modules/AppConfigModule.html":{}},"body":{"modules/AppConfigModule.html":{},"modules/CommonModule.html":{},"modules.html":{},"overview.html":{}}}],["appconfigservice",{"_index":40,"title":{"injectables/AppConfigService.html":{}},"body":{"injectables/AppConfigService.html":{},"classes/ConfigHelper.html":{},"coverage.html":{}}}],["appconfigservice(configservice",{"_index":297,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["appcontext",{"_index":294,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["appcontext.get(configservice",{"_index":296,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["applied",{"_index":1470,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["applies",{"_index":1459,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["appropriate",{"_index":1341,"title":{},"body":{"index.html":{}}}],["apps",{"_index":1130,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["apps/${microservice}/src/typeorm.data",{"_index":1400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/${schema}/**/**.entity{.ts,.js",{"_index":445,"title":{},"body":{"classes/DataSource.html":{}}}],["apps/${schema}/src/migrations/**/*{.ts,.js",{"_index":447,"title":{},"body":{"classes/DataSource.html":{}}}],["apps/${schema}/src/subscriber/**/*{.ts,.js",{"_index":449,"title":{},"body":{"classes/DataSource.html":{}}}],["apps/.../gateway.module.ts",{"_index":1377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../main.ts",{"_index":1063,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../typeorm.data",{"_index":1376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps//src/seeder/seeder.ts",{"_index":1475,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["apps/auth/src/auth.controller.ts",{"_index":68,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["apps/auth/src/auth.controller.ts:11",{"_index":73,"title":{},"body":{"controllers/AuthController.html":{}}}],["apps/auth/src/auth.module.ts",{"_index":98,"title":{},"body":{"modules/AuthModule.html":{}}}],["apps/auth/src/auth.service.ts",{"_index":113,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["apps/auth/src/auth.service.ts:5",{"_index":114,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/auth/src/main.ts",{"_index":957,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/auth/src/resolvers/auth.resolver.ts",{"_index":104,"title":{},"body":{"classes/AuthResolver.html":{},"coverage.html":{}}}],["apps/auth/src/resolvers/auth.resolver.ts:6",{"_index":108,"title":{},"body":{"classes/AuthResolver.html":{}}}],["apps/documentation/src/documentation.controller.ts",{"_index":510,"title":{},"body":{"controllers/DocumentationController.html":{},"coverage.html":{}}}],["apps/documentation/src/documentation.controller.ts:9",{"_index":511,"title":{},"body":{"controllers/DocumentationController.html":{}}}],["apps/documentation/src/documentation.module.ts",{"_index":518,"title":{},"body":{"modules/DocumentationModule.html":{}}}],["apps/documentation/src/documentation.service.ts",{"_index":520,"title":{},"body":{"injectables/DocumentationService.html":{},"coverage.html":{}}}],["apps/documentation/src/documentation.service.ts:5",{"_index":521,"title":{},"body":{"injectables/DocumentationService.html":{}}}],["apps/documentation/src/main.ts",{"_index":959,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/escrow/src/escrow.controller.ts",{"_index":524,"title":{},"body":{"controllers/EscrowController.html":{},"coverage.html":{}}}],["apps/escrow/src/escrow.controller.ts:11",{"_index":525,"title":{},"body":{"controllers/EscrowController.html":{}}}],["apps/escrow/src/escrow.module.ts",{"_index":535,"title":{},"body":{"modules/EscrowModule.html":{}}}],["apps/escrow/src/escrow.service.ts",{"_index":542,"title":{},"body":{"injectables/EscrowService.html":{},"coverage.html":{}}}],["apps/escrow/src/escrow.service.ts:5",{"_index":543,"title":{},"body":{"injectables/EscrowService.html":{}}}],["apps/escrow/src/main.ts",{"_index":960,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/escrow/src/resolvers/escrow.resolver.ts",{"_index":539,"title":{},"body":{"classes/EscrowResolver.html":{},"coverage.html":{}}}],["apps/escrow/src/resolvers/escrow.resolver.ts:6",{"_index":541,"title":{},"body":{"classes/EscrowResolver.html":{}}}],["apps/escrow/src/typeorm.data",{"_index":961,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/gateway/src/gateway.module.ts",{"_index":551,"title":{},"body":{"modules/GatewayModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/gateway/src/gateway.service.ts",{"_index":562,"title":{},"body":{"injectables/GatewayService.html":{},"coverage.html":{}}}],["apps/gateway/src/gateway.service.ts:4",{"_index":563,"title":{},"body":{"injectables/GatewayService.html":{}}}],["apps/gateway/src/gateway.service.ts:7",{"_index":564,"title":{},"body":{"injectables/GatewayService.html":{}}}],["apps/gateway/src/main.ts",{"_index":965,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/media/src/main.ts",{"_index":966,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/media/src/media.controller.ts",{"_index":591,"title":{},"body":{"controllers/MediaController.html":{},"coverage.html":{}}}],["apps/media/src/media.controller.ts:11",{"_index":592,"title":{},"body":{"controllers/MediaController.html":{}}}],["apps/media/src/media.module.ts",{"_index":602,"title":{},"body":{"modules/MediaModule.html":{}}}],["apps/media/src/media.service.ts",{"_index":609,"title":{},"body":{"injectables/MediaService.html":{},"coverage.html":{}}}],["apps/media/src/media.service.ts:5",{"_index":610,"title":{},"body":{"injectables/MediaService.html":{}}}],["apps/media/src/resolvers/media.resolver.ts",{"_index":606,"title":{},"body":{"classes/MediaResolver.html":{},"coverage.html":{}}}],["apps/media/src/resolvers/media.resolver.ts:6",{"_index":608,"title":{},"body":{"classes/MediaResolver.html":{}}}],["apps/media/src/typeorm.data",{"_index":967,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/notification/src/main.ts",{"_index":968,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/notification/src/notification.controller.ts",{"_index":613,"title":{},"body":{"controllers/NotificationController.html":{},"coverage.html":{}}}],["apps/notification/src/notification.controller.ts:11",{"_index":614,"title":{},"body":{"controllers/NotificationController.html":{}}}],["apps/notification/src/notification.module.ts",{"_index":624,"title":{},"body":{"modules/NotificationModule.html":{}}}],["apps/notification/src/notification.service.ts",{"_index":631,"title":{},"body":{"injectables/NotificationService.html":{},"coverage.html":{}}}],["apps/notification/src/notification.service.ts:5",{"_index":632,"title":{},"body":{"injectables/NotificationService.html":{}}}],["apps/notification/src/resolvers/notification.resolver.ts",{"_index":628,"title":{},"body":{"classes/NotificationResolver.html":{},"coverage.html":{}}}],["apps/notification/src/resolvers/notification.resolver.ts:6",{"_index":630,"title":{},"body":{"classes/NotificationResolver.html":{}}}],["apps/notification/src/typeorm.data",{"_index":969,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/organization/src/entities/external/user.entity.ts",{"_index":873,"title":{},"body":{"classes/User-1.html":{},"coverage.html":{}}}],["apps/organization/src/entities/external/user.entity.ts:10",{"_index":874,"title":{},"body":{"classes/User-1.html":{}}}],["apps/organization/src/entities/external/user.entity.ts:14",{"_index":878,"title":{},"body":{"classes/User-1.html":{}}}],["apps/organization/src/entities/external/user.entity.ts:18",{"_index":876,"title":{},"body":{"classes/User-1.html":{}}}],["apps/organization/src/entities/organization",{"_index":677,"title":{},"body":{"entities/OrganizationMetadata.html":{},"coverage.html":{}}}],["apps/organization/src/entities/organization.entity.ts",{"_index":635,"title":{},"body":{"entities/Organization.html":{},"coverage.html":{}}}],["apps/organization/src/entities/organization.entity.ts:12",{"_index":644,"title":{},"body":{"entities/Organization.html":{}}}],["apps/organization/src/entities/organization.entity.ts:16",{"_index":648,"title":{},"body":{"entities/Organization.html":{}}}],["apps/organization/src/entities/organization.entity.ts:20",{"_index":647,"title":{},"body":{"entities/Organization.html":{}}}],["apps/organization/src/entities/organization.entity.ts:24",{"_index":638,"title":{},"body":{"entities/Organization.html":{}}}],["apps/organization/src/entities/organization.entity.ts:28",{"_index":645,"title":{},"body":{"entities/Organization.html":{}}}],["apps/organization/src/entities/organization.entity.ts:32",{"_index":642,"title":{},"body":{"entities/Organization.html":{}}}],["apps/organization/src/main.ts",{"_index":973,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/organization/src/migrations/1741518145374",{"_index":317,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"coverage.html":{}}}],["apps/organization/src/organization.controller.ts",{"_index":664,"title":{},"body":{"controllers/OrganizationController.html":{},"coverage.html":{}}}],["apps/organization/src/organization.controller.ts:11",{"_index":668,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["apps/organization/src/organization.controller.ts:16",{"_index":667,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["apps/organization/src/organization.module.ts",{"_index":709,"title":{},"body":{"modules/OrganizationModule.html":{}}}],["apps/organization/src/organization.service.ts",{"_index":724,"title":{},"body":{"injectables/OrganizationService.html":{},"coverage.html":{}}}],["apps/organization/src/organization.service.ts:14",{"_index":734,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["apps/organization/src/organization.service.ts:18",{"_index":730,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["apps/organization/src/organization.service.ts:24",{"_index":733,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["apps/organization/src/organization.service.ts:8",{"_index":729,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["apps/organization/src/resolvers/external/user.resolver.ts",{"_index":926,"title":{},"body":{"classes/UserResolver-1.html":{},"coverage.html":{}}}],["apps/organization/src/resolvers/external/user.resolver.ts:11",{"_index":930,"title":{},"body":{"classes/UserResolver-1.html":{}}}],["apps/organization/src/resolvers/external/user.resolver.ts:7",{"_index":927,"title":{},"body":{"classes/UserResolver-1.html":{}}}],["apps/organization/src/resolvers/organization.resolver.ts",{"_index":717,"title":{},"body":{"classes/OrganizationResolver.html":{},"coverage.html":{}}}],["apps/organization/src/resolvers/organization.resolver.ts:10",{"_index":722,"title":{},"body":{"classes/OrganizationResolver.html":{}}}],["apps/organization/src/resolvers/organization.resolver.ts:15",{"_index":720,"title":{},"body":{"classes/OrganizationResolver.html":{}}}],["apps/organization/src/resolvers/organization.resolver.ts:6",{"_index":719,"title":{},"body":{"classes/OrganizationResolver.html":{}}}],["apps/organization/src/typeorm.data",{"_index":975,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/payment/src/main.ts",{"_index":976,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/payment/src/payment.controller.ts",{"_index":743,"title":{},"body":{"controllers/PaymentController.html":{},"coverage.html":{}}}],["apps/payment/src/payment.controller.ts:11",{"_index":744,"title":{},"body":{"controllers/PaymentController.html":{}}}],["apps/payment/src/payment.module.ts",{"_index":754,"title":{},"body":{"modules/PaymentModule.html":{}}}],["apps/payment/src/payment.service.ts",{"_index":761,"title":{},"body":{"injectables/PaymentService.html":{},"coverage.html":{}}}],["apps/payment/src/payment.service.ts:5",{"_index":762,"title":{},"body":{"injectables/PaymentService.html":{}}}],["apps/payment/src/resolvers/payment.resolver.ts",{"_index":758,"title":{},"body":{"classes/PaymentResolver.html":{},"coverage.html":{}}}],["apps/payment/src/resolvers/payment.resolver.ts:6",{"_index":760,"title":{},"body":{"classes/PaymentResolver.html":{}}}],["apps/payment/src/typeorm.data",{"_index":977,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/property/src/main.ts",{"_index":978,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/property/src/property.controller.ts",{"_index":768,"title":{},"body":{"controllers/PropertyController.html":{},"coverage.html":{}}}],["apps/property/src/property.controller.ts:11",{"_index":769,"title":{},"body":{"controllers/PropertyController.html":{}}}],["apps/property/src/property.module.ts",{"_index":779,"title":{},"body":{"modules/PropertyModule.html":{}}}],["apps/property/src/property.service.ts",{"_index":786,"title":{},"body":{"injectables/PropertyService.html":{},"coverage.html":{}}}],["apps/property/src/property.service.ts:5",{"_index":787,"title":{},"body":{"injectables/PropertyService.html":{}}}],["apps/property/src/resolvers/property.resolver.ts",{"_index":783,"title":{},"body":{"classes/PropertyResolver.html":{},"coverage.html":{}}}],["apps/property/src/resolvers/property.resolver.ts:6",{"_index":785,"title":{},"body":{"classes/PropertyResolver.html":{}}}],["apps/property/src/typeorm.data",{"_index":979,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/user/src/dtos/create",{"_index":385,"title":{},"body":{"classes/CreateUserInput.html":{},"coverage.html":{}}}],["apps/user/src/entities/external/organization.entity.ts",{"_index":654,"title":{},"body":{"classes/Organization-1.html":{},"coverage.html":{}}}],["apps/user/src/entities/external/organization.entity.ts:10",{"_index":656,"title":{},"body":{"classes/Organization-1.html":{}}}],["apps/user/src/entities/permission.entity.ts",{"_index":765,"title":{},"body":{"entities/Permission.html":{},"coverage.html":{}}}],["apps/user/src/entities/permission.entity.ts:7",{"_index":766,"title":{},"body":{"entities/Permission.html":{}}}],["apps/user/src/entities/role.entity.ts",{"_index":789,"title":{},"body":{"entities/Role.html":{},"coverage.html":{}}}],["apps/user/src/entities/role.entity.ts:13",{"_index":790,"title":{},"body":{"entities/Role.html":{}}}],["apps/user/src/entities/role.entity.ts:9",{"_index":792,"title":{},"body":{"entities/Role.html":{}}}],["apps/user/src/entities/user.entity.ts",{"_index":859,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["apps/user/src/entities/user.entity.ts:13",{"_index":861,"title":{},"body":{"entities/User.html":{}}}],["apps/user/src/entities/user.entity.ts:17",{"_index":862,"title":{},"body":{"entities/User.html":{}}}],["apps/user/src/entities/user.entity.ts:21",{"_index":860,"title":{},"body":{"entities/User.html":{}}}],["apps/user/src/entities/user.entity.ts:24",{"_index":865,"title":{},"body":{"entities/User.html":{}}}],["apps/user/src/entities/user.entity.ts:28",{"_index":866,"title":{},"body":{"entities/User.html":{}}}],["apps/user/src/entities/user.entity.ts:33",{"_index":868,"title":{},"body":{"entities/User.html":{}}}],["apps/user/src/entities/user.entity.ts:37",{"_index":864,"title":{},"body":{"entities/User.html":{}}}],["apps/user/src/entities/user.entity.ts:40",{"_index":863,"title":{},"body":{"entities/User.html":{}}}],["apps/user/src/main.ts",{"_index":981,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/user/src/migrations/1741519642145",{"_index":376,"title":{},"body":{"classes/CreateRoleTable1741519642145.html":{},"coverage.html":{}}}],["apps/user/src/migrations/1741519705062",{"_index":409,"title":{},"body":{"classes/CreateUserTable1741519705062.html":{},"coverage.html":{}}}],["apps/user/src/resolvers/user.resolver.ts",{"_index":907,"title":{},"body":{"classes/UserResolver.html":{},"coverage.html":{}}}],["apps/user/src/resolvers/user.resolver.ts:11",{"_index":916,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/user/src/resolvers/user.resolver.ts:16",{"_index":917,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/user/src/resolvers/user.resolver.ts:21",{"_index":913,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/user/src/resolvers/user.resolver.ts:7",{"_index":910,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/user/src/seeder/seeder.service.ts",{"_index":826,"title":{},"body":{"injectables/SeederService.html":{},"coverage.html":{}}}],["apps/user/src/seeder/seeder.service.ts:13",{"_index":831,"title":{},"body":{"injectables/SeederService.html":{}}}],["apps/user/src/seeder/seeder.service.ts:17",{"_index":832,"title":{},"body":{"injectables/SeederService.html":{}}}],["apps/user/src/seeder/seeder.service.ts:8",{"_index":829,"title":{},"body":{"injectables/SeederService.html":{}}}],["apps/user/src/typeorm.data",{"_index":982,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/user/src/user.controller.ts",{"_index":887,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["apps/user/src/user.controller.ts:11",{"_index":888,"title":{},"body":{"controllers/UserController.html":{}}}],["apps/user/src/user.module.ts",{"_index":898,"title":{},"body":{"modules/UserModule.html":{}}}],["apps/user/src/user.service.ts",{"_index":936,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["apps/user/src/user.service.ts:15",{"_index":943,"title":{},"body":{"injectables/UserService.html":{}}}],["apps/user/src/user.service.ts:19",{"_index":942,"title":{},"body":{"injectables/UserService.html":{}}}],["apps/user/src/user.service.ts:23",{"_index":941,"title":{},"body":{"injectables/UserService.html":{}}}],["apps/user/src/user.service.ts:9",{"_index":939,"title":{},"body":{"injectables/UserService.html":{}}}],["architecture",{"_index":1150,"title":{},"body":{"index.html":{}}}],["args",{"_index":918,"title":{},"body":{"classes/UserResolver.html":{},"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["arguments",{"_index":1391,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["argv",{"_index":1003,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["array.from(crypto.getrandomvalues(new",{"_index":485,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["ascending",{"_index":209,"title":{},"body":{"entities/BaseEntity.html":{}}}],["async",{"_index":212,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"modules/DatabaseModule.html":{},"modules/GraphQLGatewayModule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{}}}],["attacks",{"_index":1181,"title":{},"body":{"index.html":{}}}],["auditable",{"_index":1272,"title":{},"body":{"index.html":{}}}],["auditing",{"_index":1271,"title":{},"body":{"index.html":{}}}],["auth",{"_index":116,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["auth.controller",{"_index":99,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":75,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth_client",{"_index":1049,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth_host",{"_index":553,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["auth_port",{"_index":1412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authcommand",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authcommand.ping_auth",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{}}}],["authcontroller",{"_index":66,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticated",{"_index":1345,"title":{},"body":{"index.html":{}}}],["authentication",{"_index":1131,"title":{},"body":{"index.html":{}}}],["authmodule",{"_index":83,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1364,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":1156,"title":{},"body":{"index.html":{}}}],["authorized",{"_index":1346,"title":{},"body":{"index.html":{}}}],["authresolver",{"_index":101,"title":{"classes/AuthResolver.html":{}},"body":{"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"coverage.html":{}}}],["authservice",{"_index":74,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["autoloadentities",{"_index":470,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["automate",{"_index":1504,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["automatically",{"_index":1482,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["autoschemafile",{"_index":587,"title":{},"body":{"modules/GraphQLMicroserviceModule.html":{}}}],["availability",{"_index":1245,"title":{},"body":{"index.html":{}}}],["available",{"_index":1348,"title":{},"body":{"modules.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["await",{"_index":225,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"modules/DatabaseModule.html":{},"modules/GraphQLGatewayModule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"injectables/UserService.html":{}}}],["b.tostring(16).padstart(2",{"_index":488,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["back",{"_index":1464,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["backend",{"_index":1076,"title":{},"body":{"index.html":{}}}],["based",{"_index":195,"title":{},"body":{"entities/BaseEntity.html":{},"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["baseentity",{"_index":119,"title":{"entities/BaseEntity.html":{}},"body":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{},"coverage.html":{}}}],["baseentitytypeorm",{"_index":141,"title":{},"body":{"entities/BaseEntity.html":{}}}],["baseentitytypeorm.usedatasource.call(this",{"_index":168,"title":{},"body":{"entities/BaseEntity.html":{}}}],["bcrypt",{"_index":946,"title":{},"body":{"injectables/UserService.html":{},"dependencies.html":{}}}],["before",{"_index":1235,"title":{},"body":{"index.html":{}}}],["beforeinsert",{"_index":142,"title":{},"body":{"entities/BaseEntity.html":{}}}],["being",{"_index":202,"title":{},"body":{"entities/BaseEntity.html":{},"index.html":{}}}],["between",{"_index":1299,"title":{},"body":{"index.html":{}}}],["billing",{"_index":1302,"title":{},"body":{"index.html":{}}}],["bit",{"_index":479,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["blacklisting",{"_index":1174,"title":{},"body":{"index.html":{}}}],["booking",{"_index":1248,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":359,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"entities/OrganizationMetadata.html":{}}}],["bootstrap",{"_index":87,"title":{},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/SeederModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["bootstrap(service",{"_index":797,"title":{},"body":{"modules/SeederModule.html":{}}}],["bootstrapper",{"_index":210,"title":{"classes/Bootstrapper.html":{}},"body":{"classes/Bootstrapper.html":{},"coverage.html":{}}}],["both",{"_index":201,"title":{},"body":{"entities/BaseEntity.html":{}}}],["browse",{"_index":1349,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1350,"title":{},"body":{"modules.html":{}}}],["brute",{"_index":1179,"title":{},"body":{"index.html":{}}}],["build",{"_index":845,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["build(...graphnames",{"_index":846,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["builder.util.ts",{"_index":844,"title":{},"body":{"classes/SubgraphsBuilder.html":{},"coverage.html":{}}}],["builder.util.ts:5",{"_index":847,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["bytes",{"_index":483,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["c",{"_index":1386,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["captcha",{"_index":1183,"title":{},"body":{"index.html":{}}}],["cascade",{"_index":370,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"entities/OrganizationMetadata.html":{}}}],["cascade'})@joincolumn({name",{"_index":695,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["case",{"_index":1318,"title":{},"body":{"index.html":{}}}],["ccpa",{"_index":1203,"title":{},"body":{"index.html":{}}}],["changes",{"_index":1263,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["changing",{"_index":1211,"title":{},"body":{"index.html":{}}}],["character",{"_index":335,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["characters",{"_index":492,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["check",{"_index":176,"title":{},"body":{"entities/BaseEntity.html":{}}}],["class",{"_index":36,"title":{"classes/AuthResolver.html":{},"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"classes/DatabaseUtil.html":{},"classes/EscrowResolver.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"classes/Organization-1.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"classes/SubgraphsBuilder.html":{},"classes/User-1.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{}},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"entities/Permission.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"entities/Role.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classdecorator",{"_index":1072,"title":{},"body":{"miscellaneous/functions.html":{}}}],["classes",{"_index":103,"title":{},"body":{"classes/AuthResolver.html":{},"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"classes/DatabaseUtil.html":{},"classes/EscrowResolver.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"classes/Organization-1.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"classes/SubgraphsBuilder.html":{},"classes/User-1.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"overview.html":{}}}],["clear",{"_index":1223,"title":{},"body":{"index.html":{}}}],["cli",{"_index":1116,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["cli.ts",{"_index":1002,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["client.enum.ts",{"_index":1045,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["clients",{"_index":257,"title":{},"body":{"modules/ClientsModule.html":{}}}],["clientsmodule",{"_index":245,"title":{"modules/ClientsModule.html":{}},"body":{"modules/ClientsModule.html":{},"modules.html":{}}}],["clientsmoduleoptions",{"_index":255,"title":{},"body":{"modules/ClientsModule.html":{}}}],["cluster_authmodule",{"_index":90,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":91,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":92,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_commonmodule",{"_index":260,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_exports",{"_index":261,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_imports",{"_index":262,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_providers",{"_index":263,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_documentationmodule",{"_index":516,"title":{},"body":{"modules/DocumentationModule.html":{},"overview.html":{}}}],["cluster_documentationmodule_providers",{"_index":517,"title":{},"body":{"modules/DocumentationModule.html":{},"overview.html":{}}}],["cluster_escrowmodule",{"_index":532,"title":{},"body":{"modules/EscrowModule.html":{},"overview.html":{}}}],["cluster_escrowmodule_imports",{"_index":534,"title":{},"body":{"modules/EscrowModule.html":{}}}],["cluster_escrowmodule_providers",{"_index":533,"title":{},"body":{"modules/EscrowModule.html":{},"overview.html":{}}}],["cluster_gatewaymodule",{"_index":546,"title":{},"body":{"modules/GatewayModule.html":{},"overview.html":{}}}],["cluster_gatewaymodule_imports",{"_index":548,"title":{},"body":{"modules/GatewayModule.html":{},"overview.html":{}}}],["cluster_gatewaymodule_providers",{"_index":547,"title":{},"body":{"modules/GatewayModule.html":{},"overview.html":{}}}],["cluster_mediamodule",{"_index":599,"title":{},"body":{"modules/MediaModule.html":{},"overview.html":{}}}],["cluster_mediamodule_imports",{"_index":601,"title":{},"body":{"modules/MediaModule.html":{}}}],["cluster_mediamodule_providers",{"_index":600,"title":{},"body":{"modules/MediaModule.html":{},"overview.html":{}}}],["cluster_notificationmodule",{"_index":621,"title":{},"body":{"modules/NotificationModule.html":{},"overview.html":{}}}],["cluster_notificationmodule_imports",{"_index":623,"title":{},"body":{"modules/NotificationModule.html":{}}}],["cluster_notificationmodule_providers",{"_index":622,"title":{},"body":{"modules/NotificationModule.html":{},"overview.html":{}}}],["cluster_organizationmodule",{"_index":706,"title":{},"body":{"modules/OrganizationModule.html":{},"overview.html":{}}}],["cluster_organizationmodule_imports",{"_index":707,"title":{},"body":{"modules/OrganizationModule.html":{},"overview.html":{}}}],["cluster_organizationmodule_providers",{"_index":708,"title":{},"body":{"modules/OrganizationModule.html":{},"overview.html":{}}}],["cluster_paymentmodule",{"_index":751,"title":{},"body":{"modules/PaymentModule.html":{},"overview.html":{}}}],["cluster_paymentmodule_imports",{"_index":752,"title":{},"body":{"modules/PaymentModule.html":{}}}],["cluster_paymentmodule_providers",{"_index":753,"title":{},"body":{"modules/PaymentModule.html":{},"overview.html":{}}}],["cluster_propertymodule",{"_index":776,"title":{},"body":{"modules/PropertyModule.html":{},"overview.html":{}}}],["cluster_propertymodule_imports",{"_index":778,"title":{},"body":{"modules/PropertyModule.html":{}}}],["cluster_propertymodule_providers",{"_index":777,"title":{},"body":{"modules/PropertyModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":895,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":896,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":897,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cmd",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{}}}],["collection",{"_index":1205,"title":{},"body":{"index.html":{}}}],["column",{"_index":173,"title":{},"body":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["column.propertyname",{"_index":186,"title":{},"body":{"entities/BaseEntity.html":{}}}],["column.target",{"_index":175,"title":{},"body":{"entities/BaseEntity.html":{}}}],["columnmetadata",{"_index":154,"title":{},"body":{"entities/BaseEntity.html":{}}}],["columnorder",{"_index":151,"title":{},"body":{"entities/BaseEntity.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["columnorder(9999",{"_index":162,"title":{},"body":{"entities/BaseEntity.html":{}}}],["columnorder(9999)@field(undefined",{"_index":131,"title":{},"body":{"entities/BaseEntity.html":{}}}],["columnorder(9999)@field(undefined)@createdatecolumn({name",{"_index":128,"title":{},"body":{"entities/BaseEntity.html":{}}}],["columnorder(undefined)@field(undefined)@primarygeneratedcolumn('uuid",{"_index":136,"title":{},"body":{"entities/BaseEntity.html":{}}}],["columnorder(value",{"_index":1066,"title":{},"body":{"miscellaneous/functions.html":{}}}],["columns",{"_index":194,"title":{},"body":{"entities/BaseEntity.html":{}}}],["command",{"_index":1387,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["commands",{"_index":1120,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["common",{"_index":1146,"title":{},"body":{"index.html":{}}}],["common.service",{"_index":266,"title":{},"body":{"modules/CommonModule.html":{}}}],["commonmodule",{"_index":93,"title":{"modules/CommonModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["commonservice",{"_index":264,"title":{"injectables/CommonService.html":{}},"body":{"modules/CommonModule.html":{},"injectables/CommonService.html":{},"coverage.html":{},"overview.html":{}}}],["communication",{"_index":1184,"title":{},"body":{"index.html":{}}}],["compared",{"_index":203,"title":{},"body":{"entities/BaseEntity.html":{}}}],["compile",{"_index":1104,"title":{},"body":{"index.html":{}}}],["complete",{"_index":1232,"title":{},"body":{"index.html":{}}}],["completed",{"_index":819,"title":{},"body":{"modules/SeederModule.html":{}}}],["compliance",{"_index":1284,"title":{},"body":{"index.html":{}}}],["comply",{"_index":1285,"title":{},"body":{"index.html":{}}}],["complying",{"_index":1200,"title":{},"body":{"index.html":{}}}],["concerns",{"_index":1154,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":1276,"title":{},"body":{"index.html":{}}}],["config.service",{"_index":291,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["confighelper",{"_index":218,"title":{"classes/ConfigHelper.html":{}},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"modules/DatabaseModule.html":{},"classes/SubgraphsBuilder.html":{},"coverage.html":{}}}],["confighelper.databaseconfig",{"_index":467,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["confighelper.getinstance",{"_index":226,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/DatabaseModule.html":{},"classes/SubgraphsBuilder.html":{}}}],["confighelper.getmicroservicehosts(key",{"_index":855,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["confighelper.getmoduleport(module.name",{"_index":240,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["confighelper.instance",{"_index":293,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["confighelper.instance.appconfigservice",{"_index":298,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["confighelper.redisconfig",{"_index":228,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{}}}],["configmodule",{"_index":9,"title":{},"body":{"modules/AppConfigModule.html":{},"classes/ConfigHelper.html":{}}}],["configmodule.forroot",{"_index":14,"title":{},"body":{"modules/AppConfigModule.html":{},"classes/ConfigHelper.html":{}}}],["configservice",{"_index":48,"title":{},"body":{"injectables/AppConfigService.html":{},"classes/ConfigHelper.html":{}}}],["configured",{"_index":1498,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["confirmation",{"_index":1320,"title":{},"body":{"index.html":{}}}],["connections",{"_index":1448,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["consistency",{"_index":1261,"title":{},"body":{"index.html":{}}}],["consistent",{"_index":1264,"title":{},"body":{"index.html":{}}}],["console.error('seeding",{"_index":822,"title":{},"body":{"modules/SeederModule.html":{}}}],["console.log",{"_index":817,"title":{},"body":{"modules/SeederModule.html":{}}}],["console.log(`inserted",{"_index":842,"title":{},"body":{"injectables/SeederService.html":{}}}],["const",{"_index":169,"title":{},"body":{"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"modules/GatewayModule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"injectables/UserService.html":{}}}],["constraint",{"_index":343,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["construct",{"_index":494,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["constructor",{"_index":46,"title":{},"body":{"injectables/AppConfigService.html":{},"classes/ConfigHelper.html":{},"injectables/GatewayService.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"injectables/SeederService.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{}}}],["constructor(configservice",{"_index":47,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["constructor(organizationservice",{"_index":718,"title":{},"body":{"classes/OrganizationResolver.html":{},"classes/UserResolver-1.html":{}}}],["constructor(private",{"_index":61,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"controllers/DocumentationController.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResolver.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{}}}],["constructor(repository",{"_index":727,"title":{},"body":{"injectables/OrganizationService.html":{},"injectables/UserService.html":{}}}],["constructor(rolerepository",{"_index":828,"title":{},"body":{"injectables/SeederService.html":{}}}],["constructor(userservice",{"_index":909,"title":{},"body":{"classes/UserResolver.html":{}}}],["contact",{"_index":1212,"title":{},"body":{"index.html":{}}}],["containing",{"_index":1078,"title":{},"body":{"index.html":{}}}],["control",{"_index":1301,"title":{},"body":{"index.html":{}}}],["controller",{"_index":65,"title":{"controllers/AuthController.html":{},"controllers/DocumentationController.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AuthController.html":{},"controllers/DocumentationController.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controllers",{"_index":67,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["convert",{"_index":489,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["correct",{"_index":497,"title":{},"body":{"classes/DatabaseUtil.html":{},"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["correctly",{"_index":1501,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["corresponding",{"_index":1491,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["coverage",{"_index":952,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":937,"title":{},"body":{"injectables/UserService.html":{}}}],["create(input",{"_index":940,"title":{},"body":{"injectables/UserService.html":{}}}],["created_at",{"_index":129,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["createdat",{"_index":123,"title":{},"body":{"entities/BaseEntity.html":{}}}],["createdatecolumn",{"_index":143,"title":{},"body":{"entities/BaseEntity.html":{}}}],["createorganization",{"_index":1456,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["createorganizationandmetatable.ts",{"_index":318,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"coverage.html":{}}}],["createorganizationandmetatable.ts:44",{"_index":327,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["createorganizationandmetatable.ts:6",{"_index":324,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["createorganizationandmetatable.ts:8",{"_index":329,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["createorganizationandmetatable1741518145374",{"_index":316,"title":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"coverage.html":{}}}],["createroletable.ts",{"_index":377,"title":{},"body":{"classes/CreateRoleTable1741519642145.html":{},"coverage.html":{}}}],["createroletable.ts:15",{"_index":379,"title":{},"body":{"classes/CreateRoleTable1741519642145.html":{}}}],["createroletable.ts:4",{"_index":378,"title":{},"body":{"classes/CreateRoleTable1741519642145.html":{}}}],["createroletable.ts:6",{"_index":380,"title":{},"body":{"classes/CreateRoleTable1741519642145.html":{}}}],["createroletable1741519642145",{"_index":375,"title":{"classes/CreateRoleTable1741519642145.html":{}},"body":{"classes/CreateRoleTable1741519642145.html":{},"coverage.html":{}}}],["creates",{"_index":1454,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["createuser",{"_index":908,"title":{},"body":{"classes/UserResolver.html":{}}}],["createuser(@args('input",{"_index":924,"title":{},"body":{"classes/UserResolver.html":{}}}],["createuser(input",{"_index":911,"title":{},"body":{"classes/UserResolver.html":{}}}],["createuserinput",{"_index":384,"title":{"classes/CreateUserInput.html":{}},"body":{"classes/CreateUserInput.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["createusertable.ts",{"_index":410,"title":{},"body":{"classes/CreateUserTable1741519705062.html":{},"coverage.html":{}}}],["createusertable.ts:26",{"_index":412,"title":{},"body":{"classes/CreateUserTable1741519705062.html":{}}}],["createusertable.ts:4",{"_index":411,"title":{},"body":{"classes/CreateUserTable1741519705062.html":{}}}],["createusertable.ts:6",{"_index":413,"title":{},"body":{"classes/CreateUserTable1741519705062.html":{}}}],["createusertable1741519705062",{"_index":408,"title":{"classes/CreateUserTable1741519705062.html":{}},"body":{"classes/CreateUserTable1741519705062.html":{},"coverage.html":{}}}],["custom",{"_index":183,"title":{},"body":{"entities/BaseEntity.html":{}}}],["d",{"_index":1409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["damage",{"_index":1280,"title":{},"body":{"index.html":{}}}],["data",{"_index":1186,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["database",{"_index":308,"title":{},"body":{"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"modules/SeederModule.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["database_host",{"_index":24,"title":{},"body":{"modules/AppConfigModule.html":{},"miscellaneous/variables.html":{}}}],["database_name",{"_index":28,"title":{},"body":{"modules/AppConfigModule.html":{},"miscellaneous/variables.html":{}}}],["database_password",{"_index":27,"title":{},"body":{"modules/AppConfigModule.html":{},"miscellaneous/variables.html":{}}}],["database_port",{"_index":25,"title":{},"body":{"modules/AppConfigModule.html":{},"miscellaneous/variables.html":{}}}],["database_type",{"_index":23,"title":{},"body":{"modules/AppConfigModule.html":{},"miscellaneous/variables.html":{}}}],["database_username",{"_index":26,"title":{},"body":{"modules/AppConfigModule.html":{},"miscellaneous/variables.html":{}}}],["databaseconfig",{"_index":276,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["databasemodule",{"_index":450,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/DatabaseModule.html":{},"modules/OrganizationModule.html":{},"modules/SeederModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["databasemodule.init(schema.organization",{"_index":715,"title":{},"body":{"modules/OrganizationModule.html":{}}}],["databasemodule.init(schema.user",{"_index":904,"title":{},"body":{"modules/UserModule.html":{}}}],["databasemodule.loadentities([organization",{"_index":716,"title":{},"body":{"modules/OrganizationModule.html":{}}}],["databasemodule.loadentities([user",{"_index":905,"title":{},"body":{"modules/UserModule.html":{}}}],["databasemodule.loadentities(entities",{"_index":811,"title":{},"body":{"modules/SeederModule.html":{}}}],["databaseutil",{"_index":156,"title":{"classes/DatabaseUtil.html":{}},"body":{"entities/BaseEntity.html":{},"classes/DatabaseUtil.html":{},"coverage.html":{}}}],["databaseutil.generateuuidv7",{"_index":165,"title":{},"body":{"entities/BaseEntity.html":{}}}],["datasource",{"_index":144,"title":{"classes/DataSource.html":{}},"body":{"entities/BaseEntity.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"coverage.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["datasource.entitymetadatasmap.get(this",{"_index":171,"title":{},"body":{"entities/BaseEntity.html":{}}}],["datasource.getinstance('escrow",{"_index":1433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource.getinstance('media",{"_index":1434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource.getinstance('notification",{"_index":1435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource.getinstance('organization",{"_index":1436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource.getinstance('payment",{"_index":1437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource.getinstance('property",{"_index":1438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource.getinstance('user",{"_index":1439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasourceoptions",{"_index":457,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["datasourcepath",{"_index":1004,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["datasources",{"_index":1123,"title":{},"body":{"index.html":{}}}],["date",{"_index":127,"title":{},"body":{"entities/BaseEntity.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["date.now",{"_index":475,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["db",{"_index":442,"title":{},"body":{"classes/DataSource.html":{}}}],["decimal",{"_index":686,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["declarations",{"_index":86,"title":{},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorator",{"_index":196,"title":{},"body":{"entities/BaseEntity.html":{}}}],["decorators",{"_index":70,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"entities/BaseEntity.html":{},"classes/CreateUserInput.html":{},"controllers/DocumentationController.html":{},"controllers/EscrowController.html":{},"classes/EscrowResolver.html":{},"controllers/MediaController.html":{},"classes/MediaResolver.html":{},"controllers/NotificationController.html":{},"classes/NotificationResolver.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"controllers/PaymentController.html":{},"classes/PaymentResolver.html":{},"controllers/PropertyController.html":{},"classes/PropertyResolver.html":{},"entities/Role.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{}}}],["default",{"_index":188,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"entities/OrganizationMetadata.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["default('development",{"_index":34,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["defaultval",{"_index":1070,"title":{},"body":{"miscellaneous/functions.html":{}}}],["defined",{"_index":49,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"controllers/MediaController.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"entities/Permission.html":{},"controllers/PropertyController.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"entities/Role.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{}}}],["definitions",{"_index":1455,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["delete",{"_index":369,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["deleted_at",{"_index":134,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["deletedat",{"_index":124,"title":{},"body":{"entities/BaseEntity.html":{}}}],["deletedatecolumn",{"_index":145,"title":{},"body":{"entities/BaseEntity.html":{}}}],["delivery",{"_index":1330,"title":{},"body":{"index.html":{}}}],["demandoption",{"_index":1384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dependencies",{"_index":84,"title":{"dependencies.html":{}},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["deposit",{"_index":1267,"title":{},"body":{"index.html":{},"properties.html":{}}}],["deposit_fee_percentage",{"_index":357,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"entities/OrganizationMetadata.html":{}}}],["depositfeepercentage",{"_index":680,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["deposits",{"_index":1133,"title":{},"body":{"index.html":{}}}],["describe",{"_index":1383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":382,"title":{},"body":{"classes/CreateRoleTable1741519642145.html":{},"entities/Role.html":{},"index.html":{},"properties.html":{}}}],["designed",{"_index":1444,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["details",{"_index":1213,"title":{},"body":{"index.html":{}}}],["detected",{"_index":1484,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["development",{"_index":1105,"title":{},"body":{"index.html":{}}}],["different",{"_index":1300,"title":{},"body":{"index.html":{}}}],["directive",{"_index":657,"title":{},"body":{"classes/Organization-1.html":{},"classes/User-1.html":{},"miscellaneous/functions.html":{}}}],["directive('@external",{"_index":661,"title":{},"body":{"classes/Organization-1.html":{},"classes/User-1.html":{}}}],["directive('@requires(fields",{"_index":881,"title":{},"body":{"classes/User-1.html":{}}}],["directive.decorator.ts",{"_index":1000,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["displays",{"_index":1471,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["dispute",{"_index":1279,"title":{},"body":{"index.html":{},"properties.html":{}}}],["disputes",{"_index":1153,"title":{},"body":{"index.html":{}}}],["docs",{"_index":1103,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":953,"title":{},"body":{"coverage.html":{}}}],["documentation.controller",{"_index":519,"title":{},"body":{"modules/DocumentationModule.html":{}}}],["documentation.service",{"_index":513,"title":{},"body":{"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{}}}],["documentationcontroller",{"_index":509,"title":{"controllers/DocumentationController.html":{}},"body":{"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"coverage.html":{}}}],["documentationmodule",{"_index":515,"title":{"modules/DocumentationModule.html":{}},"body":{"modules/DocumentationModule.html":{},"modules.html":{},"overview.html":{}}}],["documentationservice",{"_index":512,"title":{"injectables/DocumentationService.html":{}},"body":{"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"coverage.html":{},"overview.html":{}}}],["domain",{"_index":351,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"entities/OrganizationMetadata.html":{}}}],["dotenv",{"_index":425,"title":{},"body":{"classes/DataSource.html":{},"dependencies.html":{}}}],["dotenv.config",{"_index":430,"title":{},"body":{"classes/DataSource.html":{}}}],["double",{"_index":1247,"title":{},"body":{"index.html":{}}}],["down",{"_index":322,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["down(queryrunner",{"_index":325,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["driven",{"_index":1291,"title":{},"body":{"index.html":{}}}],["driver",{"_index":579,"title":{},"body":{"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{}}}],["drop",{"_index":372,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["dtos",{"_index":1144,"title":{},"body":{"index.html":{}}}],["dtos/create",{"_index":920,"title":{},"body":{"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["dynamically",{"_index":469,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["dynamicmodule",{"_index":253,"title":{},"body":{"modules/ClientsModule.html":{},"modules/DatabaseModule.html":{},"modules/GraphQLGatewayModule.html":{},"modules/SeederModule.html":{}}}],["e.g",{"_index":1165,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["e2e",{"_index":1113,"title":{},"body":{"index.html":{}}}],["each",{"_index":1155,"title":{},"body":{"index.html":{}}}],["effectively",{"_index":1219,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":1240,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["efficiently",{"_index":1259,"title":{},"body":{"index.html":{}}}],["email",{"_index":339,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"entities/Organization.html":{},"entities/User.html":{},"index.html":{}}}],["emails",{"_index":1196,"title":{},"body":{"index.html":{}}}],["encrypted",{"_index":1187,"title":{},"body":{"index.html":{}}}],["encryption",{"_index":1314,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":1342,"title":{},"body":{"index.html":{}}}],["enhance",{"_index":1509,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["enhancements",{"_index":1503,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["ensure",{"_index":491,"title":{},"body":{"classes/DatabaseUtil.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["ensuring",{"_index":496,"title":{},"body":{"classes/DatabaseUtil.html":{},"index.html":{}}}],["entities",{"_index":120,"title":{},"body":{"entities/BaseEntity.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"entities/Permission.html":{},"entities/Role.html":{},"modules/SeederModule.html":{},"entities/User.html":{},"overview.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["entities/external/user.entity",{"_index":933,"title":{},"body":{"classes/UserResolver-1.html":{}}}],["entities/organization",{"_index":714,"title":{},"body":{"modules/OrganizationModule.html":{}}}],["entities/organization.entity",{"_index":713,"title":{},"body":{"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"classes/UserResolver-1.html":{}}}],["entities/role.entity",{"_index":833,"title":{},"body":{"injectables/SeederService.html":{},"modules/UserModule.html":{}}}],["entities/user.entity",{"_index":902,"title":{},"body":{"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["entity",{"_index":118,"title":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{}},"body":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{},"classes/User-1.html":{},"coverage.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["entityclassorschema",{"_index":456,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/SeederModule.html":{}}}],["enumerations",{"_index":1042,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":429,"title":{},"body":{"classes/DataSource.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["environment",{"_index":292,"title":{},"body":{"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/GatewayModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.is_doc_env",{"_index":1425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["err",{"_index":824,"title":{},"body":{"modules/SeederModule.html":{}}}],["error",{"_index":1216,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["errors",{"_index":1218,"title":{},"body":{"index.html":{}}}],["escrow",{"_index":544,"title":{},"body":{"injectables/EscrowService.html":{},"index.html":{},"properties.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["escrow.controller",{"_index":536,"title":{},"body":{"modules/EscrowModule.html":{}}}],["escrow.service",{"_index":527,"title":{},"body":{"controllers/EscrowController.html":{},"modules/EscrowModule.html":{}}}],["escrow_client",{"_index":1050,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["escrow_host",{"_index":554,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["escrow_port",{"_index":1413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["escrowcommand",{"_index":528,"title":{},"body":{"controllers/EscrowController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["escrowcommand.ping_escrow",{"_index":529,"title":{},"body":{"controllers/EscrowController.html":{}}}],["escrowcontroller",{"_index":523,"title":{"controllers/EscrowController.html":{}},"body":{"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"coverage.html":{}}}],["escrowmodule",{"_index":531,"title":{"modules/EscrowModule.html":{}},"body":{"modules/EscrowModule.html":{},"modules.html":{},"overview.html":{}}}],["escrowresolver",{"_index":537,"title":{"classes/EscrowResolver.html":{}},"body":{"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"coverage.html":{}}}],["escrowservice",{"_index":526,"title":{"injectables/EscrowService.html":{}},"body":{"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"injectables/EscrowService.html":{},"coverage.html":{},"overview.html":{}}}],["especially",{"_index":1185,"title":{},"body":{"index.html":{}}}],["etc",{"_index":1081,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["event",{"_index":1290,"title":{},"body":{"index.html":{}}}],["example",{"_index":1096,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["execute",{"_index":1490,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["executed",{"_index":1481,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["executes",{"_index":1461,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["exist",{"_index":178,"title":{},"body":{"entities/BaseEntity.html":{}}}],["expiration",{"_index":1172,"title":{},"body":{"index.html":{}}}],["expiry",{"_index":1169,"title":{},"body":{"index.html":{}}}],["export",{"_index":35,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"entities/Permission.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"entities/Role.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":89,"title":{},"body":{"modules/AuthModule.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/GraphQLGatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/SeederModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":1017,"title":{},"body":{"dependencies.html":{}}}],["extending",{"_index":659,"title":{},"body":{"classes/Organization-1.html":{},"classes/User-1.html":{}}}],["extends",{"_index":159,"title":{},"body":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["external",{"_index":1309,"title":{},"body":{"index.html":{}}}],["external/organization.entity",{"_index":870,"title":{},"body":{"entities/User.html":{}}}],["failed",{"_index":823,"title":{},"body":{"modules/SeederModule.html":{}}}],["failure",{"_index":1281,"title":{},"body":{"index.html":{}}}],["failures",{"_index":1316,"title":{},"body":{"index.html":{}}}],["fallback",{"_index":187,"title":{},"body":{"entities/BaseEntity.html":{}}}],["false",{"_index":360,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"entities/OrganizationMetadata.html":{}}}],["fast",{"_index":1239,"title":{},"body":{"index.html":{}}}],["features",{"_index":1244,"title":{},"body":{"index.html":{}}}],["federated",{"_index":879,"title":{},"body":{"classes/User-1.html":{}}}],["federation",{"_index":588,"title":{},"body":{"modules/GraphQLMicroserviceModule.html":{},"classes/Organization-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["feedback",{"_index":1224,"title":{},"body":{"index.html":{}}}],["fetch",{"_index":884,"title":{},"body":{"classes/User-1.html":{}}}],["field",{"_index":149,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateUserInput.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"entities/OrganizationMetadata.html":{},"entities/Role.html":{},"entities/User.html":{},"classes/User-1.html":{}}}],["field(undefined",{"_index":392,"title":{},"body":{"classes/CreateUserInput.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"entities/Role.html":{},"entities/User.html":{},"classes/User-1.html":{}}}],["field(undefined)@column",{"_index":637,"title":{},"body":{"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"entities/User.html":{}}}],["field(undefined)@column({name",{"_index":646,"title":{},"body":{"entities/Organization.html":{},"entities/OrganizationMetadata.html":{}}}],["field(undefined)@column({unique",{"_index":643,"title":{},"body":{"entities/Organization.html":{}}}],["field(undefined)@directive('@external",{"_index":655,"title":{},"body":{"classes/Organization-1.html":{}}}],["field(undefined)@manytoone(undefined)@joincolumn",{"_index":867,"title":{},"body":{"entities/User.html":{}}}],["field(undefined)@primarycolumn",{"_index":791,"title":{},"body":{"entities/Role.html":{}}}],["file",{"_index":5,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"entities/Permission.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"entities/Role.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["financial",{"_index":1287,"title":{},"body":{"index.html":{}}}],["find",{"_index":938,"title":{},"body":{"injectables/UserService.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["find_organization_by_id",{"_index":1430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["findall",{"_index":725,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["findone",{"_index":726,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["findone(where",{"_index":731,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["findonebyid",{"_index":665,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["findonebyid(id",{"_index":666,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["findoptionswhere",{"_index":732,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["firstname",{"_index":387,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"entities/User.html":{}}}],["fk_a2cecd1a3531c0b041e29ba46e1",{"_index":416,"title":{},"body":{"classes/CreateUserTable1741519705062.html":{}}}],["fk_ad9c5b4a8fb0a54d63b84710190",{"_index":366,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["flag",{"_index":1477,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["float",{"_index":700,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["follow",{"_index":1101,"title":{},"body":{"index.html":{}}}],["following",{"_index":1086,"title":{},"body":{"index.html":{}}}],["force",{"_index":1180,"title":{},"body":{"index.html":{}}}],["foreign",{"_index":367,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["format",{"_index":498,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["found",{"_index":1497,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["frontend",{"_index":1151,"title":{},"body":{"index.html":{}}}],["function",{"_index":184,"title":{},"body":{"entities/BaseEntity.html":{},"coverage.html":{}}}],["functionality",{"_index":1238,"title":{},"body":{"index.html":{}}}],["functions",{"_index":1062,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["future",{"_index":1502,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["gateway",{"_index":565,"title":{},"body":{"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"index.html":{}}}],["gateway.module.ts",{"_index":567,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["gateway.module.ts:10",{"_index":569,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["gateway.service",{"_index":552,"title":{},"body":{"modules/GatewayModule.html":{}}}],["gateway_host",{"_index":1421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gateway_port",{"_index":1414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gatewaymodule",{"_index":545,"title":{"modules/GatewayModule.html":{}},"body":{"modules/GatewayModule.html":{},"modules.html":{},"overview.html":{}}}],["gatewayservice",{"_index":550,"title":{"injectables/GatewayService.html":{}},"body":{"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"coverage.html":{},"overview.html":{}}}],["gdpr",{"_index":1202,"title":{},"body":{"index.html":{}}}],["general",{"_index":1450,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["generate",{"_index":480,"title":{},"body":{"classes/DatabaseUtil.html":{},"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["generates",{"_index":1458,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["generateuuid",{"_index":163,"title":{},"body":{"entities/BaseEntity.html":{}}}],["generateuuidv7",{"_index":473,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["generating",{"_index":1323,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["gensalt",{"_index":944,"title":{},"body":{"injectables/UserService.html":{}}}],["getcolumnorder",{"_index":152,"title":{},"body":{"entities/BaseEntity.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getcolumnorder(target",{"_index":1068,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getcolumnorder(target.prototype",{"_index":185,"title":{},"body":{"entities/BaseEntity.html":{}}}],["getconfig",{"_index":45,"title":{},"body":{"injectables/AppConfigService.html":{},"classes/ConfigHelper.html":{}}}],["getconfig(key",{"_index":55,"title":{},"body":{"injectables/AppConfigService.html":{},"classes/ConfigHelper.html":{}}}],["getdatabaseconfig",{"_index":289,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["gethello",{"_index":69,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/DocumentationController.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"injectables/EscrowService.html":{},"controllers/MediaController.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"injectables/NotificationService.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"injectables/PropertyService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["getinstance",{"_index":272,"title":{},"body":{"classes/ConfigHelper.html":{},"classes/DataSource.html":{}}}],["getinstance(schema",{"_index":420,"title":{},"body":{"classes/DataSource.html":{}}}],["getmicroservicehosts",{"_index":273,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["getmicroservicehosts(microservicename",{"_index":281,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["getmoduleport",{"_index":274,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["getmoduleport(modulename",{"_index":284,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["getordersafely",{"_index":172,"title":{},"body":{"entities/BaseEntity.html":{}}}],["getordersafely(xcolumn",{"_index":205,"title":{},"body":{"entities/BaseEntity.html":{}}}],["getordersafely(ycolumn",{"_index":207,"title":{},"body":{"entities/BaseEntity.html":{}}}],["getredisconfig",{"_index":287,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["getting",{"_index":1073,"title":{"index.html":{}},"body":{}}],["global",{"_index":252,"title":{},"body":{"modules/ClientsModule.html":{},"modules/GraphQLGatewayModule.html":{},"index.html":{}}}],["globally",{"_index":1447,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["graph",{"_index":1347,"title":{},"body":{"modules.html":{}}}],["graphname",{"_index":854,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["graphname?.split('_host')?.[0",{"_index":853,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["graphnames",{"_index":848,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["graphnames.map((graphname",{"_index":851,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["graphql",{"_index":1026,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["graphqlfederationdirective",{"_index":650,"title":{},"body":{"entities/Organization.html":{},"classes/Organization-1.html":{},"entities/User.html":{},"classes/User-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["graphqlfederationdirective('@extends",{"_index":658,"title":{},"body":{"classes/Organization-1.html":{},"classes/User-1.html":{}}}],["graphqlfederationdirective('@key(fields",{"_index":653,"title":{},"body":{"entities/Organization.html":{},"classes/Organization-1.html":{},"entities/User.html":{},"classes/User-1.html":{}}}],["graphqlfederationdirective(directive",{"_index":1071,"title":{},"body":{"miscellaneous/functions.html":{}}}],["graphqlgatewaymodule",{"_index":549,"title":{"modules/GraphQLGatewayModule.html":{}},"body":{"modules/GatewayModule.html":{},"modules/GraphQLGatewayModule.html":{},"modules.html":{},"overview.html":{}}}],["graphqlgatewaymodule.register",{"_index":561,"title":{},"body":{"modules/GatewayModule.html":{}}}],["graphqlmicroservicemodule",{"_index":94,"title":{"modules/GraphQLMicroserviceModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/EscrowModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["graphqlmodule",{"_index":571,"title":{},"body":{"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{}}}],["graphqlmodule.forroot",{"_index":586,"title":{},"body":{"modules/GraphQLMicroserviceModule.html":{}}}],["graphqlmodule.forrootasync",{"_index":578,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["guards",{"_index":1149,"title":{},"body":{"index.html":{}}}],["handle",{"_index":1226,"title":{},"body":{"index.html":{}}}],["handling",{"_index":1217,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["hash",{"_index":945,"title":{},"body":{"injectables/UserService.html":{}}}],["hash(input.password",{"_index":949,"title":{},"body":{"injectables/UserService.html":{}}}],["hello",{"_index":115,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DocumentationService.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"injectables/MediaService.html":{},"injectables/NotificationService.html":{},"injectables/OrganizationService.html":{},"injectables/PaymentService.html":{},"injectables/PropertyService.html":{},"injectables/UserService.html":{}}}],["help().argv",{"_index":1397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["helper",{"_index":1117,"title":{},"body":{"index.html":{}}}],["here",{"_index":1128,"title":{},"body":{"index.html":{}}}],["hex",{"_index":490,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["high",{"_index":189,"title":{},"body":{"entities/BaseEntity.html":{}}}],["history",{"_index":1472,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["host",{"_index":234,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/SubgraphsBuilder.html":{}}}],["host}:${port}/graphql",{"_index":857,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["https",{"_index":1188,"title":{},"body":{"index.html":{}}}],["id",{"_index":125,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/User.html":{},"classes/User-1.html":{},"classes/UserResolver-1.html":{}}}],["identifier",{"_index":954,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":1252,"title":{},"body":{"index.html":{}}}],["images",{"_index":1254,"title":{},"body":{"index.html":{}}}],["implement",{"_index":407,"title":{},"body":{"classes/CreateUserInput.html":{},"index.html":{}}}],["implementing",{"_index":1182,"title":{},"body":{"index.html":{}}}],["implements",{"_index":319,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["import",{"_index":7,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"entities/Permission.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"entities/Role.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":13,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/AuthModule.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/SeederModule.html":{},"modules/UserModule.html":{}}}],["in/opt",{"_index":1335,"title":{},"body":{"index.html":{}}}],["includes",{"_index":1161,"title":{},"body":{"index.html":{}}}],["index",{"_index":43,"title":{"index.html":{}},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"controllers/MediaController.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"entities/Permission.html":{},"controllers/PropertyController.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"entities/Role.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"entities/Permission.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"entities/Role.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{}}}],["information",{"_index":1195,"title":{},"body":{"index.html":{}}}],["init",{"_index":213,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/DatabaseModule.html":{},"modules/SeederModule.html":{}}}],["init(module",{"_index":214,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["init(schema",{"_index":452,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["init(services",{"_index":799,"title":{},"body":{"modules/SeederModule.html":{}}}],["initial",{"_index":1495,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["injectable",{"_index":39,"title":{"injectables/AppConfigService.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/DocumentationService.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"injectables/MediaService.html":{},"injectables/NotificationService.html":{},"injectables/OrganizationService.html":{},"injectables/PaymentService.html":{},"injectables/PropertyService.html":{},"injectables/SeederService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppConfigService.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/DocumentationService.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"injectables/MediaService.html":{},"injectables/NotificationService.html":{},"injectables/OrganizationService.html":{},"injectables/PaymentService.html":{},"injectables/PropertyService.html":{},"injectables/SeederService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":41,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/DocumentationService.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"injectables/MediaService.html":{},"injectables/NotificationService.html":{},"injectables/OrganizationService.html":{},"injectables/PaymentService.html":{},"injectables/PropertyService.html":{},"injectables/SeederService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectrepository",{"_index":735,"title":{},"body":{"injectables/OrganizationService.html":{},"injectables/SeederService.html":{},"injectables/UserService.html":{}}}],["injectrepository(organization",{"_index":738,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["injectrepository(role",{"_index":834,"title":{},"body":{"injectables/SeederService.html":{}}}],["injectrepository(user",{"_index":947,"title":{},"body":{"injectables/UserService.html":{}}}],["input",{"_index":914,"title":{},"body":{"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["input.role",{"_index":951,"title":{},"body":{"injectables/UserService.html":{}}}],["inputtype",{"_index":403,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["install",{"_index":1098,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["installed",{"_index":1087,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["installinstall",{"_index":1100,"title":{},"body":{"index.html":{}}}],["instance",{"_index":271,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["instead",{"_index":1488,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["integrating",{"_index":1260,"title":{},"body":{"index.html":{}}}],["integration",{"_index":1308,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["integrity",{"_index":1215,"title":{},"body":{"index.html":{}}}],["interactive",{"_index":1507,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["interceptors",{"_index":1148,"title":{},"body":{"index.html":{}}}],["interface",{"_index":995,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":1145,"title":{},"body":{"index.html":{}}}],["introspectandcompose",{"_index":575,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["invalid",{"_index":1221,"title":{},"body":{"index.html":{}}}],["ioredis",{"_index":1028,"title":{},"body":{"dependencies.html":{}}}],["is_doc_env",{"_index":1422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isdocenv",{"_index":1001,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isglobal",{"_index":15,"title":{},"body":{"modules/AppConfigModule.html":{},"classes/ConfigHelper.html":{}}}],["isolation",{"_index":1298,"title":{},"body":{"index.html":{}}}],["isstring",{"_index":404,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["isstring()@field(undefined",{"_index":394,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["issues",{"_index":1249,"title":{},"body":{"index.html":{}}}],["joi",{"_index":12,"title":{},"body":{"modules/AppConfigModule.html":{},"dependencies.html":{}}}],["joi.number().required",{"_index":22,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["joi.object",{"_index":18,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["joi.string",{"_index":30,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["joi.string().required",{"_index":20,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["join",{"_index":493,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["joincolumn",{"_index":701,"title":{},"body":{"entities/OrganizationMetadata.html":{},"entities/User.html":{}}}],["jwt",{"_index":1166,"title":{},"body":{"index.html":{}}}],["key",{"_index":59,"title":{},"body":{"injectables/AppConfigService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/Organization-1.html":{},"classes/SubgraphsBuilder.html":{},"index.html":{}}}],["keypart",{"_index":852,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["landlord",{"_index":1191,"title":{},"body":{"index.html":{}}}],["landlords",{"_index":1229,"title":{},"body":{"index.html":{}}}],["large",{"_index":1227,"title":{},"body":{"index.html":{}}}],["last",{"_index":1462,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["lastname",{"_index":388,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"entities/User.html":{}}}],["latest",{"_index":1467,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["learn",{"_index":1126,"title":{},"body":{"index.html":{}}}],["legend",{"_index":85,"title":{},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["lets",{"_index":1119,"title":{},"body":{"index.html":{}}}],["level",{"_index":1304,"title":{},"body":{"index.html":{}}}],["libraries",{"_index":1143,"title":{},"body":{"index.html":{}}}],["libs",{"_index":1080,"title":{},"body":{"index.html":{}}}],["libs/.../auth.command.ts",{"_index":1367,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../column",{"_index":1064,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/.../environment.constant.ts",{"_index":1368,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../escrow.command.ts",{"_index":1369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../graphql",{"_index":1065,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/.../media.command.ts",{"_index":1370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../micro",{"_index":1044,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../notification.command.ts",{"_index":1371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../organization.command.ts",{"_index":1372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../payment.command.ts",{"_index":1373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../property.command.ts",{"_index":1374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../schema.constant.ts",{"_index":1375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../user",{"_index":1046,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../user.command.ts",{"_index":1378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/common/src/clients/clients.module.ts",{"_index":246,"title":{},"body":{"modules/ClientsModule.html":{}}}],["libs/common/src/clients/clients.module.ts:12",{"_index":249,"title":{},"body":{"modules/ClientsModule.html":{}}}],["libs/common/src/common.module.ts",{"_index":265,"title":{},"body":{"modules/CommonModule.html":{}}}],["libs/common/src/common.service.ts",{"_index":268,"title":{},"body":{"injectables/CommonService.html":{},"coverage.html":{}}}],["libs/common/src/config/config.helper.ts",{"_index":269,"title":{},"body":{"classes/ConfigHelper.html":{},"coverage.html":{}}}],["libs/common/src/config/config.helper.ts:13",{"_index":280,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.helper.ts:31",{"_index":288,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.helper.ts:37",{"_index":290,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.helper.ts:47",{"_index":285,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.helper.ts:53",{"_index":282,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.helper.ts:63",{"_index":279,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.helper.ts:8",{"_index":278,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.helper.ts:9",{"_index":277,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.module.ts",{"_index":6,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["libs/common/src/config/config.service.ts",{"_index":42,"title":{},"body":{"injectables/AppConfigService.html":{},"coverage.html":{}}}],["libs/common/src/config/config.service.ts:5",{"_index":50,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["libs/common/src/config/config.service.ts:8",{"_index":57,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["libs/common/src/constants/commands/auth.command.ts",{"_index":983,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/commands/escrow.command.ts",{"_index":984,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/commands/media.command.ts",{"_index":985,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/commands/notification.command.ts",{"_index":986,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/commands/organization.command.ts",{"_index":987,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/commands/payment.command.ts",{"_index":988,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/commands/property.command.ts",{"_index":989,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/commands/user.command.ts",{"_index":990,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/environment.constant.ts",{"_index":991,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/schema.constant.ts",{"_index":992,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/database/database.module.ts",{"_index":451,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["libs/common/src/database/database.module.ts:37",{"_index":458,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["libs/common/src/database/database.module.ts:9",{"_index":453,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["libs/common/src/database/entities/base.entity.ts",{"_index":121,"title":{},"body":{"entities/BaseEntity.html":{},"coverage.html":{}}}],["libs/common/src/database/entities/base.entity.ts:22",{"_index":137,"title":{},"body":{"entities/BaseEntity.html":{}}}],["libs/common/src/database/entities/base.entity.ts:27",{"_index":130,"title":{},"body":{"entities/BaseEntity.html":{}}}],["libs/common/src/database/entities/base.entity.ts:32",{"_index":140,"title":{},"body":{"entities/BaseEntity.html":{}}}],["libs/common/src/database/entities/base.entity.ts:37",{"_index":135,"title":{},"body":{"entities/BaseEntity.html":{}}}],["libs/common/src/database/seeder/seeder",{"_index":993,"title":{},"body":{"coverage.html":{}}}],["libs/common/src/database/seeder/seeder.module.ts",{"_index":796,"title":{},"body":{"modules/SeederModule.html":{}}}],["libs/common/src/database/seeder/seeder.module.ts:10",{"_index":801,"title":{},"body":{"modules/SeederModule.html":{}}}],["libs/common/src/database/seeder/seeder.module.ts:22",{"_index":798,"title":{},"body":{"modules/SeederModule.html":{}}}],["libs/common/src/database/seeder/seeder.module.ts:30",{"_index":805,"title":{},"body":{"modules/SeederModule.html":{}}}],["libs/common/src/decorators/column",{"_index":996,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/decorators/graphql",{"_index":999,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/enums/micro",{"_index":1048,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/common/src/enums/user",{"_index":1057,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/common/src/graphql/graphql",{"_index":566,"title":{},"body":{"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{}}}],["libs/common/src/utils/bootstrapper.util.ts",{"_index":211,"title":{},"body":{"classes/Bootstrapper.html":{},"coverage.html":{}}}],["libs/common/src/utils/bootstrapper.util.ts:7",{"_index":215,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["libs/common/src/utils/data",{"_index":418,"title":{},"body":{"classes/DataSource.html":{},"coverage.html":{}}}],["libs/common/src/utils/database.util.ts",{"_index":472,"title":{},"body":{"classes/DatabaseUtil.html":{},"coverage.html":{}}}],["libs/common/src/utils/database.util.ts:2",{"_index":474,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["libs/common/src/utils/subgraphs",{"_index":843,"title":{},"body":{"classes/SubgraphsBuilder.html":{},"coverage.html":{}}}],["license",{"_index":1362,"title":{},"body":{"properties.html":{}}}],["limiting",{"_index":1176,"title":{},"body":{"index.html":{}}}],["listed",{"_index":1236,"title":{},"body":{"index.html":{}}}],["listening",{"_index":244,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["listings",{"_index":1136,"title":{},"body":{"index.html":{},"properties.html":{}}}],["lists",{"_index":1469,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["load",{"_index":427,"title":{},"body":{"classes/DataSource.html":{}}}],["loadentities",{"_index":454,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["loadentities(entities",{"_index":455,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["local",{"_index":1286,"title":{},"body":{"index.html":{}}}],["localhost",{"_index":436,"title":{},"body":{"classes/DataSource.html":{}}}],["located",{"_index":1474,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["location",{"_index":1242,"title":{},"body":{"index.html":{}}}],["log",{"_index":1486,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["logger",{"_index":216,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["logger(`${module.name}bootstrap",{"_index":224,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["logger.log(`microservice",{"_index":243,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["logging",{"_index":1510,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["logo",{"_index":352,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"entities/OrganizationMetadata.html":{}}}],["lts",{"_index":1090,"title":{},"body":{"index.html":{}}}],["m",{"_index":1382,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["machine",{"_index":1085,"title":{},"body":{"index.html":{}}}],["maintaining",{"_index":1214,"title":{},"body":{"index.html":{}}}],["make",{"_index":1094,"title":{},"body":{"index.html":{}}}],["manage",{"_index":1337,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["managed",{"_index":662,"title":{},"body":{"classes/Organization-1.html":{}}}],["management",{"_index":1132,"title":{},"body":{"index.html":{},"properties.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["managing",{"_index":1171,"title":{},"body":{"index.html":{}}}],["mandatory",{"_index":1478,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["manual",{"_index":1443,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["manytoone",{"_index":869,"title":{},"body":{"entities/User.html":{}}}],["map((b",{"_index":487,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["matching",{"_index":38,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"entities/Permission.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"entities/Role.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["mechanisms",{"_index":1173,"title":{},"body":{"index.html":{}}}],["media",{"_index":611,"title":{},"body":{"injectables/MediaService.html":{},"index.html":{}}}],["media.controller",{"_index":603,"title":{},"body":{"modules/MediaModule.html":{}}}],["media.service",{"_index":594,"title":{},"body":{"controllers/MediaController.html":{},"modules/MediaModule.html":{}}}],["media_client",{"_index":1051,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["media_host",{"_index":555,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["media_port",{"_index":1415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mediacommand",{"_index":595,"title":{},"body":{"controllers/MediaController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mediacommand.ping_media",{"_index":596,"title":{},"body":{"controllers/MediaController.html":{}}}],["mediacontroller",{"_index":590,"title":{"controllers/MediaController.html":{}},"body":{"controllers/MediaController.html":{},"modules/MediaModule.html":{},"coverage.html":{}}}],["mediamodule",{"_index":598,"title":{"modules/MediaModule.html":{}},"body":{"modules/MediaModule.html":{},"modules.html":{},"overview.html":{}}}],["mediaresolver",{"_index":604,"title":{"classes/MediaResolver.html":{}},"body":{"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"coverage.html":{}}}],["mediaservice",{"_index":593,"title":{"injectables/MediaService.html":{}},"body":{"controllers/MediaController.html":{},"modules/MediaModule.html":{},"injectables/MediaService.html":{},"coverage.html":{},"overview.html":{}}}],["member",{"_index":1061,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["members",{"_index":1296,"title":{},"body":{"index.html":{}}}],["messagepattern",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{}}}],["messagepattern({cmd",{"_index":71,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{}}}],["meta",{"_index":170,"title":{},"body":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"injectables/OrganizationService.html":{}}}],["meta.columns",{"_index":197,"title":{},"body":{"entities/BaseEntity.html":{}}}],["meta.columns].sort((xcolumn",{"_index":198,"title":{},"body":{"entities/BaseEntity.html":{}}}],["meta.organization",{"_index":641,"title":{},"body":{"entities/Organization.html":{}}}],["metadata",{"_index":1034,"title":{},"body":{"dependencies.html":{}}}],["metadata.entity",{"_index":651,"title":{},"body":{"entities/Organization.html":{},"modules/OrganizationModule.html":{}}}],["metadata.entity.ts",{"_index":678,"title":{},"body":{"entities/OrganizationMetadata.html":{},"coverage.html":{}}}],["metadata.entity.ts:16",{"_index":696,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["metadata.entity.ts:20",{"_index":698,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["metadata.entity.ts:24",{"_index":689,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["metadata.entity.ts:28",{"_index":690,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["metadata.entity.ts:38",{"_index":699,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["metadata.entity.ts:48",{"_index":687,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["metadata.entity.ts:52",{"_index":683,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["methods",{"_index":44,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"controllers/MediaController.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{}}}],["microservice",{"_index":660,"title":{},"body":{"classes/Organization-1.html":{},"classes/User-1.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["microservice's",{"_index":1480,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["microservice.module.ts",{"_index":583,"title":{},"body":{"modules/GraphQLMicroserviceModule.html":{}}}],["microserviceclient",{"_index":1043,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["microservicename",{"_index":283,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["microservicename}_host`.touppercase",{"_index":313,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["microservicename}_port`.touppercase",{"_index":314,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["microserviceoptions",{"_index":221,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["microservices",{"_index":1079,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["migration",{"_index":1394,"title":{"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}},"body":{"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["migration:${command",{"_index":1407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migrationinterface",{"_index":320,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["migrations",{"_index":446,"title":{"additional-documentation/running-migrations-and-seeders.html":{}},"body":{"classes/DataSource.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["migrationstablename",{"_index":431,"title":{},"body":{"classes/DataSource.html":{}}}],["miscellaneous",{"_index":1041,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":1108,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["module",{"_index":0,"title":{"modules/AppConfigModule.html":{},"modules/AuthModule.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/SeederModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppConfigModule.html":{},"modules/AuthModule.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/SeederModule.html":{},"modules/UserModule.html":{},"overview.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["module).catch((err",{"_index":821,"title":{},"body":{"modules/SeederModule.html":{}}}],["modulename",{"_index":286,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["modulename?.split('module')?.[0]?.touppercase",{"_index":310,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppConfigModule.html":{},"modules/AuthModule.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/SeederModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["money",{"_index":1269,"title":{},"body":{"index.html":{}}}],["monorepo",{"_index":1513,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["monthly",{"_index":1327,"title":{},"body":{"index.html":{}}}],["multi",{"_index":1294,"title":{},"body":{"index.html":{},"properties.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["multiple",{"_index":1512,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["mutation",{"_index":919,"title":{},"body":{"classes/UserResolver.html":{}}}],["mutation(undefined",{"_index":912,"title":{},"body":{"classes/UserResolver.html":{}}}],["name",{"_index":52,"title":{},"body":{"injectables/AppConfigService.html":{},"classes/AuthResolver.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/EscrowResolver.html":{},"modules/GraphQLGatewayModule.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"entities/Organization.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"classes/PaymentResolver.html":{},"entities/Permission.html":{},"classes/PropertyResolver.html":{},"entities/Role.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["names",{"_index":250,"title":{},"body":{"modules/ClientsModule.html":{},"index.html":{}}}],["names.map((name",{"_index":258,"title":{},"body":{"modules/ClientsModule.html":{}}}],["needed",{"_index":1395,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["nestclientsmodule",{"_index":254,"title":{},"body":{"modules/ClientsModule.html":{}}}],["nestclientsmodule.register(clients",{"_index":259,"title":{},"body":{"modules/ClientsModule.html":{}}}],["nestfactory",{"_index":219,"title":{},"body":{"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{},"modules/SeederModule.html":{}}}],["nestfactory.create(module",{"_index":230,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["nestfactory.createapplicationcontext",{"_index":295,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["nestfactory.createapplicationcontext(module",{"_index":812,"title":{},"body":{"modules/SeederModule.html":{}}}],["nestjs",{"_index":1446,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["nestjs/apollo",{"_index":574,"title":{},"body":{"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":11,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"modules/DatabaseModule.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"injectables/PropertyService.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/common/interfaces/type.interface",{"_index":810,"title":{},"body":{"modules/SeederModule.html":{}}}],["nestjs/config",{"_index":10,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"classes/ConfigHelper.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":220,"title":{},"body":{"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{},"modules/SeederModule.html":{},"dependencies.html":{}}}],["nestjs/graphql",{"_index":111,"title":{},"body":{"classes/AuthResolver.html":{},"entities/BaseEntity.html":{},"classes/CreateUserInput.html":{},"classes/EscrowResolver.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"entities/Permission.html":{},"classes/PropertyResolver.html":{},"entities/Role.html":{},"entities/User.html":{},"classes/User-1.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1016,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":462,"title":{},"body":{"modules/DatabaseModule.html":{},"injectables/OrganizationService.html":{},"injectables/SeederService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/typeorm/dist/interfaces/entity",{"_index":463,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/SeederModule.html":{}}}],["network",{"_index":1319,"title":{},"body":{"index.html":{}}}],["new",{"_index":223,"title":{},"body":{"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/GraphQLGatewayModule.html":{},"coverage.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["node",{"_index":1402,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["node:process",{"_index":424,"title":{},"body":{"classes/DataSource.html":{}}}],["node_env",{"_index":29,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["node_modules/typeorm/cli.js",{"_index":1406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nodejs",{"_index":1088,"title":{},"body":{"index.html":{}}}],["notes",{"_index":1476,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["notification",{"_index":633,"title":{},"body":{"injectables/NotificationService.html":{},"index.html":{}}}],["notification.controller",{"_index":625,"title":{},"body":{"modules/NotificationModule.html":{}}}],["notification.service",{"_index":616,"title":{},"body":{"controllers/NotificationController.html":{},"modules/NotificationModule.html":{}}}],["notification_client",{"_index":1052,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["notification_host",{"_index":556,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["notification_port",{"_index":1416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notificationcommand",{"_index":617,"title":{},"body":{"controllers/NotificationController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["notificationcommand.ping_notification",{"_index":618,"title":{},"body":{"controllers/NotificationController.html":{}}}],["notificationcontroller",{"_index":612,"title":{"controllers/NotificationController.html":{}},"body":{"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"coverage.html":{}}}],["notificationmodule",{"_index":620,"title":{"modules/NotificationModule.html":{}},"body":{"modules/NotificationModule.html":{},"modules.html":{},"overview.html":{}}}],["notificationresolver",{"_index":626,"title":{"classes/NotificationResolver.html":{}},"body":{"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"coverage.html":{}}}],["notifications",{"_index":1137,"title":{},"body":{"index.html":{}}}],["notificationservice",{"_index":615,"title":{"injectables/NotificationService.html":{}},"body":{"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"coverage.html":{},"overview.html":{}}}],["notifying",{"_index":1292,"title":{},"body":{"index.html":{}}}],["now",{"_index":342,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DatabaseUtil.html":{}}}],["now.tostring(16).padstart(12",{"_index":476,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["npm",{"_index":1097,"title":{},"body":{"index.html":{}}}],["null",{"_index":192,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/UserResolver-1.html":{}}}],["nullable",{"_index":132,"title":{},"body":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"entities/Role.html":{},"entities/User.html":{},"classes/User-1.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{}}}],["number",{"_index":239,"title":{},"body":{"classes/Bootstrapper.html":{},"entities/OrganizationMetadata.html":{},"miscellaneous/functions.html":{}}}],["numbers",{"_index":1198,"title":{},"body":{"index.html":{}}}],["numeric(5",{"_index":354,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["oauth",{"_index":1167,"title":{},"body":{"index.html":{}}}],["object",{"_index":1410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.values(userrole",{"_index":836,"title":{},"body":{"injectables/SeederService.html":{}}}],["objecttype",{"_index":150,"title":{},"body":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"entities/OrganizationMetadata.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{},"classes/User-1.html":{}}}],["official",{"_index":1102,"title":{},"body":{"index.html":{}}}],["ondelete",{"_index":693,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["onetoone",{"_index":649,"title":{},"body":{"entities/Organization.html":{},"entities/OrganizationMetadata.html":{}}}],["onetoone(undefined",{"_index":691,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["onupdate",{"_index":694,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["opt",{"_index":1334,"title":{},"body":{"index.html":{}}}],["option('args",{"_index":1389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["option('command",{"_index":1385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["option('microservice",{"_index":1380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["option('title",{"_index":1392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optional",{"_index":54,"title":{},"body":{"injectables/AppConfigService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"modules/GraphQLGatewayModule.html":{},"entities/Organization.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["options",{"_index":233,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/DatabaseModule.html":{}}}],["options/findoptionswhere",{"_index":737,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["order",{"_index":181,"title":{},"body":{"entities/BaseEntity.html":{}}}],["order.decorator.ts",{"_index":997,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["order_key",{"_index":998,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["orderxcolumn",{"_index":204,"title":{},"body":{"entities/BaseEntity.html":{}}}],["orderycolumn",{"_index":206,"title":{},"body":{"entities/BaseEntity.html":{}}}],["org",{"_index":885,"title":{},"body":{"classes/User-1.html":{}}}],["organization",{"_index":634,"title":{"entities/Organization.html":{},"classes/Organization-1.html":{}},"body":{"entities/Organization.html":{},"classes/Organization-1.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"entities/User.html":{},"classes/User-1.html":{},"classes/UserResolver-1.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["organization\".\"organizations",{"_index":332,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["organization\".\"organizations_metadata",{"_index":349,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["organization(@parent",{"_index":934,"title":{},"body":{"classes/UserResolver-1.html":{}}}],["organization(user",{"_index":928,"title":{},"body":{"classes/UserResolver-1.html":{}}}],["organization.controller",{"_index":710,"title":{},"body":{"modules/OrganizationModule.html":{}}}],["organization.entity",{"_index":702,"title":{},"body":{"entities/OrganizationMetadata.html":{},"classes/User-1.html":{}}}],["organization.meta",{"_index":692,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["organization.service",{"_index":670,"title":{},"body":{"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"classes/UserResolver-1.html":{}}}],["organization_client",{"_index":1053,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["organization_host",{"_index":557,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["organization_id",{"_index":361,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{},"entities/OrganizationMetadata.html":{},"entities/User.html":{}}}],["organization_port",{"_index":1417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organizationcommand",{"_index":671,"title":{},"body":{"controllers/OrganizationController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["organizationcommand.find_organization_by_id",{"_index":675,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["organizationcommand.ping_organization",{"_index":673,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["organizationcontroller",{"_index":663,"title":{"controllers/OrganizationController.html":{}},"body":{"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"coverage.html":{}}}],["organizationid",{"_index":389,"title":{},"body":{"classes/CreateUserInput.html":{},"entities/User.html":{},"classes/User-1.html":{}}}],["organizationmetadata",{"_index":639,"title":{"entities/OrganizationMetadata.html":{}},"body":{"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"coverage.html":{}}}],["organizationmodule",{"_index":705,"title":{"modules/OrganizationModule.html":{}},"body":{"modules/OrganizationModule.html":{},"modules.html":{},"overview.html":{}}}],["organizationresolver",{"_index":711,"title":{"classes/OrganizationResolver.html":{}},"body":{"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"coverage.html":{}}}],["organizations",{"_index":652,"title":{},"body":{"entities/Organization.html":{},"classes/OrganizationResolver.html":{},"index.html":{}}}],["organizations_metadata",{"_index":703,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["organizationservice",{"_index":669,"title":{"injectables/OrganizationService.html":{}},"body":{"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"classes/UserResolver-1.html":{},"coverage.html":{},"overview.html":{}}}],["orgid",{"_index":883,"title":{},"body":{"classes/User-1.html":{}}}],["out",{"_index":97,"title":{},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":1352,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":1059,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["package",{"_index":1007,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":1441,"title":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}},"body":{}}],["parameters",{"_index":51,"title":{},"body":{"injectables/AppConfigService.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"modules/GraphQLGatewayModule.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["parent",{"_index":931,"title":{},"body":{"classes/UserResolver-1.html":{}}}],["passed",{"_index":1453,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["passing",{"_index":1343,"title":{},"body":{"index.html":{}}}],["password",{"_index":306,"title":{},"body":{"classes/ConfigHelper.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"entities/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["passwordconfirmation",{"_index":390,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["path",{"_index":1124,"title":{},"body":{"index.html":{}}}],["path.join",{"_index":1398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paths/register",{"_index":1405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pay",{"_index":1282,"title":{},"body":{"index.html":{}}}],["payment",{"_index":763,"title":{},"body":{"injectables/PaymentService.html":{},"index.html":{}}}],["payment.controller",{"_index":755,"title":{},"body":{"modules/PaymentModule.html":{}}}],["payment.service",{"_index":746,"title":{},"body":{"controllers/PaymentController.html":{},"modules/PaymentModule.html":{}}}],["payment_client",{"_index":1054,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["payment_host",{"_index":558,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["payment_port",{"_index":1418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paymentcommand",{"_index":747,"title":{},"body":{"controllers/PaymentController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["paymentcommand.ping_payment",{"_index":748,"title":{},"body":{"controllers/PaymentController.html":{}}}],["paymentcontroller",{"_index":742,"title":{"controllers/PaymentController.html":{}},"body":{"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"coverage.html":{}}}],["paymentmodule",{"_index":750,"title":{"modules/PaymentModule.html":{}},"body":{"modules/PaymentModule.html":{},"modules.html":{},"overview.html":{}}}],["paymentresolver",{"_index":756,"title":{"classes/PaymentResolver.html":{}},"body":{"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"coverage.html":{}}}],["payments",{"_index":1134,"title":{},"body":{"index.html":{}}}],["paymentservice",{"_index":745,"title":{"injectables/PaymentService.html":{}},"body":{"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"coverage.html":{},"overview.html":{}}}],["paytm",{"_index":1311,"title":{},"body":{"index.html":{}}}],["pending",{"_index":1460,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["permission",{"_index":764,"title":{"entities/Permission.html":{}},"body":{"entities/Permission.html":{},"coverage.html":{}}}],["permissions",{"_index":1189,"title":{},"body":{"index.html":{}}}],["personal",{"_index":1193,"title":{},"body":{"index.html":{}}}],["pg",{"_index":1031,"title":{},"body":{"dependencies.html":{}}}],["phone",{"_index":340,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"entities/Organization.html":{},"entities/User.html":{},"index.html":{}}}],["ping",{"_index":105,"title":{},"body":{"classes/AuthResolver.html":{},"classes/EscrowResolver.html":{},"injectables/GatewayService.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"classes/UserResolver.html":{}}}],["ping_auth",{"_index":1411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ping_escrow",{"_index":1424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ping_media",{"_index":1426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ping_notification",{"_index":1427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ping_organization",{"_index":1429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ping_payment",{"_index":1431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ping_property",{"_index":1432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ping_user",{"_index":1440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pingauth",{"_index":107,"title":{},"body":{"classes/AuthResolver.html":{}}}],["pingescrow",{"_index":540,"title":{},"body":{"classes/EscrowResolver.html":{}}}],["pingmedia",{"_index":607,"title":{},"body":{"classes/MediaResolver.html":{}}}],["pingnotification",{"_index":629,"title":{},"body":{"classes/NotificationResolver.html":{}}}],["pingorganization",{"_index":721,"title":{},"body":{"classes/OrganizationResolver.html":{}}}],["pingpayment",{"_index":759,"title":{},"body":{"classes/PaymentResolver.html":{}}}],["pingproperty",{"_index":784,"title":{},"body":{"classes/PropertyResolver.html":{}}}],["pinguser",{"_index":915,"title":{},"body":{"classes/UserResolver.html":{}}}],["pk_63bbcee313cee9e95bfba3c7d2b",{"_index":363,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["pk_648e3f5447f725579d7d4ffdfb7",{"_index":383,"title":{},"body":{"classes/CreateRoleTable1741519642145.html":{}}}],["pk_6b031fcd0863e3f6b44230163f9",{"_index":347,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["pk_a3ffb1c0c8416b9fc6f907b7433",{"_index":415,"title":{},"body":{"classes/CreateUserTable1741519705062.html":{}}}],["platform",{"_index":1360,"title":{},"body":{"properties.html":{}}}],["please",{"_index":1506,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["pnpm",{"_index":1091,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["pnpminstall",{"_index":1099,"title":{},"body":{"index.html":{}}}],["policies",{"_index":1163,"title":{},"body":{"index.html":{}}}],["pong",{"_index":112,"title":{},"body":{"classes/AuthResolver.html":{},"classes/EscrowResolver.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"classes/UserResolver.html":{}}}],["populate",{"_index":1494,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["port",{"_index":236,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/SubgraphsBuilder.html":{}}}],["postgres",{"_index":434,"title":{},"body":{"classes/DataSource.html":{}}}],["precision",{"_index":684,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["preferences",{"_index":1336,"title":{},"body":{"index.html":{}}}],["prerequisites",{"_index":1082,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["preventing",{"_index":1246,"title":{},"body":{"index.html":{}}}],["price",{"_index":1243,"title":{},"body":{"index.html":{}}}],["primary",{"_index":348,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["primary_color",{"_index":350,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"entities/OrganizationMetadata.html":{}}}],["primary_contact_name",{"_index":338,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"entities/Organization.html":{}}}],["primarycolor",{"_index":681,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["primarycolumn",{"_index":793,"title":{},"body":{"entities/Role.html":{}}}],["primarycontactname",{"_index":636,"title":{},"body":{"entities/Organization.html":{}}}],["primarygeneratedcolumn",{"_index":146,"title":{},"body":{"entities/BaseEntity.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":161,"title":{},"body":{"entities/BaseEntity.html":{}}}],["privacy",{"_index":1199,"title":{},"body":{"index.html":{}}}],["private",{"_index":270,"title":{},"body":{"classes/ConfigHelper.html":{},"injectables/OrganizationService.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"injectables/UserService.html":{}}}],["process",{"_index":423,"title":{},"body":{"classes/DataSource.html":{}}}],["process.env.database_host",{"_index":435,"title":{},"body":{"classes/DataSource.html":{}}}],["process.env.database_name",{"_index":441,"title":{},"body":{"classes/DataSource.html":{}}}],["process.env.database_password",{"_index":440,"title":{},"body":{"classes/DataSource.html":{}}}],["process.env.database_port",{"_index":437,"title":{},"body":{"classes/DataSource.html":{}}}],["process.env.database_type",{"_index":433,"title":{},"body":{"classes/DataSource.html":{}}}],["process.env.database_username",{"_index":439,"title":{},"body":{"classes/DataSource.html":{}}}],["process.env.is_doc_env",{"_index":1423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.exit(1",{"_index":825,"title":{},"body":{"modules/SeederModule.html":{}}}],["processed",{"_index":1328,"title":{},"body":{"index.html":{}}}],["processing",{"_index":1313,"title":{},"body":{"index.html":{}}}],["production",{"_index":32,"title":{},"body":{"modules/AppConfigModule.html":{},"index.html":{}}}],["profile",{"_index":1207,"title":{},"body":{"index.html":{}}}],["profiles",{"_index":1210,"title":{},"body":{"index.html":{}}}],["project",{"_index":1084,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["promise",{"_index":251,"title":{},"body":{"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"modules/GraphQLGatewayModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"classes/SubgraphsBuilder.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{}}}],["proper",{"_index":1297,"title":{},"body":{"index.html":{}}}],["properly",{"_index":1233,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["properties",{"_index":122,"title":{"properties.html":{}},"body":{"entities/BaseEntity.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"entities/OrganizationMetadata.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{},"classes/User-1.html":{},"index.html":{},"properties.html":{}}}],["property",{"_index":788,"title":{},"body":{"injectables/PropertyService.html":{},"index.html":{},"properties.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["property.controller",{"_index":780,"title":{},"body":{"modules/PropertyModule.html":{}}}],["property.service",{"_index":771,"title":{},"body":{"controllers/PropertyController.html":{},"modules/PropertyModule.html":{}}}],["property_client",{"_index":1055,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["property_host",{"_index":559,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["property_port",{"_index":1419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["propertycommand",{"_index":772,"title":{},"body":{"controllers/PropertyController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["propertycommand.ping_property",{"_index":773,"title":{},"body":{"controllers/PropertyController.html":{}}}],["propertycontroller",{"_index":767,"title":{"controllers/PropertyController.html":{}},"body":{"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"coverage.html":{}}}],["propertydecorator",{"_index":1067,"title":{},"body":{"miscellaneous/functions.html":{}}}],["propertykey",{"_index":1069,"title":{},"body":{"miscellaneous/functions.html":{}}}],["propertymodule",{"_index":775,"title":{"modules/PropertyModule.html":{}},"body":{"modules/PropertyModule.html":{},"modules.html":{},"overview.html":{}}}],["propertyresolver",{"_index":781,"title":{"classes/PropertyResolver.html":{}},"body":{"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"coverage.html":{}}}],["propertyservice",{"_index":770,"title":{"injectables/PropertyService.html":{}},"body":{"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"injectables/PropertyService.html":{},"coverage.html":{},"overview.html":{}}}],["protecting",{"_index":1177,"title":{},"body":{"index.html":{}}}],["protocols",{"_index":1315,"title":{},"body":{"index.html":{}}}],["prototype",{"_index":177,"title":{},"body":{"entities/BaseEntity.html":{}}}],["provider",{"_index":800,"title":{},"body":{"modules/SeederModule.html":{}}}],["providers",{"_index":88,"title":{},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/SeederModule.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["provides",{"_index":1511,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["providing",{"_index":1222,"title":{},"body":{"index.html":{}}}],["public",{"_index":321,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["push",{"_index":1333,"title":{},"body":{"index.html":{}}}],["query",{"_index":109,"title":{},"body":{"classes/AuthResolver.html":{},"classes/EscrowResolver.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"classes/UserResolver.html":{}}}],["query(undefined",{"_index":106,"title":{},"body":{"classes/AuthResolver.html":{},"classes/EscrowResolver.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"classes/UserResolver.html":{}}}],["queryrunner",{"_index":326,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["queryrunner.query",{"_index":373,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["queryrunner.query(`alter",{"_index":364,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["queryrunner.query(`create",{"_index":330,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["queryrunner.query(`drop",{"_index":374,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["qumber",{"_index":1365,"title":{},"body":{"properties.html":{}}}],["qushah",{"_index":1075,"title":{},"body":{"index.html":{}}}],["qushah/common",{"_index":100,"title":{},"body":{"modules/AuthModule.html":{},"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{},"classes/CreateUserInput.html":{},"modules/DatabaseModule.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/GraphQLGatewayModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["qushah/common/config",{"_index":267,"title":{},"body":{"modules/CommonModule.html":{}}}],["qushah/common/config/config.helper",{"_index":256,"title":{},"body":{"modules/ClientsModule.html":{}}}],["qushah/common/constants/commands",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{}}}],["qushah/common/constants/commands/organization.command",{"_index":672,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["qushah/common/database/seeder/seeder",{"_index":808,"title":{},"body":{"modules/SeederModule.html":{}}}],["qushah/common/decorators",{"_index":153,"title":{},"body":{"entities/BaseEntity.html":{}}}],["qushah/common/utils",{"_index":157,"title":{},"body":{"entities/BaseEntity.html":{}}}],["r",{"_index":1403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["random",{"_index":482,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["randombytes",{"_index":484,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["randombytes.substring(3",{"_index":505,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["randombytes.substring(7",{"_index":507,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["rate",{"_index":1175,"title":{},"body":{"index.html":{}}}],["razorpay",{"_index":1312,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":62,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"controllers/DocumentationController.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{}}}],["receipts",{"_index":1324,"title":{},"body":{"index.html":{}}}],["recent",{"_index":1465,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["recurring",{"_index":1325,"title":{},"body":{"index.html":{}}}],["redis",{"_index":1092,"title":{},"body":{"index.html":{}}}],["redis_host",{"_index":19,"title":{},"body":{"modules/AppConfigModule.html":{},"miscellaneous/variables.html":{}}}],["redis_port",{"_index":21,"title":{},"body":{"modules/AppConfigModule.html":{},"miscellaneous/variables.html":{}}}],["redisconfig",{"_index":227,"title":{},"body":{"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{}}}],["redisconfig.host",{"_index":235,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["redisconfig.port",{"_index":237,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["references",{"_index":368,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["reflect",{"_index":1033,"title":{},"body":{"dependencies.html":{}}}],["reflected",{"_index":1265,"title":{},"body":{"index.html":{}}}],["refresh",{"_index":1170,"title":{},"body":{"index.html":{}}}],["regarding",{"_index":1204,"title":{},"body":{"index.html":{}}}],["register",{"_index":247,"title":{},"body":{"modules/ClientsModule.html":{},"modules/GraphQLGatewayModule.html":{}}}],["register(...names",{"_index":248,"title":{},"body":{"modules/ClientsModule.html":{}}}],["register(...subgraphnames",{"_index":568,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["registered",{"_index":1499,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["regulations",{"_index":1201,"title":{},"body":{"index.html":{}}}],["regulatory",{"_index":1288,"title":{},"body":{"index.html":{}}}],["rejectunauthorized",{"_index":444,"title":{},"body":{"classes/DataSource.html":{},"modules/DatabaseModule.html":{}}}],["rel_ad9c5b4a8fb0a54d63b8471019",{"_index":362,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["relations",{"_index":740,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["release",{"_index":1274,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["released",{"_index":1278,"title":{},"body":{"index.html":{}}}],["releases",{"_index":1293,"title":{},"body":{"index.html":{}}}],["rent",{"_index":1283,"title":{},"body":{"index.html":{}}}],["rent_fee_percentage",{"_index":353,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"entities/OrganizationMetadata.html":{}}}],["rental",{"_index":1359,"title":{},"body":{"properties.html":{}}}],["rented",{"_index":1251,"title":{},"body":{"index.html":{}}}],["rentfeepercentage",{"_index":682,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["reorder",{"_index":193,"title":{},"body":{"entities/BaseEntity.html":{}}}],["repo",{"_index":1141,"title":{},"body":{"index.html":{}}}],["repository",{"_index":728,"title":{},"body":{"injectables/OrganizationService.html":{},"injectables/SeederService.html":{},"injectables/UserService.html":{}}}],["request",{"_index":1338,"title":{},"body":{"index.html":{}}}],["requests",{"_index":1340,"title":{},"body":{"index.html":{}}}],["required",{"_index":1168,"title":{},"body":{"index.html":{}}}],["requires",{"_index":882,"title":{},"body":{"classes/User-1.html":{}}}],["reset",{"_index":96,"title":{},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resolution",{"_index":1361,"title":{},"body":{"properties.html":{}}}],["resolutions",{"_index":1125,"title":{},"body":{"index.html":{}}}],["resolvefield",{"_index":932,"title":{},"body":{"classes/UserResolver-1.html":{}}}],["resolvefield(undefined",{"_index":929,"title":{},"body":{"classes/UserResolver-1.html":{}}}],["resolver",{"_index":110,"title":{},"body":{"classes/AuthResolver.html":{},"classes/EscrowResolver.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{}}}],["resolver(user",{"_index":922,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolvers/auth.resolver",{"_index":102,"title":{},"body":{"modules/AuthModule.html":{}}}],["resolvers/escrow.resolver",{"_index":538,"title":{},"body":{"modules/EscrowModule.html":{}}}],["resolvers/media.resolver",{"_index":605,"title":{},"body":{"modules/MediaModule.html":{}}}],["resolvers/notification.resolver",{"_index":627,"title":{},"body":{"modules/NotificationModule.html":{}}}],["resolvers/organization.resolver",{"_index":712,"title":{},"body":{"modules/OrganizationModule.html":{}}}],["resolvers/payment.resolver",{"_index":757,"title":{},"body":{"modules/PaymentModule.html":{}}}],["resolvers/property.resolver",{"_index":782,"title":{},"body":{"modules/PropertyModule.html":{}}}],["resolvers/user.resolver",{"_index":901,"title":{},"body":{"modules/UserModule.html":{}}}],["resolves",{"_index":1483,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["results",{"_index":37,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"entities/Permission.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"entities/Role.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["retries",{"_index":1317,"title":{},"body":{"index.html":{}}}],["retrieve",{"_index":180,"title":{},"body":{"entities/BaseEntity.html":{}}}],["return",{"_index":63,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"controllers/MediaController.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"modules/SeederModule.html":{},"classes/SubgraphsBuilder.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":60,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"controllers/MediaController.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["revert",{"_index":1388,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["rizvi",{"_index":1366,"title":{},"body":{"properties.html":{}}}],["role",{"_index":391,"title":{"entities/Role.html":{}},"body":{"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"entities/Role.html":{},"injectables/SeederService.html":{},"entities/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["role.entity",{"_index":871,"title":{},"body":{"entities/User.html":{}}}],["role.enum.ts",{"_index":1047,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["roleexists",{"_index":838,"title":{},"body":{"injectables/SeederService.html":{}}}],["rolename",{"_index":837,"title":{},"body":{"injectables/SeederService.html":{}}}],["rolerepository",{"_index":830,"title":{},"body":{"injectables/SeederService.html":{}}}],["roles",{"_index":794,"title":{},"body":{"entities/Role.html":{},"injectables/SeederService.html":{},"index.html":{}}}],["rolls",{"_index":1463,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["routing",{"_index":1339,"title":{},"body":{"index.html":{}}}],["rules",{"_index":1277,"title":{},"body":{"index.html":{}}}],["run",{"_index":1083,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["running",{"_index":1396,"title":{"additional-documentation/running-migrations-and-seeders.html":{}},"body":{"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["runs",{"_index":1457,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["rxjs",{"_index":1036,"title":{},"body":{"dependencies.html":{}}}],["saltorrounds",{"_index":948,"title":{},"body":{"injectables/UserService.html":{}}}],["scalability",{"_index":1225,"title":{},"body":{"index.html":{}}}],["scale",{"_index":685,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["scans",{"_index":1257,"title":{},"body":{"index.html":{}}}],["schema",{"_index":422,"title":{},"body":{"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"modules/OrganizationModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["schema.type",{"_index":464,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/SeederModule.html":{}}}],["script",{"_index":1473,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["search",{"_index":1237,"title":{},"body":{"index.html":{}}}],["secure",{"_index":1158,"title":{},"body":{"index.html":{}}}],["securely",{"_index":1258,"title":{},"body":{"index.html":{}}}],["security",{"_index":1157,"title":{},"body":{"index.html":{}}}],["seed",{"_index":803,"title":{},"body":{"modules/SeederModule.html":{},"injectables/SeederService.html":{},"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["seed(service",{"_index":804,"title":{},"body":{"modules/SeederModule.html":{}}}],["seeder",{"_index":813,"title":{},"body":{"modules/SeederModule.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["seeder.seed",{"_index":815,"title":{},"body":{"modules/SeederModule.html":{}}}],["seeder.ts",{"_index":1492,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["seeder/seeder.service",{"_index":903,"title":{},"body":{"modules/UserModule.html":{}}}],["seedermodule",{"_index":795,"title":{"modules/SeederModule.html":{}},"body":{"modules/SeederModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["seedermodule.bootstrap(service",{"_index":820,"title":{},"body":{"modules/SeederModule.html":{}}}],["seedermodule.init([seederservice",{"_index":906,"title":{},"body":{"modules/UserModule.html":{}}}],["seeders",{"_index":1442,"title":{"additional-documentation/running-migrations-and-seeders.html":{}},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["seederservice",{"_index":807,"title":{"injectables/SeederService.html":{}},"body":{"modules/SeederModule.html":{},"injectables/SeederService.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["seeding",{"_index":818,"title":{},"body":{"modules/SeederModule.html":{}}}],["seedroles",{"_index":827,"title":{},"body":{"injectables/SeederService.html":{}}}],["selecting",{"_index":1508,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["sending",{"_index":1321,"title":{},"body":{"index.html":{}}}],["sensitive",{"_index":1194,"title":{},"body":{"index.html":{}}}],["separate",{"_index":1139,"title":{},"body":{"index.html":{}}}],["service",{"_index":117,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"injectables/MediaService.html":{},"injectables/NotificationService.html":{},"injectables/OrganizationService.html":{},"injectables/PaymentService.html":{},"injectables/PropertyService.html":{},"modules/SeederModule.html":{},"classes/User-1.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["service.interface",{"_index":809,"title":{},"body":{"modules/SeederModule.html":{}}}],["service.interface.ts",{"_index":994,"title":{},"body":{"coverage.html":{}}}],["serviceendpointdefinition",{"_index":849,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["services",{"_index":802,"title":{},"body":{"modules/SeederModule.html":{},"index.html":{}}}],["set",{"_index":468,"title":{},"body":{"modules/DatabaseModule.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["setup",{"_index":1093,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["shared",{"_index":1142,"title":{},"body":{"index.html":{}}}],["show",{"_index":1468,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["slug",{"_index":337,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"entities/Organization.html":{}}}],["sms",{"_index":1332,"title":{},"body":{"index.html":{}}}],["sort",{"_index":208,"title":{},"body":{"entities/BaseEntity.html":{}}}],["sortschema",{"_index":589,"title":{},"body":{"modules/GraphQLMicroserviceModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"entities/Permission.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"entities/Role.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{}}}],["source.ts",{"_index":962,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["source.util.ts",{"_index":419,"title":{},"body":{"classes/DataSource.html":{},"coverage.html":{}}}],["source.util.ts:9",{"_index":421,"title":{},"body":{"classes/DataSource.html":{}}}],["specified",{"_index":1493,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["specifies",{"_index":1452,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["specify",{"_index":1479,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["src/migrations",{"_index":1408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ssl",{"_index":443,"title":{},"body":{"classes/DataSource.html":{},"modules/DatabaseModule.html":{}}}],["standards",{"_index":1289,"title":{},"body":{"index.html":{}}}],["start",{"_index":1106,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1109,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":1110,"title":{},"body":{"index.html":{}}}],["started",{"_index":1074,"title":{"index.html":{}},"body":{}}],["statements",{"_index":955,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":166,"title":{},"body":{"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"modules/GraphQLGatewayModule.html":{},"modules/SeederModule.html":{},"classes/SubgraphsBuilder.html":{}}}],["status",{"_index":1262,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["storage",{"_index":1206,"title":{},"body":{"index.html":{}}}],["stored",{"_index":880,"title":{},"body":{"classes/User-1.html":{}}}],["storing",{"_index":1253,"title":{},"body":{"index.html":{}}}],["streamline",{"_index":1445,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["string",{"_index":56,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"controllers/MediaController.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"entities/Permission.html":{},"controllers/PropertyController.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"entities/Role.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["strong",{"_index":1162,"title":{},"body":{"index.html":{}}}],["structure",{"_index":1129,"title":{},"body":{"index.html":{}}}],["subgraphnames",{"_index":570,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["subgraphs",{"_index":581,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["subgraphsbuilder",{"_index":577,"title":{"classes/SubgraphsBuilder.html":{}},"body":{"modules/GraphQLGatewayModule.html":{},"classes/SubgraphsBuilder.html":{},"coverage.html":{}}}],["subgraphsbuilder.build(...subgraphnames",{"_index":582,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["subscribers",{"_index":448,"title":{},"body":{"classes/DataSource.html":{}}}],["subscriptions",{"_index":1303,"title":{},"body":{"index.html":{}}}],["successful",{"_index":1322,"title":{},"body":{"index.html":{}}}],["such",{"_index":1220,"title":{},"body":{"index.html":{}}}],["super_admin",{"_index":1058,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["supergraphsdl",{"_index":580,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["support",{"_index":1295,"title":{},"body":{"index.html":{},"modules.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["supporting",{"_index":1326,"title":{},"body":{"index.html":{}}}],["sure",{"_index":1095,"title":{},"body":{"index.html":{}}}],["svg",{"_index":1351,"title":{},"body":{"modules.html":{}}}],["symbol.for('order_key",{"_index":1428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["syntax",{"_index":1451,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["system",{"_index":1077,"title":{},"body":{"index.html":{}}}],["t",{"_index":58,"title":{},"body":{"injectables/AppConfigService.html":{},"classes/ConfigHelper.html":{},"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["table",{"_index":331,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1006,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":174,"title":{},"body":{"entities/BaseEntity.html":{},"miscellaneous/functions.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["target.prototype",{"_index":179,"title":{},"body":{"entities/BaseEntity.html":{}}}],["targets",{"_index":1466,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["tenant",{"_index":1190,"title":{},"body":{"index.html":{},"properties.html":{}}}],["tenants",{"_index":1228,"title":{},"body":{"index.html":{}}}],["test",{"_index":33,"title":{},"body":{"modules/AppConfigModule.html":{},"index.html":{}}}],["test:covtypeorm",{"_index":1115,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1114,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1111,"title":{},"body":{"index.html":{}}}],["this.appconfigservice.getconfig(key",{"_index":315,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.authservice.gethello",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.configservice.get(key",{"_index":64,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.documentationservice.gethello",{"_index":514,"title":{},"body":{"controllers/DocumentationController.html":{}}}],["this.escrowservice.gethello",{"_index":530,"title":{},"body":{"controllers/EscrowController.html":{}}}],["this.getconfig",{"_index":312,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environment.database_host",{"_index":302,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environment.database_name",{"_index":309,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environment.database_password",{"_index":307,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environment.database_port",{"_index":303,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environment.database_type",{"_index":301,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environment.database_username",{"_index":305,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environment.redis_host",{"_index":299,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environment.redis_port",{"_index":300,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environment[`${key}_port",{"_index":311,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.id",{"_index":164,"title":{},"body":{"entities/BaseEntity.html":{}}}],["this.mediaservice.gethello",{"_index":597,"title":{},"body":{"controllers/MediaController.html":{}}}],["this.notificationservice.gethello",{"_index":619,"title":{},"body":{"controllers/NotificationController.html":{}}}],["this.organizationservice.findall",{"_index":723,"title":{},"body":{"classes/OrganizationResolver.html":{}}}],["this.organizationservice.findone",{"_index":676,"title":{},"body":{"controllers/OrganizationController.html":{},"classes/UserResolver-1.html":{}}}],["this.organizationservice.gethello",{"_index":674,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["this.paymentservice.gethello",{"_index":749,"title":{},"body":{"controllers/PaymentController.html":{}}}],["this.propertyservice.gethello",{"_index":774,"title":{},"body":{"controllers/PropertyController.html":{}}}],["this.repository.find",{"_index":739,"title":{},"body":{"injectables/OrganizationService.html":{},"injectables/UserService.html":{}}}],["this.repository.findone",{"_index":741,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["this.repository.save",{"_index":950,"title":{},"body":{"injectables/UserService.html":{}}}],["this.rolerepository.create",{"_index":841,"title":{},"body":{"injectables/SeederService.html":{}}}],["this.rolerepository.findone",{"_index":839,"title":{},"body":{"injectables/SeederService.html":{}}}],["this.rolerepository.save",{"_index":840,"title":{},"body":{"injectables/SeederService.html":{}}}],["this.seedroles",{"_index":835,"title":{},"body":{"injectables/SeederService.html":{}}}],["this.userservice.create(input",{"_index":925,"title":{},"body":{"classes/UserResolver.html":{}}}],["this.userservice.find",{"_index":923,"title":{},"body":{"classes/UserResolver.html":{}}}],["this.userservice.gethello",{"_index":893,"title":{},"body":{"controllers/UserController.html":{}}}],["through",{"_index":1344,"title":{},"body":{"index.html":{}}}],["throw",{"_index":1485,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["time",{"_index":1329,"title":{},"body":{"index.html":{}}}],["timely",{"_index":1331,"title":{},"body":{"index.html":{}}}],["timestamp",{"_index":341,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DatabaseUtil.html":{}}}],["timestamp.substring(0",{"_index":499,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["timestamp.substring(8",{"_index":501,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["title",{"_index":1393,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["todo",{"_index":406,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["token",{"_index":1164,"title":{},"body":{"index.html":{}}}],["tool",{"_index":1118,"title":{"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}},"body":{"index.html":{}}}],["trail",{"_index":1273,"title":{},"body":{"index.html":{}}}],["transaction",{"_index":1270,"title":{},"body":{"index.html":{}}}],["transactions",{"_index":1135,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":1022,"title":{},"body":{"dependencies.html":{}}}],["transparency",{"_index":1275,"title":{},"body":{"index.html":{}}}],["transport",{"_index":222,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{}}}],["transport.redis",{"_index":232,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{}}}],["troubleshooting",{"_index":1496,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["true",{"_index":16,"title":{},"body":{"modules/AppConfigModule.html":{},"entities/BaseEntity.html":{},"classes/ConfigHelper.html":{},"modules/DatabaseModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"entities/Role.html":{},"entities/User.html":{},"classes/User-1.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"miscellaneous/variables.html":{}}}],["true})@column({name",{"_index":697,"title":{},"body":{"entities/OrganizationMetadata.html":{},"entities/User.html":{}}}],["true})@column({nullable",{"_index":688,"title":{},"body":{"entities/OrganizationMetadata.html":{},"entities/Role.html":{}}}],["true})@deletedatecolumn({name",{"_index":133,"title":{},"body":{"entities/BaseEntity.html":{}}}],["true})@directive('@external",{"_index":877,"title":{},"body":{"classes/User-1.html":{}}}],["true})@directive('@requires(fields",{"_index":875,"title":{},"body":{"classes/User-1.html":{}}}],["true})@onetoone(undefined",{"_index":640,"title":{},"body":{"entities/Organization.html":{}}}],["true})@updatedatecolumn({name",{"_index":138,"title":{},"body":{"entities/BaseEntity.html":{}}}],["ts",{"_index":1401,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["tsconfig",{"_index":1404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["type",{"_index":53,"title":{},"body":{"injectables/AppConfigService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"modules/GraphQLGatewayModule.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"entities/Permission.html":{},"entities/Role.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":148,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"injectables/OrganizationService.html":{},"entities/Permission.html":{},"entities/Role.html":{},"injectables/SeederService.html":{},"entities/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["typeorm/find",{"_index":736,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["typeorm/metadata/columnmetadata",{"_index":155,"title":{},"body":{"entities/BaseEntity.html":{}}}],["typeorm_migrations",{"_index":432,"title":{},"body":{"classes/DataSource.html":{}}}],["typeormcommand",{"_index":1005,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeormdatasource",{"_index":426,"title":{},"body":{"classes/DataSource.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeormmodule",{"_index":460,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["typeormmodule.forfeature(entities",{"_index":471,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["typeormmodule.forrootasync",{"_index":465,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["typeormmoduleoptions",{"_index":461,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["types/yargs",{"_index":1019,"title":{},"body":{"dependencies.html":{}}}],["uint8array(10",{"_index":486,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["unauthorized",{"_index":1159,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":72,"title":{},"body":{"controllers/AuthController.html":{},"entities/BaseEntity.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{}}}],["unique",{"_index":345,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"entities/Organization.html":{}}}],["unit",{"_index":1112,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":1363,"title":{},"body":{"properties.html":{}}}],["up",{"_index":323,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["up(queryrunner",{"_index":328,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["update",{"_index":371,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{},"index.html":{}}}],["updated_at",{"_index":139,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["updatedat",{"_index":126,"title":{},"body":{"entities/BaseEntity.html":{}}}],["updatedatecolumn",{"_index":147,"title":{},"body":{"entities/BaseEntity.html":{}}}],["updates",{"_index":1208,"title":{},"body":{"index.html":{}}}],["upi",{"_index":1310,"title":{},"body":{"index.html":{}}}],["uq_963693341bd612aa01ddf3a4b68",{"_index":346,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["uq_9b7ca6d30b94fef571cff876884",{"_index":344,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["url",{"_index":856,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["usage",{"_index":1449,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["use",{"_index":1127,"title":{"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}},"body":{"index.html":{}}}],["used",{"_index":1489,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["usedatasource(datasource",{"_index":167,"title":{},"body":{"entities/BaseEntity.html":{}}}],["usefactory",{"_index":466,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/GraphQLGatewayModule.html":{}}}],["user",{"_index":858,"title":{"entities/User.html":{},"classes/User-1.html":{}},"body":{"entities/User.html":{},"classes/User-1.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["user\".\"roles",{"_index":381,"title":{},"body":{"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["user\".\"users",{"_index":414,"title":{},"body":{"classes/CreateUserTable1741519705062.html":{}}}],["user.controller",{"_index":899,"title":{},"body":{"modules/UserModule.html":{}}}],["user.input",{"_index":921,"title":{},"body":{"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["user.input.ts",{"_index":386,"title":{},"body":{"classes/CreateUserInput.html":{},"coverage.html":{}}}],["user.input.ts:10",{"_index":395,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:13",{"_index":396,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:16",{"_index":393,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:19",{"_index":398,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:22",{"_index":399,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:25",{"_index":400,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:28",{"_index":402,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:31",{"_index":397,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.organizationid",{"_index":935,"title":{},"body":{"classes/UserResolver-1.html":{}}}],["user.service",{"_index":890,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{}}}],["user_client",{"_index":1056,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["user_host",{"_index":560,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["user_port",{"_index":1420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usercommand",{"_index":891,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usercommand.ping_user",{"_index":892,"title":{},"body":{"controllers/UserController.html":{}}}],["usercontroller",{"_index":886,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["usermodule",{"_index":894,"title":{"modules/UserModule.html":{}},"body":{"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":304,"title":{},"body":{"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{}}}],["userresolver",{"_index":900,"title":{"classes/UserResolver.html":{},"classes/UserResolver-1.html":{}},"body":{"modules/UserModule.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"coverage.html":{}}}],["userrole",{"_index":401,"title":{},"body":{"classes/CreateUserInput.html":{},"injectables/SeederService.html":{},"miscellaneous/enumerations.html":{}}}],["users",{"_index":872,"title":{},"body":{"entities/User.html":{},"classes/UserResolver.html":{},"index.html":{}}}],["userservice",{"_index":889,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":182,"title":{},"body":{"entities/BaseEntity.html":{},"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["utilities",{"_index":1147,"title":{},"body":{"index.html":{}}}],["uuid",{"_index":333,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{},"entities/User.html":{}}}],["uuid_generate_v4",{"_index":334,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["uuidv7",{"_index":495,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["valid('development",{"_index":31,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["validated",{"_index":1234,"title":{},"body":{"index.html":{}}}],["validation",{"_index":1230,"title":{},"body":{"index.html":{}}}],["validationpipe",{"_index":217,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["validationschema",{"_index":17,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["validator",{"_index":405,"title":{},"body":{"classes/CreateUserInput.html":{},"dependencies.html":{}}}],["value",{"_index":190,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":200,"title":{},"body":{"entities/BaseEntity.html":{}}}],["variable",{"_index":963,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":428,"title":{"miscellaneous/variables.html":{}},"body":{"classes/DataSource.html":{},"miscellaneous/variables.html":{}}}],["varying",{"_index":336,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["verification",{"_index":1305,"title":{},"body":{"index.html":{}}}],["verified",{"_index":1306,"title":{},"body":{"index.html":{}}}],["verify",{"_index":1500,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["version",{"_index":1357,"title":{},"body":{"properties.html":{}}}],["versioning",{"_index":1505,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["videos",{"_index":1255,"title":{},"body":{"index.html":{}}}],["void",{"_index":806,"title":{},"body":{"modules/SeederModule.html":{}}}],["warning",{"_index":1487,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["watch",{"_index":1107,"title":{},"body":{"index.html":{}}}],["way",{"_index":1241,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["within",{"_index":1140,"title":{},"body":{"index.html":{}}}],["without",{"_index":1121,"title":{},"body":{"index.html":{}}}],["world",{"_index":522,"title":{},"body":{"injectables/DocumentationService.html":{}}}],["worrying",{"_index":1122,"title":{},"body":{"index.html":{}}}],["yargs",{"_index":1039,"title":{},"body":{"dependencies.html":{}}}],["yargs(process.argv.slice(2",{"_index":1379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ycolumn",{"_index":199,"title":{},"body":{"entities/BaseEntity.html":{}}}],["yes",{"_index":459,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["zoom",{"_index":95,"title":{},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppConfigModule.html":{"url":"modules/AppConfigModule.html","title":"module - AppConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    AppConfigModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/config/config.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { ConfigModule } from '@nestjs/config';\nimport { Module } from '@nestjs/common';\nimport Joi from 'joi';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      validationSchema: Joi.object({\n        REDIS_HOST: Joi.string().required(),\n        REDIS_PORT: Joi.number().required(),\n        DATABASE_TYPE: Joi.string().required(),\n        DATABASE_HOST: Joi.string().required(),\n        DATABASE_PORT: Joi.string().required(),\n        DATABASE_USERNAME: Joi.string().required(),\n        DATABASE_PASSWORD: Joi.string().required(),\n        DATABASE_NAME: Joi.string().required(),\n        NODE_ENV: Joi.string()\n          .valid('development', 'production', 'test')\n          .default('development'),\n      }),\n    }),\n  ],\n})\nexport class AppConfigModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppConfigService.html":{"url":"injectables/AppConfigService.html","title":"injectable - AppConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/config/config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in libs/common/src/config/config.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getConfig\n                        \n                    \n                \n            \n            \n                \ngetConfig(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/config/config.service.ts:8\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class AppConfigService {\n  constructor(private readonly configService: ConfigService) {}\n\n  getConfig(key: string): T {\n    return this.configService.get(key);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/auth.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/auth/src/auth.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { AuthCommand } from '@qushah/common/constants/commands';\n\n@Controller()\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @MessagePattern({ cmd: AuthCommand.PING_AUTH })\n  getHello(): string {\n    return this.authService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nCommonModule->AuthModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nAuthModule -->\n\nGraphQLMicroserviceModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/auth/src/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { CommonModule, GraphQLMicroserviceModule } from '@qushah/common';\nimport { AuthResolver } from './resolvers/auth.resolver';\n\n@Module({\n  imports: [CommonModule, GraphQLMicroserviceModule],\n  controllers: [AuthController],\n  providers: [AuthService, AuthResolver],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthResolver.html":{"url":"classes/AuthResolver.html","title":"class - AuthResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/resolvers/auth.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingAuth'})\n                \n            \n\n                    \n                        \n                            Defined in apps/auth/src/resolvers/auth.resolver.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\n\n@Resolver()\nexport class AuthResolver {\n  @Query(() => String, { name: 'pingAuth' })\n  ping(): string {\n    return 'pong';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/auth/src/auth.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AuthService {\n  getHello(): string {\n    return 'Hello from Auth Service!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/BaseEntity.html":{"url":"entities/BaseEntity.html","title":"entity - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/database/entities/base.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ColumnOrder(9999)@Field(undefined)@CreateDateColumn({name: 'created_at'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/common/src/database/entities/base.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ColumnOrder(9999)@Field(undefined, {nullable: true})@DeleteDateColumn({name: 'deleted_at', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/common/src/database/entities/base.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ColumnOrder(undefined)@Field(undefined)@PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/common/src/database/entities/base.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ColumnOrder(9999)@Field(undefined, {nullable: true})@UpdateDateColumn({name: 'updated_at', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/common/src/database/entities/base.entity.ts:32\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  BaseEntity as BaseEntityTypeOrm,\n  BeforeInsert,\n  CreateDateColumn,\n  DataSource,\n  DeleteDateColumn,\n  Entity,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { Field, ObjectType } from '@nestjs/graphql';\nimport { ColumnOrder, getColumnOrder } from '@qushah/common/decorators';\nimport { ColumnMetadata } from 'typeorm/metadata/ColumnMetadata';\nimport { DatabaseUtil } from '@qushah/common/utils';\n\n@ObjectType()\n@Entity()\nexport abstract class BaseEntity extends BaseEntityTypeOrm {\n  @ColumnOrder(-1)\n  @Field(() => String)\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @ColumnOrder(9999)\n  @Field(() => Date)\n  @CreateDateColumn({ name: 'created_at' })\n  createdAt: Date;\n\n  @ColumnOrder(9999)\n  @Field(() => Date, { nullable: true })\n  @UpdateDateColumn({ name: 'updated_at', nullable: true })\n  updatedAt?: Date;\n\n  @ColumnOrder(9999)\n  @Field(() => Date, { nullable: true })\n  @DeleteDateColumn({ name: 'deleted_at', nullable: true })\n  deletedAt?: Date;\n\n  @BeforeInsert()\n  generateUUID() {\n    this.id = DatabaseUtil.generateUUIDv7();\n  }\n\n  static useDataSource(dataSource: DataSource) {\n    BaseEntityTypeOrm.useDataSource.call(this, dataSource);\n    const meta = dataSource.entityMetadatasMap.get(this);\n\n    const getOrderSafely = (column: ColumnMetadata) => {\n      const target = column.target as any;\n\n      // Check if the target and its prototype exist\n      if (target && target.prototype) {\n        // Retrieve the column order using the custom getColumnOrder function\n        return getColumnOrder(target.prototype, column.propertyName);\n      }\n\n      // Fallback to a default high order value if target is undefined\n      return 9996;\n    };\n\n    if (meta != null) {\n      // Reorder columns based on custom `@ColumnOrder` decorator\n      meta.columns = [...meta.columns].sort((xColumn, yColumn) => {\n        // Get the order values for both columns being compared\n        const orderXColumn = getOrderSafely(xColumn);\n        const orderYColumn = getOrderSafely(yColumn);\n\n        // Sort in ascending order\n        return orderXColumn - orderYColumn;\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Bootstrapper.html":{"url":"classes/Bootstrapper.html","title":"class - Bootstrapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Bootstrapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/utils/bootstrapper.util.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Async\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init(module: any)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/utils/bootstrapper.util.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                module\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Logger, ValidationPipe } from '@nestjs/common';\nimport { ConfigHelper } from '@qushah/common';\nimport { NestFactory } from '@nestjs/core';\nimport { MicroserviceOptions, Transport } from '@nestjs/microservices';\n\nexport class Bootstrapper {\n  static async init(module: any) {\n    const logger = new Logger(`${module.name}Bootstrap`);\n    const configHelper = await ConfigHelper.getInstance();\n    const redisConfig = configHelper.redisConfig;\n    const app = await NestFactory.create(module);\n    app.connectMicroservice({\n      transport: Transport.REDIS,\n      options: {\n        host: redisConfig.host,\n        port: redisConfig.port,\n      },\n    });\n    await app.startAllMicroservices();\n    const port: number = configHelper.getModulePort(module.name);\n    app.useGlobalPipes(new ValidationPipe());\n    await app.listen(port);\n    logger.log(`Microservice listening on port ${port}...`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ClientsModule.html":{"url":"modules/ClientsModule.html","title":"module - ClientsModule","body":"\n                   \n\n\n\n\n    Modules\n    ClientsModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/clients/clients.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(...names: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/clients/clients.module.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                names\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, Global, DynamicModule } from '@nestjs/common';\nimport {\n  ClientsModule as NestClientsModule,\n  ClientsModuleOptions,\n  Transport,\n} from '@nestjs/microservices';\nimport { ConfigHelper } from '@qushah/common/config/config.helper';\n\n@Global()\n@Module({})\nexport class ClientsModule {\n  static async register(...names: string[]): Promise {\n    const configHelper = await ConfigHelper.getInstance();\n    const { host, port } = configHelper.redisConfig;\n    const clients: ClientsModuleOptions = names.map((name) => ({\n      name,\n      transport: Transport.REDIS,\n      options: {\n        host,\n        port,\n      },\n    }));\n    return {\n      module: ClientsModule,\n      imports: [NestClientsModule.register(clients)],\n      exports: [NestClientsModule],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CommonModule.html":{"url":"modules/CommonModule.html","title":"module - CommonModule","body":"\n                   \n\n\n\n\n    Modules\n    CommonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_exports\n\n\n\ncluster_CommonModule_imports\n\n\n\ncluster_CommonModule_providers\n\n\n\n\nAppConfigModule\n\nAppConfigModule\n\n\n\nCommonModule\n\nCommonModule\n\nCommonModule -->\n\nAppConfigModule->CommonModule\n\n\n\n\n\nCommonService \n\nCommonService \n\nCommonService  -->\n\nCommonModule->CommonService \n\n\n\n\n\nCommonService\n\nCommonService\n\nCommonModule -->\n\nCommonService->CommonModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/common.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CommonService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppConfigModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CommonService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CommonService } from './common.service';\nimport { AppConfigModule } from '@qushah/common/config';\n\n@Module({\n  imports: [AppConfigModule],\n  providers: [CommonService],\n  exports: [CommonService],\n})\nexport class CommonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CommonService.html":{"url":"injectables/CommonService.html","title":"injectable - CommonService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CommonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/common.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class CommonService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigHelper.html":{"url":"classes/ConfigHelper.html","title":"class - ConfigHelper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/config/config.helper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                appConfigService\n                            \n                            \n                                    Private\n                                    Static\n                                instance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getConfig\n                            \n                            \n                                    Static\n                                    Async\n                                getInstance\n                            \n                            \n                                getMicroServiceHosts\n                            \n                            \n                                getModulePort\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    redisConfig\n                                \n                                \n                                    databaseConfig\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Private\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in libs/common/src/config/config.helper.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        appConfigService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AppConfigService\n\n                    \n                \n                    \n                        \n                                Defined in libs/common/src/config/config.helper.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        instance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigHelper\n\n                    \n                \n                    \n                        \n                                Defined in libs/common/src/config/config.helper.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getConfig\n                        \n                    \n                \n            \n            \n                \ngetConfig(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/config/config.helper.ts:63\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        getInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    getInstance()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/config/config.helper.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMicroServiceHosts\n                        \n                    \n                \n            \n            \n                \ngetMicroServiceHosts(microserviceName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/config/config.helper.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                microserviceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { host: any; port: any; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getModulePort\n                        \n                    \n                \n            \n            \n                \ngetModulePort(moduleName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/config/config.helper.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                moduleName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        redisConfig\n                    \n                \n\n                \n                    \n                        getredisConfig()\n                    \n                \n                            \n                                \n                                    Defined in libs/common/src/config/config.helper.ts:31\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        databaseConfig\n                    \n                \n\n                \n                    \n                        getdatabaseConfig()\n                    \n                \n                            \n                                \n                                    Defined in libs/common/src/config/config.helper.ts:37\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ConfigService } from '@nestjs/config';\nimport { AppConfigService } from './config.service';\nimport { NestFactory } from '@nestjs/core';\nimport { ConfigModule } from '@nestjs/config';\nimport { ENVIRONMENT } from '@qushah/common';\n\nexport class ConfigHelper {\n  private static instance: ConfigHelper;\n  private appConfigService: AppConfigService;\n\n  private constructor() {}\n\n  static async getInstance(): Promise {\n    if (!ConfigHelper.instance) {\n      const appContext = await NestFactory.createApplicationContext(\n        ConfigModule.forRoot({\n          isGlobal: true,\n        }),\n      );\n\n      const configService = appContext.get(ConfigService);\n      const appConfigService = new AppConfigService(configService);\n\n      ConfigHelper.instance = new ConfigHelper();\n      ConfigHelper.instance.appConfigService = appConfigService;\n    }\n\n    return ConfigHelper.instance;\n  }\n\n  get redisConfig() {\n    const host = this.getConfig(ENVIRONMENT.REDIS_HOST);\n    const port = this.getConfig(ENVIRONMENT.REDIS_PORT);\n    return { host, port };\n  }\n\n  get databaseConfig() {\n    const type = this.getConfig(ENVIRONMENT.DATABASE_TYPE);\n    const host = this.getConfig(ENVIRONMENT.DATABASE_HOST);\n    const port = this.getConfig(ENVIRONMENT.DATABASE_PORT);\n    const username = this.getConfig(ENVIRONMENT.DATABASE_USERNAME);\n    const password = this.getConfig(ENVIRONMENT.DATABASE_PASSWORD);\n    const database = this.getConfig(ENVIRONMENT.DATABASE_NAME);\n    return { type, host, port, username, password, database };\n  }\n\n  getModulePort(moduleName: string) {\n    const key = moduleName?.split('Module')?.[0]?.toUpperCase();\n    if (!key) return;\n    return this.getConfig(ENVIRONMENT[`${key}_PORT`]);\n  }\n\n  getMicroServiceHosts(microserviceName: string) {\n    const host = this.getConfig(\n      `${microserviceName}_HOST`.toUpperCase(),\n    );\n    const port = this.getConfig(\n      `${microserviceName}_PORT`.toUpperCase(),\n    );\n    return { host, port };\n  }\n\n  getConfig(key: string) {\n    return this.appConfigService.getConfig(key);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrganizationAndMetaTable1741518145374.html":{"url":"classes/CreateOrganizationAndMetaTable1741518145374.html","title":"class - CreateOrganizationAndMetaTable1741518145374","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrganizationAndMetaTable1741518145374\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/organization/src/migrations/1741518145374-CreateOrganizationAndMetaTable.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'CreateOrganizationAndMetaTable1741518145374'\n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/migrations/1741518145374-CreateOrganizationAndMetaTable.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/organization/src/migrations/1741518145374-CreateOrganizationAndMetaTable.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/organization/src/migrations/1741518145374-CreateOrganizationAndMetaTable.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class CreateOrganizationAndMetaTable1741518145374\n  implements MigrationInterface\n{\n  name = 'CreateOrganizationAndMetaTable1741518145374';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`CREATE TABLE \"organization\".\"organizations\"\n                             (\n                                 \"id\"                   uuid              NOT NULL DEFAULT uuid_generate_v4(),\n                                 \"name\"                 character varying NOT NULL,\n                                 \"slug\"                 character varying NOT NULL,\n                                 \"primary_contact_name\" character varying NOT NULL,\n                                 \"email\"                character varying NOT NULL,\n                                 \"phone\"                character varying NOT NULL,\n                                 \"created_at\"           TIMESTAMP         NOT NULL DEFAULT now(),\n                                 \"updated_at\"           TIMESTAMP                  DEFAULT now(),\n                                 \"deleted_at\"           TIMESTAMP,\n                                 CONSTRAINT \"UQ_9b7ca6d30b94fef571cff876884\" UNIQUE (\"name\"),\n                                 CONSTRAINT \"UQ_963693341bd612aa01ddf3a4b68\" UNIQUE (\"slug\"),\n                                 CONSTRAINT \"PK_6b031fcd0863e3f6b44230163f9\" PRIMARY KEY (\"id\")\n                             )`);\n    await queryRunner.query(`CREATE TABLE \"organization\".\"organizations_metadata\"\n                             (\n                                 \"id\"                     uuid              NOT NULL DEFAULT uuid_generate_v4(),\n                                 \"primary_color\"          character varying,\n                                 \"domain\"                 character varying,\n                                 \"logo\"                   character varying NOT NULL,\n                                 \"rent_fee_percentage\"    numeric(5, 2)     NOT NULL DEFAULT '5',\n                                 \"deposit_fee_percentage\" numeric(5, 2)     NOT NULL DEFAULT '5',\n                                 \"allow_interest_earning\" boolean           NOT NULL DEFAULT false,\n                                 \"organization_id\"        uuid,\n                                 \"created_at\"             TIMESTAMP         NOT NULL DEFAULT now(),\n                                 \"updated_at\"             TIMESTAMP                  DEFAULT now(),\n                                 \"deleted_at\"             TIMESTAMP,\n                                 CONSTRAINT \"REL_ad9c5b4a8fb0a54d63b8471019\" UNIQUE (\"organization_id\"),\n                                 CONSTRAINT \"PK_63bbcee313cee9e95bfba3c7d2b\" PRIMARY KEY (\"id\")\n                             )`);\n    await queryRunner.query(`ALTER TABLE \"organization\".\"organizations_metadata\"\n        ADD CONSTRAINT \"FK_ad9c5b4a8fb0a54d63b84710190\" FOREIGN KEY (\"organization_id\") REFERENCES \"organization\".\"organizations\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE`);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"organization\".\"organizations_metadata\"\n        DROP CONSTRAINT \"FK_ad9c5b4a8fb0a54d63b84710190\"`);\n    await queryRunner.query(\n      `DROP TABLE \"organization\".\"organizations_metadata\"`,\n    );\n    await queryRunner.query(`DROP TABLE \"organization\".\"organizations\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRoleTable1741519642145.html":{"url":"classes/CreateRoleTable1741519642145.html","title":"class - CreateRoleTable1741519642145","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRoleTable1741519642145\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user/src/migrations/1741519642145-CreateRoleTable.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'CreateRoleTable1741519642145'\n                    \n                \n                    \n                        \n                                Defined in apps/user/src/migrations/1741519642145-CreateRoleTable.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/user/src/migrations/1741519642145-CreateRoleTable.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/user/src/migrations/1741519642145-CreateRoleTable.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class CreateRoleTable1741519642145 implements MigrationInterface {\n  name = 'CreateRoleTable1741519642145';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`CREATE TABLE \"user\".\"roles\"\n                             (\n                                 \"name\"        character varying NOT NULL,\n                                 \"description\" character varying,\n                                 CONSTRAINT \"PK_648e3f5447f725579d7d4ffdfb7\" PRIMARY KEY (\"name\")\n                             )`);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`DROP TABLE \"user\".\"roles\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserInput.html":{"url":"classes/CreateUserInput.html","title":"class - CreateUserInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user/src/dtos/create-user.input.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                lastName\n                            \n                            \n                                    \n                                organizationId\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                passwordConfirmation\n                            \n                            \n                                    \n                                phone\n                            \n                            \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/dtos/create-user.input.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/dtos/create-user.input.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/dtos/create-user.input.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        organizationId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/dtos/create-user.input.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/dtos/create-user.input.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        passwordConfirmation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/dtos/create-user.input.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/dtos/create-user.input.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRole\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/dtos/create-user.input.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql';\nimport { UserRole } from '@qushah/common';\nimport { IsString } from 'class-validator';\n\n//  TODO: Implement Class Validator\n@InputType()\nexport class CreateUserInput {\n  @IsString()\n  @Field(() => String)\n  firstName: string;\n\n  @Field(() => String)\n  lastName: string;\n\n  @Field(() => String)\n  email: string;\n\n  @Field(() => String)\n  password: string;\n\n  @Field(() => String)\n  passwordConfirmation: string;\n\n  @Field(() => String)\n  phone: string;\n\n  @Field(() => UserRole)\n  role: UserRole;\n\n  @Field(() => String)\n  organizationId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserTable1741519705062.html":{"url":"classes/CreateUserTable1741519705062.html","title":"class - CreateUserTable1741519705062","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserTable1741519705062\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user/src/migrations/1741519705062-CreateUserTable.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'CreateUserTable1741519705062'\n                    \n                \n                    \n                        \n                                Defined in apps/user/src/migrations/1741519705062-CreateUserTable.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/user/src/migrations/1741519705062-CreateUserTable.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/user/src/migrations/1741519705062-CreateUserTable.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class CreateUserTable1741519705062 implements MigrationInterface {\n  name = 'CreateUserTable1741519705062';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`CREATE TABLE \"user\".\"users\"\n                             (\n                                 \"id\"              uuid              NOT NULL DEFAULT uuid_generate_v4(),\n                                 \"firstName\"       character varying NOT NULL,\n                                 \"lastName\"        character varying NOT NULL,\n                                 \"email\"           character varying NOT NULL,\n                                 \"password\"        character varying NOT NULL,\n                                 \"phone\"           character varying NOT NULL,\n                                 \"organization_id\" uuid,\n                                 \"role\"         character varying,\n                                 \"created_at\"      TIMESTAMP         NOT NULL DEFAULT now(),\n                                 \"updated_at\"      TIMESTAMP                  DEFAULT now(),\n                                 \"deleted_at\"      TIMESTAMP,\n                                 CONSTRAINT \"PK_a3ffb1c0c8416b9fc6f907b7433\" PRIMARY KEY (\"id\")\n                             )`);\n    await queryRunner.query(`ALTER TABLE \"user\".\"users\"\n        ADD CONSTRAINT \"FK_a2cecd1a3531c0b041e29ba46e1\" FOREIGN KEY (\"role\") REFERENCES \"user\".\"roles\" (\"name\") ON DELETE NO ACTION ON UPDATE NO ACTION`);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"user\".\"users\"\n        DROP CONSTRAINT \"FK_a2cecd1a3531c0b041e29ba46e1\"`);\n    await queryRunner.query(`DROP TABLE \"user\".\"users\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DataSource.html":{"url":"classes/DataSource.html","title":"class - DataSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/utils/data-source.util.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        getInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    getInstance(schema: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/utils/data-source.util.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                schema\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import process from 'node:process';\nimport * as dotenv from 'dotenv';\nimport { DataSource as TypeormDataSource } from 'typeorm';\n\n// Load environment variables from .env file\ndotenv.config();\n\nexport class DataSource {\n  static getInstance(schema: string) {\n    return new TypeormDataSource({\n      migrationsTableName: 'typeorm_migrations',\n      type: (process.env.DATABASE_TYPE as 'postgres') || 'postgres',\n      host: process.env.DATABASE_HOST || 'localhost',\n      port: +process.env.DATABASE_PORT || 5432,\n      username: process.env.DATABASE_USERNAME || 'postgres',\n      password: process.env.DATABASE_PASSWORD || 'postgres',\n      database: process.env.DATABASE_NAME || 'my-db',\n      ssl: { rejectUnauthorized: false },\n      schema,\n      entities: [`apps/${schema}/**/**.entity{.ts,.js}`],\n      migrations: [`apps/${schema}/src/migrations/**/*{.ts,.js}`],\n      subscribers: [`apps/${schema}/src/subscriber/**/*{.ts,.js}`],\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/database/database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init(schema: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/database/database.module.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                schema\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        loadEntities\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadEntities(entities?: EntityClassOrSchema[], dataSource?: DataSource | DataSourceOptions | string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/database/database.module.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        EntityClassOrSchema[]\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                dataSource\n                                            \n                                                            DataSource | DataSourceOptions | string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, DynamicModule } from '@nestjs/common';\nimport { TypeOrmModule, TypeOrmModuleOptions } from '@nestjs/typeorm';\nimport { ConfigHelper } from '@qushah/common';\nimport { EntityClassOrSchema } from '@nestjs/typeorm/dist/interfaces/entity-class-or-schema.type';\nimport { DataSource, DataSourceOptions } from 'typeorm';\n\n@Module({})\nexport class DatabaseModule {\n  static init(schema: string): DynamicModule {\n    return {\n      module: DatabaseModule,\n      imports: [\n        TypeOrmModule.forRootAsync({\n          useFactory: async () => {\n            const configHelper = await ConfigHelper.getInstance();\n            const { type, host, port, username, password, database } =\n              configHelper.databaseConfig;\n            const options: TypeOrmModuleOptions = {\n              type,\n              host,\n              port,\n              username,\n              password,\n              database,\n              schema: schema, // Set schema dynamically\n              autoLoadEntities: true,\n              ssl: { rejectUnauthorized: false },\n            };\n\n            return options;\n          },\n        }),\n      ],\n    };\n  }\n\n  static loadEntities(\n    entities?: EntityClassOrSchema[],\n    dataSource?: DataSource | DataSourceOptions | string,\n  ): DynamicModule {\n    return TypeOrmModule.forFeature(entities, dataSource);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DatabaseUtil.html":{"url":"classes/DatabaseUtil.html","title":"class - DatabaseUtil","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DatabaseUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/utils/database.util.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                generateUUIDv7\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        generateUUIDv7\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateUUIDv7()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/utils/database.util.ts:2\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class DatabaseUtil {\n  static generateUUIDv7(): string {\n    const now = Date.now();\n    const timestamp = now.toString(16).padStart(12, '0'); // 48-bit timestamp\n\n    // Generate 10 random bytes\n    const randomBytes = Array.from(crypto.getRandomValues(new Uint8Array(10)))\n      .map((b) => b.toString(16).padStart(2, '0')) // Convert to hex and ensure 2 characters\n      .join('');\n\n    // Construct UUIDv7 (ensuring the correct format)\n    return `${timestamp.substring(0, 8)}-${timestamp.substring(8, 12)}-7${randomBytes.substring(1, 3)}-${randomBytes.substring(3, 7)}-${randomBytes.substring(7, 19)}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DocumentationController.html":{"url":"controllers/DocumentationController.html","title":"controller - DocumentationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DocumentationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/documentation/src/documentation.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in apps/documentation/src/documentation.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { DocumentationService } from './documentation.service';\n\n@Controller()\nexport class DocumentationController {\n  constructor(private readonly documentationService: DocumentationService) {}\n\n  @Get()\n  getHello(): string {\n    return this.documentationService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DocumentationModule.html":{"url":"modules/DocumentationModule.html","title":"module - DocumentationModule","body":"\n                   \n\n\n\n\n    Modules\n    DocumentationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DocumentationModule\n\n\n\ncluster_DocumentationModule_providers\n\n\n\n\nDocumentationService\n\nDocumentationService\n\n\n\nDocumentationModule\n\nDocumentationModule\n\nDocumentationModule -->\n\nDocumentationService->DocumentationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/documentation/src/documentation.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DocumentationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DocumentationController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DocumentationController } from './documentation.controller';\nimport { DocumentationService } from './documentation.service';\n\n@Module({\n  imports: [],\n  controllers: [DocumentationController],\n  providers: [DocumentationService],\n})\nexport class DocumentationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DocumentationService.html":{"url":"injectables/DocumentationService.html","title":"injectable - DocumentationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DocumentationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/documentation/src/documentation.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/documentation/src/documentation.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class DocumentationService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/EscrowController.html":{"url":"controllers/EscrowController.html","title":"controller - EscrowController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  EscrowController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/escrow/src/escrow.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/escrow/src/escrow.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { EscrowService } from './escrow.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { EscrowCommand } from '@qushah/common';\n\n@Controller()\nexport class EscrowController {\n  constructor(private readonly escrowService: EscrowService) {}\n\n  @MessagePattern({ cmd: EscrowCommand.PING_ESCROW })\n  getHello(): string {\n    return this.escrowService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EscrowModule.html":{"url":"modules/EscrowModule.html","title":"module - EscrowModule","body":"\n                   \n\n\n\n\n    Modules\n    EscrowModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EscrowModule\n\n\n\ncluster_EscrowModule_providers\n\n\n\ncluster_EscrowModule_imports\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nEscrowModule\n\nEscrowModule\n\nEscrowModule -->\n\nCommonModule->EscrowModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nEscrowModule -->\n\nGraphQLMicroserviceModule->EscrowModule\n\n\n\n\n\nEscrowService\n\nEscrowService\n\nEscrowModule -->\n\nEscrowService->EscrowModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/escrow/src/escrow.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            EscrowService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            EscrowController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { EscrowController } from './escrow.controller';\nimport { EscrowService } from './escrow.service';\nimport { CommonModule, GraphQLMicroserviceModule } from '@qushah/common';\nimport { EscrowResolver } from './resolvers/escrow.resolver';\n\n@Module({\n  imports: [CommonModule, GraphQLMicroserviceModule],\n  controllers: [EscrowController],\n  providers: [EscrowService, EscrowResolver],\n})\nexport class EscrowModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EscrowResolver.html":{"url":"classes/EscrowResolver.html","title":"class - EscrowResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EscrowResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/escrow/src/resolvers/escrow.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingEscrow'})\n                \n            \n\n                    \n                        \n                            Defined in apps/escrow/src/resolvers/escrow.resolver.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\n\n@Resolver()\nexport class EscrowResolver {\n  @Query(() => String, { name: 'pingEscrow' })\n  ping(): string {\n    return 'pong';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EscrowService.html":{"url":"injectables/EscrowService.html","title":"injectable - EscrowService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EscrowService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/escrow/src/escrow.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/escrow/src/escrow.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class EscrowService {\n  getHello(): string {\n    return 'Hello from Escrow Service!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GatewayModule.html":{"url":"modules/GatewayModule.html","title":"module - GatewayModule","body":"\n                   \n\n\n\n\n    Modules\n    GatewayModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GatewayModule\n\n\n\ncluster_GatewayModule_providers\n\n\n\ncluster_GatewayModule_imports\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nGatewayModule\n\nGatewayModule\n\nGatewayModule -->\n\nCommonModule->GatewayModule\n\n\n\n\n\nGraphQLGatewayModule\n\nGraphQLGatewayModule\n\nGatewayModule -->\n\nGraphQLGatewayModule->GatewayModule\n\n\n\n\n\nGatewayService\n\nGatewayService\n\nGatewayModule -->\n\nGatewayService->GatewayModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/gateway/src/gateway.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GatewayService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            GraphQLGatewayModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { GatewayService } from './gateway.service';\nimport {\n  CommonModule,\n  ENVIRONMENT,\n  GraphQLGatewayModule,\n} from '@qushah/common';\n\nconst {\n  AUTH_HOST,\n  ESCROW_HOST,\n  MEDIA_HOST,\n  NOTIFICATION_HOST,\n  ORGANIZATION_HOST,\n  PAYMENT_HOST,\n  PROPERTY_HOST,\n  USER_HOST,\n} = ENVIRONMENT;\n\n@Module({\n  imports: [\n    CommonModule,\n    GraphQLGatewayModule.register(\n      AUTH_HOST,\n      ESCROW_HOST,\n      MEDIA_HOST,\n      NOTIFICATION_HOST,\n      ORGANIZATION_HOST,\n      PAYMENT_HOST,\n      PROPERTY_HOST,\n      USER_HOST,\n    ),\n  ],\n  providers: [GatewayService],\n})\nexport class GatewayModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GatewayService.html":{"url":"injectables/GatewayService.html","title":"injectable - GatewayService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GatewayService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gateway/src/gateway.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gateway/src/gateway.service.ts:4\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ping\n                        \n                    \n                \n            \n            \n                \nping()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gateway/src/gateway.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class GatewayService {\n  constructor() {}\n\n  ping(): string {\n    return 'Hello from Gateway Service!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GraphQLGatewayModule.html":{"url":"modules/GraphQLGatewayModule.html","title":"module - GraphQLGatewayModule","body":"\n                   \n\n\n\n\n    Modules\n    GraphQLGatewayModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/graphql/graphql-gateway.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(...subgraphNames: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/graphql/graphql-gateway.module.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                subgraphNames\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, Global, DynamicModule } from '@nestjs/common';\nimport { GraphQLModule } from '@nestjs/graphql';\nimport { ApolloGatewayDriver, ApolloGatewayDriverConfig } from '@nestjs/apollo';\nimport { IntrospectAndCompose } from '@apollo/gateway';\nimport { SubgraphsBuilder } from '@qushah/common';\n\n@Global()\n@Module({})\nexport class GraphQLGatewayModule {\n  static async register(...subgraphNames: string[]): Promise {\n    return {\n      module: GraphQLGatewayModule,\n      imports: [\n        GraphQLModule.forRootAsync({\n          driver: ApolloGatewayDriver,\n          useFactory: async () => {\n            return {\n              gateway: {\n                supergraphSdl: new IntrospectAndCompose({\n                  subgraphs: await SubgraphsBuilder.build(...subgraphNames),\n                }),\n              },\n            };\n          },\n        }),\n      ],\n      exports: [GraphQLModule],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GraphQLMicroserviceModule.html":{"url":"modules/GraphQLMicroserviceModule.html","title":"module - GraphQLMicroserviceModule","body":"\n                   \n\n\n\n\n    Modules\n    GraphQLMicroserviceModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/graphql/graphql-microservice.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { GraphQLModule } from '@nestjs/graphql';\nimport {\n  ApolloFederationDriver,\n  ApolloFederationDriverConfig,\n} from '@nestjs/apollo';\n\n@Module({\n  imports: [\n    GraphQLModule.forRoot({\n      driver: ApolloFederationDriver,\n      autoSchemaFile: {\n        federation: 2,\n      },\n      sortSchema: true,\n    }),\n  ],\n})\nexport class GraphQLMicroserviceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MediaController.html":{"url":"controllers/MediaController.html","title":"controller - MediaController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MediaController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/media/src/media.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/media/src/media.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { MediaService } from './media.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { MediaCommand } from '@qushah/common';\n\n@Controller()\nexport class MediaController {\n  constructor(private readonly mediaService: MediaService) {}\n\n  @MessagePattern({ cmd: MediaCommand.PING_MEDIA })\n  getHello(): string {\n    return this.mediaService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MediaModule.html":{"url":"modules/MediaModule.html","title":"module - MediaModule","body":"\n                   \n\n\n\n\n    Modules\n    MediaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MediaModule\n\n\n\ncluster_MediaModule_providers\n\n\n\ncluster_MediaModule_imports\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nMediaModule\n\nMediaModule\n\nMediaModule -->\n\nCommonModule->MediaModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nMediaModule -->\n\nGraphQLMicroserviceModule->MediaModule\n\n\n\n\n\nMediaService\n\nMediaService\n\nMediaModule -->\n\nMediaService->MediaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/media/src/media.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MediaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MediaController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MediaController } from './media.controller';\nimport { MediaService } from './media.service';\nimport { CommonModule, GraphQLMicroserviceModule } from '@qushah/common';\nimport { MediaResolver } from './resolvers/media.resolver';\n\n@Module({\n  imports: [CommonModule, GraphQLMicroserviceModule],\n  controllers: [MediaController],\n  providers: [MediaService, MediaResolver],\n})\nexport class MediaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MediaResolver.html":{"url":"classes/MediaResolver.html","title":"class - MediaResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MediaResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/media/src/resolvers/media.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingMedia'})\n                \n            \n\n                    \n                        \n                            Defined in apps/media/src/resolvers/media.resolver.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\n\n@Resolver()\nexport class MediaResolver {\n  @Query(() => String, { name: 'pingMedia' })\n  ping(): string {\n    return 'pong';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MediaService.html":{"url":"injectables/MediaService.html","title":"injectable - MediaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MediaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/media/src/media.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/media/src/media.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class MediaService {\n  getHello(): string {\n    return 'Hello from Media Service!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/NotificationController.html":{"url":"controllers/NotificationController.html","title":"controller - NotificationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  NotificationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/notification/src/notification.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/notification/src/notification.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { NotificationService } from './notification.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { NotificationCommand } from '@qushah/common';\n\n@Controller()\nexport class NotificationController {\n  constructor(private readonly notificationService: NotificationService) {}\n\n  @MessagePattern({ cmd: NotificationCommand.PING_NOTIFICATION })\n  getHello(): string {\n    return this.notificationService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NotificationModule.html":{"url":"modules/NotificationModule.html","title":"module - NotificationModule","body":"\n                   \n\n\n\n\n    Modules\n    NotificationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NotificationModule\n\n\n\ncluster_NotificationModule_providers\n\n\n\ncluster_NotificationModule_imports\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nNotificationModule\n\nNotificationModule\n\nNotificationModule -->\n\nCommonModule->NotificationModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nNotificationModule -->\n\nGraphQLMicroserviceModule->NotificationModule\n\n\n\n\n\nNotificationService\n\nNotificationService\n\nNotificationModule -->\n\nNotificationService->NotificationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/notification/src/notification.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NotificationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            NotificationController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { NotificationController } from './notification.controller';\nimport { NotificationService } from './notification.service';\nimport { CommonModule, GraphQLMicroserviceModule } from '@qushah/common';\nimport { NotificationResolver } from './resolvers/notification.resolver';\n\n@Module({\n  imports: [CommonModule, GraphQLMicroserviceModule],\n  controllers: [NotificationController],\n  providers: [NotificationService, NotificationResolver],\n})\nexport class NotificationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotificationResolver.html":{"url":"classes/NotificationResolver.html","title":"class - NotificationResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotificationResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/notification/src/resolvers/notification.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingNotification'})\n                \n            \n\n                    \n                        \n                            Defined in apps/notification/src/resolvers/notification.resolver.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\n\n@Resolver()\nexport class NotificationResolver {\n  @Query(() => String, { name: 'pingNotification' })\n  ping(): string {\n    return 'pong';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationService.html":{"url":"injectables/NotificationService.html","title":"injectable - NotificationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NotificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/notification/src/notification.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/notification/src/notification.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class NotificationService {\n  getHello(): string {\n    return 'Hello from Notification Service!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Organization.html":{"url":"entities/Organization.html","title":"entity - Organization","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Organization\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/organization/src/entities/organization.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                meta\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                primaryContactName\n                            \n                            \n                                    \n                                    \n                                slug\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrganizationMetadata\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@OneToOne(undefined, meta => meta.organization)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        primaryContactName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column({name: 'primary_contact_name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization.entity.ts:16\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql';\nimport { Column, Entity, OneToOne } from 'typeorm';\nimport { BaseEntity, GraphQLFederationDirective } from '@qushah/common';\nimport { OrganizationMetadata } from './organization-metadata.entity';\n\n@ObjectType()\n@Entity({ name: 'organizations' })\n@GraphQLFederationDirective('@key(fields: \"id\")')\nexport class Organization extends BaseEntity {\n  @Field(() => String)\n  @Column({ unique: true })\n  name: string;\n\n  @Field(() => String)\n  @Column({ unique: true })\n  slug: string;\n\n  @Field(() => String)\n  @Column({ name: 'primary_contact_name' })\n  primaryContactName: string;\n\n  @Field(() => String)\n  @Column()\n  email: string;\n\n  @Field(() => String)\n  @Column()\n  phone: string;\n\n  @Field(() => OrganizationMetadata, { nullable: true })\n  @OneToOne(() => OrganizationMetadata, (meta) => meta.organization)\n  meta?: OrganizationMetadata;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Organization-1.html":{"url":"classes/Organization-1.html","title":"class - Organization-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Organization\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user/src/entities/external/organization.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Directive('@external')\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/entities/external/organization.entity.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive, Field, ObjectType } from '@nestjs/graphql';\nimport { GraphQLFederationDirective } from '@qushah/common';\n\n@ObjectType()\n@GraphQLFederationDirective('@extends') // Extending from Organization Microservice\n@GraphQLFederationDirective('@key(fields: \"id\")') // Federation key\nexport class Organization {\n  @Field(() => String)\n  @Directive('@external') // This field is managed by Organization Microservice\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrganizationController.html":{"url":"controllers/OrganizationController.html","title":"controller - OrganizationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrganizationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/organization/src/organization.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                findOneById\n                            \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/organization/src/organization.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/organization/src/organization.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { OrganizationService } from './organization.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { OrganizationCommand } from '@qushah/common/constants/commands/organization.command';\n\n@Controller()\nexport class OrganizationController {\n  constructor(private readonly organizationService: OrganizationService) {}\n\n  @MessagePattern({ cmd: OrganizationCommand.PING_ORGANIZATION })\n  getHello(): string {\n    return this.organizationService.getHello();\n  }\n\n  @MessagePattern({ cmd: OrganizationCommand.FIND_ORGANIZATION_BY_ID })\n  findOneById(id: string) {\n    return this.organizationService.findOne({ id });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/OrganizationMetadata.html":{"url":"entities/OrganizationMetadata.html","title":"entity - OrganizationMetadata","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  OrganizationMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/organization/src/entities/organization-metadata.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                allowInterestEarning\n                            \n                            \n                                    \n                                    \n                                depositFeePercentage\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                domain\n                            \n                            \n                                    \n                                    \n                                logo\n                            \n                            \n                                    \n                                    \n                                organization\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                primaryColor\n                            \n                            \n                                    \n                                    \n                                rentFeePercentage\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        allowInterestEarning\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column({name: 'allow_interest_earning', type: 'boolean', default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization-metadata.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        depositFeePercentage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column({name: 'deposit_fee_percentage', default: 5, precision: 5, scale: 2, type: 'decimal'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization-metadata.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        domain\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization-metadata.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization-metadata.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        organization\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Organization\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, organization => organization.meta, {cascade: true, onDelete: 'CASCADE', onUpdate: 'CASCADE'})@JoinColumn({name: 'organization_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization-metadata.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        primaryColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Column({name: 'primary_color', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization-metadata.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        rentFeePercentage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column({name: 'rent_fee_percentage', default: 5, precision: 5, scale: 2, type: 'decimal'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization-metadata.entity.ts:38\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, OneToOne } from 'typeorm';\nimport { Field, Float, ObjectType } from '@nestjs/graphql';\nimport { BaseEntity } from '@qushah/common';\nimport { JoinColumn } from 'typeorm';\nimport { Organization } from './organization.entity';\n\n@ObjectType()\n@Entity({ name: 'organizations_metadata' })\nexport class OrganizationMetadata extends BaseEntity {\n  @OneToOne(() => Organization, (organization) => organization.meta, {\n    cascade: true,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n  })\n  @JoinColumn({ name: 'organization_id' })\n  organization: Organization;\n\n  @Field(() => String, { nullable: true })\n  @Column({ name: 'primary_color', nullable: true })\n  primaryColor?: string;\n\n  @Field(() => String, { nullable: true })\n  @Column({ nullable: true })\n  domain?: string;\n\n  @Field(() => String)\n  @Column()\n  logo: string;\n\n  @Field(() => Float)\n  @Column({\n    name: 'rent_fee_percentage',\n    default: 5.0,\n    precision: 5,\n    scale: 2,\n    type: 'decimal',\n  })\n  rentFeePercentage: number;\n\n  @Field(() => Float)\n  @Column({\n    name: 'deposit_fee_percentage',\n    default: 5.0,\n    precision: 5,\n    scale: 2,\n    type: 'decimal',\n  })\n  depositFeePercentage: number;\n\n  @Field(() => Boolean)\n  @Column({ name: 'allow_interest_earning', type: 'boolean', default: false })\n  allowInterestEarning: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrganizationModule.html":{"url":"modules/OrganizationModule.html","title":"module - OrganizationModule","body":"\n                   \n\n\n\n\n    Modules\n    OrganizationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OrganizationModule\n\n\n\ncluster_OrganizationModule_imports\n\n\n\ncluster_OrganizationModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nOrganizationModule\n\nOrganizationModule\n\nOrganizationModule -->\n\nCommonModule->OrganizationModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nOrganizationModule -->\n\nDatabaseModule->OrganizationModule\n\n\n\nOrganizationModule -->\n\nDatabaseModule->OrganizationModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nOrganizationModule -->\n\nGraphQLMicroserviceModule->OrganizationModule\n\n\n\n\n\nOrganizationService\n\nOrganizationService\n\nOrganizationModule -->\n\nOrganizationService->OrganizationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/organization/src/organization.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrganizationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrganizationController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { OrganizationController } from './organization.controller';\nimport { OrganizationService } from './organization.service';\nimport {\n  CommonModule,\n  DatabaseModule,\n  GraphQLMicroserviceModule,\n  SCHEMA,\n} from '@qushah/common';\nimport { OrganizationResolver } from './resolvers/organization.resolver';\nimport { Organization } from './entities/organization.entity';\nimport { OrganizationMetadata } from './entities/organization-metadata.entity';\n\n@Module({\n  imports: [\n    DatabaseModule.init(SCHEMA.ORGANIZATION),\n    DatabaseModule.loadEntities([Organization, OrganizationMetadata]),\n    CommonModule,\n    GraphQLMicroserviceModule,\n  ],\n  controllers: [OrganizationController],\n  providers: [OrganizationService, OrganizationResolver],\n})\nexport class OrganizationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrganizationResolver.html":{"url":"classes/OrganizationResolver.html","title":"class - OrganizationResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrganizationResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/organization/src/resolvers/organization.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                organizations\n                            \n                            \n                                    \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(organizationService: OrganizationService)\n                    \n                \n                        \n                            \n                                Defined in apps/organization/src/resolvers/organization.resolver.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationService\n                                                  \n                                                        \n                                                                        OrganizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        organizations\n                        \n                    \n                \n            \n            \n                \n                        \n                    organizations()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: true})\n                \n            \n\n                    \n                        \n                            Defined in apps/organization/src/resolvers/organization.resolver.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingOrganization'})\n                \n            \n\n                    \n                        \n                            Defined in apps/organization/src/resolvers/organization.resolver.ts:10\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\nimport { Organization } from '../entities/organization.entity';\nimport { OrganizationService } from '../organization.service';\n\n@Resolver()\nexport class OrganizationResolver {\n  constructor(private readonly organizationService: OrganizationService) {}\n\n  @Query(() => String, { name: 'pingOrganization' })\n  ping(): string {\n    return 'pong';\n  }\n\n  @Query(() => [Organization], { nullable: true })\n  organizations(): Promise {\n    return this.organizationService.findAll();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrganizationService.html":{"url":"injectables/OrganizationService.html","title":"injectable - OrganizationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrganizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/organization/src/organization.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: Repository)\n                    \n                \n                        \n                            \n                                Defined in apps/organization/src/organization.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/organization/src/organization.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(where: FindOptionsWhere)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/organization/src/organization.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                where\n                                            \n                                                            FindOptionsWhere\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/organization/src/organization.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { Organization } from './entities/organization.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { FindOptionsWhere } from 'typeorm/find-options/FindOptionsWhere';\n\n@Injectable()\nexport class OrganizationService {\n  constructor(\n    @InjectRepository(Organization)\n    private readonly repository: Repository,\n  ) {}\n\n  getHello(): string {\n    return 'Hello from Organization Service!';\n  }\n\n  findAll(): Promise {\n    return this.repository.find({\n      relations: ['meta'],\n    });\n  }\n\n  findOne(where: FindOptionsWhere) {\n    return this.repository.findOne({ where });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PaymentController.html":{"url":"controllers/PaymentController.html","title":"controller - PaymentController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PaymentController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/payment/src/payment.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/payment/src/payment.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { PaymentService } from './payment.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { PaymentCommand } from '@qushah/common';\n\n@Controller()\nexport class PaymentController {\n  constructor(private readonly paymentService: PaymentService) {}\n\n  @MessagePattern({ cmd: PaymentCommand.PING_PAYMENT })\n  getHello(): string {\n    return this.paymentService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PaymentModule.html":{"url":"modules/PaymentModule.html","title":"module - PaymentModule","body":"\n                   \n\n\n\n\n    Modules\n    PaymentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PaymentModule\n\n\n\ncluster_PaymentModule_imports\n\n\n\ncluster_PaymentModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nPaymentModule\n\nPaymentModule\n\nPaymentModule -->\n\nCommonModule->PaymentModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nPaymentModule -->\n\nGraphQLMicroserviceModule->PaymentModule\n\n\n\n\n\nPaymentService\n\nPaymentService\n\nPaymentModule -->\n\nPaymentService->PaymentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/payment/src/payment.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PaymentService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PaymentController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PaymentController } from './payment.controller';\nimport { PaymentService } from './payment.service';\nimport { CommonModule, GraphQLMicroserviceModule } from '@qushah/common';\nimport { PaymentResolver } from './resolvers/payment.resolver';\n\n@Module({\n  imports: [CommonModule, GraphQLMicroserviceModule],\n  controllers: [PaymentController],\n  providers: [PaymentService, PaymentResolver],\n})\nexport class PaymentModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaymentResolver.html":{"url":"classes/PaymentResolver.html","title":"class - PaymentResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaymentResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/payment/src/resolvers/payment.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingPayment'})\n                \n            \n\n                    \n                        \n                            Defined in apps/payment/src/resolvers/payment.resolver.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\n\n@Resolver()\nexport class PaymentResolver {\n  @Query(() => String, { name: 'pingPayment' })\n  ping(): string {\n    return 'pong';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PaymentService.html":{"url":"injectables/PaymentService.html","title":"injectable - PaymentService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PaymentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/payment/src/payment.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/payment/src/payment.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class PaymentService {\n  getHello(): string {\n    return 'Hello from Payment Service!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Permission.html":{"url":"entities/Permission.html","title":"entity - Permission","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Permission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user/src/entities/permission.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/user/src/entities/permission.entity.ts:7\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ObjectType } from '@nestjs/graphql';\nimport { BaseEntity, Entity } from 'typeorm';\n\n@ObjectType()\n@Entity()\nexport class Permission extends BaseEntity {\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PropertyController.html":{"url":"controllers/PropertyController.html","title":"controller - PropertyController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PropertyController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/property/src/property.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/property/src/property.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { PropertyService } from './property.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { PropertyCommand } from '@qushah/common';\n\n@Controller()\nexport class PropertyController {\n  constructor(private readonly propertyService: PropertyService) {}\n\n  @MessagePattern({ cmd: PropertyCommand.PING_PROPERTY })\n  getHello(): string {\n    return this.propertyService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PropertyModule.html":{"url":"modules/PropertyModule.html","title":"module - PropertyModule","body":"\n                   \n\n\n\n\n    Modules\n    PropertyModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PropertyModule\n\n\n\ncluster_PropertyModule_providers\n\n\n\ncluster_PropertyModule_imports\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nPropertyModule\n\nPropertyModule\n\nPropertyModule -->\n\nCommonModule->PropertyModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nPropertyModule -->\n\nGraphQLMicroserviceModule->PropertyModule\n\n\n\n\n\nPropertyService\n\nPropertyService\n\nPropertyModule -->\n\nPropertyService->PropertyModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/property/src/property.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PropertyService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PropertyController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PropertyController } from './property.controller';\nimport { PropertyService } from './property.service';\nimport { CommonModule, GraphQLMicroserviceModule } from '@qushah/common';\nimport { PropertyResolver } from './resolvers/property.resolver';\n\n@Module({\n  imports: [CommonModule, GraphQLMicroserviceModule],\n  controllers: [PropertyController],\n  providers: [PropertyService, PropertyResolver],\n})\nexport class PropertyModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PropertyResolver.html":{"url":"classes/PropertyResolver.html","title":"class - PropertyResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PropertyResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/property/src/resolvers/property.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingProperty'})\n                \n            \n\n                    \n                        \n                            Defined in apps/property/src/resolvers/property.resolver.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\n\n@Resolver()\nexport class PropertyResolver {\n  @Query(() => String, { name: 'pingProperty' })\n  ping(): string {\n    return 'pong';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PropertyService.html":{"url":"injectables/PropertyService.html","title":"injectable - PropertyService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PropertyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/property/src/property.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/property/src/property.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class PropertyService {\n  getHello(): string {\n    return 'Hello from Property Service!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Role.html":{"url":"entities/Role.html","title":"entity - Role","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user/src/entities/role.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/entities/role.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@PrimaryColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/entities/role.entity.ts:9\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql';\nimport { BaseEntity, Column, Entity, PrimaryColumn } from 'typeorm';\n\n@ObjectType()\n@Entity({ name: 'roles' })\nexport class Role extends BaseEntity {\n  @Field(() => String)\n  @PrimaryColumn()\n  name: string;\n\n  @Field(() => String, { nullable: true })\n  @Column({ nullable: true })\n  description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SeederModule.html":{"url":"modules/SeederModule.html","title":"module - SeederModule","body":"\n                   \n\n\n\n\n    Modules\n    SeederModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/database/seeder/seeder.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Async\n                        bootstrap\n                        \n                    \n                \n            \n            \n                \n                        \n                    bootstrap(service: Type, module: any)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/database/seeder/seeder.module.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                service\n                                            \n                                                            Type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                module\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init(services: Provider[], entities: EntityClassOrSchema[])\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/database/seeder/seeder.module.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                services\n                                            \n                                                        Provider[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entities\n                                            \n                                                        EntityClassOrSchema[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        seed\n                        \n                    \n                \n            \n            \n                \n                        \n                    seed(service: Type, module: any)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/database/seeder/seeder.module.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                service\n                                            \n                                                            Type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                module\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, DynamicModule, Provider } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\nimport { SeederService } from '@qushah/common/database/seeder/seeder-service.interface';\nimport { Type } from '@nestjs/common/interfaces/type.interface';\nimport { EntityClassOrSchema } from '@nestjs/typeorm/dist/interfaces/entity-class-or-schema.type';\nimport { DatabaseModule } from '../';\n\n@Module({})\nexport class SeederModule {\n  static init(\n    services: Provider[],\n    entities: EntityClassOrSchema[],\n  ): DynamicModule {\n    return {\n      module: SeederModule,\n      imports: [DatabaseModule.loadEntities(entities)],\n      providers: services,\n      exports: services,\n    };\n  }\n\n  private static async bootstrap(service: Type, module: any) {\n    const app = await NestFactory.createApplicationContext(module);\n    const seeder = app.get(service);\n    await seeder.seed();\n    await app.close();\n    console.log('✅ Database seeding completed.');\n  }\n\n  static seed(service: Type, module: any) {\n    SeederModule.bootstrap(service, module).catch((err) => {\n      console.error('Seeding failed!', err);\n      process.exit(1);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SeederService.html":{"url":"injectables/SeederService.html","title":"injectable - SeederService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SeederService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user/src/seeder/seeder.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                seed\n                            \n                            \n                                    Private\n                                    Async\n                                seedRoles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in apps/user/src/seeder/seeder.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        seed\n                        \n                    \n                \n            \n            \n                \n                        \n                    seed()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/user/src/seeder/seeder.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        seedRoles\n                        \n                    \n                \n            \n            \n                \n                        \n                    seedRoles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/user/src/seeder/seeder.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Role } from '../entities/role.entity';\nimport { UserRole } from '@qushah/common';\n\n@Injectable()\nexport class SeederService {\n  constructor(\n    @InjectRepository(Role) private roleRepository: Repository,\n  ) {}\n\n  async seed() {\n    await this.seedRoles();\n  }\n\n  private async seedRoles() {\n    const roles = Object.values(UserRole);\n    for (const roleName of roles) {\n      const roleExists = await this.roleRepository.findOne({\n        where: { name: roleName },\n      });\n      if (!roleExists) {\n        await this.roleRepository.save(\n          this.roleRepository.create({ name: roleName }),\n        );\n        console.log(`Inserted Role: ${roleName}`);\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SubgraphsBuilder.html":{"url":"classes/SubgraphsBuilder.html","title":"class - SubgraphsBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SubgraphsBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/utils/subgraphs-builder.util.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Async\n                                build\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        build\n                        \n                    \n                \n            \n            \n                \n                        \n                    build(...graphNames: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/utils/subgraphs-builder.util.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                graphNames\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ServiceEndpointDefinition } from '@apollo/gateway/src/config';\nimport { ConfigHelper } from '@qushah/common';\n\nexport class SubgraphsBuilder {\n  static async build(\n    ...graphNames: string[]\n  ): Promise {\n    const configHelper = await ConfigHelper.getInstance();\n\n    return graphNames.map((graphName) => {\n      const keyPart = graphName?.split('_HOST')?.[0];\n      const key = keyPart || graphName;\n      const { host, port } = configHelper.getMicroServiceHosts(key);\n      return {\n        name: graphName,\n        url: `${host}:${port}/graphql`,\n      };\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user/src/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                    \n                                lastName\n                            \n                            \n                                    \n                                    Optional\n                                organization\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                organizationId\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/entities/user.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/entities/user.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/entities/user.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        organization\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Organization\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/entities/user.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        organizationId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Column({name: 'organization_id', type: 'uuid', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/entities/user.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/entities/user.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/entities/user.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@ManyToOne(undefined)@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/entities/user.entity.ts:33\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql';\nimport { Column, Entity, JoinColumn, ManyToOne } from 'typeorm';\nimport { BaseEntity, GraphQLFederationDirective } from '@qushah/common';\nimport { Organization } from './external/organization.entity';\nimport { Role } from './role.entity';\n\n@ObjectType()\n@Entity({ name: 'users' })\n@GraphQLFederationDirective('@key(fields: \"id\")')\nexport class User extends BaseEntity {\n  @Field(() => String)\n  @Column()\n  firstName: string;\n\n  @Field(() => String)\n  @Column()\n  lastName: string;\n\n  @Field(() => String)\n  @Column()\n  email: string;\n\n  @Column()\n  password: string;\n\n  @Field(() => String)\n  @Column()\n  phone: string;\n\n  @Field(() => Role)\n  @ManyToOne(() => Role)\n  @JoinColumn()\n  role: Role;\n\n  @Field(() => String, { nullable: true })\n  @Column({ name: 'organization_id', type: 'uuid', nullable: true })\n  organizationId?: string;\n\n  @Field(() => [Organization], { nullable: true })\n  organization?: Organization;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User-1.html":{"url":"classes/User-1.html","title":"class - User-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/organization/src/entities/external/user.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                organization\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                organizationId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/external/user.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        organization\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Organization\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Directive('@requires(fields: \"organizationId\")')\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/external/user.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        organizationId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Directive('@external')\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/external/user.entity.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive, Field, ObjectType } from '@nestjs/graphql';\nimport { Organization } from '../organization.entity';\nimport { GraphQLFederationDirective } from '@qushah/common';\n\n@ObjectType()\n@GraphQLFederationDirective('@extends') // 🚀 Extending User from User microservice\n@GraphQLFederationDirective('@key(fields: \"id\")') // Federated entity\nexport class User {\n  @Field(() => String)\n  id: string;\n\n  @Field(() => String, { nullable: true })\n  @Directive('@external') // organizationId is stored in User service\n  organizationId?: string;\n\n  @Field(() => Organization, { nullable: true })\n  @Directive('@requires(fields: \"organizationId\")') // Requires orgId to fetch org\n  organization?: Organization;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user/src/user.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/user/src/user.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { UserCommand } from '@qushah/common';\n\n@Controller()\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @MessagePattern({ cmd: UserCommand.PING_USER })\n  getHello(): string {\n    return this.userService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nCommonModule->UserModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nUserModule -->\n\nDatabaseModule->UserModule\n\n\n\nUserModule -->\n\nDatabaseModule->UserModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nUserModule -->\n\nGraphQLMicroserviceModule->UserModule\n\n\n\n\n\nSeederModule\n\nSeederModule\n\nUserModule -->\n\nSeederModule->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/user/src/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                        \n                            SeederModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserController } from './user.controller';\nimport { UserService } from './user.service';\nimport {\n  CommonModule,\n  DatabaseModule,\n  GraphQLMicroserviceModule,\n  SCHEMA,\n  SeederModule,\n} from '@qushah/common';\nimport { UserResolver } from './resolvers/user.resolver';\nimport { User } from './entities/user.entity';\nimport { Role } from './entities/role.entity';\nimport { SeederService } from './seeder/seeder.service';\n\n@Module({\n  imports: [\n    CommonModule,\n    GraphQLMicroserviceModule,\n    DatabaseModule.init(SCHEMA.USER),\n    DatabaseModule.loadEntities([User, Role]),\n    SeederModule.init([SeederService], [Role]),\n  ],\n  controllers: [UserController],\n  providers: [UserService, UserResolver],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserResolver.html":{"url":"classes/UserResolver.html","title":"class - UserResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user/src/resolvers/user.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createUser\n                            \n                            \n                                    \n                                ping\n                            \n                            \n                                    \n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in apps/user/src/resolvers/user.resolver.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(input: CreateUserInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)\n                \n            \n\n                    \n                        \n                            Defined in apps/user/src/resolvers/user.resolver.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            CreateUserInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingUser'})\n                \n            \n\n                    \n                        \n                            Defined in apps/user/src/resolvers/user.resolver.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        users\n                        \n                    \n                \n            \n            \n                \n                        \n                    users()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: true})\n                \n            \n\n                    \n                        \n                            Defined in apps/user/src/resolvers/user.resolver.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Args, Mutation, Query, Resolver } from '@nestjs/graphql';\nimport { User } from '../entities/user.entity';\nimport { UserService } from '../user.service';\nimport { CreateUserInput } from '../dtos/create-user.input';\n\n@Resolver(User)\nexport class UserResolver {\n  constructor(private readonly userService: UserService) {}\n\n  @Query(() => String, { name: 'pingUser' })\n  ping(): string {\n    return 'pong';\n  }\n\n  @Query(() => [User], { nullable: true })\n  users(): Promise {\n    return this.userService.find();\n  }\n\n  @Mutation(() => User)\n  createUser(@Args('input') input: CreateUserInput): Promise {\n    return this.userService.create(input);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserResolver-1.html":{"url":"classes/UserResolver-1.html","title":"class - UserResolver-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/organization/src/resolvers/external/user.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                organization\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(organizationService: OrganizationService)\n                    \n                \n                        \n                            \n                                Defined in apps/organization/src/resolvers/external/user.resolver.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationService\n                                                  \n                                                        \n                                                                        OrganizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        organization\n                        \n                    \n                \n            \n            \n                \n                        \n                    organization(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResolveField(undefined, {nullable: true})\n                \n            \n\n                    \n                        \n                            Defined in apps/organization/src/resolvers/external/user.resolver.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Parent, ResolveField, Resolver } from '@nestjs/graphql';\nimport { User } from '../../entities/external/user.entity';\nimport { Organization } from '../../entities/organization.entity';\nimport { OrganizationService } from '../../organization.service';\n\n@Resolver(() => User)\nexport class UserResolver {\n  constructor(private readonly organizationService: OrganizationService) {}\n\n  @ResolveField(() => Organization, { nullable: true })\n  async organization(@Parent() user: User): Promise {\n    if (!user.organizationId) return null;\n    return this.organizationService.findOne({ id: user.organizationId });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user/src/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                find\n                            \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: Repository)\n                    \n                \n                        \n                            \n                                Defined in apps/user/src/user.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(input: CreateUserInput)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/user/src/user.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            CreateUserInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \nfind()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/user/src/user.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/user/src/user.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { User } from './entities/user.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CreateUserInput } from './dtos/create-user.input';\nimport { genSalt, hash } from 'bcrypt';\n\n@Injectable()\nexport class UserService {\n  constructor(\n    @InjectRepository(User)\n    private readonly repository: Repository,\n  ) {}\n\n  getHello(): string {\n    return 'Hello from User Service!';\n  }\n\n  find(): Promise {\n    return this.repository.find();\n  }\n\n  async create(input: CreateUserInput): Promise {\n    const saltOrRounds = await genSalt();\n    const password = await hash(input.password, saltOrRounds);\n\n    return this.repository.save({\n      ...input,\n      password,\n      role: {\n        name: input.role,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/auth/src/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/auth/src/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/auth/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/auth/src/resolvers/auth.resolver.ts\n            \n            class\n            AuthResolver\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/documentation/src/documentation.controller.ts\n            \n            controller\n            DocumentationController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/documentation/src/documentation.service.ts\n            \n            injectable\n            DocumentationService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/documentation/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/escrow/src/escrow.controller.ts\n            \n            controller\n            EscrowController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/escrow/src/escrow.service.ts\n            \n            injectable\n            EscrowService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/escrow/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/escrow/src/resolvers/escrow.resolver.ts\n            \n            class\n            EscrowResolver\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/escrow/src/typeorm.data-source.ts\n            \n            variable\n            TypeormDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/gateway/src/gateway.module.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/gateway/src/gateway.service.ts\n            \n            injectable\n            GatewayService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        apps/gateway/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/media/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/media/src/media.controller.ts\n            \n            controller\n            MediaController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/media/src/media.service.ts\n            \n            injectable\n            MediaService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/media/src/resolvers/media.resolver.ts\n            \n            class\n            MediaResolver\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/media/src/typeorm.data-source.ts\n            \n            variable\n            TypeormDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/notification/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/notification/src/notification.controller.ts\n            \n            controller\n            NotificationController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/notification/src/notification.service.ts\n            \n            injectable\n            NotificationService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/notification/src/resolvers/notification.resolver.ts\n            \n            class\n            NotificationResolver\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/notification/src/typeorm.data-source.ts\n            \n            variable\n            TypeormDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/organization/src/entities/external/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/organization/src/entities/organization-metadata.entity.ts\n            \n            entity\n            OrganizationMetadata\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/organization/src/entities/organization-metadata.entity.ts\n            \n            class\n            OrganizationMetadata\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/organization/src/entities/organization.entity.ts\n            \n            entity\n            Organization\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/organization/src/entities/organization.entity.ts\n            \n            class\n            Organization\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        apps/organization/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/organization/src/migrations/1741518145374-CreateOrganizationAndMetaTable.ts\n            \n            class\n            CreateOrganizationAndMetaTable1741518145374\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/organization/src/organization.controller.ts\n            \n            controller\n            OrganizationController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/organization/src/organization.service.ts\n            \n            injectable\n            OrganizationService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/organization/src/resolvers/external/user.resolver.ts\n            \n            class\n            UserResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/organization/src/resolvers/organization.resolver.ts\n            \n            class\n            OrganizationResolver\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        apps/organization/src/typeorm.data-source.ts\n            \n            variable\n            TypeormDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/payment/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/payment/src/payment.controller.ts\n            \n            controller\n            PaymentController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/payment/src/payment.service.ts\n            \n            injectable\n            PaymentService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/payment/src/resolvers/payment.resolver.ts\n            \n            class\n            PaymentResolver\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/payment/src/typeorm.data-source.ts\n            \n            variable\n            TypeormDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/property/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/property/src/property.controller.ts\n            \n            controller\n            PropertyController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/property/src/property.service.ts\n            \n            injectable\n            PropertyService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/property/src/resolvers/property.resolver.ts\n            \n            class\n            PropertyResolver\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/property/src/typeorm.data-source.ts\n            \n            variable\n            TypeormDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/user/src/dtos/create-user.input.ts\n            \n            class\n            CreateUserInput\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/user/src/entities/external/organization.entity.ts\n            \n            class\n            Organization\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/user/src/entities/permission.entity.ts\n            \n            entity\n            Permission\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/user/src/entities/permission.entity.ts\n            \n            class\n            Permission\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/user/src/entities/role.entity.ts\n            \n            entity\n            Role\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/user/src/entities/role.entity.ts\n            \n            class\n            Role\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/user/src/entities/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/user/src/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                        apps/user/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/user/src/migrations/1741519642145-CreateRoleTable.ts\n            \n            class\n            CreateRoleTable1741519642145\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/user/src/migrations/1741519705062-CreateUserTable.ts\n            \n            class\n            CreateUserTable1741519705062\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/user/src/resolvers/user.resolver.ts\n            \n            class\n            UserResolver\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/user/src/seeder/seeder.service.ts\n            \n            injectable\n            SeederService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        apps/user/src/typeorm.data-source.ts\n            \n            variable\n            TypeormDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/user/src/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/user/src/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                libs/common/src/common.service.ts\n            \n            injectable\n            CommonService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/config/config.helper.ts\n            \n            class\n            ConfigHelper\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                libs/common/src/config/config.service.ts\n            \n            injectable\n            AppConfigService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/auth.command.ts\n            \n            variable\n            AuthCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/escrow.command.ts\n            \n            variable\n            EscrowCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/media.command.ts\n            \n            variable\n            MediaCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/notification.command.ts\n            \n            variable\n            NotificationCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/organization.command.ts\n            \n            variable\n            OrganizationCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/payment.command.ts\n            \n            variable\n            PaymentCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/property.command.ts\n            \n            variable\n            PropertyCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/user.command.ts\n            \n            variable\n            UserCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/environment.constant.ts\n            \n            variable\n            ENVIRONMENT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/schema.constant.ts\n            \n            variable\n            SCHEMA\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/database/entities/base.entity.ts\n            \n            entity\n            BaseEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/database/entities/base.entity.ts\n            \n            class\n            BaseEntity\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                libs/common/src/database/seeder/seeder-service.interface.ts\n            \n            interface\n            SeederService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        libs/common/src/decorators/column-order.decorator.ts\n            \n            function\n            ColumnOrder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/decorators/column-order.decorator.ts\n            \n            function\n            getColumnOrder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/decorators/column-order.decorator.ts\n            \n            variable\n            ORDER_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/decorators/graphql-federation-directive.decorator.ts\n            \n            function\n            GraphQLFederationDirective\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/decorators/graphql-federation-directive.decorator.ts\n            \n            variable\n            isDocEnv\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/utils/bootstrapper.util.ts\n            \n            class\n            Bootstrapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/common/src/utils/data-source.util.ts\n            \n            class\n            DataSource\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/common/src/utils/database.util.ts\n            \n            class\n            DatabaseUtil\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/common/src/utils/subgraphs-builder.util.ts\n            \n            class\n            SubgraphsBuilder\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        typeorm-cli.ts\n            \n            variable\n            argv\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        typeorm-cli.ts\n            \n            variable\n            dataSourcePath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        typeorm-cli.ts\n            \n            variable\n            typeormCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        typeorm-cli.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @apollo/gateway : ^2.9.3\n        \n            @apollo/server : ^4.11.3\n        \n            @apollo/subgraph : ^2.9.3\n        \n            @nestjs/apollo : ^12.2.2\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.3.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/graphql : ^12.2.2\n        \n            @nestjs/microservices : ^10.4.15\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/typeorm : ^11.0.0\n        \n            @types/yargs : ^17.0.33\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            dotenv : ^16.4.7\n        \n            graphql : ^16.10.0\n        \n            ioredis : ^5.4.2\n        \n            joi : ^17.13.3\n        \n            pg : ^8.13.1\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.20\n        \n            yargs : ^17.7.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            MicroServiceClient   (libs/.../micro-service-client.enum.ts)\n                        \n                        \n                            UserRole   (libs/.../user-role.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/common/src/enums/micro-service-client.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        MicroServiceClient\n                    \n                \n                        \n                            \n                                 AUTH_CLIENT\n                            \n                        \n                        \n                            \n                                Value : AUTH_CLIENT\n                            \n                        \n                        \n                            \n                                 ESCROW_CLIENT\n                            \n                        \n                        \n                            \n                                Value : ESCROW_CLIENT\n                            \n                        \n                        \n                            \n                                 MEDIA_CLIENT\n                            \n                        \n                        \n                            \n                                Value : MEDIA_CLIENT\n                            \n                        \n                        \n                            \n                                 NOTIFICATION_CLIENT\n                            \n                        \n                        \n                            \n                                Value : NOTIFICATION_CLIENT\n                            \n                        \n                        \n                            \n                                 ORGANIZATION_CLIENT\n                            \n                        \n                        \n                            \n                                Value : ORGANIZATION_CLIENT\n                            \n                        \n                        \n                            \n                                 PAYMENT_CLIENT\n                            \n                        \n                        \n                            \n                                Value : PAYMENT_CLIENT\n                            \n                        \n                        \n                            \n                                 PROPERTY_CLIENT\n                            \n                        \n                        \n                            \n                                Value : PROPERTY_CLIENT\n                            \n                        \n                        \n                            \n                                 USER_CLIENT\n                            \n                        \n                        \n                            \n                                Value : USER_CLIENT\n                            \n                        \n            \n        \n\n    libs/common/src/enums/user-role.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        UserRole\n                    \n                \n                        \n                            \n                                 SUPER_ADMIN\n                            \n                        \n                        \n                            \n                                Value : SUPER_ADMIN\n                            \n                        \n                        \n                            \n                                 OWNER\n                            \n                        \n                        \n                            \n                                Value : OWNER\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : ADMIN\n                            \n                        \n                        \n                            \n                                 MEMBER\n                            \n                        \n                        \n                            \n                                Value : MEMBER\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            ColumnOrder   (libs/.../column-order.decorator.ts)\n                        \n                        \n                            getColumnOrder   (libs/.../column-order.decorator.ts)\n                        \n                        \n                            GraphQLFederationDirective   (libs/.../graphql-federation-directive.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/auth/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/documentation/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/escrow/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/gateway/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/media/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/notification/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/organization/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/payment/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/property/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/user/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    libs/common/src/decorators/column-order.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ColumnOrder\n                        \n                    \n                \n            \n            \n                \nColumnOrder(value: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     PropertyDecorator\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getColumnOrder\n                        \n                    \n                \n            \n            \n                \ngetColumnOrder(target, propertyKey, defaultVal: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                propertyKey\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                defaultVal\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    libs/common/src/decorators/graphql-federation-directive.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GraphQLFederationDirective\n                        \n                    \n                \n            \n            \n                \nGraphQLFederationDirective(directive: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                directive\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ClassDecorator\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nQushah Backend\nDescription\nQushah Escrow System backend containing microservices, gateway, libs, etc.\nPrerequisites\nTo be able to run this project on machine, the following must be installed:\n\nNodeJS 22 LTS\npnpm\nRedis\n\nProject setup\nMake sure pnpm is installed\nExample :$ npm install --global pnpmInstall dependencies\nExample :$ pnpm installInstall Redis\nFollow the official docs to install Redis on your machine.\nCompile and run the project\nExample :# development\n$ pnpm run start\n\n# watch mode\n$ pnpm run start:dev\n\n# production mode\n$ pnpm run start:prodRun tests\nExample :# unit tests\n$ pnpm run test\n\n# e2e tests\n$ pnpm run test:e2e\n\n# test coverage\n$ pnpm run test:covTypeorm CLI Helper Tool\nThe Typeorm CLI Helper tool lets you run typeorm CLI commands without worrying\nabout DataSources and path resolutions.\nLearn how to use the tool here.\nStructure\nExample :qushah-backend/\n│\n├── apps/\n│   ├── auth/        # Authentication Service\n│   ├── user/       # User Management Service\n│   ├── escrow/      # Escrow and Deposits Service\n│   ├── organization/    # Organization management Service\n│   ├── payment/    # Payments and Transactions Service\n│   ├── property/  # Property Listings Service\n│   ├── notification/      # Notifications Service\n│   └── gateway/     # API Gateway (separate app within the repo)\n│\n└── libs/                   # Shared Libraries (for DTOs, Interfaces, etc.)\n    └── common/             # Common utilities, interceptors, and guards\nArchitecture\nExample :            [Frontend (Angular)]\n                     │\n              [GraphQL Gateway]\n                     │\n     ┌──────────┬─────┬───────┬──────────────┬───────────┐\n     │          │     │       │              │           │\n [Auth]     [User]    │ [Property]     [Escrow]    [Payment]\n     │                │                      │\n [Notification]      [Organization]        [Disputes]\nConcerns\nHere are the key concerns for each microservice in this architecture:\n1. auth (Authentication and Authorization)\n\nSecurity: Ensuring the system is secure from unauthorized access. This includes strong password policies, token-based authentication (e.g., JWT), and OAuth if required.\nToken Expiry and Refresh: Managing token expiration and refresh mechanisms. Implement token blacklisting for security.\nRate Limiting: Protecting against brute-force attacks by implementing rate limiting or CAPTCHA.\nSecure API Communication: Ensuring all communication (especially authentication data) is encrypted with HTTPS.\nUser Roles and Permissions: Managing user roles and ensuring each user (tenant, landlord, admin) has the correct permissions for their actions.\n\n2. user (User Management)\n\nUser Data Management: Ensuring that personal data is secure, especially sensitive information like emails, addresses, and phone numbers.\nData Privacy: Complying with regulations like GDPR or CCPA, especially regarding the collection and storage of user data.\nUser Profile Updates: Allowing users to update their profiles (e.g., changing names, contact details) while maintaining data integrity.\nError Handling: Handling errors effectively, such as invalid user data, and providing clear feedback to users.\nScalability: Ensuring the system can handle large numbers of users (tenants, landlords).\n\n3. property (Property Management)\n\nProperty Data Validation: Ensuring that property details are accurate, complete, and properly validated before being listed.\nSearch Functionality: Providing a fast and efficient way for tenants to search for properties (by location, price, features, etc.).\nProperty Availability: Managing the availability of properties and preventing double-booking or issues with properties already rented.\nImage and Media Handling: Handling and storing images, videos, and 3D scans securely and efficiently. Integrating with media service when required.\nData Consistency: Ensuring that any updates to the property data (e.g., status changes, price updates) are consistent and reflected across all services.\n\n4. escrow (Escrow Service)\n\nDeposit Security: Ensuring that the deposit is secure, especially when handling large amounts of money.\nTransaction Auditing: Providing an auditable trail of deposit and release actions for transparency and security.\nEscrow Release Conditions: Implementing clear rules on when the deposit should be released to either the tenant or landlord.\nDispute Management: Handling any disputes regarding the deposit, such as property damage or failure to pay rent.\nCompliance: Ensuring that escrow services comply with local financial and regulatory standards (especially for handling money).\nEvent-Driven Updates: Integrating with other services (e.g., notifying users about escrow releases or disputes) using event-driven architecture.\n\n5. organization (Organization Management)\n\nMulti-Tenant Support: Managing organizations and their members, ensuring proper isolation between different organizations.\nAccess Control: Implementing role-based access control within organizations.\nBilling and Subscriptions: Managing organization-level billing and payments.\nOrganization Verification: Ensuring that organizations are verified before allowing transactions.\n\n6. payment (Payment Service)\n\nPayment Gateway Integration: Integrating with external payment providers (e.g., UPI, Paytm, Razorpay) for processing payments.\nTransaction Security: Ensuring secure handling of payments and sensitive financial data. Use of encryption and secure protocols.\nTransaction Failures: Handling payment failures and retries in case of network or gateway issues.\nPayment Confirmation: Sending clear confirmation of successful payments and generating receipts.\nRecurring Payments: Supporting recurring rent payments (e.g., monthly payments) and ensuring they are processed on time.\n\n7. notification (Notification Service)\n\nNotification Delivery: Ensuring timely delivery of notifications (SMS, email, push notifications) to users.\nOpt-in/Opt-out Preferences: Allowing users to manage their notification preferences.\n\n8. gateway (API Gateway)\n\nRequest Routing: Efficiently routing requests to the appropriate microservice based on the endpoint and service.\nSecurity: Ensuring that requests passing through the gateway are authenticated and authorized.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppConfigModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ClientsModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CommonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DocumentationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EscrowModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GatewayModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GraphQLGatewayModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GraphQLMicroserviceModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MediaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NotificationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrganizationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PaymentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PropertyModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SeederModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_imports\n\n\n\ncluster_CommonModule_exports\n\n\n\ncluster_CommonModule_providers\n\n\n\ncluster_DocumentationModule\n\n\n\ncluster_DocumentationModule_providers\n\n\n\ncluster_EscrowModule\n\n\n\ncluster_EscrowModule_providers\n\n\n\ncluster_GatewayModule\n\n\n\ncluster_GatewayModule_imports\n\n\n\ncluster_GatewayModule_providers\n\n\n\ncluster_MediaModule\n\n\n\ncluster_MediaModule_providers\n\n\n\ncluster_NotificationModule\n\n\n\ncluster_NotificationModule_providers\n\n\n\ncluster_OrganizationModule\n\n\n\ncluster_OrganizationModule_imports\n\n\n\ncluster_OrganizationModule_providers\n\n\n\ncluster_PaymentModule\n\n\n\ncluster_PaymentModule_providers\n\n\n\ncluster_PropertyModule\n\n\n\ncluster_PropertyModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nCommonModule->AuthModule\n\n\n\n\n\nCommonService \n\nCommonService \n\nCommonService  -->\n\nCommonModule->CommonService \n\n\n\n\n\nEscrowModule\n\nEscrowModule\n\nEscrowModule -->\n\nCommonModule->EscrowModule\n\n\n\n\n\nGatewayModule\n\nGatewayModule\n\nGatewayModule -->\n\nCommonModule->GatewayModule\n\n\n\n\n\nMediaModule\n\nMediaModule\n\nMediaModule -->\n\nCommonModule->MediaModule\n\n\n\n\n\nNotificationModule\n\nNotificationModule\n\nNotificationModule -->\n\nCommonModule->NotificationModule\n\n\n\n\n\nOrganizationModule\n\nOrganizationModule\n\nOrganizationModule -->\n\nCommonModule->OrganizationModule\n\n\n\n\n\nPaymentModule\n\nPaymentModule\n\nPaymentModule -->\n\nCommonModule->PaymentModule\n\n\n\n\n\nPropertyModule\n\nPropertyModule\n\nPropertyModule -->\n\nCommonModule->PropertyModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nCommonModule->UserModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nAuthModule -->\n\nGraphQLMicroserviceModule->AuthModule\n\n\n\nEscrowModule -->\n\nGraphQLMicroserviceModule->EscrowModule\n\n\n\nMediaModule -->\n\nGraphQLMicroserviceModule->MediaModule\n\n\n\nNotificationModule -->\n\nGraphQLMicroserviceModule->NotificationModule\n\n\n\nOrganizationModule -->\n\nGraphQLMicroserviceModule->OrganizationModule\n\n\n\nPaymentModule -->\n\nGraphQLMicroserviceModule->PaymentModule\n\n\n\nPropertyModule -->\n\nGraphQLMicroserviceModule->PropertyModule\n\n\n\nUserModule -->\n\nGraphQLMicroserviceModule->UserModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nAppConfigModule\n\nAppConfigModule\n\nCommonModule -->\n\nAppConfigModule->CommonModule\n\n\n\n\n\nCommonService\n\nCommonService\n\nCommonModule -->\n\nCommonService->CommonModule\n\n\n\n\n\nDocumentationService\n\nDocumentationService\n\n\n\nDocumentationModule\n\nDocumentationModule\n\nDocumentationModule -->\n\nDocumentationService->DocumentationModule\n\n\n\n\n\nEscrowService\n\nEscrowService\n\nEscrowModule -->\n\nEscrowService->EscrowModule\n\n\n\n\n\nGraphQLGatewayModule\n\nGraphQLGatewayModule\n\nGatewayModule -->\n\nGraphQLGatewayModule->GatewayModule\n\n\n\n\n\nGatewayService\n\nGatewayService\n\nGatewayModule -->\n\nGatewayService->GatewayModule\n\n\n\n\n\nMediaService\n\nMediaService\n\nMediaModule -->\n\nMediaService->MediaModule\n\n\n\n\n\nNotificationService\n\nNotificationService\n\nNotificationModule -->\n\nNotificationService->NotificationModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nOrganizationModule -->\n\nDatabaseModule->OrganizationModule\n\n\n\nOrganizationModule -->\n\nDatabaseModule->OrganizationModule\n\n\n\nUserModule -->\n\nDatabaseModule->UserModule\n\n\n\nUserModule -->\n\nDatabaseModule->UserModule\n\n\n\n\n\nOrganizationService\n\nOrganizationService\n\nOrganizationModule -->\n\nOrganizationService->OrganizationModule\n\n\n\n\n\nPaymentService\n\nPaymentService\n\nPaymentModule -->\n\nPaymentService->PaymentModule\n\n\n\n\n\nPropertyService\n\nPropertyService\n\nPropertyModule -->\n\nPropertyService->PropertyModule\n\n\n\n\n\nSeederModule\n\nSeederModule\n\nUserModule -->\n\nSeederModule->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        17 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    13 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    26 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : A multi-tenant escrow rental platform with property listings, deposit management, and dispute resolution.\n        \n            License : UNLICENSED\n        \n            Author : Qumber Rizvi\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            argv   (typeorm-cli.ts)\n                        \n                        \n                            AuthCommand   (libs/.../auth.command.ts)\n                        \n                        \n                            dataSourcePath   (typeorm-cli.ts)\n                        \n                        \n                            ENVIRONMENT   (libs/.../environment.constant.ts)\n                        \n                        \n                            EscrowCommand   (libs/.../escrow.command.ts)\n                        \n                        \n                            isDocEnv   (libs/.../graphql-federation-directive.decorator.ts)\n                        \n                        \n                            MediaCommand   (libs/.../media.command.ts)\n                        \n                        \n                            NotificationCommand   (libs/.../notification.command.ts)\n                        \n                        \n                            ORDER_KEY   (libs/.../column-order.decorator.ts)\n                        \n                        \n                            OrganizationCommand   (libs/.../organization.command.ts)\n                        \n                        \n                            PaymentCommand   (libs/.../payment.command.ts)\n                        \n                        \n                            PropertyCommand   (libs/.../property.command.ts)\n                        \n                        \n                            SCHEMA   (libs/.../schema.constant.ts)\n                        \n                        \n                            typeormCommand   (typeorm-cli.ts)\n                        \n                        \n                            TypeormDataSource   (apps/.../typeorm.data-source.ts)\n                        \n                        \n                            TypeormDataSource   (apps/.../typeorm.data-source.ts)\n                        \n                        \n                            TypeormDataSource   (apps/.../typeorm.data-source.ts)\n                        \n                        \n                            TypeormDataSource   (apps/.../typeorm.data-source.ts)\n                        \n                        \n                            TypeormDataSource   (apps/.../typeorm.data-source.ts)\n                        \n                        \n                            TypeormDataSource   (apps/.../typeorm.data-source.ts)\n                        \n                        \n                            TypeormDataSource   (apps/.../typeorm.data-source.ts)\n                        \n                        \n                               (typeorm-cli.ts)\n                        \n                        \n                               (apps/.../gateway.module.ts)\n                        \n                        \n                            UserCommand   (libs/.../user.command.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    typeorm-cli.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        argv\n                        \n                    \n                \n            \n                \n                    \n                        Default value : yargs(process.argv.slice(2))\n  .option('microservice', {\n    alias: 'm',\n    type: 'string',\n    describe: 'The name of the microservice',\n    demandOption: true,\n  })\n  .option('command', {\n    alias: 'c',\n    type: 'string',\n    describe: 'TypeORM CLI command (e.g., generate, run, revert, seed)',\n    demandOption: true,\n  })\n  .option('args', {\n    alias: 'a',\n    type: 'string',\n    describe: 'Additional arguments for the TypeORM CLI command (optional)',\n    default: '',\n  })\n  .option('title', {\n    alias: 't',\n    type: 'string',\n    describe:\n      'Title for migration file. Needed while running generate (optional)',\n    default: '',\n  })\n  .help().argv\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSourcePath\n                        \n                    \n                \n            \n                \n                    \n                        Default value : path.join(\n  __dirname,\n  `./apps/${microservice}/src/typeorm.data-source.ts`,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        typeormCommand\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli.js migration:${command} ${title ? './apps/' + microservice + '/src/migrations/' + title : ''} -d ${dataSourcePath} ${args || ''}`\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : argv as {\n  microservice: string;\n  command: string;\n  args?: string;\n  title?: string;\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/auth.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AuthCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_AUTH: 'PING_AUTH',\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/environment.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ENVIRONMENT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  REDIS_HOST: 'REDIS_HOST',\n  REDIS_PORT: 'REDIS_PORT',\n  AUTH_PORT: 'AUTH_PORT',\n  ESCROW_PORT: 'ESCROW_PORT',\n  GATEWAY_PORT: 'GATEWAY_PORT',\n  MEDIA_PORT: 'MEDIA_PORT',\n  NOTIFICATION_PORT: 'NOTIFICATION_PORT',\n  ORGANIZATION_PORT: 'ORGANIZATION_PORT',\n  PAYMENT_PORT: 'PAYMENT_PORT',\n  PROPERTY_PORT: 'PROPERTY_PORT',\n  USER_PORT: 'USER_PORT',\n  AUTH_HOST: 'AUTH_HOST',\n  ESCROW_HOST: 'ESCROW_HOST',\n  GATEWAY_HOST: 'GATEWAY_HOST',\n  MEDIA_HOST: 'MEDIA_HOST',\n  NOTIFICATION_HOST: 'NOTIFICATION_HOST',\n  ORGANIZATION_HOST: 'ORGANIZATION_HOST',\n  PAYMENT_HOST: 'PAYMENT_HOST',\n  PROPERTY_HOST: 'PROPERTY_HOST',\n  USER_HOST: 'USER_HOST',\n  DATABASE_TYPE: 'DATABASE_TYPE',\n  DATABASE_HOST: 'DATABASE_HOST',\n  DATABASE_PORT: 'DATABASE_PORT',\n  DATABASE_USERNAME: 'DATABASE_USERNAME',\n  DATABASE_PASSWORD: 'DATABASE_PASSWORD',\n  DATABASE_NAME: 'DATABASE_NAME',\n  IS_DOC_ENV: process.env.IS_DOC_ENV === 'true',\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/escrow.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EscrowCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_ESCROW: 'PING_ESCROW',\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/decorators/graphql-federation-directive.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isDocEnv\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ENVIRONMENT.IS_DOC_ENV\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/media.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MediaCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_MEDIA: 'PING_MEDIA',\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/notification.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NotificationCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_NOTIFICATION: 'PING_NOTIFICATION',\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/decorators/column-order.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ORDER_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol.for('order_key')\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/organization.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        OrganizationCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_ORGANIZATION: 'PING_ORGANIZATION',\n  FIND_ORGANIZATION_BY_ID: 'FIND_ORGANIZATION_BY_ID',\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/payment.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PaymentCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_PAYMENT: 'PING_PAYMENT',\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/property.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PropertyCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_PROPERTY: 'PING_PROPERTY',\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/schema.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SCHEMA\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  ORGANIZATION: 'organization',\n  USER: 'user',\n}\n                    \n                \n\n\n        \n    \n\n    apps/escrow/src/typeorm.data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TypeormDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DataSource.getInstance('escrow')\n                    \n                \n\n\n        \n    \n\n    apps/media/src/typeorm.data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TypeormDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DataSource.getInstance('media')\n                    \n                \n\n\n        \n    \n\n    apps/notification/src/typeorm.data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TypeormDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DataSource.getInstance('notification')\n                    \n                \n\n\n        \n    \n\n    apps/organization/src/typeorm.data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TypeormDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DataSource.getInstance('organization')\n                    \n                \n\n\n        \n    \n\n    apps/payment/src/typeorm.data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TypeormDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DataSource.getInstance('payment')\n                    \n                \n\n\n        \n    \n\n    apps/property/src/typeorm.data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TypeormDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DataSource.getInstance('property')\n                    \n                \n\n\n        \n    \n\n    apps/user/src/typeorm.data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TypeormDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DataSource.getInstance('user')\n                    \n                \n\n\n        \n    \n\n    apps/gateway/src/gateway.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : ENVIRONMENT\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/user.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_USER: 'PING_USER',\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/running-migrations-and-seeders.html":{"url":"additional-documentation/running-migrations-and-seeders.html","title":"additional-page - Running Migrations and Seeders","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMigration CLI Manual\nThis CLI is designed to streamline database migration management in a multi-microservice NestJS project using TypeORM.\nPrerequisites\n\nEnsure pnpm is installed globally.\nEnsure TypeORM and ts-node are installed as dependencies in the project.\nEnsure you have a .env file properly set up for database connections.\n\nUsage\nThe general syntax for the migration command:\nExample :pnpm migration -m  -c  [-a ]Parameters:\n\n-m, --microservice → Specifies the target microservice (e.g., auth, escrow, user, etc.).\n-c, --command → Specifies the TypeORM migration command to run (e.g., generate, run, revert, seed, etc.).\n-t, --title (optional) → Title for migration file. Needed while running generate.\n-a, --args (optional) → Additional arguments passed to TypeORM CLI.\n\n\nAvailable Commands\n1. Generate a Migration\nCreates a new migration file based on changes in entity definitions.\nExample :pnpm migration -m organization -c generate -t CreateOrganization\n-m organization → Runs migration for the organization microservice.\n-c generate → Generates a migration file.\n-t \"CreateOrganization\" → Specifies the migration file name.\n\n\n2. Run Migrations\nApplies pending migrations to the database.\nExample :pnpm migration -m escrow -c run\n-m escrow → Runs migrations for the escrow microservice.\n-c run → Executes pending migrations.\n\n\n3. Revert Last Migration\nRolls back the most recent migration.\nExample :pnpm migration -m user -c revert\n-m user → Targets the user microservice.\n-c revert → Rolls back the latest migration.\n\n\n4. Show Migration Status\nLists applied and pending migrations.\nExample :pnpm migration -m property -c show\n-m property → Targets the property microservice.\n-c show → Displays migration history.\n\n\n5. Run Seeder\nExecutes the seed script for a microservice.\nExample :pnpm migration -m user -c seed\n-m user → Targets the user microservice.\n-c seed → Runs the seeder script located at apps//src/seeder/seeder.ts.\n\n\nNotes\n\nThe -m flag is mandatory to specify which microservice's migration should be executed.\nThe CLI automatically resolves the correct TypeORM DataSource file based on the microservice name.\nIf no changes are detected when generating a migration, the CLI will not throw an error but will log a warning\ninstead.\nIf -c seed is used, the CLI will execute the corresponding seeder.ts file for the specified microservice. Seeders\nare used to populate the database with initial data and should be located at\napps//src/seeder/seeder.ts.\n\nTroubleshooting\nError: \"No changes in database schema were found\"\n\nEnsure that your entities are properly configured and registered in the microservice's DataSource.\nVerify that the database is up to date with the latest migrations.\n\nError: \"Cannot find module 'typeorm'\"\n\nRun pnpm install to ensure dependencies are correctly installed.\n\n\nFuture Enhancements\n\nAutomate versioning with Release Please integration.\nSupport interactive mode for selecting microservices and commands.\nEnhance error handling and logging.\n\n\nThis CLI provides an efficient way to manage database migrations across multiple microservices in a monorepo setup.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{"url":"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html","title":"additional-page - How to use migration tool","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMigration CLI Manual\nThis CLI is designed to streamline database migration management in a multi-microservice NestJS project using TypeORM.\nPrerequisites\n\nEnsure pnpm is installed globally.\nEnsure TypeORM and ts-node are installed as dependencies in the project.\nEnsure you have a .env file properly set up for database connections.\n\nUsage\nThe general syntax for the migration command:\nExample :pnpm migration -m  -c  [-a ]Parameters:\n\n-m, --microservice → Specifies the target microservice (e.g., auth, escrow, user, etc.).\n-c, --command → Specifies the TypeORM migration command to run (e.g., generate, run, revert, seed, etc.).\n-t, --title (optional) → Title for migration file. Needed while running generate.\n-a, --args (optional) → Additional arguments passed to TypeORM CLI.\n\n\nAvailable Commands\n1. Generate a Migration\nCreates a new migration file based on changes in entity definitions.\nExample :pnpm migration -m organization -c generate -t CreateOrganization\n-m organization → Runs migration for the organization microservice.\n-c generate → Generates a migration file.\n-t \"CreateOrganization\" → Specifies the migration file name.\n\n\n2. Run Migrations\nApplies pending migrations to the database.\nExample :pnpm migration -m escrow -c run\n-m escrow → Runs migrations for the escrow microservice.\n-c run → Executes pending migrations.\n\n\n3. Revert Last Migration\nRolls back the most recent migration.\nExample :pnpm migration -m user -c revert\n-m user → Targets the user microservice.\n-c revert → Rolls back the latest migration.\n\n\n4. Show Migration Status\nLists applied and pending migrations.\nExample :pnpm migration -m property -c show\n-m property → Targets the property microservice.\n-c show → Displays migration history.\n\n\n5. Run Seeder\nExecutes the seed script for a microservice.\nExample :pnpm migration -m user -c seed\n-m user → Targets the user microservice.\n-c seed → Runs the seeder script located at apps//src/seeder/seeder.ts.\n\n\nNotes\n\nThe -m flag is mandatory to specify which microservice's migration should be executed.\nThe CLI automatically resolves the correct TypeORM DataSource file based on the microservice name.\nIf no changes are detected when generating a migration, the CLI will not throw an error but will log a warning\ninstead.\nIf -c seed is used, the CLI will execute the corresponding seeder.ts file for the specified microservice. Seeders\nare used to populate the database with initial data and should be located at\napps//src/seeder/seeder.ts.\n\nTroubleshooting\nError: \"No changes in database schema were found\"\n\nEnsure that your entities are properly configured and registered in the microservice's DataSource.\nVerify that the database is up to date with the latest migrations.\n\nError: \"Cannot find module 'typeorm'\"\n\nRun pnpm install to ensure dependencies are correctly installed.\n\n\nFuture Enhancements\n\nAutomate versioning with Release Please integration.\nSupport interactive mode for selecting microservices and commands.\nEnhance error handling and logging.\n\n\nThis CLI provides an efficient way to manage database migrations across multiple microservices in a monorepo setup.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
