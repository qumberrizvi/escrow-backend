var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppConfigModule.html",[0,0.614,1,2.485]],["body/modules/AppConfigModule.html",[0,0.944,1,3.822,2,1.427,3,0.199,4,0.199,5,0.154,6,4.55,7,0.283,8,0.016,9,3.928,10,3.212,11,0.568,12,5.057,13,1.631,14,3.928,15,3.928,16,2.303,17,4.55,18,4.55,19,3.928,20,7.373,21,3.928,22,4.55,23,3.928,24,3.928,25,3.928,26,3.928,27,3.928,28,3.928,29,4.55,30,4.55,31,4.55,32,3.928,33,3.928,34,4.55,35,0.199,36,0.079,37,0.012,38,0.012]],["title/injectables/AppConfigService.html",[39,0.922,40,2.69]],["body/injectables/AppConfigService.html",[3,0.189,4,0.189,5,0.146,7,0.248,8,0.017,10,3.049,11,0.539,35,0.189,36,0.075,37,0.012,38,0.012,39,1.37,40,3.999,41,1.78,42,3.729,43,0.511,44,0.827,45,4.889,46,2.817,47,4.319,48,6.17,49,0.707,50,4.319,51,2.734,52,1.494,53,2.072,54,2.03,55,4.889,56,0.833,57,4.319,58,4.886,59,2.817,60,0.599,61,1.965,62,1.869,63,0.663,64,4.319]],["title/controllers/AuthController.html",[65,1.195,66,2.69]],["body/controllers/AuthController.html",[3,0.195,4,0.195,5,0.151,7,0.297,8,0.017,11,0.556,35,0.195,36,0.077,37,0.012,38,0.012,43,0.526,44,0.843,49,0.556,56,0.761,60,0.618,61,2.025,62,1.926,63,0.683,65,1.812,66,4.078,67,1.396,68,3.842,69,2.224,70,1.337,71,2.385,72,2.253,73,4.451,74,3.896,75,3.842,76,3.095,77,2.025,78,3.442,79,4.451,80,2.385,81,4.451,82,4.451]],["title/modules/AuthModule.html",[0,0.614,83,2.69]],["body/modules/AuthModule.html",[0,0.982,2,1.259,3,0.176,4,0.176,5,0.136,7,0.297,8,0.017,11,0.501,13,1.933,35,0.176,36,0.069,37,0.011,38,0.011,66,4.302,67,1.692,74,4.253,75,3.465,83,5.255,84,1.506,85,1.737,86,1.737,87,1.577,88,2.511,89,1.577,90,3.465,91,3.465,92,3.465,93,2.885,94,3.029,95,2.334,96,1.737,97,1.654,98,4.013,99,4.013,100,1.106,101,3.808,102,4.013]],["title/classes/AuthResolver.html",[36,0.066,101,2.69]],["body/classes/AuthResolver.html",[3,0.208,4,0.208,5,0.161,7,0.208,8,0.017,35,0.208,36,0.082,37,0.013,38,0.013,43,0.563,44,0.881,49,0.595,52,1.591,56,0.872,60,0.661,63,0.731,70,1.43,101,4.258,103,1.872,104,4.111,105,3.522,106,2.552,107,6.031,108,4.762,109,3.232,110,3.232,111,1.872,112,2.552]],["title/injectables/AuthService.html",[39,0.922,74,2.315]],["body/injectables/AuthService.html",[3,0.22,4,0.22,5,0.17,7,0.22,8,0.016,11,0.627,35,0.22,36,0.087,37,0.013,38,0.013,39,1.508,41,2.069,43,0.593,44,0.91,49,0.627,56,0.821,60,0.697,63,0.77,69,2.325,74,3.788,113,4.333,114,5.019,115,2.406,116,4.333,117,2.284]],["title/entities/BaseEntity.html",[118,2.169,119,2.485]],["body/entities/BaseEntity.html",[3,0.107,4,0.107,5,0.083,7,0.226,8,0.017,16,2.989,35,0.107,36,0.042,37,0.008,38,0.008,43,0.29,49,0.647,52,1.216,53,1.697,54,1.856,63,0.707,70,1.555,72,1.241,111,0.964,118,2.151,119,3.006,120,1.6,121,2.117,122,2.024,123,4.608,124,4.608,125,4.827,126,4.608,127,6.518,128,2.452,129,3.261,130,2.452,131,3.778,132,4.486,133,2.452,134,3.261,135,2.452,136,2.667,137,2.452,138,2.452,139,2.452,140,3.261,141,2.452,142,3.778,143,3.778,144,3.254,145,3.778,146,3.778,147,3.778,148,1.175,149,4.324,150,2.921,151,3.563,152,2.921,153,2.452,154,3.778,155,2.452,156,2.452,157,1.896,158,2.117,159,4.608,160,1.314,161,2.452,162,2.452,163,3.184,164,2.921,165,2.452,166,2.452,167,2.921,168,4.469,169,2.452,170,2.452,171,2.452,172,2.452,173,2.452,174,2.452,175,5.177,176,2.117,177,3.778,178,2.117,179,2.452,180,2.452,181,2.452,182,1.6,183,2.117,184,1.6,185,2.452,186,2.117,187,2.452,188,3.778,189,2.117,190,2.452,191,2.452,192,2.452,193,2.452,194,2.452,195,2.452,196,2.117,197,2.452,198,3.778,199,2.452,200,3.778,201,2.452,202,2.452,203,2.452]],["title/classes/Bootstrapper.html",[36,0.066,204,2.946]],["body/classes/Bootstrapper.html",[0,0.615,3,0.167,4,0.167,5,0.129,7,0.279,8,0.017,11,0.477,35,0.167,36,0.066,37,0.011,38,0.011,43,0.451,44,0.762,49,0.477,51,1.652,52,1.007,53,1.252,54,1.369,60,0.53,77,1.737,100,1.052,103,1.501,136,2.696,160,3.183,163,3.804,204,4.033,205,3.296,206,3.382,207,5.215,208,5.215,209,3.818,210,5.215,211,2.969,212,3.296,213,2.953,214,3.818,215,4.502,216,2.491,217,3.818,218,3.634,219,2.696,220,3.296,221,3.296,222,3.296,223,3.818,224,3.818,225,3.296,226,2.953,227,2.32,228,3.818,229,3.878,230,3.818,231,3.818,232,3.818,233,3.818,234,3.818,235,3.818]],["title/modules/ClientsModule.html",[0,0.614,236,2.946]],["body/modules/ClientsModule.html",[0,0.966,2,1.221,3,0.17,4,0.17,5,0.132,7,0.262,8,0.017,11,0.486,13,1.395,35,0.17,36,0.067,37,0.011,38,0.011,44,0.568,49,0.486,51,1.684,52,1.394,53,1.276,54,1.395,56,0.79,60,0.54,63,0.597,77,1.771,89,1.529,160,2.831,163,3.415,206,3.008,211,3.008,215,4.56,218,2.215,219,2.747,221,3.359,225,3.359,226,3.009,227,3.21,229,3.21,236,4.974,237,3.891,238,3.359,239,5.282,240,3.891,241,3.359,242,3.008,243,4.085,244,3.009,245,5.282,246,5.282,247,3.891,248,3.891,249,3.891,250,3.891]],["title/modules/CommonModule.html",[0,0.614,93,1.57]],["body/modules/CommonModule.html",[0,1.008,1,4.635,2,1.327,3,0.185,4,0.185,5,0.143,7,0.274,8,0.016,11,0.528,13,2.002,35,0.185,36,0.073,37,0.012,38,0.012,84,1.587,85,1.83,86,1.83,87,1.662,88,2.578,89,2.458,93,3.067,95,2.417,96,1.83,97,1.743,251,3.651,252,3.651,253,3.651,254,3.651,255,4.973,256,4.229,257,4.229,258,4.229]],["title/injectables/CommonService.html",[39,0.922,255,2.485]],["body/injectables/CommonService.html",[3,0.243,4,0.243,5,0.189,7,0.243,8,0.016,11,0.695,35,0.243,36,0.096,37,0.014,38,0.014,39,1.607,41,2.294,255,4.331,259,4.806]],["title/classes/ConfigHelper.html",[36,0.066,211,2.169]],["body/classes/ConfigHelper.html",[3,0.099,4,0.099,5,0.077,7,0.235,8,0.017,9,1.948,10,2.501,14,1.948,15,1.948,16,1.142,35,0.099,36,0.039,37,0.008,38,0.008,40,4.364,43,0.267,44,0.517,45,3.058,46,2.852,48,3.058,49,0.794,51,2.142,52,1.153,53,2.026,54,1.567,55,3.058,56,0.837,58,1.745,59,2.852,60,0.687,63,0.916,100,0.622,103,0.887,122,1.898,160,3.059,163,3.938,206,2.489,211,3.063,212,1.948,213,1.745,216,2.311,218,1.285,220,3.774,227,3.627,229,3.627,242,2.017,260,1.948,261,5.336,262,4.371,263,4.274,264,3.542,265,3.542,266,3.542,267,4.371,268,3.542,269,2.257,270,2.257,271,2.257,272,3.542,273,2.257,274,2.257,275,3.542,276,2.257,277,2.257,278,2.257,279,2.257,280,2.257,281,2.257,282,2.257,283,1.594,284,4.371,285,2.257,286,2.257,287,2.257,288,2.257,289,2.257,290,2.257,291,2.257,292,2.257,293,2.257,294,2.257,295,2.739,296,4.951,297,2.257,298,2.501,299,2.257,300,2.501,301,2.257,302,2.257,303,2.257,304,2.257,305,2.257,306,2.257]],["title/classes/CreateOrganization1740356244243.html",[36,0.066,307,2.946]],["body/classes/CreateOrganization1740356244243.html",[3,0.109,4,0.109,5,0.084,7,0.109,8,0.016,35,0.109,36,0.043,37,0.008,38,0.008,43,0.293,44,0.557,49,0.58,51,1.65,52,1.631,53,1.522,54,1.367,56,0.327,59,3.029,60,0.529,103,0.975,122,2.043,125,4.498,129,3.292,134,3.292,140,3.292,148,1.19,182,4.161,184,1.619,186,6.027,206,3.379,218,3.379,242,2.967,307,4.029,308,4.498,309,2.143,310,3.813,311,4.643,312,5.935,313,3.292,314,3.813,315,2.482,316,3.813,317,6.542,318,2.482,319,3.813,320,2.482,321,5.622,322,3.813,323,5.124,324,3.813,325,3.813,326,6.378,327,6.378,328,3.292,329,2.143,330,1.919,331,1.919,332,5.935,333,5.21,334,6.18,335,2.482,336,4.008,337,2.482,338,2.482,339,3.813,340,5.21,341,2.143,342,2.143,343,2.143,344,2.143,345,3.813,346,2.948,347,2.143,348,2.143,349,2.143,350,1.752,351,4.008,352,2.482,353,2.482,354,2.482,355,3.813,356,2.482,357,3.813,358,2.482,359,2.482,360,2.482,361,2.482,362,3.292,363,2.143,364,3.813,365,2.482]],["title/classes/DataSource.html",[36,0.066,144,2.69]],["body/classes/DataSource.html",[3,0.166,4,0.166,5,0.176,7,0.259,8,0.017,35,0.166,36,0.066,37,0.011,38,0.011,43,0.45,44,0.76,49,0.475,51,1.646,52,1.004,53,1.705,54,1.364,56,0.781,60,0.528,63,0.584,103,1.495,120,2.482,144,4.185,148,1.824,160,3.177,216,2.482,227,2.312,229,2.312,263,4.491,295,2.942,298,2.686,300,2.686,350,2.686,366,4.491,367,3.284,368,5.202,369,3.804,370,4.491,371,3.804,372,3.804,373,4.491,374,4.022,375,3.284,376,3.804,377,2.942,378,3.804,379,3.804,380,3.804,381,3.804,382,3.804,383,6.372,384,3.804,385,3.804,386,3.804,387,3.804,388,3.804,389,3.804,390,3.804,391,3.284,392,3.284,393,3.284,394,3.804,395,3.804,396,3.804,397,3.804,398,3.804]],["title/modules/DatabaseModule.html",[0,0.614,399,2.485]],["body/modules/DatabaseModule.html",[0,0.926,2,1.126,3,0.157,4,0.157,5,0.122,7,0.251,8,0.017,11,0.448,13,1.287,16,2.53,35,0.157,36,0.062,37,0.011,38,0.011,44,0.524,49,0.448,51,1.553,52,0.947,53,1.885,54,1.287,56,0.758,60,0.498,63,0.767,100,0.989,160,2.678,163,3.274,206,2.044,211,2.846,218,2.044,219,2.535,226,3.865,227,3.037,229,3.037,244,4.446,295,3.865,298,3.529,300,3.529,350,2.535,370,5.367,392,3.099,393,3.099,399,3.751,400,3.59,401,3.59,402,4.998,403,3.59,404,3.099,405,4.998,406,2.535,407,3.59,408,3.099,409,3.59,410,3.59,411,3.59,412,3.59,413,3.59,414,3.59,415,3.099]],["title/controllers/DocumentationController.html",[65,1.195,416,2.69]],["body/controllers/DocumentationController.html",[3,0.209,4,0.209,5,0.162,7,0.265,8,0.017,11,0.598,35,0.209,36,0.083,37,0.013,38,0.013,43,0.566,44,0.883,49,0.598,56,0.797,60,0.664,61,2.177,62,2.07,63,0.734,65,1.898,67,1.501,69,2.285,70,1.437,416,4.271,417,4.13,418,4.784,419,4.031,420,4.13,421,4.784]],["title/modules/DocumentationModule.html",[0,0.614,422,2.69]],["body/modules/DocumentationModule.html",[0,1.042,2,1.421,3,0.198,4,0.198,5,0.154,7,0.283,8,0.016,11,0.566,13,1.624,35,0.198,36,0.078,37,0.012,38,0.012,67,1.833,84,1.699,85,1.96,86,1.96,87,1.78,88,2.665,89,1.78,95,2.528,96,1.96,97,1.867,416,4.565,419,4.399,420,3.91,422,5.111,423,3.91,424,3.91,425,4.53,426,4.53]],["title/injectables/DocumentationService.html",[39,0.922,419,2.315]],["body/injectables/DocumentationService.html",[3,0.221,4,0.221,5,0.171,7,0.221,8,0.016,11,0.63,35,0.221,36,0.087,37,0.013,38,0.013,39,1.513,41,2.079,43,0.596,44,0.913,49,0.63,56,0.824,60,0.7,63,0.774,69,2.329,115,2.418,419,3.8,427,4.355,428,5.044,429,5.044]],["title/controllers/EscrowController.html",[65,1.195,430,2.69]],["body/controllers/EscrowController.html",[3,0.195,4,0.195,5,0.151,7,0.297,8,0.017,11,0.556,35,0.195,36,0.077,37,0.012,38,0.012,43,0.526,44,0.843,49,0.556,56,0.761,60,0.618,61,2.025,62,1.926,63,0.683,65,1.812,67,1.396,69,2.224,70,1.337,71,2.385,72,2.253,76,3.095,77,2.025,80,2.385,100,1.226,430,4.078,431,3.842,432,4.451,433,3.896,434,3.842,435,3.442,436,4.451,437,4.451]],["title/modules/EscrowModule.html",[0,0.614,438,2.69]],["body/modules/EscrowModule.html",[0,0.982,2,1.259,3,0.176,4,0.176,5,0.136,7,0.297,8,0.017,11,0.501,13,1.933,35,0.176,36,0.069,37,0.011,38,0.011,67,1.692,84,1.506,85,1.737,86,1.737,87,1.577,88,2.511,89,1.577,93,2.885,94,3.029,95,2.334,96,1.737,97,1.654,100,1.106,430,4.302,433,4.253,434,3.465,438,5.255,439,3.465,440,3.465,441,4.013,442,4.013,443,4.013,444,3.808,445,4.013]],["title/classes/EscrowResolver.html",[36,0.066,444,2.69]],["body/classes/EscrowResolver.html",[3,0.208,4,0.208,5,0.161,7,0.208,8,0.017,35,0.208,36,0.082,37,0.013,38,0.013,43,0.563,44,0.881,49,0.595,52,1.591,56,0.872,60,0.661,63,0.731,70,1.43,103,1.872,105,3.522,106,2.552,109,3.232,110,3.232,111,1.872,112,2.552,444,4.258,446,4.111,447,6.031,448,4.762]],["title/injectables/EscrowService.html",[39,0.922,433,2.315]],["body/injectables/EscrowService.html",[3,0.22,4,0.22,5,0.17,7,0.22,8,0.016,11,0.627,35,0.22,36,0.087,37,0.013,38,0.013,39,1.508,41,2.069,43,0.593,44,0.91,49,0.627,56,0.821,60,0.697,63,0.77,69,2.325,115,2.406,117,2.284,433,3.788,449,4.333,450,5.019,451,4.333]],["title/modules/GatewayModule.html",[0,0.614,452,2.69]],["body/modules/GatewayModule.html",[0,0.962,2,1.212,3,0.169,4,0.169,5,0.131,7,0.261,8,0.017,11,0.482,13,1.884,35,0.169,36,0.067,37,0.011,38,0.011,84,1.449,85,1.671,86,1.671,87,1.518,88,2.462,89,1.518,93,2.852,95,2.274,96,1.671,97,1.591,100,1.064,163,2.199,283,3.71,452,5.217,453,3.334,454,3.334,455,3.334,456,4.376,457,4.515,458,2.986,459,3.861,460,4.537,461,4.537,462,4.537,463,4.537,464,4.537,465,4.537,466,4.537,467,4.537,468,3.861]],["title/injectables/GatewayService.html",[39,0.922,457,2.485]],["body/injectables/GatewayService.html",[3,0.213,4,0.213,5,0.165,7,0.213,8,0.016,11,0.609,35,0.213,36,0.084,37,0.013,38,0.013,39,1.481,41,2.009,43,0.576,44,0.894,46,4.365,49,0.765,56,0.807,60,0.677,63,0.748,105,3.552,115,2.337,117,2.219,457,3.994,469,4.209,470,4.876,471,4.876,472,3.77]],["title/modules/GraphQLGatewayModule.html",[0,0.614,456,2.485]],["body/modules/GraphQLGatewayModule.html",[0,0.955,2,1.194,3,0.166,4,0.166,5,0.129,7,0.292,8,0.017,11,0.475,13,1.364,35,0.166,36,0.066,37,0.011,38,0.011,44,0.555,49,0.475,51,1.646,52,1.004,53,1.247,54,1.364,56,0.781,60,0.528,63,0.798,89,1.495,100,1.048,111,1.495,160,2.788,206,3.375,216,2.482,218,2.166,238,3.284,242,2.962,243,4.022,244,2.942,408,3.284,456,3.867,472,2.942,473,4.491,474,3.804,475,5.202,476,3.804,477,3.804,478,4.491,479,5.202,480,3.804,481,2.942,482,5.202,483,3.284,484,2.686,485,3.804,486,3.284,487,3.804,488,3.804,489,3.804]],["title/modules/GraphQLMicroserviceModule.html",[0,0.614,94,1.649]],["body/modules/GraphQLMicroserviceModule.html",[0,0.983,2,1.522,3,0.212,4,0.212,5,0.165,7,0.292,8,0.017,11,0.606,13,1.739,16,2.456,35,0.212,36,0.084,37,0.013,38,0.013,94,2.641,111,1.907,473,4.189,478,4.189,481,3.752,486,4.189,490,4.852,491,6.103,492,4.852,493,4.852,494,4.852,495,4.852,496,3.752,497,4.852]],["title/controllers/MediaController.html",[65,1.195,498,2.69]],["body/controllers/MediaController.html",[3,0.195,4,0.195,5,0.151,7,0.297,8,0.017,11,0.556,35,0.195,36,0.077,37,0.012,38,0.012,43,0.526,44,0.843,49,0.556,56,0.761,60,0.618,61,2.025,62,1.926,63,0.683,65,1.812,67,1.396,69,2.224,70,1.337,71,2.385,72,2.253,76,3.095,77,2.025,80,2.385,100,1.226,498,4.078,499,3.842,500,4.451,501,3.896,502,3.842,503,3.442,504,4.451,505,4.451]],["title/modules/MediaModule.html",[0,0.614,506,2.69]],["body/modules/MediaModule.html",[0,0.982,2,1.259,3,0.176,4,0.176,5,0.136,7,0.297,8,0.017,11,0.501,13,1.933,35,0.176,36,0.069,37,0.011,38,0.011,67,1.692,84,1.506,85,1.737,86,1.737,87,1.577,88,2.511,89,1.577,93,2.885,94,3.029,95,2.334,96,1.737,97,1.654,100,1.106,498,4.302,501,4.253,502,3.465,506,5.255,507,3.465,508,4.013,509,3.465,510,4.013,511,4.013,512,3.808,513,4.013]],["title/classes/MediaResolver.html",[36,0.066,512,2.69]],["body/classes/MediaResolver.html",[3,0.208,4,0.208,5,0.161,7,0.208,8,0.017,35,0.208,36,0.082,37,0.013,38,0.013,43,0.563,44,0.881,49,0.595,52,1.591,56,0.872,60,0.661,63,0.731,70,1.43,103,1.872,105,3.522,106,2.552,109,3.232,110,3.232,111,1.872,112,2.552,512,4.258,514,4.111,515,6.031,516,4.762]],["title/injectables/MediaService.html",[39,0.922,501,2.315]],["body/injectables/MediaService.html",[3,0.22,4,0.22,5,0.17,7,0.22,8,0.016,11,0.627,35,0.22,36,0.087,37,0.013,38,0.013,39,1.508,41,2.069,43,0.593,44,0.91,49,0.627,56,0.821,60,0.697,63,0.77,69,2.325,115,2.406,117,2.284,501,3.788,517,4.333,518,5.019,519,4.333]],["title/controllers/NotificationController.html",[65,1.195,520,2.69]],["body/controllers/NotificationController.html",[3,0.195,4,0.195,5,0.151,7,0.297,8,0.017,11,0.556,35,0.195,36,0.077,37,0.012,38,0.012,43,0.526,44,0.843,49,0.556,56,0.761,60,0.618,61,2.025,62,1.926,63,0.683,65,1.812,67,1.396,69,2.224,70,1.337,71,2.385,72,2.253,76,3.095,77,2.025,80,2.385,100,1.226,520,4.078,521,3.842,522,4.451,523,3.896,524,3.842,525,3.442,526,4.451,527,4.451]],["title/modules/NotificationModule.html",[0,0.614,528,2.69]],["body/modules/NotificationModule.html",[0,0.982,2,1.259,3,0.176,4,0.176,5,0.136,7,0.297,8,0.017,11,0.501,13,1.933,35,0.176,36,0.069,37,0.011,38,0.011,67,1.692,84,1.506,85,1.737,86,1.737,87,1.577,88,2.511,89,1.577,93,2.885,94,3.029,95,2.334,96,1.737,97,1.654,100,1.106,520,4.302,523,4.253,524,3.465,528,5.255,529,3.465,530,4.013,531,3.465,532,4.013,533,4.013,534,3.808,535,4.013]],["title/classes/NotificationResolver.html",[36,0.066,534,2.69]],["body/classes/NotificationResolver.html",[3,0.208,4,0.208,5,0.161,7,0.208,8,0.017,35,0.208,36,0.082,37,0.013,38,0.013,43,0.563,44,0.881,49,0.595,52,1.591,56,0.872,60,0.661,63,0.731,70,1.43,103,1.872,105,3.522,106,2.552,109,3.232,110,3.232,111,1.872,112,2.552,534,4.258,536,4.111,537,6.031,538,4.762]],["title/injectables/NotificationService.html",[39,0.922,523,2.315]],["body/injectables/NotificationService.html",[3,0.22,4,0.22,5,0.17,7,0.22,8,0.016,11,0.627,35,0.22,36,0.087,37,0.013,38,0.013,39,1.508,41,2.069,43,0.593,44,0.91,49,0.627,56,0.821,60,0.697,63,0.77,69,2.325,115,2.406,117,2.284,523,3.788,539,4.333,540,5.019,541,4.333]],["title/entities/Organization.html",[118,2.169,542,2.169]],["body/entities/Organization.html",[3,0.134,4,0.134,5,0.104,7,0.253,8,0.017,16,3.113,35,0.134,36,0.053,37,0.01,38,0.01,43,0.362,49,0.802,52,1.526,53,2.105,54,1.6,56,0.974,70,1.928,100,0.844,111,1.204,118,2.541,119,2.911,120,1.998,122,2.392,132,3.151,148,1.468,149,5.125,150,3.451,157,2.368,164,4.756,167,4.965,328,4.546,329,3.853,330,4.072,331,4.072,336,3.853,542,2.998,543,2.644,544,5.265,545,3.853,546,3.062,547,4.012,548,2.644,549,3.062,550,4.463,551,3.062,552,4.463,553,3.062,554,3.062,555,2.644,556,3.062,557,3.062,558,3.853,559,2.644]],["title/controllers/OrganizationController.html",[65,1.195,560,2.69]],["body/controllers/OrganizationController.html",[3,0.195,4,0.195,5,0.151,7,0.297,8,0.017,11,0.556,35,0.195,36,0.077,37,0.012,38,0.012,43,0.526,44,0.843,49,0.556,56,0.761,60,0.618,61,2.025,62,1.926,63,0.683,65,1.812,67,1.396,69,2.224,70,1.337,71,2.385,72,2.253,76,3.095,77,2.025,80,2.385,560,4.078,561,3.842,562,4.451,563,3.651,564,3.442,565,3.442,566,4.451,567,4.451,568,4.451]],["title/entities/OrganizationMetadata.html",[118,2.169,547,2.485]],["body/entities/OrganizationMetadata.html",[3,0.102,4,0.102,5,0.079,7,0.239,8,0.017,16,3.162,35,0.102,36,0.04,37,0.008,38,0.008,43,0.275,49,0.754,52,1.44,53,2.257,54,1.805,56,0.846,70,1.814,100,0.642,111,0.915,118,2.067,119,2.368,120,1.519,122,1.945,132,4.264,136,3.556,148,1.74,149,4.67,150,2.807,157,1.801,167,4.67,182,3.773,341,3.134,342,3.851,343,3.851,344,3.134,346,4.472,347,3.134,348,3.134,349,4.713,350,2.563,351,3.134,362,4.713,496,3.895,542,3.655,545,2.011,547,2.368,548,3.134,555,3.851,558,3.134,569,5.393,570,2.011,571,4.46,572,4.46,573,4.46,574,4.46,575,2.329,576,5.036,577,4.348,578,5.036,579,2.329,580,2.329,581,2.329,582,2.329,583,2.329,584,3.63,585,3.63,586,3.63,587,2.329,588,2.329,589,2.329,590,2.329,591,2.329,592,4.46,593,3.63,594,2.329,595,3.63]],["title/modules/OrganizationModule.html",[0,0.614,596,2.69]],["body/modules/OrganizationModule.html",[0,0.928,2,1.13,3,0.158,4,0.158,5,0.122,7,0.31,8,0.017,11,0.45,13,1.796,35,0.158,36,0.062,37,0.011,38,0.011,67,1.572,84,1.352,85,1.559,86,1.559,87,1.416,88,2.374,89,1.416,93,2.792,94,2.932,95,2.168,96,1.559,97,1.485,100,0.992,399,4.269,404,3.11,406,2.544,542,2.051,547,3.269,559,3.11,560,4.067,563,3.858,564,2.786,596,5.245,597,3.11,598,3.11,599,3.11,600,3.603,601,3.603,602,3.538,603,3.603,604,2.786,605,3.603,606,3.603,607,3.603]],["title/classes/OrganizationResolver.html",[36,0.066,602,2.69]],["body/classes/OrganizationResolver.html",[3,0.167,4,0.167,5,0.129,7,0.26,8,0.017,16,2.64,35,0.167,36,0.066,37,0.011,38,0.011,43,0.451,44,0.762,46,2.491,49,0.742,51,1.652,52,1.567,53,1.252,54,1.369,56,0.783,60,0.724,61,1.737,62,1.652,63,0.8,70,1.566,103,1.501,105,3.23,106,2.795,109,3.183,110,2.795,111,1.501,112,2.046,132,3.682,242,2.969,542,2.969,563,3.927,564,2.953,602,3.682,604,2.953,608,3.296,609,6.382,610,3.818,611,3.818,612,3.818,613,5.215,614,3.818,615,3.818]],["title/injectables/OrganizationService.html",[39,0.922,563,2.169]],["body/injectables/OrganizationService.html",[3,0.175,4,0.175,5,0.136,7,0.284,8,0.017,11,0.499,35,0.175,36,0.069,37,0.011,38,0.011,39,1.302,41,1.648,43,0.473,44,0.786,46,3.51,49,0.759,51,1.73,52,1.055,53,1.311,54,1.433,56,0.709,60,0.747,62,1.73,63,0.826,69,2.132,115,1.916,117,1.819,148,1.916,164,3.091,242,3.063,261,3.451,406,2.823,542,3.063,563,3.063,604,3.091,616,3.451,617,6.504,618,3.998,619,6.991,620,3.998,621,3.998,622,3.998,623,3.998,624,3.998,625,3.998,626,3.998]],["title/controllers/PaymentController.html",[65,1.195,627,2.69]],["body/controllers/PaymentController.html",[3,0.195,4,0.195,5,0.151,7,0.297,8,0.017,11,0.556,35,0.195,36,0.077,37,0.012,38,0.012,43,0.526,44,0.843,49,0.556,56,0.761,60,0.618,61,2.025,62,1.926,63,0.683,65,1.812,67,1.396,69,2.224,70,1.337,71,2.385,72,2.253,76,3.095,77,2.025,80,2.385,100,1.226,627,4.078,628,3.842,629,4.451,630,3.896,631,3.842,632,3.442,633,4.451,634,4.451]],["title/modules/PaymentModule.html",[0,0.614,635,2.69]],["body/modules/PaymentModule.html",[0,0.982,2,1.259,3,0.176,4,0.176,5,0.136,7,0.297,8,0.017,11,0.501,13,1.933,35,0.176,36,0.069,37,0.011,38,0.011,67,1.692,84,1.506,85,1.737,86,1.737,87,1.577,88,2.511,89,1.577,93,2.885,94,3.029,95,2.334,96,1.737,97,1.654,100,1.106,627,4.302,630,4.253,631,3.465,635,5.255,636,3.465,637,4.013,638,3.465,639,4.013,640,4.013,641,3.808,642,4.013]],["title/classes/PaymentResolver.html",[36,0.066,641,2.69]],["body/classes/PaymentResolver.html",[3,0.208,4,0.208,5,0.161,7,0.208,8,0.017,35,0.208,36,0.082,37,0.013,38,0.013,43,0.563,44,0.881,49,0.595,52,1.591,56,0.872,60,0.661,63,0.731,70,1.43,103,1.872,105,3.522,106,2.552,109,3.232,110,3.232,111,1.872,112,2.552,641,4.258,643,4.111,644,6.031,645,4.762]],["title/injectables/PaymentService.html",[39,0.922,630,2.315]],["body/injectables/PaymentService.html",[3,0.22,4,0.22,5,0.17,7,0.22,8,0.016,11,0.627,35,0.22,36,0.087,37,0.013,38,0.013,39,1.508,41,2.069,43,0.593,44,0.91,49,0.627,56,0.821,60,0.697,63,0.77,69,2.325,115,2.406,117,2.284,630,3.788,646,4.333,647,5.019,648,4.333]],["title/controllers/PropertyController.html",[65,1.195,649,2.69]],["body/controllers/PropertyController.html",[3,0.195,4,0.195,5,0.151,7,0.297,8,0.017,11,0.556,35,0.195,36,0.077,37,0.012,38,0.012,43,0.526,44,0.843,49,0.556,56,0.761,60,0.618,61,2.025,62,1.926,63,0.683,65,1.812,67,1.396,69,2.224,70,1.337,71,2.385,72,2.253,76,3.095,77,2.025,80,2.385,100,1.226,649,4.078,650,3.842,651,4.451,652,3.896,653,3.842,654,3.442,655,4.451,656,4.451]],["title/modules/PropertyModule.html",[0,0.614,657,2.69]],["body/modules/PropertyModule.html",[0,0.982,2,1.259,3,0.176,4,0.176,5,0.136,7,0.297,8,0.017,11,0.501,13,1.933,35,0.176,36,0.069,37,0.011,38,0.011,67,1.692,84,1.506,85,1.737,86,1.737,87,1.577,88,2.511,89,1.577,93,2.885,94,3.029,95,2.334,96,1.737,97,1.654,100,1.106,649,4.302,652,4.253,653,3.465,657,5.255,658,3.465,659,3.465,660,4.013,661,4.013,662,4.013,663,3.808,664,4.013]],["title/classes/PropertyResolver.html",[36,0.066,663,2.69]],["body/classes/PropertyResolver.html",[3,0.208,4,0.208,5,0.161,7,0.208,8,0.017,35,0.208,36,0.082,37,0.013,38,0.013,43,0.563,44,0.881,49,0.595,52,1.591,56,0.872,60,0.661,63,0.731,70,1.43,103,1.872,105,3.522,106,2.552,109,3.232,110,3.232,111,1.872,112,2.552,663,4.258,665,4.111,666,6.031,667,4.762]],["title/injectables/PropertyService.html",[39,0.922,652,2.315]],["body/injectables/PropertyService.html",[3,0.22,4,0.22,5,0.17,7,0.22,8,0.016,11,0.627,35,0.22,36,0.087,37,0.013,38,0.013,39,1.508,41,2.069,43,0.593,44,0.91,49,0.627,56,0.821,60,0.697,63,0.77,69,2.325,115,2.406,117,2.284,652,3.788,668,4.333,669,5.019,670,4.333]],["title/classes/SubgraphsBuilder.html",[36,0.066,484,2.69]],["body/classes/SubgraphsBuilder.html",[3,0.174,4,0.174,5,0.135,7,0.235,8,0.017,35,0.174,36,0.069,37,0.011,38,0.011,43,0.471,44,0.784,49,0.497,51,1.723,52,1.416,53,1.305,54,1.427,56,0.8,59,2.598,60,0.553,63,0.823,100,1.097,103,1.565,160,3.252,163,3.698,206,3.455,211,3.055,218,2.267,219,2.812,227,2.42,229,2.42,242,3.055,484,3.788,671,4.632,672,3.438,673,6.068,674,3.982,675,3.982,676,5.366,677,3.982,678,3.982,679,3.982,680,5.366,681,3.982,682,5.366,683,3.982,684,3.982,685,3.982]],["title/controllers/UserController.html",[65,1.195,686,2.69]],["body/controllers/UserController.html",[3,0.195,4,0.195,5,0.151,7,0.297,8,0.017,11,0.556,35,0.195,36,0.077,37,0.012,38,0.012,43,0.526,44,0.843,49,0.556,56,0.761,60,0.618,61,2.025,62,1.926,63,0.683,65,1.812,67,1.396,69,2.224,70,1.337,71,2.385,72,2.253,76,3.095,77,2.025,80,2.385,100,1.226,686,4.078,687,3.842,688,4.451,689,3.896,690,3.842,691,3.442,692,4.451,693,4.451]],["title/modules/UserModule.html",[0,0.614,694,2.69]],["body/modules/UserModule.html",[0,0.982,2,1.259,3,0.176,4,0.176,5,0.136,7,0.297,8,0.017,11,0.501,13,1.933,35,0.176,36,0.069,37,0.011,38,0.011,67,1.692,84,1.506,85,1.737,86,1.737,87,1.577,88,2.511,89,1.577,93,2.885,94,3.029,95,2.334,96,1.737,97,1.654,100,1.106,686,4.302,689,4.253,690,3.465,694,5.255,695,3.465,696,4.013,697,3.465,698,4.013,699,4.013,700,3.808,701,4.013]],["title/classes/UserResolver.html",[36,0.066,700,2.69]],["body/classes/UserResolver.html",[3,0.208,4,0.208,5,0.161,7,0.208,8,0.017,35,0.208,36,0.082,37,0.013,38,0.013,43,0.563,44,0.881,49,0.595,52,1.591,56,0.872,60,0.661,63,0.731,70,1.43,103,1.872,105,3.522,106,2.552,109,3.232,110,3.232,111,1.872,112,2.552,700,4.258,702,4.111,703,6.031,704,4.762]],["title/injectables/UserService.html",[39,0.922,689,2.315]],["body/injectables/UserService.html",[3,0.22,4,0.22,5,0.17,7,0.22,8,0.016,11,0.627,35,0.22,36,0.087,37,0.013,38,0.013,39,1.508,41,2.069,43,0.593,44,0.91,49,0.627,56,0.821,60,0.697,63,0.77,69,2.325,115,2.406,117,2.284,689,3.788,705,4.333,706,5.019,707,4.333]],["title/coverage.html",[708,4.027]],["body/coverage.html",[5,0.054,8,0.017,36,0.113,37,0.006,38,0.006,39,1.48,40,1.131,42,1.383,53,0.525,65,1.768,66,1.131,68,1.383,74,0.973,78,1.239,87,2.287,101,1.131,104,1.383,113,1.383,118,1.969,119,1.749,121,2.315,144,1.131,148,1.939,151,1.239,152,1.239,178,5.28,204,1.239,205,1.383,211,0.912,216,1.045,255,1.045,259,1.383,260,1.383,283,1.131,307,1.239,308,1.383,309,1.383,323,1.383,366,1.383,367,1.383,374,3.998,416,1.131,417,1.383,419,0.973,427,1.383,430,1.131,431,1.383,433,0.973,435,1.239,444,1.131,446,1.383,449,1.383,457,1.045,458,1.239,469,1.383,484,1.131,498,1.131,499,1.383,501,0.973,503,1.239,512,1.131,514,1.383,517,1.383,520,1.131,521,1.383,523,0.973,525,1.239,534,1.131,536,1.383,539,1.383,542,1.527,543,2.315,547,1.749,560,1.131,561,1.383,563,0.912,565,1.239,569,2.315,570,2.315,602,1.131,608,1.383,616,1.383,627,1.131,628,1.383,630,0.973,632,1.239,641,1.131,643,1.383,646,1.383,649,1.131,650,1.383,652,0.973,654,1.239,663,1.131,665,1.383,668,1.383,671,1.383,672,1.383,686,1.131,687,1.383,689,0.973,691,1.239,700,1.131,702,1.383,705,1.383,708,1.239,709,1.383,710,1.602,711,1.602,712,6.724,713,7.131,714,1.383,715,7.416,716,1.383,717,1.383,718,1.383,719,4.464,720,6.922,721,2.681,722,1.383,723,1.383,724,1.383,725,1.383,726,1.383,727,2.681,728,1.602,729,1.383,730,3.458,731,1.383,732,1.383,733,1.383,734,1.383,735,1.383,736,1.383,737,1.383,738,1.383,739,1.383,740,1.383,741,1.383,742,1.383,743,1.383,744,1.383,745,1.383,746,1.383,747,1.602,748,2.674,749,2.674,750,1.383,751,3.491,752,1.383,753,1.383,754,1.383,755,1.602]],["title/dependencies.html",[84,1.72,756,2.743]],["body/dependencies.html",[8,0.017,10,3.089,11,0.546,12,3.776,37,0.012,38,0.012,77,1.99,84,1.641,111,1.719,148,2.097,213,3.383,373,3.776,406,3.089,481,3.383,483,3.776,757,5.711,758,4.374,759,4.374,760,4.374,761,5.711,762,6.358,763,4.374,764,4.374,765,4.374,766,4.374,767,4.374,768,4.374,769,4.374,770,4.374,771,3.776,772,4.374,773,4.374,774,4.374,775,4.374,776,4.374,777,4.374,778,4.374,779,4.374,780,4.374,781,4.374,782,4.374,783,4.374,784,4.374,785,4.374]],["title/miscellaneous/enumerations.html",[786,1.931,787,3.957]],["body/miscellaneous/enumerations.html",[8,0.016,37,0.013,38,0.013,43,0.585,117,2.811,184,4.901,786,3.006,787,4.27,788,6.177,789,4.946,790,6.177,791,4.946,792,6.177,793,6.177,794,6.177,795,6.177,796,6.177,797,6.177,798,6.177]],["title/miscellaneous/functions.html",[786,1.931,799,3.957]],["body/miscellaneous/functions.html",[8,0.014,37,0.011,38,0.011,43,0.467,51,2.31,52,1.408,53,1.75,54,1.913,60,0.548,87,3.119,136,4.571,151,4.128,152,4.128,168,3.411,182,2.578,184,3.482,712,3.411,714,3.411,716,3.411,717,3.411,722,3.411,723,3.411,725,3.411,729,3.411,732,3.411,734,3.411,736,3.411,748,3.055,749,4.674,786,2.401,799,3.411,800,7.421,801,4.608,802,3.951,803,3.951,804,3.951,805,5.338,806,5.338]],["title/index.html",[43,0.376,807,3.178,808,3.178]],["body/index.html",[8,0.016,32,0.881,33,1.568,37,0.004,38,0.004,53,0.335,59,0.666,84,0.383,88,0.421,97,0.421,116,2.118,117,2.425,122,1.315,148,0.871,158,0.881,176,2.118,183,0.881,189,2.118,196,0.881,222,0.881,241,0.881,243,0.789,298,0.721,300,0.721,313,0.881,330,1.897,331,0.789,346,0.789,363,0.881,375,0.881,391,0.881,415,0.881,451,3.979,472,3.564,496,0.789,519,3.979,541,3.772,577,0.881,648,3.979,670,4.47,707,4.72,708,0.789,709,1.568,771,2.568,809,5.907,810,2.453,811,0.881,812,2.975,813,1.021,814,1.816,815,1.816,816,3.41,817,1.021,818,3.979,819,2.453,820,1.816,821,1.021,822,1.816,823,1.021,824,1.021,825,1.021,826,4.609,827,2.453,828,1.021,829,1.021,830,1.021,831,3.779,832,1.021,833,1.816,834,1.021,835,1.021,836,1.021,837,1.021,838,1.021,839,1.021,840,1.021,841,1.021,842,1.816,843,1.021,844,1.021,845,2.453,846,1.021,847,1.021,848,1.021,849,1.021,850,2.118,851,1.816,852,2.453,853,1.021,854,1.021,855,1.816,856,1.021,857,1.021,858,1.021,859,1.021,860,1.021,861,2.453,862,1.816,863,1.021,864,0.881,865,2.975,866,3.41,867,1.021,868,4.095,869,1.816,870,1.021,871,4.369,872,3.779,873,1.021,874,1.021,875,1.021,876,1.816,877,1.021,878,1.021,879,1.021,880,1.816,881,1.021,882,1.021,883,1.021,884,1.021,885,1.021,886,1.021,887,1.021,888,2.975,889,1.816,890,1.021,891,2.453,892,1.816,893,2.453,894,2.118,895,1.021,896,4.095,897,5.996,898,3.779,899,1.816,900,1.816,901,1.021,902,1.021,903,1.021,904,2.975,905,4.47,906,1.021,907,1.021,908,1.816,909,1.021,910,1.816,911,3.41,912,1.021,913,1.021,914,1.021,915,1.021,916,2.975,917,2.453,918,1.816,919,1.021,920,1.021,921,1.021,922,1.021,923,2.453,924,1.021,925,2.453,926,4.369,927,5.009,928,1.021,929,1.021,930,1.816,931,1.816,932,1.816,933,1.816,934,1.021,935,1.021,936,1.816,937,1.021,938,1.816,939,1.021,940,1.021,941,1.021,942,1.816,943,1.021,944,1.021,945,1.021,946,1.021,947,1.021,948,1.816,949,1.021,950,2.975,951,1.816,952,3.41,953,2.453,954,3.779,955,1.021,956,1.021,957,1.021,958,1.816,959,1.021,960,1.021,961,1.021,962,5.178,963,1.021,964,1.021,965,1.816,966,1.021,967,3.41,968,2.975,969,1.021,970,2.975,971,1.816,972,3.41,973,1.816,974,1.021,975,0.881,976,1.021,977,1.021,978,1.021,979,1.021,980,1.021,981,1.021,982,1.021,983,1.816,984,1.021,985,1.816,986,1.816,987,1.021,988,1.021,989,1.816,990,1.021,991,1.816,992,1.816,993,1.021,994,1.021,995,1.816,996,1.021,997,1.021,998,1.021,999,1.816,1000,2.453,1001,1.816,1002,2.453,1003,2.453,1004,1.816,1005,1.816,1006,2.453,1007,1.021,1008,1.816,1009,1.021,1010,1.021,1011,1.021,1012,2.453,1013,1.021,1014,3.41,1015,1.021,1016,1.816,1017,2.453,1018,1.021,1019,1.021,1020,1.021,1021,1.816,1022,1.021,1023,1.021,1024,1.021,1025,1.021,1026,1.021,1027,1.021,1028,1.021,1029,1.021,1030,2.453,1031,1.021,1032,1.021,1033,1.021,1034,1.816,1035,1.021,1036,1.021,1037,1.816,1038,1.816,1039,1.021,1040,1.021,1041,1.816,1042,1.021,1043,1.021,1044,1.021,1045,1.021,1046,1.021,1047,1.021,1048,1.021,1049,2.453,1050,1.816,1051,1.021,1052,1.021,1053,1.816,1054,1.021,1055,1.021,1056,1.021,1057,1.021,1058,1.816,1059,1.021,1060,1.021,1061,1.021,1062,1.021,1063,1.816,1064,1.021,1065,2.118,1066,1.021,1067,1.021,1068,1.021,1069,1.021,1070,1.021,1071,1.021,1072,1.021,1073,1.021,1074,1.021,1075,1.021,1076,1.021,1077,1.816,1078,1.021,1079,1.816,1080,1.816,1081,1.021,1082,1.816,1083,1.021,1084,1.021,1085,1.021,1086,1.816,1087,1.021,1088,1.021,1089,1.021,1090,1.021,1091,1.021,1092,1.021,1093,2.453,1094,1.021,1095,1.021,1096,1.021,1097,1.021,1098,1.021,1099,1.816,1100,1.021,1101,1.021,1102,3.779,1103,1.021,1104,1.021,1105,1.816,1106,1.021,1107,1.021,1108,1.021,1109,1.021,1110,1.021,1111,1.021,1112,1.021,1113,1.021,1114,1.021,1115,1.021,1116,1.021,1117,1.021,1118,1.021,1119,1.021,1120,1.021,1121,1.021,1122,1.021,1123,1.021,1124,1.021,1125,1.021,1126,1.021,1127,1.021,1128,1.021,1129,1.816,1130,2.453,1131,1.021,1132,1.021,1133,1.021,1134,1.021,1135,1.021,1136,1.021,1137,1.021,1138,1.021,1139,1.021,1140,1.021,1141,1.021,1142,1.021,1143,1.021,1144,1.816,1145,1.021,1146,1.021,1147,1.021,1148,1.021,1149,1.021,1150,1.816,1151,1.021,1152,1.021]],["title/modules.html",[2,1.634]],["body/modules.html",[1,2.736,2,1.316,8,0.012,37,0.012,38,0.012,83,2.962,93,1.729,94,1.815,236,3.244,399,2.736,422,2.962,438,2.962,452,2.962,456,2.736,506,2.962,528,2.962,596,2.962,635,2.962,657,2.962,694,2.962,1065,6.529,1153,6.898,1154,6.898,1155,7.757,1156,7.563,1157,7.563]],["title/overview.html",[1158,4.495]],["body/overview.html",[0,0.413,1,3.09,2,0.804,8,0.016,37,0.008,38,0.008,41,1.056,67,0.804,74,2.878,83,4.55,84,0.961,85,1.109,86,1.109,87,1.007,88,1.056,89,1.007,90,2.213,91,2.213,92,2.213,93,2.978,94,2.915,95,1.691,96,1.109,97,1.056,103,1.007,120,1.672,251,2.213,252,2.213,253,2.213,254,2.213,255,4.078,399,3.09,419,2.878,422,3.741,423,2.213,424,2.213,433,2.878,438,4.55,439,2.213,440,2.213,452,4.55,453,2.213,454,2.213,455,2.213,456,3.09,457,3.09,501,2.878,506,4.55,507,2.213,509,2.213,523,2.878,528,4.55,529,2.213,531,2.213,563,2.697,596,4.756,597,2.213,598,2.213,599,2.213,630,2.878,635,4.55,636,2.213,638,2.213,652,2.878,657,4.55,658,2.213,659,2.213,689,2.878,694,4.55,695,2.213,697,2.213,975,2.213,1158,2.213,1159,3.908,1160,2.563,1161,2.563]],["title/properties.html",[122,2.457,756,2.743]],["body/properties.html",[8,0.016,37,0.014,38,0.014,122,3.067,811,4.941,1162,5.723,1163,5.723,1164,5.723,1165,5.723,1166,5.723]],["title/miscellaneous/variables.html",[377,3.545,786,1.931]],["body/miscellaneous/variables.html",[5,0.062,8,0.017,16,1.505,19,2.568,21,2.568,23,2.568,24,2.568,25,2.568,26,2.568,27,2.568,28,2.568,37,0.006,38,0.006,43,0.215,52,0.479,53,2.12,54,1.066,56,0.752,58,1.404,78,2.3,148,2.621,182,4.677,184,4.623,283,2.668,374,5.079,377,1.404,435,2.3,458,1.404,460,2.568,461,2.568,462,2.568,463,2.568,464,2.568,465,2.568,466,2.568,467,2.568,503,2.3,525,2.3,565,2.3,632,2.3,654,2.3,691,2.3,718,1.567,719,5.747,724,1.567,726,1.567,731,1.567,733,1.567,735,1.567,737,1.567,738,1.567,739,1.567,740,1.567,741,1.567,742,1.567,743,1.567,744,1.567,745,1.567,746,1.567,748,1.404,749,2.3,750,2.568,751,4.162,752,3.262,753,3.262,754,2.568,786,1.103,801,1.567,818,1.567,850,2.568,864,1.567,894,3.262,905,1.567,1167,1.815,1168,1.815,1169,1.815,1170,1.815,1171,1.815,1172,1.815,1173,1.815,1174,1.815,1175,5.467,1176,1.815,1177,1.815,1178,1.815,1179,1.815,1180,4.368,1181,1.815,1182,4.368,1183,2.974,1184,1.815,1185,1.815,1186,3.778,1187,2.974,1188,1.815,1189,1.815,1190,1.815,1191,1.815,1192,1.815,1193,4.368,1194,1.815,1195,1.815,1196,1.815,1197,1.815,1198,1.815,1199,1.815,1200,1.815,1201,1.815,1202,1.815,1203,1.815,1204,1.815,1205,1.815,1206,1.815,1207,1.815,1208,1.815,1209,1.815,1210,2.974,1211,5.907,1212,2.974,1213,2.974,1214,2.974,1215,2.974,1216,2.974,1217,2.974,1218,2.974,1219,2.974,1220,2.974,1221,2.974,1222,2.974,1223,2.974,1224,2.974,1225,2.974,1226,1.815,1227,2.974,1228,2.974,1229,2.974,1230,1.815,1231,1.815,1232,1.815,1233,1.815,1234,1.815,1235,1.815,1236,1.815,1237,2.974]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"classes/SubgraphsBuilder.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":712,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["0.0.1",{"_index":1163,"title":{},"body":{"properties.html":{}}}],["0.2.0",{"_index":780,"title":{},"body":{"dependencies.html":{}}}],["0.3.20",{"_index":783,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":715,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":713,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":721,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":730,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":747,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":728,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":727,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":158,"title":{},"body":{"entities/BaseEntity.html":{},"index.html":{}}}],["10.0.0",{"_index":762,"title":{},"body":{"dependencies.html":{}}}],["10.4.15",{"_index":764,"title":{},"body":{"dependencies.html":{}}}],["11.0.0",{"_index":767,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":1161,"title":{},"body":{"overview.html":{}}}],["12.2.2",{"_index":761,"title":{},"body":{"dependencies.html":{}}}],["16",{"_index":1159,"title":{},"body":{"overview.html":{}}}],["16.10.0",{"_index":772,"title":{},"body":{"dependencies.html":{}}}],["16.4.7",{"_index":770,"title":{},"body":{"dependencies.html":{}}}],["17.0.33",{"_index":769,"title":{},"body":{"dependencies.html":{}}}],["17.13.3",{"_index":775,"title":{},"body":{"dependencies.html":{}}}],["17.7.2",{"_index":785,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":496,"title":{},"body":{"modules/GraphQLMicroserviceModule.html":{},"entities/OrganizationMetadata.html":{},"index.html":{}}}],["2.9.3",{"_index":757,"title":{},"body":{"dependencies.html":{}}}],["22",{"_index":824,"title":{},"body":{"index.html":{}}}],["3",{"_index":975,"title":{},"body":{"index.html":{},"overview.html":{}}}],["3.3.0",{"_index":763,"title":{},"body":{"dependencies.html":{}}}],["3d",{"_index":1002,"title":{},"body":{"index.html":{}}}],["4",{"_index":1013,"title":{},"body":{"index.html":{}}}],["4.11.3",{"_index":759,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":346,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{},"entities/OrganizationMetadata.html":{},"index.html":{}}}],["5.0",{"_index":595,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["5.4.2",{"_index":774,"title":{},"body":{"dependencies.html":{}}}],["5432",{"_index":387,"title":{},"body":{"classes/DataSource.html":{}}}],["6",{"_index":1076,"title":{},"body":{"index.html":{}}}],["7",{"_index":1101,"title":{},"body":{"index.html":{}}}],["7.8.1",{"_index":782,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1127,"title":{},"body":{"index.html":{}}}],["8.13.1",{"_index":777,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":1160,"title":{},"body":{"overview.html":{}}}],["9996",{"_index":185,"title":{},"body":{"entities/BaseEntity.html":{}}}],["__dirname",{"_index":1199,"title":{},"body":{"miscellaneous/variables.html":{}}}],["abstract",{"_index":156,"title":{},"body":{"entities/BaseEntity.html":{}}}],["abuse",{"_index":1141,"title":{},"body":{"index.html":{}}}],["access",{"_index":900,"title":{},"body":{"index.html":{}}}],["accessible",{"_index":1104,"title":{},"body":{"index.html":{}}}],["accessors",{"_index":266,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["accurate",{"_index":977,"title":{},"body":{"index.html":{}}}],["actions",{"_index":936,"title":{},"body":{"index.html":{}}}],["add",{"_index":356,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["adding",{"_index":1070,"title":{},"body":{"index.html":{}}}],["additional",{"_index":1190,"title":{},"body":{"miscellaneous/variables.html":{}}}],["addresses",{"_index":941,"title":{},"body":{"index.html":{}}}],["admin",{"_index":934,"title":{},"body":{"index.html":{}}}],["against",{"_index":919,"title":{},"body":{"index.html":{}}}],["alias",{"_index":1180,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allow_interest_earning",{"_index":348,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{},"entities/OrganizationMetadata.html":{}}}],["allowing",{"_index":953,"title":{},"body":{"index.html":{}}}],["allowinterestearning",{"_index":571,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["already",{"_index":996,"title":{},"body":{"index.html":{}}}],["alter",{"_index":355,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["amounts",{"_index":1015,"title":{},"body":{"index.html":{}}}],["angular",{"_index":890,"title":{},"body":{"index.html":{}}}],["api",{"_index":872,"title":{},"body":{"index.html":{}}}],["apollo/gateway",{"_index":483,"title":{},"body":{"modules/GraphQLGatewayModule.html":{},"dependencies.html":{}}}],["apollo/gateway/src/config",{"_index":678,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["apollo/server",{"_index":758,"title":{},"body":{"dependencies.html":{}}}],["apollo/subgraph",{"_index":760,"title":{},"body":{"dependencies.html":{}}}],["apollofederationdriver",{"_index":491,"title":{},"body":{"modules/GraphQLMicroserviceModule.html":{}}}],["apollofederationdriverconfig",{"_index":492,"title":{},"body":{"modules/GraphQLMicroserviceModule.html":{}}}],["apollogatewaydriver",{"_index":479,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["apollogatewaydriverconfig",{"_index":480,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["app",{"_index":222,"title":{},"body":{"classes/Bootstrapper.html":{},"index.html":{}}}],["app.connectmicroservice",{"_index":224,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["app.listen(port",{"_index":233,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["app.startallmicroservices",{"_index":231,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["appconfigmodule",{"_index":1,"title":{"modules/AppConfigModule.html":{}},"body":{"modules/AppConfigModule.html":{},"modules/CommonModule.html":{},"modules.html":{},"overview.html":{}}}],["appconfigservice",{"_index":40,"title":{"injectables/AppConfigService.html":{}},"body":{"injectables/AppConfigService.html":{},"classes/ConfigHelper.html":{},"coverage.html":{}}}],["appconfigservice(configservice",{"_index":288,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["appcontext",{"_index":285,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["appcontext.get(configservice",{"_index":287,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["applying",{"_index":1142,"title":{},"body":{"index.html":{}}}],["appropriate",{"_index":1131,"title":{},"body":{"index.html":{}}}],["apps",{"_index":864,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["apps/${microservice}/src/typeorm.data",{"_index":1200,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/${schema}/**/**.entity{.ts,.js",{"_index":394,"title":{},"body":{"classes/DataSource.html":{}}}],["apps/${schema}/src/migrations/**/*{.ts,.js",{"_index":396,"title":{},"body":{"classes/DataSource.html":{}}}],["apps/${schema}/src/subscriber/**/*{.ts,.js",{"_index":398,"title":{},"body":{"classes/DataSource.html":{}}}],["apps/.../gateway.module.ts",{"_index":1176,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../main.ts",{"_index":800,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../typeorm.data",{"_index":1175,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/auth/src/auth.controller.ts",{"_index":68,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["apps/auth/src/auth.controller.ts:11",{"_index":73,"title":{},"body":{"controllers/AuthController.html":{}}}],["apps/auth/src/auth.module.ts",{"_index":98,"title":{},"body":{"modules/AuthModule.html":{}}}],["apps/auth/src/auth.resolver.ts",{"_index":104,"title":{},"body":{"classes/AuthResolver.html":{},"coverage.html":{}}}],["apps/auth/src/auth.resolver.ts:6",{"_index":108,"title":{},"body":{"classes/AuthResolver.html":{}}}],["apps/auth/src/auth.service.ts",{"_index":113,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["apps/auth/src/auth.service.ts:5",{"_index":114,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/auth/src/main.ts",{"_index":714,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/documentation/src/documentation.controller.ts",{"_index":417,"title":{},"body":{"controllers/DocumentationController.html":{},"coverage.html":{}}}],["apps/documentation/src/documentation.controller.ts:9",{"_index":418,"title":{},"body":{"controllers/DocumentationController.html":{}}}],["apps/documentation/src/documentation.module.ts",{"_index":425,"title":{},"body":{"modules/DocumentationModule.html":{}}}],["apps/documentation/src/documentation.service.ts",{"_index":427,"title":{},"body":{"injectables/DocumentationService.html":{},"coverage.html":{}}}],["apps/documentation/src/documentation.service.ts:5",{"_index":428,"title":{},"body":{"injectables/DocumentationService.html":{}}}],["apps/documentation/src/main.ts",{"_index":716,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/escrow/src/escrow.controller.ts",{"_index":431,"title":{},"body":{"controllers/EscrowController.html":{},"coverage.html":{}}}],["apps/escrow/src/escrow.controller.ts:11",{"_index":432,"title":{},"body":{"controllers/EscrowController.html":{}}}],["apps/escrow/src/escrow.module.ts",{"_index":442,"title":{},"body":{"modules/EscrowModule.html":{}}}],["apps/escrow/src/escrow.resolver.ts",{"_index":446,"title":{},"body":{"classes/EscrowResolver.html":{},"coverage.html":{}}}],["apps/escrow/src/escrow.resolver.ts:6",{"_index":448,"title":{},"body":{"classes/EscrowResolver.html":{}}}],["apps/escrow/src/escrow.service.ts",{"_index":449,"title":{},"body":{"injectables/EscrowService.html":{},"coverage.html":{}}}],["apps/escrow/src/escrow.service.ts:5",{"_index":450,"title":{},"body":{"injectables/EscrowService.html":{}}}],["apps/escrow/src/main.ts",{"_index":717,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/escrow/src/typeorm.data",{"_index":718,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/gateway/src/gateway.module.ts",{"_index":458,"title":{},"body":{"modules/GatewayModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/gateway/src/gateway.service.ts",{"_index":469,"title":{},"body":{"injectables/GatewayService.html":{},"coverage.html":{}}}],["apps/gateway/src/gateway.service.ts:4",{"_index":470,"title":{},"body":{"injectables/GatewayService.html":{}}}],["apps/gateway/src/gateway.service.ts:7",{"_index":471,"title":{},"body":{"injectables/GatewayService.html":{}}}],["apps/gateway/src/main.ts",{"_index":722,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/media/src/main.ts",{"_index":723,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/media/src/media.controller.ts",{"_index":499,"title":{},"body":{"controllers/MediaController.html":{},"coverage.html":{}}}],["apps/media/src/media.controller.ts:11",{"_index":500,"title":{},"body":{"controllers/MediaController.html":{}}}],["apps/media/src/media.module.ts",{"_index":510,"title":{},"body":{"modules/MediaModule.html":{}}}],["apps/media/src/media.resolver.ts",{"_index":514,"title":{},"body":{"classes/MediaResolver.html":{},"coverage.html":{}}}],["apps/media/src/media.resolver.ts:6",{"_index":516,"title":{},"body":{"classes/MediaResolver.html":{}}}],["apps/media/src/media.service.ts",{"_index":517,"title":{},"body":{"injectables/MediaService.html":{},"coverage.html":{}}}],["apps/media/src/media.service.ts:5",{"_index":518,"title":{},"body":{"injectables/MediaService.html":{}}}],["apps/media/src/typeorm.data",{"_index":724,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/notification/src/main.ts",{"_index":725,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/notification/src/notification.controller.ts",{"_index":521,"title":{},"body":{"controllers/NotificationController.html":{},"coverage.html":{}}}],["apps/notification/src/notification.controller.ts:11",{"_index":522,"title":{},"body":{"controllers/NotificationController.html":{}}}],["apps/notification/src/notification.module.ts",{"_index":532,"title":{},"body":{"modules/NotificationModule.html":{}}}],["apps/notification/src/notification.resolver.ts",{"_index":536,"title":{},"body":{"classes/NotificationResolver.html":{},"coverage.html":{}}}],["apps/notification/src/notification.resolver.ts:6",{"_index":538,"title":{},"body":{"classes/NotificationResolver.html":{}}}],["apps/notification/src/notification.service.ts",{"_index":539,"title":{},"body":{"injectables/NotificationService.html":{},"coverage.html":{}}}],["apps/notification/src/notification.service.ts:5",{"_index":540,"title":{},"body":{"injectables/NotificationService.html":{}}}],["apps/notification/src/typeorm.data",{"_index":726,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/organization/src/entities/organization",{"_index":569,"title":{},"body":{"entities/OrganizationMetadata.html":{},"coverage.html":{}}}],["apps/organization/src/entities/organization.entity.ts",{"_index":543,"title":{},"body":{"entities/Organization.html":{},"coverage.html":{}}}],["apps/organization/src/entities/organization.entity.ts:11",{"_index":553,"title":{},"body":{"entities/Organization.html":{}}}],["apps/organization/src/entities/organization.entity.ts:15",{"_index":557,"title":{},"body":{"entities/Organization.html":{}}}],["apps/organization/src/entities/organization.entity.ts:19",{"_index":556,"title":{},"body":{"entities/Organization.html":{}}}],["apps/organization/src/entities/organization.entity.ts:23",{"_index":546,"title":{},"body":{"entities/Organization.html":{}}}],["apps/organization/src/entities/organization.entity.ts:27",{"_index":554,"title":{},"body":{"entities/Organization.html":{}}}],["apps/organization/src/entities/organization.entity.ts:31",{"_index":551,"title":{},"body":{"entities/Organization.html":{}}}],["apps/organization/src/main.ts",{"_index":729,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/organization/src/migrations/1740356244243",{"_index":308,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{},"coverage.html":{}}}],["apps/organization/src/organization.controller.ts",{"_index":561,"title":{},"body":{"controllers/OrganizationController.html":{},"coverage.html":{}}}],["apps/organization/src/organization.controller.ts:11",{"_index":562,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["apps/organization/src/organization.module.ts",{"_index":600,"title":{},"body":{"modules/OrganizationModule.html":{}}}],["apps/organization/src/organization.resolver.ts",{"_index":608,"title":{},"body":{"classes/OrganizationResolver.html":{},"coverage.html":{}}}],["apps/organization/src/organization.resolver.ts:10",{"_index":614,"title":{},"body":{"classes/OrganizationResolver.html":{}}}],["apps/organization/src/organization.resolver.ts:15",{"_index":612,"title":{},"body":{"classes/OrganizationResolver.html":{}}}],["apps/organization/src/organization.resolver.ts:6",{"_index":611,"title":{},"body":{"classes/OrganizationResolver.html":{}}}],["apps/organization/src/organization.service.ts",{"_index":616,"title":{},"body":{"injectables/OrganizationService.html":{},"coverage.html":{}}}],["apps/organization/src/organization.service.ts:13",{"_index":622,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["apps/organization/src/organization.service.ts:17",{"_index":621,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["apps/organization/src/organization.service.ts:7",{"_index":620,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["apps/organization/src/typeorm.data",{"_index":731,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/payment/src/main.ts",{"_index":732,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/payment/src/payment.controller.ts",{"_index":628,"title":{},"body":{"controllers/PaymentController.html":{},"coverage.html":{}}}],["apps/payment/src/payment.controller.ts:11",{"_index":629,"title":{},"body":{"controllers/PaymentController.html":{}}}],["apps/payment/src/payment.module.ts",{"_index":639,"title":{},"body":{"modules/PaymentModule.html":{}}}],["apps/payment/src/payment.resolver.ts",{"_index":643,"title":{},"body":{"classes/PaymentResolver.html":{},"coverage.html":{}}}],["apps/payment/src/payment.resolver.ts:6",{"_index":645,"title":{},"body":{"classes/PaymentResolver.html":{}}}],["apps/payment/src/payment.service.ts",{"_index":646,"title":{},"body":{"injectables/PaymentService.html":{},"coverage.html":{}}}],["apps/payment/src/payment.service.ts:5",{"_index":647,"title":{},"body":{"injectables/PaymentService.html":{}}}],["apps/payment/src/typeorm.data",{"_index":733,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/property/src/main.ts",{"_index":734,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/property/src/property.controller.ts",{"_index":650,"title":{},"body":{"controllers/PropertyController.html":{},"coverage.html":{}}}],["apps/property/src/property.controller.ts:11",{"_index":651,"title":{},"body":{"controllers/PropertyController.html":{}}}],["apps/property/src/property.module.ts",{"_index":661,"title":{},"body":{"modules/PropertyModule.html":{}}}],["apps/property/src/property.resolver.ts",{"_index":665,"title":{},"body":{"classes/PropertyResolver.html":{},"coverage.html":{}}}],["apps/property/src/property.resolver.ts:6",{"_index":667,"title":{},"body":{"classes/PropertyResolver.html":{}}}],["apps/property/src/property.service.ts",{"_index":668,"title":{},"body":{"injectables/PropertyService.html":{},"coverage.html":{}}}],["apps/property/src/property.service.ts:5",{"_index":669,"title":{},"body":{"injectables/PropertyService.html":{}}}],["apps/property/src/typeorm.data",{"_index":735,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/user/src/main.ts",{"_index":736,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/user/src/typeorm.data",{"_index":737,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/user/src/user.controller.ts",{"_index":687,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["apps/user/src/user.controller.ts:11",{"_index":688,"title":{},"body":{"controllers/UserController.html":{}}}],["apps/user/src/user.module.ts",{"_index":698,"title":{},"body":{"modules/UserModule.html":{}}}],["apps/user/src/user.resolver.ts",{"_index":702,"title":{},"body":{"classes/UserResolver.html":{},"coverage.html":{}}}],["apps/user/src/user.resolver.ts:6",{"_index":704,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/user/src/user.service.ts",{"_index":705,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["apps/user/src/user.service.ts:5",{"_index":706,"title":{},"body":{"injectables/UserService.html":{}}}],["architecture",{"_index":888,"title":{},"body":{"index.html":{}}}],["args",{"_index":1210,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arguments",{"_index":1191,"title":{},"body":{"miscellaneous/variables.html":{}}}],["argv",{"_index":752,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ascending",{"_index":203,"title":{},"body":{"entities/BaseEntity.html":{}}}],["async",{"_index":206,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"modules/DatabaseModule.html":{},"modules/GraphQLGatewayModule.html":{},"classes/SubgraphsBuilder.html":{}}}],["attacks",{"_index":922,"title":{},"body":{"index.html":{}}}],["auditable",{"_index":1019,"title":{},"body":{"index.html":{}}}],["auditing",{"_index":1018,"title":{},"body":{"index.html":{}}}],["auth",{"_index":116,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["auth.controller",{"_index":99,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.resolver",{"_index":102,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":75,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth_client",{"_index":792,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth_host",{"_index":460,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["auth_port",{"_index":1213,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authcommand",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authcommand.ping_auth",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{}}}],["authcontroller",{"_index":66,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticated",{"_index":1135,"title":{},"body":{"index.html":{}}}],["authentication",{"_index":865,"title":{},"body":{"index.html":{}}}],["authmodule",{"_index":83,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1166,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":895,"title":{},"body":{"index.html":{}}}],["authorized",{"_index":1136,"title":{},"body":{"index.html":{}}}],["authresolver",{"_index":101,"title":{"classes/AuthResolver.html":{}},"body":{"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"coverage.html":{}}}],["authservice",{"_index":74,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["autoloadentities",{"_index":412,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["automatically",{"_index":1113,"title":{},"body":{"index.html":{}}}],["autoschemafile",{"_index":494,"title":{},"body":{"modules/GraphQLMicroserviceModule.html":{}}}],["availability",{"_index":991,"title":{},"body":{"index.html":{}}}],["available",{"_index":1154,"title":{},"body":{"modules.html":{}}}],["await",{"_index":218,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"modules/DatabaseModule.html":{},"modules/GraphQLGatewayModule.html":{},"classes/SubgraphsBuilder.html":{}}}],["backend",{"_index":810,"title":{},"body":{"index.html":{}}}],["balancing",{"_index":1137,"title":{},"body":{"index.html":{}}}],["base",{"_index":1075,"title":{},"body":{"index.html":{}}}],["based",{"_index":189,"title":{},"body":{"entities/BaseEntity.html":{},"index.html":{}}}],["baseentity",{"_index":119,"title":{"entities/BaseEntity.html":{}},"body":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"coverage.html":{}}}],["baseentitytypeorm",{"_index":142,"title":{},"body":{"entities/BaseEntity.html":{}}}],["baseentitytypeorm.usedatasource.call(this",{"_index":162,"title":{},"body":{"entities/BaseEntity.html":{}}}],["before",{"_index":981,"title":{},"body":{"index.html":{}}}],["being",{"_index":196,"title":{},"body":{"entities/BaseEntity.html":{},"index.html":{}}}],["blacklisting",{"_index":915,"title":{},"body":{"index.html":{}}}],["booking",{"_index":994,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":349,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{},"entities/OrganizationMetadata.html":{}}}],["bootstrap",{"_index":87,"title":{},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["bootstrapper",{"_index":204,"title":{"classes/Bootstrapper.html":{}},"body":{"classes/Bootstrapper.html":{},"coverage.html":{}}}],["both",{"_index":195,"title":{},"body":{"entities/BaseEntity.html":{}}}],["browse",{"_index":1155,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1156,"title":{},"body":{"modules.html":{}}}],["brute",{"_index":920,"title":{},"body":{"index.html":{}}}],["build",{"_index":673,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["build(...graphnames",{"_index":674,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["builder.util.ts",{"_index":672,"title":{},"body":{"classes/SubgraphsBuilder.html":{},"coverage.html":{}}}],["builder.util.ts:5",{"_index":675,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["c",{"_index":1185,"title":{},"body":{"miscellaneous/variables.html":{}}}],["caching",{"_index":1150,"title":{},"body":{"index.html":{}}}],["captcha",{"_index":924,"title":{},"body":{"index.html":{}}}],["cascade",{"_index":362,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{},"entities/OrganizationMetadata.html":{}}}],["cascade'})@joincolumn({name",{"_index":587,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["case",{"_index":1051,"title":{},"body":{"index.html":{}}}],["ccpa",{"_index":947,"title":{},"body":{"index.html":{}}}],["changes",{"_index":1009,"title":{},"body":{"index.html":{}}}],["changing",{"_index":956,"title":{},"body":{"index.html":{}}}],["channel",{"_index":1085,"title":{},"body":{"index.html":{}}}],["channels",{"_index":1087,"title":{},"body":{"index.html":{}}}],["character",{"_index":326,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["check",{"_index":170,"title":{},"body":{"entities/BaseEntity.html":{}}}],["class",{"_index":36,"title":{"classes/AuthResolver.html":{},"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"classes/EscrowResolver.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"classes/SubgraphsBuilder.html":{},"classes/UserResolver.html":{}},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"classes/SubgraphsBuilder.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["classes",{"_index":103,"title":{},"body":{"classes/AuthResolver.html":{},"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"classes/EscrowResolver.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"classes/SubgraphsBuilder.html":{},"classes/UserResolver.html":{},"overview.html":{}}}],["clear",{"_index":968,"title":{},"body":{"index.html":{}}}],["cli",{"_index":850,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["cli.ts",{"_index":751,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["client.enum.ts",{"_index":790,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["clients",{"_index":248,"title":{},"body":{"modules/ClientsModule.html":{}}}],["clientsmodule",{"_index":236,"title":{"modules/ClientsModule.html":{}},"body":{"modules/ClientsModule.html":{},"modules.html":{}}}],["clientsmoduleoptions",{"_index":246,"title":{},"body":{"modules/ClientsModule.html":{}}}],["cluster_authmodule",{"_index":90,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":91,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":92,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_commonmodule",{"_index":251,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_exports",{"_index":252,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_imports",{"_index":254,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_providers",{"_index":253,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_documentationmodule",{"_index":423,"title":{},"body":{"modules/DocumentationModule.html":{},"overview.html":{}}}],["cluster_documentationmodule_providers",{"_index":424,"title":{},"body":{"modules/DocumentationModule.html":{},"overview.html":{}}}],["cluster_escrowmodule",{"_index":439,"title":{},"body":{"modules/EscrowModule.html":{},"overview.html":{}}}],["cluster_escrowmodule_imports",{"_index":441,"title":{},"body":{"modules/EscrowModule.html":{}}}],["cluster_escrowmodule_providers",{"_index":440,"title":{},"body":{"modules/EscrowModule.html":{},"overview.html":{}}}],["cluster_gatewaymodule",{"_index":453,"title":{},"body":{"modules/GatewayModule.html":{},"overview.html":{}}}],["cluster_gatewaymodule_imports",{"_index":454,"title":{},"body":{"modules/GatewayModule.html":{},"overview.html":{}}}],["cluster_gatewaymodule_providers",{"_index":455,"title":{},"body":{"modules/GatewayModule.html":{},"overview.html":{}}}],["cluster_mediamodule",{"_index":507,"title":{},"body":{"modules/MediaModule.html":{},"overview.html":{}}}],["cluster_mediamodule_imports",{"_index":508,"title":{},"body":{"modules/MediaModule.html":{}}}],["cluster_mediamodule_providers",{"_index":509,"title":{},"body":{"modules/MediaModule.html":{},"overview.html":{}}}],["cluster_notificationmodule",{"_index":529,"title":{},"body":{"modules/NotificationModule.html":{},"overview.html":{}}}],["cluster_notificationmodule_imports",{"_index":530,"title":{},"body":{"modules/NotificationModule.html":{}}}],["cluster_notificationmodule_providers",{"_index":531,"title":{},"body":{"modules/NotificationModule.html":{},"overview.html":{}}}],["cluster_organizationmodule",{"_index":597,"title":{},"body":{"modules/OrganizationModule.html":{},"overview.html":{}}}],["cluster_organizationmodule_imports",{"_index":599,"title":{},"body":{"modules/OrganizationModule.html":{},"overview.html":{}}}],["cluster_organizationmodule_providers",{"_index":598,"title":{},"body":{"modules/OrganizationModule.html":{},"overview.html":{}}}],["cluster_paymentmodule",{"_index":636,"title":{},"body":{"modules/PaymentModule.html":{},"overview.html":{}}}],["cluster_paymentmodule_imports",{"_index":637,"title":{},"body":{"modules/PaymentModule.html":{}}}],["cluster_paymentmodule_providers",{"_index":638,"title":{},"body":{"modules/PaymentModule.html":{},"overview.html":{}}}],["cluster_propertymodule",{"_index":658,"title":{},"body":{"modules/PropertyModule.html":{},"overview.html":{}}}],["cluster_propertymodule_imports",{"_index":660,"title":{},"body":{"modules/PropertyModule.html":{}}}],["cluster_propertymodule_providers",{"_index":659,"title":{},"body":{"modules/PropertyModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":695,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":696,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":697,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cmd",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{}}}],["collection",{"_index":949,"title":{},"body":{"index.html":{}}}],["column",{"_index":167,"title":{},"body":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{}}}],["column.propertyname",{"_index":180,"title":{},"body":{"entities/BaseEntity.html":{}}}],["column.target",{"_index":169,"title":{},"body":{"entities/BaseEntity.html":{}}}],["columnmetadata",{"_index":154,"title":{},"body":{"entities/BaseEntity.html":{}}}],["columnorder",{"_index":151,"title":{},"body":{"entities/BaseEntity.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["columnorder(9999",{"_index":159,"title":{},"body":{"entities/BaseEntity.html":{}}}],["columnorder(9999)@field(undefined",{"_index":131,"title":{},"body":{"entities/BaseEntity.html":{}}}],["columnorder(9999)@field(undefined)@createdatecolumn({name",{"_index":128,"title":{},"body":{"entities/BaseEntity.html":{}}}],["columnorder(undefined)@field(undefined)@primarygeneratedcolumn",{"_index":137,"title":{},"body":{"entities/BaseEntity.html":{}}}],["columnorder(value",{"_index":802,"title":{},"body":{"miscellaneous/functions.html":{}}}],["columns",{"_index":188,"title":{},"body":{"entities/BaseEntity.html":{}}}],["command",{"_index":1186,"title":{},"body":{"miscellaneous/variables.html":{}}}],["commands",{"_index":854,"title":{},"body":{"index.html":{}}}],["common",{"_index":880,"title":{},"body":{"index.html":{}}}],["common.service",{"_index":257,"title":{},"body":{"modules/CommonModule.html":{}}}],["commonmodule",{"_index":93,"title":{"modules/CommonModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["commonservice",{"_index":255,"title":{"injectables/CommonService.html":{}},"body":{"modules/CommonModule.html":{},"injectables/CommonService.html":{},"coverage.html":{},"overview.html":{}}}],["communication",{"_index":925,"title":{},"body":{"index.html":{}}}],["compared",{"_index":197,"title":{},"body":{"entities/BaseEntity.html":{}}}],["compile",{"_index":839,"title":{},"body":{"index.html":{}}}],["complete",{"_index":978,"title":{},"body":{"index.html":{}}}],["compliance",{"_index":1031,"title":{},"body":{"index.html":{}}}],["complicating",{"_index":1072,"title":{},"body":{"index.html":{}}}],["comply",{"_index":1032,"title":{},"body":{"index.html":{}}}],["complying",{"_index":944,"title":{},"body":{"index.html":{}}}],["compressing",{"_index":1114,"title":{},"body":{"index.html":{}}}],["compression",{"_index":1111,"title":{},"body":{"index.html":{}}}],["concerns",{"_index":892,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":1023,"title":{},"body":{"index.html":{}}}],["config.service",{"_index":282,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["confighelper",{"_index":211,"title":{"classes/ConfigHelper.html":{}},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"modules/DatabaseModule.html":{},"classes/SubgraphsBuilder.html":{},"coverage.html":{}}}],["confighelper.databaseconfig",{"_index":409,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["confighelper.getinstance",{"_index":219,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/DatabaseModule.html":{},"classes/SubgraphsBuilder.html":{}}}],["confighelper.getmicroservicehosts(key",{"_index":683,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["confighelper.getmoduleport(module.name",{"_index":232,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["confighelper.instance",{"_index":284,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["confighelper.instance.appconfigservice",{"_index":289,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["confighelper.redisconfig",{"_index":221,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{}}}],["configmodule",{"_index":9,"title":{},"body":{"modules/AppConfigModule.html":{},"classes/ConfigHelper.html":{}}}],["configmodule.forroot",{"_index":14,"title":{},"body":{"modules/AppConfigModule.html":{},"classes/ConfigHelper.html":{}}}],["configservice",{"_index":48,"title":{},"body":{"injectables/AppConfigService.html":{},"classes/ConfigHelper.html":{}}}],["confirmation",{"_index":1053,"title":{},"body":{"index.html":{}}}],["connection",{"_index":886,"title":{},"body":{"index.html":{}}}],["consistency",{"_index":1007,"title":{},"body":{"index.html":{}}}],["consistent",{"_index":1010,"title":{},"body":{"index.html":{}}}],["const",{"_index":163,"title":{},"body":{"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"modules/DatabaseModule.html":{},"modules/GatewayModule.html":{},"classes/SubgraphsBuilder.html":{}}}],["constraint",{"_index":334,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["constructor",{"_index":46,"title":{},"body":{"injectables/AppConfigService.html":{},"classes/ConfigHelper.html":{},"injectables/GatewayService.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{}}}],["constructor(configservice",{"_index":47,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["constructor(organizationservice",{"_index":610,"title":{},"body":{"classes/OrganizationResolver.html":{}}}],["constructor(private",{"_index":61,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"controllers/DocumentationController.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResolver.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{}}}],["constructor(repository",{"_index":618,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["consume",{"_index":1108,"title":{},"body":{"index.html":{}}}],["contact",{"_index":957,"title":{},"body":{"index.html":{}}}],["containing",{"_index":813,"title":{},"body":{"index.html":{}}}],["controller",{"_index":65,"title":{"controllers/AuthController.html":{},"controllers/DocumentationController.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AuthController.html":{},"controllers/DocumentationController.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controllers",{"_index":67,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["correct",{"_index":935,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":708,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":322,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["created_at",{"_index":129,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganization1740356244243.html":{}}}],["createdat",{"_index":123,"title":{},"body":{"entities/BaseEntity.html":{}}}],["createdatecolumn",{"_index":143,"title":{},"body":{"entities/BaseEntity.html":{}}}],["createorganization.ts",{"_index":309,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{},"coverage.html":{}}}],["createorganization.ts:18",{"_index":318,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["createorganization.ts:4",{"_index":315,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["createorganization.ts:6",{"_index":320,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["createorganization1740356244243",{"_index":307,"title":{"classes/CreateOrganization1740356244243.html":{}},"body":{"classes/CreateOrganization1740356244243.html":{},"coverage.html":{}}}],["currencies",{"_index":1071,"title":{},"body":{"index.html":{}}}],["currency",{"_index":1064,"title":{},"body":{"index.html":{}}}],["custom",{"_index":177,"title":{},"body":{"entities/BaseEntity.html":{}}}],["d",{"_index":1209,"title":{},"body":{"miscellaneous/variables.html":{}}}],["damage",{"_index":1027,"title":{},"body":{"index.html":{}}}],["data",{"_index":927,"title":{},"body":{"index.html":{}}}],["database",{"_index":300,"title":{},"body":{"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"index.html":{}}}],["database_host",{"_index":24,"title":{},"body":{"modules/AppConfigModule.html":{},"miscellaneous/variables.html":{}}}],["database_name",{"_index":28,"title":{},"body":{"modules/AppConfigModule.html":{},"miscellaneous/variables.html":{}}}],["database_password",{"_index":27,"title":{},"body":{"modules/AppConfigModule.html":{},"miscellaneous/variables.html":{}}}],["database_port",{"_index":25,"title":{},"body":{"modules/AppConfigModule.html":{},"miscellaneous/variables.html":{}}}],["database_type",{"_index":23,"title":{},"body":{"modules/AppConfigModule.html":{},"miscellaneous/variables.html":{}}}],["database_username",{"_index":26,"title":{},"body":{"modules/AppConfigModule.html":{},"miscellaneous/variables.html":{}}}],["databaseconfig",{"_index":267,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["databasemodule",{"_index":399,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/DatabaseModule.html":{},"modules/OrganizationModule.html":{},"modules.html":{},"overview.html":{}}}],["databasemodule.forroot('organization",{"_index":606,"title":{},"body":{"modules/OrganizationModule.html":{}}}],["datasource",{"_index":144,"title":{"classes/DataSource.html":{}},"body":{"entities/BaseEntity.html":{},"classes/DataSource.html":{},"coverage.html":{}}}],["datasource.entitymetadatasmap.get(this",{"_index":165,"title":{},"body":{"entities/BaseEntity.html":{}}}],["datasource.getinstance('escrow",{"_index":1230,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource.getinstance('media",{"_index":1231,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource.getinstance('notification",{"_index":1232,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource.getinstance('organization",{"_index":1233,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource.getinstance('payment",{"_index":1234,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource.getinstance('property",{"_index":1235,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource.getinstance('user",{"_index":1236,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasourcepath",{"_index":753,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["datasources",{"_index":857,"title":{},"body":{"index.html":{}}}],["date",{"_index":127,"title":{},"body":{"entities/BaseEntity.html":{}}}],["db",{"_index":391,"title":{},"body":{"classes/DataSource.html":{},"index.html":{}}}],["decimal",{"_index":578,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["declarations",{"_index":86,"title":{},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorator",{"_index":190,"title":{},"body":{"entities/BaseEntity.html":{}}}],["decorators",{"_index":70,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"entities/BaseEntity.html":{},"controllers/DocumentationController.html":{},"controllers/EscrowController.html":{},"classes/EscrowResolver.html":{},"controllers/MediaController.html":{},"classes/MediaResolver.html":{},"controllers/NotificationController.html":{},"classes/NotificationResolver.html":{},"entities/Organization.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"controllers/PaymentController.html":{},"classes/PaymentResolver.html":{},"controllers/PropertyController.html":{},"classes/PropertyResolver.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{}}}],["default",{"_index":182,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganization1740356244243.html":{},"entities/OrganizationMetadata.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["default('development",{"_index":34,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["defaultval",{"_index":806,"title":{},"body":{"miscellaneous/functions.html":{}}}],["defined",{"_index":49,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"controllers/DocumentationController.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"controllers/MediaController.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"classes/SubgraphsBuilder.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":361,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["deleted_at",{"_index":134,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganization1740356244243.html":{}}}],["deletedat",{"_index":124,"title":{},"body":{"entities/BaseEntity.html":{}}}],["deletedatecolumn",{"_index":145,"title":{},"body":{"entities/BaseEntity.html":{}}}],["deliveries",{"_index":1090,"title":{},"body":{"index.html":{}}}],["delivery",{"_index":1077,"title":{},"body":{"index.html":{}}}],["demandoption",{"_index":1183,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dependencies",{"_index":84,"title":{"dependencies.html":{}},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["deposit",{"_index":1014,"title":{},"body":{"index.html":{}}}],["deposit_fee_percentage",{"_index":347,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{},"entities/OrganizationMetadata.html":{}}}],["depositfeepercentage",{"_index":572,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["deposits",{"_index":867,"title":{},"body":{"index.html":{}}}],["describe",{"_index":1182,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":811,"title":{},"body":{"index.html":{},"properties.html":{}}}],["details",{"_index":958,"title":{},"body":{"index.html":{}}}],["developers",{"_index":1149,"title":{},"body":{"index.html":{}}}],["development",{"_index":415,"title":{},"body":{"modules/DatabaseModule.html":{},"index.html":{}}}],["dispute",{"_index":1026,"title":{},"body":{"index.html":{}}}],["disputes",{"_index":891,"title":{},"body":{"index.html":{}}}],["distributed",{"_index":1138,"title":{},"body":{"index.html":{}}}],["docs",{"_index":838,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":709,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["documentation.controller",{"_index":426,"title":{},"body":{"modules/DocumentationModule.html":{}}}],["documentation.service",{"_index":420,"title":{},"body":{"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{}}}],["documentationcontroller",{"_index":416,"title":{"controllers/DocumentationController.html":{}},"body":{"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"coverage.html":{}}}],["documentationmodule",{"_index":422,"title":{"modules/DocumentationModule.html":{}},"body":{"modules/DocumentationModule.html":{},"modules.html":{},"overview.html":{}}}],["documentationservice",{"_index":419,"title":{"injectables/DocumentationService.html":{}},"body":{"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"coverage.html":{},"overview.html":{}}}],["domain",{"_index":342,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{},"entities/OrganizationMetadata.html":{}}}],["dotenv",{"_index":373,"title":{},"body":{"classes/DataSource.html":{},"dependencies.html":{}}}],["dotenv.config",{"_index":379,"title":{},"body":{"classes/DataSource.html":{}}}],["double",{"_index":993,"title":{},"body":{"index.html":{}}}],["down",{"_index":313,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{},"index.html":{}}}],["down(queryrunner",{"_index":316,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["downloads",{"_index":1107,"title":{},"body":{"index.html":{}}}],["driven",{"_index":1038,"title":{},"body":{"index.html":{}}}],["driver",{"_index":486,"title":{},"body":{"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{}}}],["drop",{"_index":364,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["dtos",{"_index":878,"title":{},"body":{"index.html":{}}}],["dynamic",{"_index":1083,"title":{},"body":{"index.html":{}}}],["dynamically",{"_index":411,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["dynamicmodule",{"_index":244,"title":{},"body":{"modules/ClientsModule.html":{},"modules/DatabaseModule.html":{},"modules/GraphQLGatewayModule.html":{}}}],["e.g",{"_index":905,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["e2e",{"_index":847,"title":{},"body":{"index.html":{}}}],["each",{"_index":893,"title":{},"body":{"index.html":{}}}],["easily",{"_index":1103,"title":{},"body":{"index.html":{}}}],["easy",{"_index":1124,"title":{},"body":{"index.html":{}}}],["effectively",{"_index":964,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":986,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":1005,"title":{},"body":{"index.html":{}}}],["email",{"_index":330,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{},"entities/Organization.html":{},"index.html":{}}}],["emails",{"_index":940,"title":{},"body":{"index.html":{}}}],["enable",{"_index":414,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["encrypted",{"_index":928,"title":{},"body":{"index.html":{}}}],["encryption",{"_index":1047,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":1132,"title":{},"body":{"index.html":{}}}],["endpoints",{"_index":1144,"title":{},"body":{"index.html":{}}}],["ensuring",{"_index":897,"title":{},"body":{"index.html":{}}}],["entities",{"_index":120,"title":{},"body":{"entities/BaseEntity.html":{},"classes/DataSource.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"overview.html":{}}}],["entities/organization",{"_index":605,"title":{},"body":{"modules/OrganizationModule.html":{}}}],["entities/organization.entity",{"_index":604,"title":{},"body":{"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{}}}],["entity",{"_index":118,"title":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{}},"body":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"coverage.html":{}}}],["enumerations",{"_index":787,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":378,"title":{},"body":{"classes/DataSource.html":{}}}],["environment",{"_index":376,"title":{},"body":{"classes/DataSource.html":{}}}],["environmentconstant",{"_index":283,"title":{},"body":{"classes/ConfigHelper.html":{},"modules/GatewayModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environmentconstant.database_password",{"_index":299,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["environmentconstant.database_username",{"_index":297,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["error",{"_index":961,"title":{},"body":{"index.html":{}}}],["errors",{"_index":963,"title":{},"body":{"index.html":{}}}],["escrow",{"_index":451,"title":{},"body":{"injectables/EscrowService.html":{},"index.html":{}}}],["escrow.controller",{"_index":443,"title":{},"body":{"modules/EscrowModule.html":{}}}],["escrow.resolver",{"_index":445,"title":{},"body":{"modules/EscrowModule.html":{}}}],["escrow.service",{"_index":434,"title":{},"body":{"controllers/EscrowController.html":{},"modules/EscrowModule.html":{}}}],["escrow_client",{"_index":793,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["escrow_host",{"_index":461,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["escrow_port",{"_index":1214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["escrowcommand",{"_index":435,"title":{},"body":{"controllers/EscrowController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["escrowcommand.ping_escrow",{"_index":436,"title":{},"body":{"controllers/EscrowController.html":{}}}],["escrowcontroller",{"_index":430,"title":{"controllers/EscrowController.html":{}},"body":{"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"coverage.html":{}}}],["escrowmodule",{"_index":438,"title":{"modules/EscrowModule.html":{}},"body":{"modules/EscrowModule.html":{},"modules.html":{},"overview.html":{}}}],["escrowresolver",{"_index":444,"title":{"classes/EscrowResolver.html":{}},"body":{"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"coverage.html":{}}}],["escrowservice",{"_index":433,"title":{"injectables/EscrowService.html":{}},"body":{"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"injectables/EscrowService.html":{},"coverage.html":{},"overview.html":{}}}],["especially",{"_index":926,"title":{},"body":{"index.html":{}}}],["etc",{"_index":816,"title":{},"body":{"index.html":{}}}],["evenly",{"_index":1139,"title":{},"body":{"index.html":{}}}],["event",{"_index":1037,"title":{},"body":{"index.html":{}}}],["example",{"_index":831,"title":{},"body":{"index.html":{}}}],["exist",{"_index":172,"title":{},"body":{"entities/BaseEntity.html":{}}}],["expiration",{"_index":912,"title":{},"body":{"index.html":{}}}],["expiry",{"_index":909,"title":{},"body":{"index.html":{}}}],["export",{"_index":35,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"classes/SubgraphsBuilder.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":89,"title":{},"body":{"modules/AuthModule.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/GraphQLGatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":766,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":157,"title":{},"body":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{}}}],["external",{"_index":1042,"title":{},"body":{"index.html":{}}}],["failed",{"_index":1089,"title":{},"body":{"index.html":{}}}],["failure",{"_index":1028,"title":{},"body":{"index.html":{}}}],["failures",{"_index":1049,"title":{},"body":{"index.html":{}}}],["fallback",{"_index":181,"title":{},"body":{"entities/BaseEntity.html":{}}}],["false",{"_index":350,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"entities/OrganizationMetadata.html":{}}}],["fast",{"_index":985,"title":{},"body":{"index.html":{}}}],["faster",{"_index":1116,"title":{},"body":{"index.html":{}}}],["features",{"_index":990,"title":{},"body":{"index.html":{}}}],["federation",{"_index":495,"title":{},"body":{"modules/GraphQLMicroserviceModule.html":{}}}],["feedback",{"_index":969,"title":{},"body":{"index.html":{}}}],["field",{"_index":149,"title":{},"body":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{}}}],["field(undefined",{"_index":548,"title":{},"body":{"entities/Organization.html":{},"entities/OrganizationMetadata.html":{}}}],["field(undefined)@column",{"_index":545,"title":{},"body":{"entities/Organization.html":{},"entities/OrganizationMetadata.html":{}}}],["field(undefined)@column({name",{"_index":555,"title":{},"body":{"entities/Organization.html":{},"entities/OrganizationMetadata.html":{}}}],["field(undefined)@column({unique",{"_index":552,"title":{},"body":{"entities/Organization.html":{}}}],["file",{"_index":5,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"classes/SubgraphsBuilder.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["files",{"_index":1102,"title":{},"body":{"index.html":{}}}],["financial",{"_index":1034,"title":{},"body":{"index.html":{}}}],["findall",{"_index":617,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["fk_efaca847c588a9817470f7c6ca8",{"_index":357,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["float",{"_index":592,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["follow",{"_index":836,"title":{},"body":{"index.html":{}}}],["following",{"_index":821,"title":{},"body":{"index.html":{}}}],["force",{"_index":921,"title":{},"body":{"index.html":{}}}],["foreign",{"_index":358,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["forroot",{"_index":401,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["forroot(schema",{"_index":402,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["free",{"_index":1123,"title":{},"body":{"index.html":{}}}],["frequency",{"_index":1094,"title":{},"body":{"index.html":{}}}],["frontend",{"_index":889,"title":{},"body":{"index.html":{}}}],["function",{"_index":178,"title":{},"body":{"entities/BaseEntity.html":{},"coverage.html":{}}}],["functionality",{"_index":984,"title":{},"body":{"index.html":{}}}],["functions",{"_index":799,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gateway",{"_index":472,"title":{},"body":{"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"index.html":{}}}],["gateway.module.ts",{"_index":474,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["gateway.module.ts:10",{"_index":476,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["gateway.service",{"_index":459,"title":{},"body":{"modules/GatewayModule.html":{}}}],["gateway_host",{"_index":1222,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gateway_port",{"_index":1215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gatewaymodule",{"_index":452,"title":{"modules/GatewayModule.html":{}},"body":{"modules/GatewayModule.html":{},"modules.html":{},"overview.html":{}}}],["gatewayservice",{"_index":457,"title":{"injectables/GatewayService.html":{}},"body":{"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"coverage.html":{},"overview.html":{}}}],["gdpr",{"_index":946,"title":{},"body":{"index.html":{}}}],["generate",{"_index":1187,"title":{},"body":{"miscellaneous/variables.html":{}}}],["generating",{"_index":1056,"title":{},"body":{"index.html":{}}}],["getcolumnorder",{"_index":152,"title":{},"body":{"entities/BaseEntity.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getcolumnorder(target",{"_index":804,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getcolumnorder(target.prototype",{"_index":179,"title":{},"body":{"entities/BaseEntity.html":{}}}],["getconfig",{"_index":45,"title":{},"body":{"injectables/AppConfigService.html":{},"classes/ConfigHelper.html":{}}}],["getconfig(key",{"_index":55,"title":{},"body":{"injectables/AppConfigService.html":{},"classes/ConfigHelper.html":{}}}],["getdatabaseconfig",{"_index":280,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["gethello",{"_index":69,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/DocumentationController.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"injectables/EscrowService.html":{},"controllers/MediaController.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"injectables/NotificationService.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"injectables/PropertyService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["getinstance",{"_index":263,"title":{},"body":{"classes/ConfigHelper.html":{},"classes/DataSource.html":{}}}],["getinstance(schema",{"_index":368,"title":{},"body":{"classes/DataSource.html":{}}}],["getmicroservicehosts",{"_index":264,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["getmicroservicehosts(microservicename",{"_index":272,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["getmoduleport",{"_index":265,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["getmoduleport(modulename",{"_index":275,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["getordersafely",{"_index":166,"title":{},"body":{"entities/BaseEntity.html":{}}}],["getordersafely(xcolumn",{"_index":199,"title":{},"body":{"entities/BaseEntity.html":{}}}],["getordersafely(ycolumn",{"_index":201,"title":{},"body":{"entities/BaseEntity.html":{}}}],["getredisconfig",{"_index":278,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["getting",{"_index":807,"title":{"index.html":{}},"body":{}}],["global",{"_index":243,"title":{},"body":{"modules/ClientsModule.html":{},"modules/GraphQLGatewayModule.html":{},"index.html":{}}}],["graph",{"_index":1153,"title":{},"body":{"modules.html":{}}}],["graphname",{"_index":682,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["graphname?.split('_host')?.[0",{"_index":681,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["graphnames",{"_index":676,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["graphnames.map((graphname",{"_index":679,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["graphql",{"_index":771,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["graphqlgatewaymodule",{"_index":456,"title":{"modules/GraphQLGatewayModule.html":{}},"body":{"modules/GatewayModule.html":{},"modules/GraphQLGatewayModule.html":{},"modules.html":{},"overview.html":{}}}],["graphqlgatewaymodule.register",{"_index":468,"title":{},"body":{"modules/GatewayModule.html":{}}}],["graphqlmicroservicemodule",{"_index":94,"title":{"modules/GraphQLMicroserviceModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/EscrowModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["graphqlmodule",{"_index":478,"title":{},"body":{"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{}}}],["graphqlmodule.forroot",{"_index":493,"title":{},"body":{"modules/GraphQLMicroserviceModule.html":{}}}],["graphqlmodule.forrootasync",{"_index":485,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["growing",{"_index":1074,"title":{},"body":{"index.html":{}}}],["guards",{"_index":883,"title":{},"body":{"index.html":{}}}],["handle",{"_index":971,"title":{},"body":{"index.html":{}}}],["handling",{"_index":962,"title":{},"body":{"index.html":{}}}],["hello",{"_index":115,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DocumentationService.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"injectables/MediaService.html":{},"injectables/NotificationService.html":{},"injectables/OrganizationService.html":{},"injectables/PaymentService.html":{},"injectables/PropertyService.html":{},"injectables/UserService.html":{}}}],["help().argv",{"_index":1197,"title":{},"body":{"miscellaneous/variables.html":{}}}],["helper",{"_index":851,"title":{},"body":{"index.html":{}}}],["here",{"_index":862,"title":{},"body":{"index.html":{}}}],["high",{"_index":183,"title":{},"body":{"entities/BaseEntity.html":{},"index.html":{}}}],["host",{"_index":227,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/SubgraphsBuilder.html":{}}}],["host}:${port}/graphql",{"_index":685,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["https",{"_index":929,"title":{},"body":{"index.html":{}}}],["id",{"_index":125,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganization1740356244243.html":{}}}],["identifier",{"_index":710,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":998,"title":{},"body":{"index.html":{}}}],["images",{"_index":1000,"title":{},"body":{"index.html":{}}}],["implement",{"_index":914,"title":{},"body":{"index.html":{}}}],["implementing",{"_index":923,"title":{},"body":{"index.html":{}}}],["implements",{"_index":310,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["import",{"_index":7,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"classes/SubgraphsBuilder.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":13,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/AuthModule.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/UserModule.html":{}}}],["improve",{"_index":1152,"title":{},"body":{"index.html":{}}}],["in/opt",{"_index":1096,"title":{},"body":{"index.html":{}}}],["includes",{"_index":901,"title":{},"body":{"index.html":{}}}],["index",{"_index":43,"title":{"index.html":{}},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"controllers/DocumentationController.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"controllers/MediaController.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"classes/SubgraphsBuilder.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"classes/SubgraphsBuilder.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["information",{"_index":939,"title":{},"body":{"index.html":{}}}],["init",{"_index":207,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["init(module",{"_index":208,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["initially",{"_index":1066,"title":{},"body":{"index.html":{}}}],["injectable",{"_index":39,"title":{"injectables/AppConfigService.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/DocumentationService.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"injectables/MediaService.html":{},"injectables/NotificationService.html":{},"injectables/OrganizationService.html":{},"injectables/PaymentService.html":{},"injectables/PropertyService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppConfigService.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/DocumentationService.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"injectables/MediaService.html":{},"injectables/NotificationService.html":{},"injectables/OrganizationService.html":{},"injectables/PaymentService.html":{},"injectables/PropertyService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":41,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/DocumentationService.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"injectables/MediaService.html":{},"injectables/NotificationService.html":{},"injectables/OrganizationService.html":{},"injectables/PaymentService.html":{},"injectables/PropertyService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectrepository",{"_index":623,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["injectrepository(organization",{"_index":624,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["inr",{"_index":1067,"title":{},"body":{"index.html":{}}}],["install",{"_index":833,"title":{},"body":{"index.html":{}}}],["installed",{"_index":822,"title":{},"body":{"index.html":{}}}],["installinstall",{"_index":835,"title":{},"body":{"index.html":{}}}],["instance",{"_index":262,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["instances",{"_index":1140,"title":{},"body":{"index.html":{}}}],["integer",{"_index":352,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["integrating",{"_index":1006,"title":{},"body":{"index.html":{}}}],["integration",{"_index":1041,"title":{},"body":{"index.html":{}}}],["integrity",{"_index":960,"title":{},"body":{"index.html":{}}}],["interceptors",{"_index":882,"title":{},"body":{"index.html":{}}}],["interfaces",{"_index":879,"title":{},"body":{"index.html":{}}}],["introspectandcompose",{"_index":482,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["introspection",{"_index":1146,"title":{},"body":{"index.html":{}}}],["invalid",{"_index":966,"title":{},"body":{"index.html":{}}}],["ioredis",{"_index":773,"title":{},"body":{"dependencies.html":{}}}],["isglobal",{"_index":15,"title":{},"body":{"modules/AppConfigModule.html":{},"classes/ConfigHelper.html":{}}}],["issues",{"_index":995,"title":{},"body":{"index.html":{}}}],["joi",{"_index":12,"title":{},"body":{"modules/AppConfigModule.html":{},"dependencies.html":{}}}],["joi.number().required",{"_index":22,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["joi.object",{"_index":18,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["joi.string",{"_index":30,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["joi.string().required",{"_index":20,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["joincolumn",{"_index":593,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["jwt",{"_index":906,"title":{},"body":{"index.html":{}}}],["key",{"_index":59,"title":{},"body":{"injectables/AppConfigService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/SubgraphsBuilder.html":{},"index.html":{}}}],["keypart",{"_index":680,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["landlord",{"_index":933,"title":{},"body":{"index.html":{}}}],["landlords",{"_index":974,"title":{},"body":{"index.html":{}}}],["large",{"_index":972,"title":{},"body":{"index.html":{}}}],["later",{"_index":1068,"title":{},"body":{"index.html":{}}}],["learn",{"_index":860,"title":{},"body":{"index.html":{}}}],["legend",{"_index":85,"title":{},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["lets",{"_index":853,"title":{},"body":{"index.html":{}}}],["libraries",{"_index":877,"title":{},"body":{"index.html":{}}}],["libs",{"_index":815,"title":{},"body":{"index.html":{}}}],["libs/.../auth.command.ts",{"_index":1167,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../column",{"_index":801,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/.../environment.constant.ts",{"_index":1168,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../escrow.command.ts",{"_index":1169,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../media.command.ts",{"_index":1170,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../micro",{"_index":789,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../notification.command.ts",{"_index":1171,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../organization.command.ts",{"_index":1172,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../payment.command.ts",{"_index":1173,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../property.command.ts",{"_index":1174,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../user.command.ts",{"_index":1177,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/common/src/clients/clients.module.ts",{"_index":237,"title":{},"body":{"modules/ClientsModule.html":{}}}],["libs/common/src/clients/clients.module.ts:12",{"_index":240,"title":{},"body":{"modules/ClientsModule.html":{}}}],["libs/common/src/common.module.ts",{"_index":256,"title":{},"body":{"modules/CommonModule.html":{}}}],["libs/common/src/common.service.ts",{"_index":259,"title":{},"body":{"injectables/CommonService.html":{},"coverage.html":{}}}],["libs/common/src/config/config.helper.ts",{"_index":260,"title":{},"body":{"classes/ConfigHelper.html":{},"coverage.html":{}}}],["libs/common/src/config/config.helper.ts:13",{"_index":271,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.helper.ts:31",{"_index":279,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.helper.ts:37",{"_index":281,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.helper.ts:51",{"_index":276,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.helper.ts:57",{"_index":273,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.helper.ts:67",{"_index":270,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.helper.ts:8",{"_index":269,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.helper.ts:9",{"_index":268,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.module.ts",{"_index":6,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["libs/common/src/config/config.service.ts",{"_index":42,"title":{},"body":{"injectables/AppConfigService.html":{},"coverage.html":{}}}],["libs/common/src/config/config.service.ts:5",{"_index":50,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["libs/common/src/config/config.service.ts:8",{"_index":57,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["libs/common/src/constants/commands/auth.command.ts",{"_index":738,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/commands/escrow.command.ts",{"_index":739,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/commands/media.command.ts",{"_index":740,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/commands/notification.command.ts",{"_index":741,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/commands/organization.command.ts",{"_index":742,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/commands/payment.command.ts",{"_index":743,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/commands/property.command.ts",{"_index":744,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/commands/user.command.ts",{"_index":745,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/environment.constant.ts",{"_index":746,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/database/database.module.ts",{"_index":400,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["libs/common/src/database/database.module.ts:7",{"_index":403,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["libs/common/src/database/entities/base.entity.ts",{"_index":121,"title":{},"body":{"entities/BaseEntity.html":{},"coverage.html":{}}}],["libs/common/src/database/entities/base.entity.ts:20",{"_index":138,"title":{},"body":{"entities/BaseEntity.html":{}}}],["libs/common/src/database/entities/base.entity.ts:25",{"_index":130,"title":{},"body":{"entities/BaseEntity.html":{}}}],["libs/common/src/database/entities/base.entity.ts:30",{"_index":141,"title":{},"body":{"entities/BaseEntity.html":{}}}],["libs/common/src/database/entities/base.entity.ts:35",{"_index":135,"title":{},"body":{"entities/BaseEntity.html":{}}}],["libs/common/src/decorators/column",{"_index":748,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/enums/micro",{"_index":791,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/common/src/graphql/graphql",{"_index":473,"title":{},"body":{"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{}}}],["libs/common/src/utils/bootstrapper.util.ts",{"_index":205,"title":{},"body":{"classes/Bootstrapper.html":{},"coverage.html":{}}}],["libs/common/src/utils/bootstrapper.util.ts:7",{"_index":209,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["libs/common/src/utils/data",{"_index":366,"title":{},"body":{"classes/DataSource.html":{},"coverage.html":{}}}],["libs/common/src/utils/subgraphs",{"_index":671,"title":{},"body":{"classes/SubgraphsBuilder.html":{},"coverage.html":{}}}],["license",{"_index":1164,"title":{},"body":{"properties.html":{}}}],["limiting",{"_index":917,"title":{},"body":{"index.html":{}}}],["limits",{"_index":1143,"title":{},"body":{"index.html":{}}}],["listed",{"_index":982,"title":{},"body":{"index.html":{}}}],["listening",{"_index":235,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["listings",{"_index":870,"title":{},"body":{"index.html":{}}}],["load",{"_index":375,"title":{},"body":{"classes/DataSource.html":{},"index.html":{}}}],["loading",{"_index":1117,"title":{},"body":{"index.html":{}}}],["local",{"_index":1033,"title":{},"body":{"index.html":{}}}],["localhost",{"_index":385,"title":{},"body":{"classes/DataSource.html":{}}}],["location",{"_index":988,"title":{},"body":{"index.html":{}}}],["logger",{"_index":210,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["logger(`${module.name}bootstrap",{"_index":217,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["logger.log(`microservice",{"_index":234,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["logo",{"_index":343,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{},"entities/OrganizationMetadata.html":{}}}],["lts",{"_index":825,"title":{},"body":{"index.html":{}}}],["m",{"_index":1181,"title":{},"body":{"miscellaneous/variables.html":{}}}],["machine",{"_index":820,"title":{},"body":{"index.html":{}}}],["maintaining",{"_index":959,"title":{},"body":{"index.html":{}}}],["make",{"_index":829,"title":{},"body":{"index.html":{}}}],["manage",{"_index":1097,"title":{},"body":{"index.html":{}}}],["management",{"_index":866,"title":{},"body":{"index.html":{}}}],["managing",{"_index":911,"title":{},"body":{"index.html":{}}}],["matching",{"_index":38,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"classes/SubgraphsBuilder.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["mechanisms",{"_index":913,"title":{},"body":{"index.html":{}}}],["media",{"_index":519,"title":{},"body":{"injectables/MediaService.html":{},"index.html":{}}}],["media.controller",{"_index":511,"title":{},"body":{"modules/MediaModule.html":{}}}],["media.resolver",{"_index":513,"title":{},"body":{"modules/MediaModule.html":{}}}],["media.service",{"_index":502,"title":{},"body":{"controllers/MediaController.html":{},"modules/MediaModule.html":{}}}],["media_client",{"_index":794,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["media_host",{"_index":462,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["media_port",{"_index":1216,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mediacommand",{"_index":503,"title":{},"body":{"controllers/MediaController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mediacommand.ping_media",{"_index":504,"title":{},"body":{"controllers/MediaController.html":{}}}],["mediacontroller",{"_index":498,"title":{"controllers/MediaController.html":{}},"body":{"controllers/MediaController.html":{},"modules/MediaModule.html":{},"coverage.html":{}}}],["mediamodule",{"_index":506,"title":{"modules/MediaModule.html":{}},"body":{"modules/MediaModule.html":{},"modules.html":{},"overview.html":{}}}],["mediaresolver",{"_index":512,"title":{"classes/MediaResolver.html":{}},"body":{"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"coverage.html":{}}}],["mediaservice",{"_index":501,"title":{"injectables/MediaService.html":{}},"body":{"controllers/MediaController.html":{},"modules/MediaModule.html":{},"injectables/MediaService.html":{},"coverage.html":{},"overview.html":{}}}],["message",{"_index":1081,"title":{},"body":{"index.html":{}}}],["messagepattern",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{}}}],["messagepattern({cmd",{"_index":71,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{}}}],["meta",{"_index":164,"title":{},"body":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"injectables/OrganizationService.html":{}}}],["meta.columns",{"_index":191,"title":{},"body":{"entities/BaseEntity.html":{}}}],["meta.columns].sort((xcolumn",{"_index":192,"title":{},"body":{"entities/BaseEntity.html":{}}}],["meta.organization",{"_index":550,"title":{},"body":{"entities/Organization.html":{}}}],["metadata",{"_index":779,"title":{},"body":{"dependencies.html":{}}}],["metadata.entity",{"_index":559,"title":{},"body":{"entities/Organization.html":{},"modules/OrganizationModule.html":{}}}],["metadata.entity.ts",{"_index":570,"title":{},"body":{"entities/OrganizationMetadata.html":{},"coverage.html":{}}}],["metadata.entity.ts:16",{"_index":588,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["metadata.entity.ts:20",{"_index":590,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["metadata.entity.ts:24",{"_index":581,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["metadata.entity.ts:28",{"_index":582,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["metadata.entity.ts:38",{"_index":591,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["metadata.entity.ts:48",{"_index":579,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["metadata.entity.ts:52",{"_index":575,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["methods",{"_index":44,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"controllers/DocumentationController.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"controllers/MediaController.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"classes/SubgraphsBuilder.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["microservice",{"_index":894,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["microservice.module.ts",{"_index":490,"title":{},"body":{"modules/GraphQLMicroserviceModule.html":{}}}],["microserviceclient",{"_index":788,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["microservicename",{"_index":274,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["microservicename}_host`.touppercase",{"_index":304,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["microservicename}_port`.touppercase",{"_index":305,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["microserviceoptions",{"_index":214,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["microservices",{"_index":814,"title":{},"body":{"index.html":{}}}],["migration",{"_index":1194,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migration:${command",{"_index":1207,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migrationinterface",{"_index":311,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["migrations",{"_index":395,"title":{},"body":{"classes/DataSource.html":{}}}],["migrationstablename",{"_index":380,"title":{},"body":{"classes/DataSource.html":{}}}],["miscellaneous",{"_index":786,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mobile",{"_index":1088,"title":{},"body":{"index.html":{}}}],["mode",{"_index":842,"title":{},"body":{"index.html":{}}}],["models",{"_index":887,"title":{},"body":{"index.html":{}}}],["module",{"_index":0,"title":{"modules/AppConfigModule.html":{},"modules/AuthModule.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppConfigModule.html":{},"modules/AuthModule.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modulename",{"_index":277,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["modulename?.split('module')?.[0]?.touppercase",{"_index":302,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppConfigModule.html":{},"modules/AuthModule.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["money",{"_index":1016,"title":{},"body":{"index.html":{}}}],["monthly",{"_index":1060,"title":{},"body":{"index.html":{}}}],["multi",{"_index":1063,"title":{},"body":{"index.html":{}}}],["multiple",{"_index":1086,"title":{},"body":{"index.html":{}}}],["name",{"_index":52,"title":{},"body":{"injectables/AppConfigService.html":{},"classes/AuthResolver.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/EscrowResolver.html":{},"modules/GraphQLGatewayModule.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"classes/SubgraphsBuilder.html":{},"classes/UserResolver.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["names",{"_index":241,"title":{},"body":{"modules/ClientsModule.html":{},"index.html":{}}}],["names.map((name",{"_index":249,"title":{},"body":{"modules/ClientsModule.html":{}}}],["needed",{"_index":1195,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nestclientsmodule",{"_index":245,"title":{},"body":{"modules/ClientsModule.html":{}}}],["nestclientsmodule.register(clients",{"_index":250,"title":{},"body":{"modules/ClientsModule.html":{}}}],["nestfactory",{"_index":212,"title":{},"body":{"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{}}}],["nestfactory.create(module",{"_index":223,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["nestfactory.createapplicationcontext",{"_index":286,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["nestjs/apollo",{"_index":481,"title":{},"body":{"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":11,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"modules/DatabaseModule.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"injectables/PropertyService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":10,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"classes/ConfigHelper.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":213,"title":{},"body":{"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{},"dependencies.html":{}}}],["nestjs/graphql",{"_index":111,"title":{},"body":{"classes/AuthResolver.html":{},"entities/BaseEntity.html":{},"classes/EscrowResolver.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"classes/UserResolver.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":765,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":406,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/OrganizationModule.html":{},"injectables/OrganizationService.html":{},"dependencies.html":{}}}],["network",{"_index":1052,"title":{},"body":{"index.html":{}}}],["new",{"_index":216,"title":{},"body":{"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/GraphQLGatewayModule.html":{},"coverage.html":{}}}],["node",{"_index":1202,"title":{},"body":{"miscellaneous/variables.html":{}}}],["node:process",{"_index":372,"title":{},"body":{"classes/DataSource.html":{}}}],["node_env",{"_index":29,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["node_modules/typeorm/cli.js",{"_index":1206,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nodejs",{"_index":823,"title":{},"body":{"index.html":{}}}],["notification",{"_index":541,"title":{},"body":{"injectables/NotificationService.html":{},"index.html":{}}}],["notification.controller",{"_index":533,"title":{},"body":{"modules/NotificationModule.html":{}}}],["notification.resolver",{"_index":535,"title":{},"body":{"modules/NotificationModule.html":{}}}],["notification.service",{"_index":524,"title":{},"body":{"controllers/NotificationController.html":{},"modules/NotificationModule.html":{}}}],["notification_client",{"_index":795,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["notification_host",{"_index":463,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["notification_port",{"_index":1217,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notificationcommand",{"_index":525,"title":{},"body":{"controllers/NotificationController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["notificationcommand.ping_notification",{"_index":526,"title":{},"body":{"controllers/NotificationController.html":{}}}],["notificationcontroller",{"_index":520,"title":{"controllers/NotificationController.html":{}},"body":{"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"coverage.html":{}}}],["notificationmodule",{"_index":528,"title":{"modules/NotificationModule.html":{}},"body":{"modules/NotificationModule.html":{},"modules.html":{},"overview.html":{}}}],["notificationresolver",{"_index":534,"title":{"classes/NotificationResolver.html":{}},"body":{"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"coverage.html":{}}}],["notifications",{"_index":871,"title":{},"body":{"index.html":{}}}],["notificationservice",{"_index":523,"title":{"injectables/NotificationService.html":{}},"body":{"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"coverage.html":{},"overview.html":{}}}],["notifying",{"_index":1039,"title":{},"body":{"index.html":{}}}],["now",{"_index":333,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["npm",{"_index":832,"title":{},"body":{"index.html":{}}}],["null",{"_index":186,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganization1740356244243.html":{}}}],["nullable",{"_index":132,"title":{},"body":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{}}}],["number",{"_index":136,"title":{},"body":{"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"entities/OrganizationMetadata.html":{},"miscellaneous/functions.html":{}}}],["numbers",{"_index":942,"title":{},"body":{"index.html":{}}}],["numeric(5,2",{"_index":345,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["oauth",{"_index":907,"title":{},"body":{"index.html":{}}}],["object",{"_index":1211,"title":{},"body":{"miscellaneous/variables.html":{}}}],["objecttype",{"_index":150,"title":{},"body":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{}}}],["official",{"_index":837,"title":{},"body":{"index.html":{}}}],["ondelete",{"_index":585,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["onetoone",{"_index":558,"title":{},"body":{"entities/Organization.html":{},"entities/OrganizationMetadata.html":{}}}],["onetoone(undefined",{"_index":583,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["onupdate",{"_index":586,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["opt",{"_index":1095,"title":{},"body":{"index.html":{}}}],["optimization",{"_index":1112,"title":{},"body":{"index.html":{}}}],["optimizing",{"_index":1115,"title":{},"body":{"index.html":{}}}],["option('args",{"_index":1189,"title":{},"body":{"miscellaneous/variables.html":{}}}],["option('command",{"_index":1184,"title":{},"body":{"miscellaneous/variables.html":{}}}],["option('microservice",{"_index":1179,"title":{},"body":{"miscellaneous/variables.html":{}}}],["option('title",{"_index":1192,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optional",{"_index":54,"title":{},"body":{"injectables/AppConfigService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"modules/GraphQLGatewayModule.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"classes/SubgraphsBuilder.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["options",{"_index":226,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/DatabaseModule.html":{}}}],["order",{"_index":175,"title":{},"body":{"entities/BaseEntity.html":{}}}],["order.decorator.ts",{"_index":749,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["order_key",{"_index":750,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["orderxcolumn",{"_index":198,"title":{},"body":{"entities/BaseEntity.html":{}}}],["orderycolumn",{"_index":200,"title":{},"body":{"entities/BaseEntity.html":{}}}],["organization",{"_index":542,"title":{"entities/Organization.html":{}},"body":{"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"coverage.html":{}}}],["organization\".\"organization",{"_index":324,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["organization\".\"organization\"(\"id",{"_index":360,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["organization\".\"organization_metadata",{"_index":340,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["organization.controller",{"_index":601,"title":{},"body":{"modules/OrganizationModule.html":{}}}],["organization.entity",{"_index":594,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["organization.meta",{"_index":584,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["organization.resolver",{"_index":603,"title":{},"body":{"modules/OrganizationModule.html":{}}}],["organization.service",{"_index":564,"title":{},"body":{"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{}}}],["organization_host",{"_index":464,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["organization_id",{"_index":351,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{},"entities/OrganizationMetadata.html":{}}}],["organization_port",{"_index":1218,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organizationcommand",{"_index":565,"title":{},"body":{"controllers/OrganizationController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["organizationcommand.ping_organization",{"_index":567,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["organizationcontroller",{"_index":560,"title":{"controllers/OrganizationController.html":{}},"body":{"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"coverage.html":{}}}],["organizationmetadata",{"_index":547,"title":{"entities/OrganizationMetadata.html":{}},"body":{"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"coverage.html":{}}}],["organizationmodule",{"_index":596,"title":{"modules/OrganizationModule.html":{}},"body":{"modules/OrganizationModule.html":{},"modules.html":{},"overview.html":{}}}],["organizationresolver",{"_index":602,"title":{"classes/OrganizationResolver.html":{}},"body":{"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"coverage.html":{}}}],["organizations",{"_index":609,"title":{},"body":{"classes/OrganizationResolver.html":{}}}],["organizationservice",{"_index":563,"title":{"injectables/OrganizationService.html":{}},"body":{"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"coverage.html":{},"overview.html":{}}}],["out",{"_index":97,"title":{},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":1158,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":756,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameters",{"_index":51,"title":{},"body":{"injectables/AppConfigService.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"modules/GraphQLGatewayModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"classes/SubgraphsBuilder.html":{},"miscellaneous/functions.html":{}}}],["party",{"_index":1148,"title":{},"body":{"index.html":{}}}],["passing",{"_index":1133,"title":{},"body":{"index.html":{}}}],["password",{"_index":298,"title":{},"body":{"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"index.html":{}}}],["path",{"_index":858,"title":{},"body":{"index.html":{}}}],["path.join",{"_index":1198,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paths/register",{"_index":1205,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pay",{"_index":1029,"title":{},"body":{"index.html":{}}}],["payment",{"_index":648,"title":{},"body":{"injectables/PaymentService.html":{},"index.html":{}}}],["payment.controller",{"_index":640,"title":{},"body":{"modules/PaymentModule.html":{}}}],["payment.resolver",{"_index":642,"title":{},"body":{"modules/PaymentModule.html":{}}}],["payment.service",{"_index":631,"title":{},"body":{"controllers/PaymentController.html":{},"modules/PaymentModule.html":{}}}],["payment_client",{"_index":796,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["payment_host",{"_index":465,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["payment_port",{"_index":1219,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paymentcommand",{"_index":632,"title":{},"body":{"controllers/PaymentController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["paymentcommand.ping_payment",{"_index":633,"title":{},"body":{"controllers/PaymentController.html":{}}}],["paymentcontroller",{"_index":627,"title":{"controllers/PaymentController.html":{}},"body":{"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"coverage.html":{}}}],["paymentmodule",{"_index":635,"title":{"modules/PaymentModule.html":{}},"body":{"modules/PaymentModule.html":{},"modules.html":{},"overview.html":{}}}],["paymentresolver",{"_index":641,"title":{"classes/PaymentResolver.html":{}},"body":{"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"coverage.html":{}}}],["payments",{"_index":868,"title":{},"body":{"index.html":{}}}],["paymentservice",{"_index":630,"title":{"injectables/PaymentService.html":{}},"body":{"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"coverage.html":{},"overview.html":{}}}],["paytm",{"_index":1044,"title":{},"body":{"index.html":{}}}],["performance",{"_index":1105,"title":{},"body":{"index.html":{}}}],["permissions",{"_index":931,"title":{},"body":{"index.html":{}}}],["personal",{"_index":937,"title":{},"body":{"index.html":{}}}],["personalization",{"_index":1091,"title":{},"body":{"index.html":{}}}],["personalized",{"_index":1092,"title":{},"body":{"index.html":{}}}],["pg",{"_index":776,"title":{},"body":{"dependencies.html":{}}}],["phone",{"_index":331,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{},"entities/Organization.html":{},"index.html":{}}}],["pictures",{"_index":1126,"title":{},"body":{"index.html":{}}}],["ping",{"_index":105,"title":{},"body":{"classes/AuthResolver.html":{},"classes/EscrowResolver.html":{},"injectables/GatewayService.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"classes/UserResolver.html":{}}}],["ping_auth",{"_index":1212,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ping_escrow",{"_index":1223,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ping_media",{"_index":1224,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ping_notification",{"_index":1225,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ping_organization",{"_index":1227,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ping_payment",{"_index":1228,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ping_property",{"_index":1229,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ping_user",{"_index":1237,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pingauth",{"_index":107,"title":{},"body":{"classes/AuthResolver.html":{}}}],["pingescrow",{"_index":447,"title":{},"body":{"classes/EscrowResolver.html":{}}}],["pingmedia",{"_index":515,"title":{},"body":{"classes/MediaResolver.html":{}}}],["pingnotification",{"_index":537,"title":{},"body":{"classes/NotificationResolver.html":{}}}],["pingorganization",{"_index":613,"title":{},"body":{"classes/OrganizationResolver.html":{}}}],["pingpayment",{"_index":644,"title":{},"body":{"classes/PaymentResolver.html":{}}}],["pingproperty",{"_index":666,"title":{},"body":{"classes/PropertyResolver.html":{}}}],["pinguser",{"_index":703,"title":{},"body":{"classes/UserResolver.html":{}}}],["pk_2fecc2ceb81f30a7f46be802cbd",{"_index":354,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["pk_472c1f99a32def1b0abb219cd67",{"_index":338,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["pnpm",{"_index":826,"title":{},"body":{"index.html":{}}}],["pnpminstall",{"_index":834,"title":{},"body":{"index.html":{}}}],["policies",{"_index":903,"title":{},"body":{"index.html":{}}}],["pong",{"_index":112,"title":{},"body":{"classes/AuthResolver.html":{},"classes/EscrowResolver.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"classes/UserResolver.html":{}}}],["port",{"_index":229,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/SubgraphsBuilder.html":{}}}],["possibly",{"_index":1069,"title":{},"body":{"index.html":{}}}],["postgres",{"_index":383,"title":{},"body":{"classes/DataSource.html":{}}}],["precision",{"_index":576,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["preferences",{"_index":1093,"title":{},"body":{"index.html":{}}}],["prerequisites",{"_index":817,"title":{},"body":{"index.html":{}}}],["preventing",{"_index":992,"title":{},"body":{"index.html":{}}}],["price",{"_index":989,"title":{},"body":{"index.html":{}}}],["primary",{"_index":339,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["primary_color",{"_index":341,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{},"entities/OrganizationMetadata.html":{}}}],["primary_contact_name",{"_index":329,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{},"entities/Organization.html":{}}}],["primarycolor",{"_index":573,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["primarycontactname",{"_index":544,"title":{},"body":{"entities/Organization.html":{}}}],["primarygeneratedcolumn",{"_index":146,"title":{},"body":{"entities/BaseEntity.html":{}}}],["privacy",{"_index":943,"title":{},"body":{"index.html":{}}}],["private",{"_index":261,"title":{},"body":{"classes/ConfigHelper.html":{},"injectables/OrganizationService.html":{}}}],["process",{"_index":371,"title":{},"body":{"classes/DataSource.html":{}}}],["process.env.database_host",{"_index":384,"title":{},"body":{"classes/DataSource.html":{}}}],["process.env.database_name",{"_index":390,"title":{},"body":{"classes/DataSource.html":{}}}],["process.env.database_password",{"_index":389,"title":{},"body":{"classes/DataSource.html":{}}}],["process.env.database_port",{"_index":386,"title":{},"body":{"classes/DataSource.html":{}}}],["process.env.database_type",{"_index":382,"title":{},"body":{"classes/DataSource.html":{}}}],["process.env.database_username",{"_index":388,"title":{},"body":{"classes/DataSource.html":{}}}],["processed",{"_index":1061,"title":{},"body":{"index.html":{}}}],["processing",{"_index":1046,"title":{},"body":{"index.html":{}}}],["production",{"_index":32,"title":{},"body":{"modules/AppConfigModule.html":{},"index.html":{}}}],["profile",{"_index":951,"title":{},"body":{"index.html":{}}}],["profiles",{"_index":955,"title":{},"body":{"index.html":{}}}],["project",{"_index":819,"title":{},"body":{"index.html":{}}}],["promise",{"_index":242,"title":{},"body":{"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"modules/GraphQLGatewayModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"classes/SubgraphsBuilder.html":{}}}],["properly",{"_index":979,"title":{},"body":{"index.html":{}}}],["properties",{"_index":122,"title":{"properties.html":{}},"body":{"entities/BaseEntity.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"index.html":{},"properties.html":{}}}],["property",{"_index":670,"title":{},"body":{"injectables/PropertyService.html":{},"index.html":{}}}],["property.controller",{"_index":662,"title":{},"body":{"modules/PropertyModule.html":{}}}],["property.resolver",{"_index":664,"title":{},"body":{"modules/PropertyModule.html":{}}}],["property.service",{"_index":653,"title":{},"body":{"controllers/PropertyController.html":{},"modules/PropertyModule.html":{}}}],["property_client",{"_index":797,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["property_host",{"_index":466,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["property_port",{"_index":1220,"title":{},"body":{"miscellaneous/variables.html":{}}}],["propertycommand",{"_index":654,"title":{},"body":{"controllers/PropertyController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["propertycommand.ping_property",{"_index":655,"title":{},"body":{"controllers/PropertyController.html":{}}}],["propertycontroller",{"_index":649,"title":{"controllers/PropertyController.html":{}},"body":{"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"coverage.html":{}}}],["propertydecorator",{"_index":803,"title":{},"body":{"miscellaneous/functions.html":{}}}],["propertykey",{"_index":805,"title":{},"body":{"miscellaneous/functions.html":{}}}],["propertymodule",{"_index":657,"title":{"modules/PropertyModule.html":{}},"body":{"modules/PropertyModule.html":{},"modules.html":{},"overview.html":{}}}],["propertyresolver",{"_index":663,"title":{"classes/PropertyResolver.html":{}},"body":{"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"coverage.html":{}}}],["propertyservice",{"_index":652,"title":{"injectables/PropertyService.html":{}},"body":{"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"injectables/PropertyService.html":{},"coverage.html":{},"overview.html":{}}}],["protecting",{"_index":918,"title":{},"body":{"index.html":{}}}],["protocols",{"_index":1048,"title":{},"body":{"index.html":{}}}],["prototype",{"_index":171,"title":{},"body":{"entities/BaseEntity.html":{}}}],["providers",{"_index":88,"title":{},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["providing",{"_index":967,"title":{},"body":{"index.html":{}}}],["public",{"_index":312,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["push",{"_index":1080,"title":{},"body":{"index.html":{}}}],["query",{"_index":109,"title":{},"body":{"classes/AuthResolver.html":{},"classes/EscrowResolver.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"classes/UserResolver.html":{}}}],["query(undefined",{"_index":106,"title":{},"body":{"classes/AuthResolver.html":{},"classes/EscrowResolver.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"classes/UserResolver.html":{}}}],["queryrunner",{"_index":317,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["queryrunner.query",{"_index":321,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["queryrunner.query(`drop",{"_index":365,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["qushah",{"_index":809,"title":{},"body":{"index.html":{}}}],["qushah/common",{"_index":100,"title":{},"body":{"modules/AuthModule.html":{},"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{},"modules/DatabaseModule.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/GraphQLGatewayModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/SubgraphsBuilder.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["qushah/common/config",{"_index":258,"title":{},"body":{"modules/CommonModule.html":{}}}],["qushah/common/config/config.helper",{"_index":247,"title":{},"body":{"modules/ClientsModule.html":{}}}],["qushah/common/constants/commands",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{}}}],["qushah/common/constants/commands/organization.command",{"_index":566,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["qushah/common/decorators",{"_index":153,"title":{},"body":{"entities/BaseEntity.html":{}}}],["r",{"_index":1203,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rate",{"_index":916,"title":{},"body":{"index.html":{}}}],["razorpay",{"_index":1045,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":62,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"controllers/DocumentationController.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{}}}],["receipts",{"_index":1057,"title":{},"body":{"index.html":{}}}],["recurring",{"_index":1058,"title":{},"body":{"index.html":{}}}],["redis",{"_index":827,"title":{},"body":{"index.html":{}}}],["redis_host",{"_index":19,"title":{},"body":{"modules/AppConfigModule.html":{},"miscellaneous/variables.html":{}}}],["redis_port",{"_index":21,"title":{},"body":{"modules/AppConfigModule.html":{},"miscellaneous/variables.html":{}}}],["redisconfig",{"_index":220,"title":{},"body":{"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{}}}],["redisconfig.host",{"_index":228,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["redisconfig.port",{"_index":230,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["reduced",{"_index":1119,"title":{},"body":{"index.html":{}}}],["references",{"_index":359,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["reflect",{"_index":778,"title":{},"body":{"dependencies.html":{}}}],["reflected",{"_index":1011,"title":{},"body":{"index.html":{}}}],["refresh",{"_index":910,"title":{},"body":{"index.html":{}}}],["regarding",{"_index":948,"title":{},"body":{"index.html":{}}}],["register",{"_index":238,"title":{},"body":{"modules/ClientsModule.html":{},"modules/GraphQLGatewayModule.html":{}}}],["register(...names",{"_index":239,"title":{},"body":{"modules/ClientsModule.html":{}}}],["register(...subgraphnames",{"_index":475,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["regulations",{"_index":945,"title":{},"body":{"index.html":{}}}],["regulatory",{"_index":1035,"title":{},"body":{"index.html":{}}}],["rejectunauthorized",{"_index":393,"title":{},"body":{"classes/DataSource.html":{},"modules/DatabaseModule.html":{}}}],["rel_efaca847c588a9817470f7c6ca",{"_index":353,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["relations",{"_index":626,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["release",{"_index":1021,"title":{},"body":{"index.html":{}}}],["released",{"_index":1025,"title":{},"body":{"index.html":{}}}],["releases",{"_index":1040,"title":{},"body":{"index.html":{}}}],["reminders",{"_index":1084,"title":{},"body":{"index.html":{}}}],["rent",{"_index":1030,"title":{},"body":{"index.html":{}}}],["rent_fee_percentage",{"_index":344,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{},"entities/OrganizationMetadata.html":{}}}],["rented",{"_index":997,"title":{},"body":{"index.html":{}}}],["rentfeepercentage",{"_index":574,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["reorder",{"_index":187,"title":{},"body":{"entities/BaseEntity.html":{}}}],["repo",{"_index":875,"title":{},"body":{"index.html":{}}}],["repository",{"_index":619,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["request",{"_index":1128,"title":{},"body":{"index.html":{}}}],["requests",{"_index":1130,"title":{},"body":{"index.html":{}}}],["required",{"_index":908,"title":{},"body":{"index.html":{}}}],["reset",{"_index":96,"title":{},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resolutions",{"_index":859,"title":{},"body":{"index.html":{}}}],["resolver",{"_index":110,"title":{},"body":{"classes/AuthResolver.html":{},"classes/EscrowResolver.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"classes/UserResolver.html":{}}}],["resolvers",{"_index":885,"title":{},"body":{"index.html":{}}}],["results",{"_index":37,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"classes/SubgraphsBuilder.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retries",{"_index":1050,"title":{},"body":{"index.html":{}}}],["retrieve",{"_index":174,"title":{},"body":{"entities/BaseEntity.html":{}}}],["return",{"_index":63,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"controllers/DocumentationController.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"controllers/MediaController.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"classes/SubgraphsBuilder.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":60,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"controllers/DocumentationController.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"controllers/MediaController.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"classes/SubgraphsBuilder.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["revert",{"_index":1188,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roles",{"_index":930,"title":{},"body":{"index.html":{}}}],["routing",{"_index":1129,"title":{},"body":{"index.html":{}}}],["rules",{"_index":1024,"title":{},"body":{"index.html":{}}}],["run",{"_index":818,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["running",{"_index":1196,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rxjs",{"_index":781,"title":{},"body":{"dependencies.html":{}}}],["scalability",{"_index":970,"title":{},"body":{"index.html":{}}}],["scale",{"_index":577,"title":{},"body":{"entities/OrganizationMetadata.html":{},"index.html":{}}}],["scans",{"_index":1003,"title":{},"body":{"index.html":{}}}],["schema",{"_index":370,"title":{},"body":{"classes/DataSource.html":{},"modules/DatabaseModule.html":{}}}],["schemas",{"_index":884,"title":{},"body":{"index.html":{}}}],["search",{"_index":983,"title":{},"body":{"index.html":{}}}],["secure",{"_index":898,"title":{},"body":{"index.html":{}}}],["securely",{"_index":1004,"title":{},"body":{"index.html":{}}}],["security",{"_index":896,"title":{},"body":{"index.html":{}}}],["sending",{"_index":1054,"title":{},"body":{"index.html":{}}}],["sensitive",{"_index":938,"title":{},"body":{"index.html":{}}}],["separate",{"_index":873,"title":{},"body":{"index.html":{}}}],["serial",{"_index":325,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["service",{"_index":117,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"injectables/MediaService.html":{},"injectables/NotificationService.html":{},"injectables/OrganizationService.html":{},"injectables/PaymentService.html":{},"injectables/PropertyService.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["serviceendpointdefinition",{"_index":677,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["services",{"_index":1012,"title":{},"body":{"index.html":{}}}],["set",{"_index":410,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["setup",{"_index":828,"title":{},"body":{"index.html":{}}}],["shared",{"_index":876,"title":{},"body":{"index.html":{}}}],["significant",{"_index":1109,"title":{},"body":{"index.html":{}}}],["slug",{"_index":328,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{},"entities/Organization.html":{}}}],["sms",{"_index":1079,"title":{},"body":{"index.html":{}}}],["sort",{"_index":202,"title":{},"body":{"entities/BaseEntity.html":{}}}],["sortschema",{"_index":497,"title":{},"body":{"modules/GraphQLMicroserviceModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"classes/SubgraphsBuilder.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["source.ts",{"_index":719,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["source.util.ts",{"_index":367,"title":{},"body":{"classes/DataSource.html":{},"coverage.html":{}}}],["source.util.ts:9",{"_index":369,"title":{},"body":{"classes/DataSource.html":{}}}],["space",{"_index":1110,"title":{},"body":{"index.html":{}}}],["specific",{"_index":1099,"title":{},"body":{"index.html":{}}}],["src/migrations",{"_index":1208,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ssl",{"_index":392,"title":{},"body":{"classes/DataSource.html":{},"modules/DatabaseModule.html":{}}}],["standards",{"_index":1036,"title":{},"body":{"index.html":{}}}],["start",{"_index":840,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":843,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":844,"title":{},"body":{"index.html":{}}}],["started",{"_index":808,"title":{"index.html":{}},"body":{}}],["statements",{"_index":711,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":160,"title":{},"body":{"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"modules/GraphQLGatewayModule.html":{},"classes/SubgraphsBuilder.html":{}}}],["status",{"_index":1008,"title":{},"body":{"index.html":{}}}],["storage",{"_index":950,"title":{},"body":{"index.html":{}}}],["storing",{"_index":999,"title":{},"body":{"index.html":{}}}],["string",{"_index":56,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"controllers/DocumentationController.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"controllers/MediaController.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"classes/SubgraphsBuilder.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["strong",{"_index":902,"title":{},"body":{"index.html":{}}}],["structure",{"_index":863,"title":{},"body":{"index.html":{}}}],["subgraphnames",{"_index":477,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["subgraphs",{"_index":488,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["subgraphsbuilder",{"_index":484,"title":{"classes/SubgraphsBuilder.html":{}},"body":{"modules/GraphQLGatewayModule.html":{},"classes/SubgraphsBuilder.html":{},"coverage.html":{}}}],["subgraphsbuilder.build(...subgraphnames",{"_index":489,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["subscribers",{"_index":397,"title":{},"body":{"classes/DataSource.html":{}}}],["successful",{"_index":1055,"title":{},"body":{"index.html":{}}}],["such",{"_index":965,"title":{},"body":{"index.html":{}}}],["supergraphsdl",{"_index":487,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["support",{"_index":1065,"title":{},"body":{"index.html":{},"modules.html":{}}}],["supporting",{"_index":1059,"title":{},"body":{"index.html":{}}}],["sure",{"_index":830,"title":{},"body":{"index.html":{}}}],["svg",{"_index":1157,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1145,"title":{},"body":{"index.html":{}}}],["symbol.for('order_key",{"_index":1226,"title":{},"body":{"miscellaneous/variables.html":{}}}],["synchronize",{"_index":413,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["system",{"_index":812,"title":{},"body":{"index.html":{}}}],["t",{"_index":58,"title":{},"body":{"injectables/AppConfigService.html":{},"classes/ConfigHelper.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":323,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":755,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":168,"title":{},"body":{"entities/BaseEntity.html":{},"miscellaneous/functions.html":{}}}],["target.prototype",{"_index":173,"title":{},"body":{"entities/BaseEntity.html":{}}}],["templates",{"_index":1082,"title":{},"body":{"index.html":{}}}],["tenant",{"_index":932,"title":{},"body":{"index.html":{}}}],["tenants",{"_index":973,"title":{},"body":{"index.html":{}}}],["test",{"_index":33,"title":{},"body":{"modules/AppConfigModule.html":{},"index.html":{}}}],["test:covtypeorm",{"_index":849,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":848,"title":{},"body":{"index.html":{}}}],["tests",{"_index":845,"title":{},"body":{"index.html":{}}}],["third",{"_index":1147,"title":{},"body":{"index.html":{}}}],["this.appconfigservice.getconfig(key",{"_index":306,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.authservice.gethello",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.configservice.get(key",{"_index":64,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.documentationservice.gethello",{"_index":421,"title":{},"body":{"controllers/DocumentationController.html":{}}}],["this.escrowservice.gethello",{"_index":437,"title":{},"body":{"controllers/EscrowController.html":{}}}],["this.getconfig",{"_index":296,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environmentconstant.database_host",{"_index":293,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environmentconstant.database_name",{"_index":301,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environmentconstant.database_port",{"_index":294,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environmentconstant.database_type",{"_index":292,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environmentconstant.redis_host",{"_index":290,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environmentconstant.redis_port",{"_index":291,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environmentconstant[`${key}_port",{"_index":303,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.mediaservice.gethello",{"_index":505,"title":{},"body":{"controllers/MediaController.html":{}}}],["this.notificationservice.gethello",{"_index":527,"title":{},"body":{"controllers/NotificationController.html":{}}}],["this.organizationservice.findall",{"_index":615,"title":{},"body":{"classes/OrganizationResolver.html":{}}}],["this.organizationservice.gethello",{"_index":568,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["this.paymentservice.gethello",{"_index":634,"title":{},"body":{"controllers/PaymentController.html":{}}}],["this.propertyservice.gethello",{"_index":656,"title":{},"body":{"controllers/PropertyController.html":{}}}],["this.repository.find",{"_index":625,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["this.userservice.gethello",{"_index":693,"title":{},"body":{"controllers/UserController.html":{}}}],["through",{"_index":1134,"title":{},"body":{"index.html":{}}}],["time",{"_index":1062,"title":{},"body":{"index.html":{}}}],["timely",{"_index":1078,"title":{},"body":{"index.html":{}}}],["times",{"_index":1118,"title":{},"body":{"index.html":{}}}],["timestamp",{"_index":332,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["title",{"_index":1193,"title":{},"body":{"miscellaneous/variables.html":{}}}],["token",{"_index":904,"title":{},"body":{"index.html":{}}}],["tool",{"_index":852,"title":{},"body":{"index.html":{}}}],["traffic",{"_index":1151,"title":{},"body":{"index.html":{}}}],["trail",{"_index":1020,"title":{},"body":{"index.html":{}}}],["transaction",{"_index":1017,"title":{},"body":{"index.html":{}}}],["transactions",{"_index":869,"title":{},"body":{"index.html":{}}}],["transparency",{"_index":1022,"title":{},"body":{"index.html":{}}}],["transport",{"_index":215,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{}}}],["transport.redis",{"_index":225,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{}}}],["true",{"_index":16,"title":{},"body":{"modules/AppConfigModule.html":{},"entities/BaseEntity.html":{},"classes/ConfigHelper.html":{},"modules/DatabaseModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"miscellaneous/variables.html":{}}}],["true})@column({name",{"_index":589,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["true})@column({nullable",{"_index":580,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["true})@deletedatecolumn({name",{"_index":133,"title":{},"body":{"entities/BaseEntity.html":{}}}],["true})@onetoone(undefined",{"_index":549,"title":{},"body":{"entities/Organization.html":{}}}],["true})@updatedatecolumn({name",{"_index":139,"title":{},"body":{"entities/BaseEntity.html":{}}}],["ts",{"_index":1201,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tsconfig",{"_index":1204,"title":{},"body":{"miscellaneous/variables.html":{}}}],["type",{"_index":53,"title":{},"body":{"injectables/AppConfigService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"modules/GraphQLGatewayModule.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"classes/SubgraphsBuilder.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":148,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"injectables/OrganizationService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["typeorm/metadata/columnmetadata",{"_index":155,"title":{},"body":{"entities/BaseEntity.html":{}}}],["typeorm_migrations",{"_index":381,"title":{},"body":{"classes/DataSource.html":{}}}],["typeormcommand",{"_index":754,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeormdatasource",{"_index":374,"title":{},"body":{"classes/DataSource.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeormmodule",{"_index":404,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/OrganizationModule.html":{}}}],["typeormmodule.forfeature([organization",{"_index":607,"title":{},"body":{"modules/OrganizationModule.html":{}}}],["typeormmodule.forrootasync",{"_index":407,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["typeormmoduleoptions",{"_index":405,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["types",{"_index":1100,"title":{},"body":{"index.html":{}}}],["types/yargs",{"_index":768,"title":{},"body":{"dependencies.html":{}}}],["unauthorized",{"_index":899,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":72,"title":{},"body":{"controllers/AuthController.html":{},"entities/BaseEntity.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{}}}],["unique",{"_index":336,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{},"entities/Organization.html":{}}}],["unit",{"_index":846,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":1165,"title":{},"body":{"properties.html":{}}}],["unsubscribing",{"_index":1098,"title":{},"body":{"index.html":{}}}],["up",{"_index":314,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["up(queryrunner",{"_index":319,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["update",{"_index":363,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{},"index.html":{}}}],["updated_at",{"_index":140,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganization1740356244243.html":{}}}],["updatedat",{"_index":126,"title":{},"body":{"entities/BaseEntity.html":{}}}],["updatedatecolumn",{"_index":147,"title":{},"body":{"entities/BaseEntity.html":{}}}],["updates",{"_index":952,"title":{},"body":{"index.html":{}}}],["upi",{"_index":1043,"title":{},"body":{"index.html":{}}}],["uploaded",{"_index":1121,"title":{},"body":{"index.html":{}}}],["uploading",{"_index":1125,"title":{},"body":{"index.html":{}}}],["uploads",{"_index":1106,"title":{},"body":{"index.html":{}}}],["uq_a08804baa7c5d5427067c49a31f",{"_index":337,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["uq_c21e615583a3ebbb0977452afb0",{"_index":335,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["url",{"_index":684,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["usage",{"_index":1120,"title":{},"body":{"index.html":{}}}],["use",{"_index":861,"title":{},"body":{"index.html":{}}}],["usedatasource(datasource",{"_index":161,"title":{},"body":{"entities/BaseEntity.html":{}}}],["usefactory",{"_index":408,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/GraphQLGatewayModule.html":{}}}],["user",{"_index":707,"title":{},"body":{"injectables/UserService.html":{},"index.html":{}}}],["user.controller",{"_index":699,"title":{},"body":{"modules/UserModule.html":{}}}],["user.resolver",{"_index":701,"title":{},"body":{"modules/UserModule.html":{}}}],["user.service",{"_index":690,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user_client",{"_index":798,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["user_host",{"_index":467,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["user_port",{"_index":1221,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usercommand",{"_index":691,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usercommand.ping_user",{"_index":692,"title":{},"body":{"controllers/UserController.html":{}}}],["usercontroller",{"_index":686,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["usermodule",{"_index":694,"title":{"modules/UserModule.html":{}},"body":{"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":295,"title":{},"body":{"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{}}}],["userresolver",{"_index":700,"title":{"classes/UserResolver.html":{}},"body":{"modules/UserModule.html":{},"classes/UserResolver.html":{},"coverage.html":{}}}],["users",{"_index":954,"title":{},"body":{"index.html":{}}}],["userservice",{"_index":689,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":176,"title":{},"body":{"entities/BaseEntity.html":{},"index.html":{}}}],["utilities",{"_index":881,"title":{},"body":{"index.html":{}}}],["valid('development",{"_index":31,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["validated",{"_index":980,"title":{},"body":{"index.html":{}}}],["validation",{"_index":976,"title":{},"body":{"index.html":{}}}],["validationschema",{"_index":17,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["value",{"_index":184,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganization1740356244243.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":194,"title":{},"body":{"entities/BaseEntity.html":{}}}],["variable",{"_index":720,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":377,"title":{"miscellaneous/variables.html":{}},"body":{"classes/DataSource.html":{},"miscellaneous/variables.html":{}}}],["varying",{"_index":327,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["version",{"_index":1162,"title":{},"body":{"properties.html":{}}}],["videos",{"_index":1001,"title":{},"body":{"index.html":{}}}],["virus",{"_index":1122,"title":{},"body":{"index.html":{}}}],["volumes",{"_index":1073,"title":{},"body":{"index.html":{}}}],["watch",{"_index":841,"title":{},"body":{"index.html":{}}}],["way",{"_index":987,"title":{},"body":{"index.html":{}}}],["within",{"_index":874,"title":{},"body":{"index.html":{}}}],["without",{"_index":855,"title":{},"body":{"index.html":{}}}],["world",{"_index":429,"title":{},"body":{"injectables/DocumentationService.html":{}}}],["worrying",{"_index":856,"title":{},"body":{"index.html":{}}}],["yargs",{"_index":784,"title":{},"body":{"dependencies.html":{}}}],["yargs(process.argv.slice(2",{"_index":1178,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ycolumn",{"_index":193,"title":{},"body":{"entities/BaseEntity.html":{}}}],["zoom",{"_index":95,"title":{},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppConfigModule.html":{"url":"modules/AppConfigModule.html","title":"module - AppConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    AppConfigModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/config/config.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { ConfigModule } from '@nestjs/config';\nimport { Module } from '@nestjs/common';\nimport Joi from 'joi';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      validationSchema: Joi.object({\n        REDIS_HOST: Joi.string().required(),\n        REDIS_PORT: Joi.number().required(),\n        DATABASE_TYPE: Joi.string().required(),\n        DATABASE_HOST: Joi.string().required(),\n        DATABASE_PORT: Joi.string().required(),\n        DATABASE_USERNAME: Joi.string().required(),\n        DATABASE_PASSWORD: Joi.string().required(),\n        DATABASE_NAME: Joi.string().required(),\n        NODE_ENV: Joi.string()\n          .valid('development', 'production', 'test')\n          .default('development'),\n      }),\n    }),\n  ],\n})\nexport class AppConfigModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppConfigService.html":{"url":"injectables/AppConfigService.html","title":"injectable - AppConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/config/config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in libs/common/src/config/config.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getConfig\n                        \n                    \n                \n            \n            \n                \ngetConfig(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/config/config.service.ts:8\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class AppConfigService {\n  constructor(private readonly configService: ConfigService) {}\n\n  getConfig(key: string): T {\n    return this.configService.get(key);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/auth.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/auth/src/auth.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { AuthCommand } from '@qushah/common/constants/commands';\n\n@Controller()\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @MessagePattern({ cmd: AuthCommand.PING_AUTH })\n  getHello(): string {\n    return this.authService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nCommonModule->AuthModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nAuthModule -->\n\nGraphQLMicroserviceModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/auth/src/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { CommonModule, GraphQLMicroserviceModule } from '@qushah/common';\nimport { AuthResolver } from './auth.resolver';\n\n@Module({\n  imports: [CommonModule, GraphQLMicroserviceModule],\n  controllers: [AuthController],\n  providers: [AuthService, AuthResolver],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthResolver.html":{"url":"classes/AuthResolver.html","title":"class - AuthResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/auth.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingAuth'})\n                \n            \n\n                    \n                        \n                            Defined in apps/auth/src/auth.resolver.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\n\n@Resolver()\nexport class AuthResolver {\n  @Query(() => String, { name: 'pingAuth' })\n  ping(): string {\n    return 'pong';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/auth/src/auth.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AuthService {\n  getHello(): string {\n    return 'Hello from Auth Service!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/BaseEntity.html":{"url":"entities/BaseEntity.html","title":"entity - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/database/entities/base.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ColumnOrder(9999)@Field(undefined)@CreateDateColumn({name: 'created_at'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/common/src/database/entities/base.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ColumnOrder(9999)@Field(undefined, {nullable: true})@DeleteDateColumn({name: 'deleted_at', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/common/src/database/entities/base.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ColumnOrder(undefined)@Field(undefined)@PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/common/src/database/entities/base.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ColumnOrder(9999)@Field(undefined, {nullable: true})@UpdateDateColumn({name: 'updated_at', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/common/src/database/entities/base.entity.ts:30\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  BaseEntity as BaseEntityTypeOrm,\n  CreateDateColumn,\n  DataSource,\n  DeleteDateColumn,\n  Entity,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { Field, ID, ObjectType } from '@nestjs/graphql';\nimport { ColumnOrder, getColumnOrder } from '@qushah/common/decorators';\nimport { ColumnMetadata } from 'typeorm/metadata/ColumnMetadata';\n\n@ObjectType()\n@Entity()\nexport abstract class BaseEntity extends BaseEntityTypeOrm {\n  @ColumnOrder(-1)\n  @Field(() => ID)\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @ColumnOrder(9999)\n  @Field(() => Date)\n  @CreateDateColumn({ name: 'created_at' })\n  createdAt: Date;\n\n  @ColumnOrder(9999)\n  @Field(() => Date, { nullable: true })\n  @UpdateDateColumn({ name: 'updated_at', nullable: true })\n  updatedAt?: Date;\n\n  @ColumnOrder(9999)\n  @Field(() => Date, { nullable: true })\n  @DeleteDateColumn({ name: 'deleted_at', nullable: true })\n  deletedAt?: Date;\n\n  static useDataSource(dataSource: DataSource) {\n    BaseEntityTypeOrm.useDataSource.call(this, dataSource);\n    const meta = dataSource.entityMetadatasMap.get(this);\n\n    const getOrderSafely = (column: ColumnMetadata) => {\n      const target = column.target as any;\n\n      // Check if the target and its prototype exist\n      if (target && target.prototype) {\n        // Retrieve the column order using the custom getColumnOrder function\n        return getColumnOrder(target.prototype, column.propertyName);\n      }\n\n      // Fallback to a default high order value if target is undefined\n      return 9996;\n    };\n\n    if (meta != null) {\n      // Reorder columns based on custom `@ColumnOrder` decorator\n      meta.columns = [...meta.columns].sort((xColumn, yColumn) => {\n        // Get the order values for both columns being compared\n        const orderXColumn = getOrderSafely(xColumn);\n        const orderYColumn = getOrderSafely(yColumn);\n\n        // Sort in ascending order\n        return orderXColumn - orderYColumn;\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Bootstrapper.html":{"url":"classes/Bootstrapper.html","title":"class - Bootstrapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Bootstrapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/utils/bootstrapper.util.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Async\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init(module: any)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/utils/bootstrapper.util.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                module\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Logger } from '@nestjs/common';\nimport { ConfigHelper } from '@qushah/common';\nimport { NestFactory } from '@nestjs/core';\nimport { MicroserviceOptions, Transport } from '@nestjs/microservices';\n\nexport class Bootstrapper {\n  static async init(module: any) {\n    const logger = new Logger(`${module.name}Bootstrap`);\n    const configHelper = await ConfigHelper.getInstance();\n    const redisConfig = configHelper.redisConfig;\n    const app = await NestFactory.create(module);\n    app.connectMicroservice({\n      transport: Transport.REDIS,\n      options: {\n        host: redisConfig.host,\n        port: redisConfig.port,\n      },\n    });\n    await app.startAllMicroservices();\n    const port: number = configHelper.getModulePort(module.name);\n    await app.listen(port);\n    logger.log(`Microservice listening on port ${port}...`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ClientsModule.html":{"url":"modules/ClientsModule.html","title":"module - ClientsModule","body":"\n                   \n\n\n\n\n    Modules\n    ClientsModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/clients/clients.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(...names: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/clients/clients.module.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                names\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, Global, DynamicModule } from '@nestjs/common';\nimport {\n  ClientsModule as NestClientsModule,\n  ClientsModuleOptions,\n  Transport,\n} from '@nestjs/microservices';\nimport { ConfigHelper } from '@qushah/common/config/config.helper';\n\n@Global()\n@Module({})\nexport class ClientsModule {\n  static async register(...names: string[]): Promise {\n    const configHelper = await ConfigHelper.getInstance();\n    const { host, port } = configHelper.redisConfig;\n    const clients: ClientsModuleOptions = names.map((name) => ({\n      name,\n      transport: Transport.REDIS,\n      options: {\n        host,\n        port,\n      },\n    }));\n    return {\n      module: ClientsModule,\n      imports: [NestClientsModule.register(clients)],\n      exports: [NestClientsModule],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CommonModule.html":{"url":"modules/CommonModule.html","title":"module - CommonModule","body":"\n                   \n\n\n\n\n    Modules\n    CommonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_exports\n\n\n\ncluster_CommonModule_providers\n\n\n\ncluster_CommonModule_imports\n\n\n\n\nAppConfigModule\n\nAppConfigModule\n\n\n\nCommonModule\n\nCommonModule\n\nCommonModule -->\n\nAppConfigModule->CommonModule\n\n\n\n\n\nCommonService \n\nCommonService \n\nCommonService  -->\n\nCommonModule->CommonService \n\n\n\n\n\nCommonService\n\nCommonService\n\nCommonModule -->\n\nCommonService->CommonModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/common.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CommonService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppConfigModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CommonService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CommonService } from './common.service';\nimport { AppConfigModule } from '@qushah/common/config';\n\n@Module({\n  imports: [AppConfigModule],\n  providers: [CommonService],\n  exports: [CommonService],\n})\nexport class CommonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CommonService.html":{"url":"injectables/CommonService.html","title":"injectable - CommonService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CommonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/common.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class CommonService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigHelper.html":{"url":"classes/ConfigHelper.html","title":"class - ConfigHelper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/config/config.helper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                appConfigService\n                            \n                            \n                                    Private\n                                    Static\n                                instance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getConfig\n                            \n                            \n                                    Static\n                                    Async\n                                getInstance\n                            \n                            \n                                getMicroServiceHosts\n                            \n                            \n                                getModulePort\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    redisConfig\n                                \n                                \n                                    databaseConfig\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Private\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in libs/common/src/config/config.helper.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        appConfigService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AppConfigService\n\n                    \n                \n                    \n                        \n                                Defined in libs/common/src/config/config.helper.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        instance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigHelper\n\n                    \n                \n                    \n                        \n                                Defined in libs/common/src/config/config.helper.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getConfig\n                        \n                    \n                \n            \n            \n                \ngetConfig(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/config/config.helper.ts:67\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        getInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    getInstance()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/config/config.helper.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMicroServiceHosts\n                        \n                    \n                \n            \n            \n                \ngetMicroServiceHosts(microserviceName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/config/config.helper.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                microserviceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { host: any; port: any; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getModulePort\n                        \n                    \n                \n            \n            \n                \ngetModulePort(moduleName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/config/config.helper.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                moduleName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        redisConfig\n                    \n                \n\n                \n                    \n                        getredisConfig()\n                    \n                \n                            \n                                \n                                    Defined in libs/common/src/config/config.helper.ts:31\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        databaseConfig\n                    \n                \n\n                \n                    \n                        getdatabaseConfig()\n                    \n                \n                            \n                                \n                                    Defined in libs/common/src/config/config.helper.ts:37\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ConfigService } from '@nestjs/config';\nimport { AppConfigService } from './config.service';\nimport { NestFactory } from '@nestjs/core';\nimport { ConfigModule } from '@nestjs/config';\nimport { EnvironmentConstant } from '@qushah/common';\n\nexport class ConfigHelper {\n  private static instance: ConfigHelper;\n  private appConfigService: AppConfigService;\n\n  private constructor() {}\n\n  static async getInstance(): Promise {\n    if (!ConfigHelper.instance) {\n      const appContext = await NestFactory.createApplicationContext(\n        ConfigModule.forRoot({\n          isGlobal: true,\n        }),\n      );\n\n      const configService = appContext.get(ConfigService);\n      const appConfigService = new AppConfigService(configService);\n\n      ConfigHelper.instance = new ConfigHelper();\n      ConfigHelper.instance.appConfigService = appConfigService;\n    }\n\n    return ConfigHelper.instance;\n  }\n\n  get redisConfig() {\n    const host = this.getConfig(EnvironmentConstant.REDIS_HOST);\n    const port = this.getConfig(EnvironmentConstant.REDIS_PORT);\n    return { host, port };\n  }\n\n  get databaseConfig() {\n    const type = this.getConfig(EnvironmentConstant.DATABASE_TYPE);\n    const host = this.getConfig(EnvironmentConstant.DATABASE_HOST);\n    const port = this.getConfig(EnvironmentConstant.DATABASE_PORT);\n    const username = this.getConfig(\n      EnvironmentConstant.DATABASE_USERNAME,\n    );\n    const password = this.getConfig(\n      EnvironmentConstant.DATABASE_PASSWORD,\n    );\n    const database = this.getConfig(EnvironmentConstant.DATABASE_NAME);\n    return { type, host, port, username, password, database };\n  }\n\n  getModulePort(moduleName: string) {\n    const key = moduleName?.split('Module')?.[0]?.toUpperCase();\n    if (!key) return;\n    return this.getConfig(EnvironmentConstant[`${key}_PORT`]);\n  }\n\n  getMicroServiceHosts(microserviceName: string) {\n    const host = this.getConfig(\n      `${microserviceName}_HOST`.toUpperCase(),\n    );\n    const port = this.getConfig(\n      `${microserviceName}_PORT`.toUpperCase(),\n    );\n    return { host, port };\n  }\n\n  getConfig(key: string) {\n    return this.appConfigService.getConfig(key);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrganization1740356244243.html":{"url":"classes/CreateOrganization1740356244243.html","title":"class - CreateOrganization1740356244243","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrganization1740356244243\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/organization/src/migrations/1740356244243-CreateOrganization.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'CreateOrganization1740356244243'\n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/migrations/1740356244243-CreateOrganization.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/organization/src/migrations/1740356244243-CreateOrganization.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/organization/src/migrations/1740356244243-CreateOrganization.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class CreateOrganization1740356244243 implements MigrationInterface {\n  name = 'CreateOrganization1740356244243';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `CREATE TABLE \"organization\".\"organization\" (\"id\" SERIAL NOT NULL, \"name\" character varying NOT NULL, \"slug\" character varying NOT NULL, \"primary_contact_name\" character varying NOT NULL, \"email\" character varying NOT NULL, \"phone\" character varying NOT NULL, \"created_at\" TIMESTAMP NOT NULL DEFAULT now(), \"updated_at\" TIMESTAMP DEFAULT now(), \"deleted_at\" TIMESTAMP, CONSTRAINT \"UQ_c21e615583a3ebbb0977452afb0\" UNIQUE (\"name\"), CONSTRAINT \"UQ_a08804baa7c5d5427067c49a31f\" UNIQUE (\"slug\"), CONSTRAINT \"PK_472c1f99a32def1b0abb219cd67\" PRIMARY KEY (\"id\"))`,\n    );\n    await queryRunner.query(\n      `CREATE TABLE \"organization\".\"organization_metadata\" (\"id\" SERIAL NOT NULL, \"primary_color\" character varying, \"domain\" character varying, \"logo\" character varying NOT NULL, \"rent_fee_percentage\" numeric(5,2) NOT NULL DEFAULT '5', \"deposit_fee_percentage\" numeric(5,2) NOT NULL DEFAULT '5', \"allow_interest_earning\" boolean NOT NULL DEFAULT false, \"organization_id\" integer, \"created_at\" TIMESTAMP NOT NULL DEFAULT now(), \"updated_at\" TIMESTAMP DEFAULT now(), \"deleted_at\" TIMESTAMP, CONSTRAINT \"REL_efaca847c588a9817470f7c6ca\" UNIQUE (\"organization_id\"), CONSTRAINT \"PK_2fecc2ceb81f30a7f46be802cbd\" PRIMARY KEY (\"id\"))`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"organization\".\"organization_metadata\" ADD CONSTRAINT \"FK_efaca847c588a9817470f7c6ca8\" FOREIGN KEY (\"organization_id\") REFERENCES \"organization\".\"organization\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `ALTER TABLE \"organization\".\"organization_metadata\" DROP CONSTRAINT \"FK_efaca847c588a9817470f7c6ca8\"`,\n    );\n    await queryRunner.query(\n      `DROP TABLE \"organization\".\"organization_metadata\"`,\n    );\n    await queryRunner.query(`DROP TABLE \"organization\".\"organization\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DataSource.html":{"url":"classes/DataSource.html","title":"class - DataSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/utils/data-source.util.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        getInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    getInstance(schema: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/utils/data-source.util.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                schema\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import process from 'node:process';\nimport * as dotenv from 'dotenv';\nimport { DataSource as TypeormDataSource } from 'typeorm';\n\n// Load environment variables from .env file\ndotenv.config();\n\nexport class DataSource {\n  static getInstance(schema: string) {\n    return new TypeormDataSource({\n      migrationsTableName: 'typeorm_migrations',\n      type: (process.env.DATABASE_TYPE as 'postgres') || 'postgres',\n      host: process.env.DATABASE_HOST || 'localhost',\n      port: +process.env.DATABASE_PORT || 5432,\n      username: process.env.DATABASE_USERNAME || 'postgres',\n      password: process.env.DATABASE_PASSWORD || 'postgres',\n      database: process.env.DATABASE_NAME || 'my-db',\n      ssl: { rejectUnauthorized: false },\n      schema,\n      entities: [`apps/${schema}/**/**.entity{.ts,.js}`],\n      migrations: [`apps/${schema}/src/migrations/**/*{.ts,.js}`],\n      subscribers: [`apps/${schema}/src/subscriber/**/*{.ts,.js}`],\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/database/database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(schema: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/database/database.module.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                schema\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, DynamicModule } from '@nestjs/common';\nimport { TypeOrmModule, TypeOrmModuleOptions } from '@nestjs/typeorm';\nimport { ConfigHelper } from '@qushah/common';\n\n@Module({})\nexport class DatabaseModule {\n  static forRoot(schema: string): DynamicModule {\n    return {\n      module: DatabaseModule,\n      imports: [\n        TypeOrmModule.forRootAsync({\n          useFactory: async () => {\n            const configHelper = await ConfigHelper.getInstance();\n            const { type, host, port, username, password, database } =\n              configHelper.databaseConfig;\n            const options: TypeOrmModuleOptions = {\n              type,\n              host,\n              port,\n              username,\n              password,\n              database,\n              schema: schema, // Set schema dynamically\n              autoLoadEntities: true,\n              // synchronize: true, // Enable only for development\n              ssl: { rejectUnauthorized: false },\n            };\n\n            return options;\n          },\n        }),\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DocumentationController.html":{"url":"controllers/DocumentationController.html","title":"controller - DocumentationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DocumentationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/documentation/src/documentation.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in apps/documentation/src/documentation.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { DocumentationService } from './documentation.service';\n\n@Controller()\nexport class DocumentationController {\n  constructor(private readonly documentationService: DocumentationService) {}\n\n  @Get()\n  getHello(): string {\n    return this.documentationService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DocumentationModule.html":{"url":"modules/DocumentationModule.html","title":"module - DocumentationModule","body":"\n                   \n\n\n\n\n    Modules\n    DocumentationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DocumentationModule\n\n\n\ncluster_DocumentationModule_providers\n\n\n\n\nDocumentationService\n\nDocumentationService\n\n\n\nDocumentationModule\n\nDocumentationModule\n\nDocumentationModule -->\n\nDocumentationService->DocumentationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/documentation/src/documentation.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DocumentationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DocumentationController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DocumentationController } from './documentation.controller';\nimport { DocumentationService } from './documentation.service';\n\n@Module({\n  imports: [],\n  controllers: [DocumentationController],\n  providers: [DocumentationService],\n})\nexport class DocumentationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DocumentationService.html":{"url":"injectables/DocumentationService.html","title":"injectable - DocumentationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DocumentationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/documentation/src/documentation.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/documentation/src/documentation.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class DocumentationService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/EscrowController.html":{"url":"controllers/EscrowController.html","title":"controller - EscrowController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  EscrowController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/escrow/src/escrow.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/escrow/src/escrow.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { EscrowService } from './escrow.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { EscrowCommand } from '@qushah/common';\n\n@Controller()\nexport class EscrowController {\n  constructor(private readonly escrowService: EscrowService) {}\n\n  @MessagePattern({ cmd: EscrowCommand.PING_ESCROW })\n  getHello(): string {\n    return this.escrowService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EscrowModule.html":{"url":"modules/EscrowModule.html","title":"module - EscrowModule","body":"\n                   \n\n\n\n\n    Modules\n    EscrowModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EscrowModule\n\n\n\ncluster_EscrowModule_providers\n\n\n\ncluster_EscrowModule_imports\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nEscrowModule\n\nEscrowModule\n\nEscrowModule -->\n\nCommonModule->EscrowModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nEscrowModule -->\n\nGraphQLMicroserviceModule->EscrowModule\n\n\n\n\n\nEscrowService\n\nEscrowService\n\nEscrowModule -->\n\nEscrowService->EscrowModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/escrow/src/escrow.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            EscrowService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            EscrowController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { EscrowController } from './escrow.controller';\nimport { EscrowService } from './escrow.service';\nimport { CommonModule, GraphQLMicroserviceModule } from '@qushah/common';\nimport { EscrowResolver } from './escrow.resolver';\n\n@Module({\n  imports: [CommonModule, GraphQLMicroserviceModule],\n  controllers: [EscrowController],\n  providers: [EscrowService, EscrowResolver],\n})\nexport class EscrowModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EscrowResolver.html":{"url":"classes/EscrowResolver.html","title":"class - EscrowResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EscrowResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/escrow/src/escrow.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingEscrow'})\n                \n            \n\n                    \n                        \n                            Defined in apps/escrow/src/escrow.resolver.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\n\n@Resolver()\nexport class EscrowResolver {\n  @Query(() => String, { name: 'pingEscrow' })\n  ping(): string {\n    return 'pong';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EscrowService.html":{"url":"injectables/EscrowService.html","title":"injectable - EscrowService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EscrowService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/escrow/src/escrow.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/escrow/src/escrow.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class EscrowService {\n  getHello(): string {\n    return 'Hello from Escrow Service!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GatewayModule.html":{"url":"modules/GatewayModule.html","title":"module - GatewayModule","body":"\n                   \n\n\n\n\n    Modules\n    GatewayModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GatewayModule\n\n\n\ncluster_GatewayModule_imports\n\n\n\ncluster_GatewayModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nGatewayModule\n\nGatewayModule\n\nGatewayModule -->\n\nCommonModule->GatewayModule\n\n\n\n\n\nGraphQLGatewayModule\n\nGraphQLGatewayModule\n\nGatewayModule -->\n\nGraphQLGatewayModule->GatewayModule\n\n\n\n\n\nGatewayService\n\nGatewayService\n\nGatewayModule -->\n\nGatewayService->GatewayModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/gateway/src/gateway.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GatewayService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            GraphQLGatewayModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { GatewayService } from './gateway.service';\nimport {\n  CommonModule,\n  EnvironmentConstant,\n  GraphQLGatewayModule,\n} from '@qushah/common';\n\nconst {\n  AUTH_HOST,\n  ESCROW_HOST,\n  MEDIA_HOST,\n  NOTIFICATION_HOST,\n  ORGANIZATION_HOST,\n  PAYMENT_HOST,\n  PROPERTY_HOST,\n  USER_HOST,\n} = EnvironmentConstant;\n\n@Module({\n  imports: [\n    CommonModule,\n    GraphQLGatewayModule.register(\n      AUTH_HOST,\n      ESCROW_HOST,\n      MEDIA_HOST,\n      NOTIFICATION_HOST,\n      ORGANIZATION_HOST,\n      PAYMENT_HOST,\n      PROPERTY_HOST,\n      USER_HOST,\n    ),\n  ],\n  providers: [GatewayService],\n})\nexport class GatewayModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GatewayService.html":{"url":"injectables/GatewayService.html","title":"injectable - GatewayService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GatewayService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gateway/src/gateway.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gateway/src/gateway.service.ts:4\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ping\n                        \n                    \n                \n            \n            \n                \nping()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gateway/src/gateway.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class GatewayService {\n  constructor() {}\n\n  ping(): string {\n    return 'Hello from Gateway Service!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GraphQLGatewayModule.html":{"url":"modules/GraphQLGatewayModule.html","title":"module - GraphQLGatewayModule","body":"\n                   \n\n\n\n\n    Modules\n    GraphQLGatewayModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/graphql/graphql-gateway.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(...subgraphNames: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/graphql/graphql-gateway.module.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                subgraphNames\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, Global, DynamicModule } from '@nestjs/common';\nimport { GraphQLModule } from '@nestjs/graphql';\nimport { ApolloGatewayDriver, ApolloGatewayDriverConfig } from '@nestjs/apollo';\nimport { IntrospectAndCompose } from '@apollo/gateway';\nimport { SubgraphsBuilder } from '@qushah/common';\n\n@Global()\n@Module({})\nexport class GraphQLGatewayModule {\n  static async register(...subgraphNames: string[]): Promise {\n    return {\n      module: GraphQLGatewayModule,\n      imports: [\n        GraphQLModule.forRootAsync({\n          driver: ApolloGatewayDriver,\n          useFactory: async () => {\n            return {\n              gateway: {\n                supergraphSdl: new IntrospectAndCompose({\n                  subgraphs: await SubgraphsBuilder.build(...subgraphNames),\n                }),\n              },\n            };\n          },\n        }),\n      ],\n      exports: [GraphQLModule],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GraphQLMicroserviceModule.html":{"url":"modules/GraphQLMicroserviceModule.html","title":"module - GraphQLMicroserviceModule","body":"\n                   \n\n\n\n\n    Modules\n    GraphQLMicroserviceModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/graphql/graphql-microservice.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { GraphQLModule } from '@nestjs/graphql';\nimport {\n  ApolloFederationDriver,\n  ApolloFederationDriverConfig,\n} from '@nestjs/apollo';\n\n@Module({\n  imports: [\n    GraphQLModule.forRoot({\n      driver: ApolloFederationDriver,\n      autoSchemaFile: {\n        federation: 2,\n      },\n      sortSchema: true,\n    }),\n  ],\n})\nexport class GraphQLMicroserviceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MediaController.html":{"url":"controllers/MediaController.html","title":"controller - MediaController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MediaController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/media/src/media.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/media/src/media.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { MediaService } from './media.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { MediaCommand } from '@qushah/common';\n\n@Controller()\nexport class MediaController {\n  constructor(private readonly mediaService: MediaService) {}\n\n  @MessagePattern({ cmd: MediaCommand.PING_MEDIA })\n  getHello(): string {\n    return this.mediaService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MediaModule.html":{"url":"modules/MediaModule.html","title":"module - MediaModule","body":"\n                   \n\n\n\n\n    Modules\n    MediaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MediaModule\n\n\n\ncluster_MediaModule_imports\n\n\n\ncluster_MediaModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nMediaModule\n\nMediaModule\n\nMediaModule -->\n\nCommonModule->MediaModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nMediaModule -->\n\nGraphQLMicroserviceModule->MediaModule\n\n\n\n\n\nMediaService\n\nMediaService\n\nMediaModule -->\n\nMediaService->MediaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/media/src/media.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MediaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MediaController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MediaController } from './media.controller';\nimport { MediaService } from './media.service';\nimport { CommonModule, GraphQLMicroserviceModule } from '@qushah/common';\nimport { MediaResolver } from './media.resolver';\n\n@Module({\n  imports: [CommonModule, GraphQLMicroserviceModule],\n  controllers: [MediaController],\n  providers: [MediaService, MediaResolver],\n})\nexport class MediaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MediaResolver.html":{"url":"classes/MediaResolver.html","title":"class - MediaResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MediaResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/media/src/media.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingMedia'})\n                \n            \n\n                    \n                        \n                            Defined in apps/media/src/media.resolver.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\n\n@Resolver()\nexport class MediaResolver {\n  @Query(() => String, { name: 'pingMedia' })\n  ping(): string {\n    return 'pong';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MediaService.html":{"url":"injectables/MediaService.html","title":"injectable - MediaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MediaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/media/src/media.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/media/src/media.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class MediaService {\n  getHello(): string {\n    return 'Hello from Media Service!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/NotificationController.html":{"url":"controllers/NotificationController.html","title":"controller - NotificationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  NotificationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/notification/src/notification.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/notification/src/notification.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { NotificationService } from './notification.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { NotificationCommand } from '@qushah/common';\n\n@Controller()\nexport class NotificationController {\n  constructor(private readonly notificationService: NotificationService) {}\n\n  @MessagePattern({ cmd: NotificationCommand.PING_NOTIFICATION })\n  getHello(): string {\n    return this.notificationService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NotificationModule.html":{"url":"modules/NotificationModule.html","title":"module - NotificationModule","body":"\n                   \n\n\n\n\n    Modules\n    NotificationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NotificationModule\n\n\n\ncluster_NotificationModule_imports\n\n\n\ncluster_NotificationModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nNotificationModule\n\nNotificationModule\n\nNotificationModule -->\n\nCommonModule->NotificationModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nNotificationModule -->\n\nGraphQLMicroserviceModule->NotificationModule\n\n\n\n\n\nNotificationService\n\nNotificationService\n\nNotificationModule -->\n\nNotificationService->NotificationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/notification/src/notification.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NotificationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            NotificationController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { NotificationController } from './notification.controller';\nimport { NotificationService } from './notification.service';\nimport { CommonModule, GraphQLMicroserviceModule } from '@qushah/common';\nimport { NotificationResolver } from './notification.resolver';\n\n@Module({\n  imports: [CommonModule, GraphQLMicroserviceModule],\n  controllers: [NotificationController],\n  providers: [NotificationService, NotificationResolver],\n})\nexport class NotificationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotificationResolver.html":{"url":"classes/NotificationResolver.html","title":"class - NotificationResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotificationResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/notification/src/notification.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingNotification'})\n                \n            \n\n                    \n                        \n                            Defined in apps/notification/src/notification.resolver.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\n\n@Resolver()\nexport class NotificationResolver {\n  @Query(() => String, { name: 'pingNotification' })\n  ping(): string {\n    return 'pong';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationService.html":{"url":"injectables/NotificationService.html","title":"injectable - NotificationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NotificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/notification/src/notification.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/notification/src/notification.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class NotificationService {\n  getHello(): string {\n    return 'Hello from Notification Service!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Organization.html":{"url":"entities/Organization.html","title":"entity - Organization","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Organization\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/organization/src/entities/organization.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                meta\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                primaryContactName\n                            \n                            \n                                    \n                                    \n                                slug\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrganizationMetadata\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@OneToOne(undefined, meta => meta.organization)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        primaryContactName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column({name: 'primary_contact_name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization.entity.ts:15\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql';\nimport { Column, Entity, OneToOne } from 'typeorm';\nimport { BaseEntity } from '@qushah/common';\nimport { OrganizationMetadata } from './organization-metadata.entity';\n\n@ObjectType()\n@Entity()\nexport class Organization extends BaseEntity {\n  @Field(() => String)\n  @Column({ unique: true })\n  name: string;\n\n  @Field(() => String)\n  @Column({ unique: true })\n  slug: string;\n\n  @Field(() => String)\n  @Column({ name: 'primary_contact_name' })\n  primaryContactName: string;\n\n  @Field(() => String)\n  @Column()\n  email: string;\n\n  @Field(() => String)\n  @Column()\n  phone: string;\n\n  @Field(() => OrganizationMetadata, { nullable: true })\n  @OneToOne(() => OrganizationMetadata, (meta) => meta.organization)\n  meta?: OrganizationMetadata;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrganizationController.html":{"url":"controllers/OrganizationController.html","title":"controller - OrganizationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrganizationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/organization/src/organization.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/organization/src/organization.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { OrganizationService } from './organization.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { OrganizationCommand } from '@qushah/common/constants/commands/organization.command';\n\n@Controller()\nexport class OrganizationController {\n  constructor(private readonly organizationService: OrganizationService) {}\n\n  @MessagePattern({ cmd: OrganizationCommand.PING_ORGANIZATION })\n  getHello(): string {\n    return this.organizationService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/OrganizationMetadata.html":{"url":"entities/OrganizationMetadata.html","title":"entity - OrganizationMetadata","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  OrganizationMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/organization/src/entities/organization-metadata.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                allowInterestEarning\n                            \n                            \n                                    \n                                    \n                                depositFeePercentage\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                domain\n                            \n                            \n                                    \n                                    \n                                logo\n                            \n                            \n                                    \n                                    \n                                organization\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                primaryColor\n                            \n                            \n                                    \n                                    \n                                rentFeePercentage\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        allowInterestEarning\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column({name: 'allow_interest_earning', type: 'boolean', default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization-metadata.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        depositFeePercentage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column({name: 'deposit_fee_percentage', default: 5, precision: 5, scale: 2, type: 'decimal'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization-metadata.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        domain\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization-metadata.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization-metadata.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        organization\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Organization\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, organization => organization.meta, {cascade: true, onDelete: 'CASCADE', onUpdate: 'CASCADE'})@JoinColumn({name: 'organization_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization-metadata.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        primaryColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Column({name: 'primary_color', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization-metadata.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        rentFeePercentage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column({name: 'rent_fee_percentage', default: 5, precision: 5, scale: 2, type: 'decimal'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization-metadata.entity.ts:38\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, OneToOne } from 'typeorm';\nimport { Field, Float, ObjectType } from '@nestjs/graphql';\nimport { BaseEntity } from '@qushah/common';\nimport { JoinColumn } from 'typeorm';\nimport { Organization } from './organization.entity';\n\n@ObjectType()\n@Entity()\nexport class OrganizationMetadata extends BaseEntity {\n  @OneToOne(() => Organization, (organization) => organization.meta, {\n    cascade: true,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n  })\n  @JoinColumn({ name: 'organization_id' })\n  organization: Organization;\n\n  @Field(() => String, { nullable: true })\n  @Column({ name: 'primary_color', nullable: true })\n  primaryColor?: string;\n\n  @Field(() => String, { nullable: true })\n  @Column({ nullable: true })\n  domain?: string;\n\n  @Field(() => String)\n  @Column()\n  logo: string;\n\n  @Field(() => Float)\n  @Column({\n    name: 'rent_fee_percentage',\n    default: 5.0,\n    precision: 5,\n    scale: 2,\n    type: 'decimal',\n  })\n  rentFeePercentage: number;\n\n  @Field(() => Float)\n  @Column({\n    name: 'deposit_fee_percentage',\n    default: 5.0,\n    precision: 5,\n    scale: 2,\n    type: 'decimal',\n  })\n  depositFeePercentage: number;\n\n  @Field(() => Boolean)\n  @Column({ name: 'allow_interest_earning', type: 'boolean', default: false })\n  allowInterestEarning: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrganizationModule.html":{"url":"modules/OrganizationModule.html","title":"module - OrganizationModule","body":"\n                   \n\n\n\n\n    Modules\n    OrganizationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OrganizationModule\n\n\n\ncluster_OrganizationModule_providers\n\n\n\ncluster_OrganizationModule_imports\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nOrganizationModule\n\nOrganizationModule\n\nOrganizationModule -->\n\nCommonModule->OrganizationModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nOrganizationModule -->\n\nDatabaseModule->OrganizationModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nOrganizationModule -->\n\nGraphQLMicroserviceModule->OrganizationModule\n\n\n\n\n\nOrganizationService\n\nOrganizationService\n\nOrganizationModule -->\n\nOrganizationService->OrganizationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/organization/src/organization.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrganizationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrganizationController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { OrganizationController } from './organization.controller';\nimport { OrganizationService } from './organization.service';\nimport {\n  CommonModule,\n  DatabaseModule,\n  GraphQLMicroserviceModule,\n} from '@qushah/common';\nimport { OrganizationResolver } from './organization.resolver';\nimport { Organization } from './entities/organization.entity';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { OrganizationMetadata } from './entities/organization-metadata.entity';\n\n@Module({\n  imports: [\n    DatabaseModule.forRoot('organization'),\n    TypeOrmModule.forFeature([Organization, OrganizationMetadata]),\n    CommonModule,\n    GraphQLMicroserviceModule,\n  ],\n  controllers: [OrganizationController],\n  providers: [OrganizationService, OrganizationResolver],\n})\nexport class OrganizationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrganizationResolver.html":{"url":"classes/OrganizationResolver.html","title":"class - OrganizationResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrganizationResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/organization/src/organization.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                organizations\n                            \n                            \n                                    \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(organizationService: OrganizationService)\n                    \n                \n                        \n                            \n                                Defined in apps/organization/src/organization.resolver.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationService\n                                                  \n                                                        \n                                                                        OrganizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        organizations\n                        \n                    \n                \n            \n            \n                \n                        \n                    organizations()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: true})\n                \n            \n\n                    \n                        \n                            Defined in apps/organization/src/organization.resolver.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingOrganization'})\n                \n            \n\n                    \n                        \n                            Defined in apps/organization/src/organization.resolver.ts:10\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\nimport { Organization } from './entities/organization.entity';\nimport { OrganizationService } from './organization.service';\n\n@Resolver()\nexport class OrganizationResolver {\n  constructor(private readonly organizationService: OrganizationService) {}\n\n  @Query(() => String, { name: 'pingOrganization' })\n  ping(): string {\n    return 'pong';\n  }\n\n  @Query(() => [Organization], { nullable: true })\n  organizations(): Promise {\n    return this.organizationService.findAll();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrganizationService.html":{"url":"injectables/OrganizationService.html","title":"injectable - OrganizationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrganizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/organization/src/organization.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: Repository)\n                    \n                \n                        \n                            \n                                Defined in apps/organization/src/organization.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/organization/src/organization.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/organization/src/organization.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { Organization } from './entities/organization.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\n\n@Injectable()\nexport class OrganizationService {\n  constructor(\n    @InjectRepository(Organization)\n    private readonly repository: Repository,\n  ) {}\n\n  getHello(): string {\n    return 'Hello from Organization Service!';\n  }\n\n  findAll(): Promise {\n    return this.repository.find({\n      relations: ['meta'],\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PaymentController.html":{"url":"controllers/PaymentController.html","title":"controller - PaymentController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PaymentController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/payment/src/payment.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/payment/src/payment.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { PaymentService } from './payment.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { PaymentCommand } from '@qushah/common';\n\n@Controller()\nexport class PaymentController {\n  constructor(private readonly paymentService: PaymentService) {}\n\n  @MessagePattern({ cmd: PaymentCommand.PING_PAYMENT })\n  getHello(): string {\n    return this.paymentService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PaymentModule.html":{"url":"modules/PaymentModule.html","title":"module - PaymentModule","body":"\n                   \n\n\n\n\n    Modules\n    PaymentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PaymentModule\n\n\n\ncluster_PaymentModule_imports\n\n\n\ncluster_PaymentModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nPaymentModule\n\nPaymentModule\n\nPaymentModule -->\n\nCommonModule->PaymentModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nPaymentModule -->\n\nGraphQLMicroserviceModule->PaymentModule\n\n\n\n\n\nPaymentService\n\nPaymentService\n\nPaymentModule -->\n\nPaymentService->PaymentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/payment/src/payment.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PaymentService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PaymentController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PaymentController } from './payment.controller';\nimport { PaymentService } from './payment.service';\nimport { CommonModule, GraphQLMicroserviceModule } from '@qushah/common';\nimport { PaymentResolver } from './payment.resolver';\n\n@Module({\n  imports: [CommonModule, GraphQLMicroserviceModule],\n  controllers: [PaymentController],\n  providers: [PaymentService, PaymentResolver],\n})\nexport class PaymentModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaymentResolver.html":{"url":"classes/PaymentResolver.html","title":"class - PaymentResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaymentResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/payment/src/payment.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingPayment'})\n                \n            \n\n                    \n                        \n                            Defined in apps/payment/src/payment.resolver.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\n\n@Resolver()\nexport class PaymentResolver {\n  @Query(() => String, { name: 'pingPayment' })\n  ping(): string {\n    return 'pong';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PaymentService.html":{"url":"injectables/PaymentService.html","title":"injectable - PaymentService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PaymentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/payment/src/payment.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/payment/src/payment.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class PaymentService {\n  getHello(): string {\n    return 'Hello from Payment Service!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PropertyController.html":{"url":"controllers/PropertyController.html","title":"controller - PropertyController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PropertyController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/property/src/property.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/property/src/property.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { PropertyService } from './property.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { PropertyCommand } from '@qushah/common';\n\n@Controller()\nexport class PropertyController {\n  constructor(private readonly propertyService: PropertyService) {}\n\n  @MessagePattern({ cmd: PropertyCommand.PING_PROPERTY })\n  getHello(): string {\n    return this.propertyService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PropertyModule.html":{"url":"modules/PropertyModule.html","title":"module - PropertyModule","body":"\n                   \n\n\n\n\n    Modules\n    PropertyModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PropertyModule\n\n\n\ncluster_PropertyModule_providers\n\n\n\ncluster_PropertyModule_imports\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nPropertyModule\n\nPropertyModule\n\nPropertyModule -->\n\nCommonModule->PropertyModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nPropertyModule -->\n\nGraphQLMicroserviceModule->PropertyModule\n\n\n\n\n\nPropertyService\n\nPropertyService\n\nPropertyModule -->\n\nPropertyService->PropertyModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/property/src/property.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PropertyService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PropertyController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PropertyController } from './property.controller';\nimport { PropertyService } from './property.service';\nimport { CommonModule, GraphQLMicroserviceModule } from '@qushah/common';\nimport { PropertyResolver } from './property.resolver';\n\n@Module({\n  imports: [CommonModule, GraphQLMicroserviceModule],\n  controllers: [PropertyController],\n  providers: [PropertyService, PropertyResolver],\n})\nexport class PropertyModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PropertyResolver.html":{"url":"classes/PropertyResolver.html","title":"class - PropertyResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PropertyResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/property/src/property.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingProperty'})\n                \n            \n\n                    \n                        \n                            Defined in apps/property/src/property.resolver.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\n\n@Resolver()\nexport class PropertyResolver {\n  @Query(() => String, { name: 'pingProperty' })\n  ping(): string {\n    return 'pong';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PropertyService.html":{"url":"injectables/PropertyService.html","title":"injectable - PropertyService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PropertyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/property/src/property.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/property/src/property.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class PropertyService {\n  getHello(): string {\n    return 'Hello from Property Service!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SubgraphsBuilder.html":{"url":"classes/SubgraphsBuilder.html","title":"class - SubgraphsBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SubgraphsBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/utils/subgraphs-builder.util.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Async\n                                build\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        build\n                        \n                    \n                \n            \n            \n                \n                        \n                    build(...graphNames: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/utils/subgraphs-builder.util.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                graphNames\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ServiceEndpointDefinition } from '@apollo/gateway/src/config';\nimport { ConfigHelper } from '@qushah/common';\n\nexport class SubgraphsBuilder {\n  static async build(\n    ...graphNames: string[]\n  ): Promise {\n    const configHelper = await ConfigHelper.getInstance();\n\n    return graphNames.map((graphName) => {\n      const keyPart = graphName?.split('_HOST')?.[0];\n      const key = keyPart || graphName;\n      const { host, port } = configHelper.getMicroServiceHosts(key);\n      return {\n        name: graphName,\n        url: `${host}:${port}/graphql`,\n      };\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user/src/user.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/user/src/user.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { UserCommand } from '@qushah/common';\n\n@Controller()\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @MessagePattern({ cmd: UserCommand.PING_USER })\n  getHello(): string {\n    return this.userService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nCommonModule->UserModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nUserModule -->\n\nGraphQLMicroserviceModule->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/user/src/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserController } from './user.controller';\nimport { UserService } from './user.service';\nimport { CommonModule, GraphQLMicroserviceModule } from '@qushah/common';\nimport { UserResolver } from './user.resolver';\n\n@Module({\n  imports: [CommonModule, GraphQLMicroserviceModule],\n  controllers: [UserController],\n  providers: [UserService, UserResolver],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserResolver.html":{"url":"classes/UserResolver.html","title":"class - UserResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user/src/user.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingUser'})\n                \n            \n\n                    \n                        \n                            Defined in apps/user/src/user.resolver.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\n\n@Resolver()\nexport class UserResolver {\n  @Query(() => String, { name: 'pingUser' })\n  ping(): string {\n    return 'pong';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user/src/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/user/src/user.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class UserService {\n  getHello(): string {\n    return 'Hello from User Service!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/auth/src/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/auth/src/auth.resolver.ts\n            \n            class\n            AuthResolver\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/auth/src/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/auth/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/documentation/src/documentation.controller.ts\n            \n            controller\n            DocumentationController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/documentation/src/documentation.service.ts\n            \n            injectable\n            DocumentationService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/documentation/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/escrow/src/escrow.controller.ts\n            \n            controller\n            EscrowController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/escrow/src/escrow.resolver.ts\n            \n            class\n            EscrowResolver\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/escrow/src/escrow.service.ts\n            \n            injectable\n            EscrowService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/escrow/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/escrow/src/typeorm.data-source.ts\n            \n            variable\n            TypeormDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/gateway/src/gateway.module.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/gateway/src/gateway.service.ts\n            \n            injectable\n            GatewayService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        apps/gateway/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/media/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/media/src/media.controller.ts\n            \n            controller\n            MediaController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/media/src/media.resolver.ts\n            \n            class\n            MediaResolver\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/media/src/media.service.ts\n            \n            injectable\n            MediaService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/media/src/typeorm.data-source.ts\n            \n            variable\n            TypeormDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/notification/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/notification/src/notification.controller.ts\n            \n            controller\n            NotificationController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/notification/src/notification.resolver.ts\n            \n            class\n            NotificationResolver\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/notification/src/notification.service.ts\n            \n            injectable\n            NotificationService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/notification/src/typeorm.data-source.ts\n            \n            variable\n            TypeormDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/organization/src/entities/organization-metadata.entity.ts\n            \n            entity\n            OrganizationMetadata\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/organization/src/entities/organization-metadata.entity.ts\n            \n            class\n            OrganizationMetadata\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/organization/src/entities/organization.entity.ts\n            \n            entity\n            Organization\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/organization/src/entities/organization.entity.ts\n            \n            class\n            Organization\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        apps/organization/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/organization/src/migrations/1740356244243-CreateOrganization.ts\n            \n            class\n            CreateOrganization1740356244243\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/organization/src/organization.controller.ts\n            \n            controller\n            OrganizationController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/organization/src/organization.resolver.ts\n            \n            class\n            OrganizationResolver\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/organization/src/organization.service.ts\n            \n            injectable\n            OrganizationService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        apps/organization/src/typeorm.data-source.ts\n            \n            variable\n            TypeormDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/payment/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/payment/src/payment.controller.ts\n            \n            controller\n            PaymentController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/payment/src/payment.resolver.ts\n            \n            class\n            PaymentResolver\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/payment/src/payment.service.ts\n            \n            injectable\n            PaymentService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/payment/src/typeorm.data-source.ts\n            \n            variable\n            TypeormDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/property/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/property/src/property.controller.ts\n            \n            controller\n            PropertyController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/property/src/property.resolver.ts\n            \n            class\n            PropertyResolver\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/property/src/property.service.ts\n            \n            injectable\n            PropertyService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/property/src/typeorm.data-source.ts\n            \n            variable\n            TypeormDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/user/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/user/src/typeorm.data-source.ts\n            \n            variable\n            TypeormDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/user/src/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/user/src/user.resolver.ts\n            \n            class\n            UserResolver\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/user/src/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/common/src/common.service.ts\n            \n            injectable\n            CommonService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/config/config.helper.ts\n            \n            class\n            ConfigHelper\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                libs/common/src/config/config.service.ts\n            \n            injectable\n            AppConfigService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/auth.command.ts\n            \n            variable\n            AuthCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/escrow.command.ts\n            \n            variable\n            EscrowCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/media.command.ts\n            \n            variable\n            MediaCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/notification.command.ts\n            \n            variable\n            NotificationCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/organization.command.ts\n            \n            variable\n            OrganizationCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/payment.command.ts\n            \n            variable\n            PaymentCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/property.command.ts\n            \n            variable\n            PropertyCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/user.command.ts\n            \n            variable\n            UserCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/environment.constant.ts\n            \n            variable\n            EnvironmentConstant\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/database/entities/base.entity.ts\n            \n            entity\n            BaseEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/database/entities/base.entity.ts\n            \n            class\n            BaseEntity\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        libs/common/src/decorators/column-order.decorator.ts\n            \n            function\n            ColumnOrder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/decorators/column-order.decorator.ts\n            \n            function\n            getColumnOrder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/decorators/column-order.decorator.ts\n            \n            variable\n            ORDER_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/utils/bootstrapper.util.ts\n            \n            class\n            Bootstrapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/common/src/utils/data-source.util.ts\n            \n            class\n            DataSource\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/common/src/utils/subgraphs-builder.util.ts\n            \n            class\n            SubgraphsBuilder\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        typeorm-cli.ts\n            \n            variable\n            argv\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        typeorm-cli.ts\n            \n            variable\n            dataSourcePath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        typeorm-cli.ts\n            \n            variable\n            typeormCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        typeorm-cli.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @apollo/gateway : ^2.9.3\n        \n            @apollo/server : ^4.11.3\n        \n            @apollo/subgraph : ^2.9.3\n        \n            @nestjs/apollo : ^12.2.2\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.3.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/graphql : ^12.2.2\n        \n            @nestjs/microservices : ^10.4.15\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/typeorm : ^11.0.0\n        \n            @types/yargs : ^17.0.33\n        \n            dotenv : ^16.4.7\n        \n            graphql : ^16.10.0\n        \n            ioredis : ^5.4.2\n        \n            joi : ^17.13.3\n        \n            pg : ^8.13.1\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.20\n        \n            yargs : ^17.7.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            MicroServiceClient   (libs/.../micro-service-client.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/common/src/enums/micro-service-client.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        MicroServiceClient\n                    \n                \n                        \n                            \n                                 AUTH_CLIENT\n                            \n                        \n                        \n                            \n                                Value : AUTH_CLIENT\n                            \n                        \n                        \n                            \n                                 ESCROW_CLIENT\n                            \n                        \n                        \n                            \n                                Value : ESCROW_CLIENT\n                            \n                        \n                        \n                            \n                                 MEDIA_CLIENT\n                            \n                        \n                        \n                            \n                                Value : MEDIA_CLIENT\n                            \n                        \n                        \n                            \n                                 NOTIFICATION_CLIENT\n                            \n                        \n                        \n                            \n                                Value : NOTIFICATION_CLIENT\n                            \n                        \n                        \n                            \n                                 PAYMENT_CLIENT\n                            \n                        \n                        \n                            \n                                Value : PAYMENT_CLIENT\n                            \n                        \n                        \n                            \n                                 PROPERTY_CLIENT\n                            \n                        \n                        \n                            \n                                Value : PROPERTY_CLIENT\n                            \n                        \n                        \n                            \n                                 USER_CLIENT\n                            \n                        \n                        \n                            \n                                Value : USER_CLIENT\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            ColumnOrder   (libs/.../column-order.decorator.ts)\n                        \n                        \n                            getColumnOrder   (libs/.../column-order.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/auth/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/documentation/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/escrow/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/gateway/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/media/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/notification/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/organization/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/payment/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/property/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/user/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    libs/common/src/decorators/column-order.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ColumnOrder\n                        \n                    \n                \n            \n            \n                \nColumnOrder(value: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     PropertyDecorator\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getColumnOrder\n                        \n                    \n                \n            \n            \n                \ngetColumnOrder(target, propertyKey, defaultVal: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                propertyKey\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                defaultVal\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nQushah Backend\nDescription\nQushah Escrow System backend containing microservices, gateway, libs, etc.\nPrerequisites\nTo be able to run this project on machine, the following must be installed:\n\nNodeJS 22 LTS\npnpm\nRedis\n\nProject setup\nMake sure pnpm is installed\nExample :$ npm install --global pnpmInstall dependencies\nExample :$ pnpm installInstall Redis\nFollow the official docs to install Redis on your machine.\nCompile and run the project\nExample :# development\n$ pnpm run start\n\n# watch mode\n$ pnpm run start:dev\n\n# production mode\n$ pnpm run start:prodRun tests\nExample :# unit tests\n$ pnpm run test\n\n# e2e tests\n$ pnpm run test:e2e\n\n# test coverage\n$ pnpm run test:covTypeorm CLI Helper Tool\nThe Typeorm CLI Helper tool lets you run typeorm CLI commands without worrying\nabout DataSources and path resolutions.\nLearn how to use the tool here.\nStructure\nExample :qushah-backend/\n│\n├── apps/\n│   ├── qushah-auth/        # Authentication Service\n│   ├── qushah-user/       # User Management Service\n│   ├── qushah-escrow/      # Escrow and Deposits Service\n│   ├── qushah-payment/    # Payments and Transactions Service\n│   ├── qushah-property/  # Property Listings Service\n│   ├── qushah-notification/      # Notifications Service\n│   └── qushah-gateway/     # API Gateway (separate app within the repo)\n│\n└── libs/                   # Shared Libraries (for DTOs, Interfaces, etc.)\n    ├── common/             # Common utilities, interceptors, and guards\n    ├── graphql/            # Shared GraphQL schemas and resolvers\n    └── db/                 # Database connection and models\nArchitecture\nExample :            [Frontend (Angular)]\n                     │\n              [GraphQL Gateway]\n                     │\n     ┌──────────┬────────────┬──────────────┬───────────┐\n     │          │            │              │           │\n [Auth]     [User]     [Property]     [Escrow]    [Payment]\n     │                                      │\n [Notification]                                [Disputes]\nConcerns\nHere are the key concerns for each microservice in this architecture:\n1. qushah-auth (Authentication and Authorization)\n\nSecurity: Ensuring the system is secure from unauthorized access. This includes strong password policies, token-based authentication (e.g., JWT), and OAuth if required.\nToken Expiry and Refresh: Managing token expiration and refresh mechanisms. Implement token blacklisting for security.\nRate Limiting: Protecting against brute-force attacks by implementing rate limiting or CAPTCHA.\nSecure API Communication: Ensuring all communication (especially authentication data) is encrypted with HTTPS.\nUser Roles and Permissions: Managing user roles and ensuring each user (tenant, landlord, admin) has the correct permissions for their actions.\n\n2. qushah-user (User Management)\n\nUser Data Management: Ensuring that personal data is secure, especially sensitive information like emails, addresses, and phone numbers.\nData Privacy: Complying with regulations like GDPR or CCPA, especially regarding the collection and storage of user data.\nUser Profile Updates: Allowing users to update their profiles (e.g., changing names, contact details) while maintaining data integrity.\nError Handling: Handling errors effectively, such as invalid user data, and providing clear feedback to users.\nScalability: Ensuring the system can handle large numbers of users (tenants, landlords).\n\n3. qushah-property (Property Management)\n\nProperty Data Validation: Ensuring that property details are accurate, complete, and properly validated before being listed.\nSearch Functionality: Providing a fast and efficient way for tenants to search for properties (by location, price, features, etc.).\nProperty Availability: Managing the availability of properties and preventing double-booking or issues with properties already rented.\nImage and Media Handling: Handling and storing images, videos, and 3D scans securely and efficiently. Integrating with media service when required.\nData Consistency: Ensuring that any updates to the property data (e.g., status changes, price updates) are consistent and reflected across all services.\n\n4. qushah-escrow (Escrow Service)\n\nDeposit Security: Ensuring that the deposit is secure, especially when handling large amounts of money.\nTransaction Auditing: Providing an auditable trail of deposit and release actions for transparency and security.\nEscrow Release Conditions: Implementing clear rules on when the deposit should be released to either the tenant or landlord.\nDispute Management: Handling any disputes regarding the deposit, such as property damage or failure to pay rent.\nCompliance: Ensuring that escrow services comply with local financial and regulatory standards (especially for handling money).\nEvent-Driven Updates: Integrating with other services (e.g., notifying users about escrow releases or disputes) using event-driven architecture.\n\n5. qushah-payment (Payment Service)\n\nPayment Gateway Integration: Integrating with external payment providers (e.g., UPI, Paytm, Razorpay) for processing payments.\nTransaction Security: Ensuring secure handling of payments and sensitive financial data. Use of encryption and secure protocols.\nTransaction Failures: Handling payment failures and retries in case of network or gateway issues.\nPayment Confirmation: Sending clear confirmation of successful payments and generating receipts.\nRecurring Payments: Supporting recurring rent payments (e.g., monthly payments) and ensuring they are processed on time.\nMulti-currency Support: Initially handling INR and later possibly adding other currencies, without complicating the architecture.\nScalability: Ensuring the service can handle large volumes of transactions, especially for a growing user base.\n\n6. qushah-notification (Notification Service)\n\nNotification Delivery: Ensuring timely delivery of notifications (SMS, email, push notifications) to users.\nMessage Templates: Using dynamic templates for notifications (e.g., rent payment reminders, property status updates).\nMulti-channel Support: Ensuring support for multiple communication channels (SMS, email, mobile push notifications, etc.).\nHandling Failures: Managing failed notification deliveries and retries, e.g., if an email service is down.\nPersonalization: Allowing notifications to be personalized based on user preferences (e.g., notification frequency, type of notifications).\nOpt-in/Opt-out Preferences: Allowing users to manage their notification preferences (e.g., unsubscribing from specific types of notifications).\n\n7. qushah-media (Media Handling)\n\nStorage: Securely storing large media files (images, videos, 3D scans) and ensuring they are easily accessible.\nPerformance: Ensuring that media uploads and downloads are fast and efficient, especially for large files.\nScalability: Managing storage at scale as media files (especially 3D scans) can consume significant space.\nCompression and Optimization: Automatically compressing and optimizing media files for faster loading times and reduced storage usage.\nSecurity: Protecting media files from unauthorized access and ensuring that the uploaded files are virus-free.\nIntegration: Providing an easy API for other microservices to use (e.g., for uploading profile pictures, property images, etc.).\n\n8. qushah-gateway (API Gateway)\n\nRequest Routing: Efficiently routing requests to the appropriate microservice based on the endpoint and service.\nSecurity: Ensuring that requests passing through the gateway are authenticated and authorized.\nLoad Balancing: Ensuring requests are distributed evenly across multiple instances of each microservice for scalability.\nRate Limiting: Preventing abuse of the system by applying rate limits on specific endpoints.\nAPI Documentation: Providing clear API documentation (e.g., using Swagger or GraphQL introspection) for the frontend and third-party developers.\nCaching: Implementing caching for high-traffic endpoints to improve performance.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppConfigModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ClientsModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CommonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DocumentationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EscrowModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GatewayModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GraphQLGatewayModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GraphQLMicroserviceModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MediaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NotificationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrganizationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PaymentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PropertyModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_imports\n\n\n\ncluster_CommonModule_exports\n\n\n\ncluster_CommonModule_providers\n\n\n\ncluster_DocumentationModule\n\n\n\ncluster_DocumentationModule_providers\n\n\n\ncluster_EscrowModule\n\n\n\ncluster_EscrowModule_providers\n\n\n\ncluster_GatewayModule\n\n\n\ncluster_GatewayModule_imports\n\n\n\ncluster_GatewayModule_providers\n\n\n\ncluster_MediaModule\n\n\n\ncluster_MediaModule_providers\n\n\n\ncluster_NotificationModule\n\n\n\ncluster_NotificationModule_providers\n\n\n\ncluster_OrganizationModule\n\n\n\ncluster_OrganizationModule_imports\n\n\n\ncluster_OrganizationModule_providers\n\n\n\ncluster_PaymentModule\n\n\n\ncluster_PaymentModule_providers\n\n\n\ncluster_PropertyModule\n\n\n\ncluster_PropertyModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nCommonModule->AuthModule\n\n\n\n\n\nCommonService \n\nCommonService \n\nCommonService  -->\n\nCommonModule->CommonService \n\n\n\n\n\nEscrowModule\n\nEscrowModule\n\nEscrowModule -->\n\nCommonModule->EscrowModule\n\n\n\n\n\nGatewayModule\n\nGatewayModule\n\nGatewayModule -->\n\nCommonModule->GatewayModule\n\n\n\n\n\nMediaModule\n\nMediaModule\n\nMediaModule -->\n\nCommonModule->MediaModule\n\n\n\n\n\nNotificationModule\n\nNotificationModule\n\nNotificationModule -->\n\nCommonModule->NotificationModule\n\n\n\n\n\nOrganizationModule\n\nOrganizationModule\n\nOrganizationModule -->\n\nCommonModule->OrganizationModule\n\n\n\n\n\nPaymentModule\n\nPaymentModule\n\nPaymentModule -->\n\nCommonModule->PaymentModule\n\n\n\n\n\nPropertyModule\n\nPropertyModule\n\nPropertyModule -->\n\nCommonModule->PropertyModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nCommonModule->UserModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nAuthModule -->\n\nGraphQLMicroserviceModule->AuthModule\n\n\n\nEscrowModule -->\n\nGraphQLMicroserviceModule->EscrowModule\n\n\n\nMediaModule -->\n\nGraphQLMicroserviceModule->MediaModule\n\n\n\nNotificationModule -->\n\nGraphQLMicroserviceModule->NotificationModule\n\n\n\nOrganizationModule -->\n\nGraphQLMicroserviceModule->OrganizationModule\n\n\n\nPaymentModule -->\n\nGraphQLMicroserviceModule->PaymentModule\n\n\n\nPropertyModule -->\n\nGraphQLMicroserviceModule->PropertyModule\n\n\n\nUserModule -->\n\nGraphQLMicroserviceModule->UserModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nAppConfigModule\n\nAppConfigModule\n\nCommonModule -->\n\nAppConfigModule->CommonModule\n\n\n\n\n\nCommonService\n\nCommonService\n\nCommonModule -->\n\nCommonService->CommonModule\n\n\n\n\n\nDocumentationService\n\nDocumentationService\n\n\n\nDocumentationModule\n\nDocumentationModule\n\nDocumentationModule -->\n\nDocumentationService->DocumentationModule\n\n\n\n\n\nEscrowService\n\nEscrowService\n\nEscrowModule -->\n\nEscrowService->EscrowModule\n\n\n\n\n\nGraphQLGatewayModule\n\nGraphQLGatewayModule\n\nGatewayModule -->\n\nGraphQLGatewayModule->GatewayModule\n\n\n\n\n\nGatewayService\n\nGatewayService\n\nGatewayModule -->\n\nGatewayService->GatewayModule\n\n\n\n\n\nMediaService\n\nMediaService\n\nMediaModule -->\n\nMediaService->MediaModule\n\n\n\n\n\nNotificationService\n\nNotificationService\n\nNotificationModule -->\n\nNotificationService->NotificationModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nOrganizationModule -->\n\nDatabaseModule->OrganizationModule\n\n\n\n\n\nOrganizationService\n\nOrganizationService\n\nOrganizationModule -->\n\nOrganizationService->OrganizationModule\n\n\n\n\n\nPaymentService\n\nPaymentService\n\nPaymentModule -->\n\nPaymentService->PaymentModule\n\n\n\n\n\nPropertyService\n\nPropertyService\n\nPropertyModule -->\n\nPropertyService->PropertyModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        16 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    12 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    16 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            argv   (typeorm-cli.ts)\n                        \n                        \n                            AuthCommand   (libs/.../auth.command.ts)\n                        \n                        \n                            dataSourcePath   (typeorm-cli.ts)\n                        \n                        \n                            EnvironmentConstant   (libs/.../environment.constant.ts)\n                        \n                        \n                            EscrowCommand   (libs/.../escrow.command.ts)\n                        \n                        \n                            MediaCommand   (libs/.../media.command.ts)\n                        \n                        \n                            NotificationCommand   (libs/.../notification.command.ts)\n                        \n                        \n                            ORDER_KEY   (libs/.../column-order.decorator.ts)\n                        \n                        \n                            OrganizationCommand   (libs/.../organization.command.ts)\n                        \n                        \n                            PaymentCommand   (libs/.../payment.command.ts)\n                        \n                        \n                            PropertyCommand   (libs/.../property.command.ts)\n                        \n                        \n                            typeormCommand   (typeorm-cli.ts)\n                        \n                        \n                            TypeormDataSource   (apps/.../typeorm.data-source.ts)\n                        \n                        \n                            TypeormDataSource   (apps/.../typeorm.data-source.ts)\n                        \n                        \n                            TypeormDataSource   (apps/.../typeorm.data-source.ts)\n                        \n                        \n                            TypeormDataSource   (apps/.../typeorm.data-source.ts)\n                        \n                        \n                            TypeormDataSource   (apps/.../typeorm.data-source.ts)\n                        \n                        \n                            TypeormDataSource   (apps/.../typeorm.data-source.ts)\n                        \n                        \n                            TypeormDataSource   (apps/.../typeorm.data-source.ts)\n                        \n                        \n                               (typeorm-cli.ts)\n                        \n                        \n                               (apps/.../gateway.module.ts)\n                        \n                        \n                            UserCommand   (libs/.../user.command.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    typeorm-cli.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        argv\n                        \n                    \n                \n            \n                \n                    \n                        Default value : yargs(process.argv.slice(2))\n  .option('microservice', {\n    alias: 'm',\n    type: 'string',\n    describe: 'The name of the microservice',\n    demandOption: true,\n  })\n  .option('command', {\n    alias: 'c',\n    type: 'string',\n    describe: 'TypeORM CLI command (e.g., generate, run, revert)',\n    demandOption: true,\n  })\n  .option('args', {\n    alias: 'a',\n    type: 'string',\n    describe: 'Additional arguments for the TypeORM CLI command (optional)',\n    default: '',\n  })\n  .option('title', {\n    alias: 't',\n    type: 'string',\n    describe:\n      'Title for migration file. Needed while running generate (optional)',\n    default: '',\n  })\n  .help().argv\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSourcePath\n                        \n                    \n                \n            \n                \n                    \n                        Default value : path.join(\n  __dirname,\n  `./apps/${microservice}/src/typeorm.data-source.ts`,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        typeormCommand\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli.js migration:${command} ${title ? './apps/' + microservice + '/src/migrations/' + title : ''} -d ${dataSourcePath} ${args || ''}`\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : argv as {\n  microservice: string;\n  command: string;\n  args?: string;\n  title?: string;\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/auth.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AuthCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_AUTH: 'PING_AUTH',\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/environment.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EnvironmentConstant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  REDIS_HOST: 'REDIS_HOST',\n  REDIS_PORT: 'REDIS_PORT',\n  AUTH_PORT: 'AUTH_PORT',\n  ESCROW_PORT: 'ESCROW_PORT',\n  GATEWAY_PORT: 'GATEWAY_PORT',\n  MEDIA_PORT: 'MEDIA_PORT',\n  NOTIFICATION_PORT: 'NOTIFICATION_PORT',\n  ORGANIZATION_PORT: 'ORGANIZATION_PORT',\n  PAYMENT_PORT: 'PAYMENT_PORT',\n  PROPERTY_PORT: 'PROPERTY_PORT',\n  USER_PORT: 'USER_PORT',\n  AUTH_HOST: 'AUTH_HOST',\n  ESCROW_HOST: 'ESCROW_HOST',\n  GATEWAY_HOST: 'GATEWAY_HOST',\n  MEDIA_HOST: 'MEDIA_HOST',\n  NOTIFICATION_HOST: 'NOTIFICATION_HOST',\n  ORGANIZATION_HOST: 'ORGANIZATION_HOST',\n  PAYMENT_HOST: 'PAYMENT_HOST',\n  PROPERTY_HOST: 'PROPERTY_HOST',\n  USER_HOST: 'USER_HOST',\n  DATABASE_TYPE: 'DATABASE_TYPE',\n  DATABASE_HOST: 'DATABASE_HOST',\n  DATABASE_PORT: 'DATABASE_PORT',\n  DATABASE_USERNAME: 'DATABASE_USERNAME',\n  DATABASE_PASSWORD: 'DATABASE_PASSWORD',\n  DATABASE_NAME: 'DATABASE_NAME',\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/escrow.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EscrowCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_ESCROW: 'PING_ESCROW',\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/media.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MediaCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_MEDIA: 'PING_MEDIA',\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/notification.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NotificationCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_NOTIFICATION: 'PING_NOTIFICATION',\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/decorators/column-order.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ORDER_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol.for('order_key')\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/organization.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        OrganizationCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_ORGANIZATION: 'PING_ORGANIZATION',\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/payment.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PaymentCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_PAYMENT: 'PING_PAYMENT',\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/property.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PropertyCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_PROPERTY: 'PING_PROPERTY',\n}\n                    \n                \n\n\n        \n    \n\n    apps/escrow/src/typeorm.data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TypeormDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DataSource.getInstance('escrow')\n                    \n                \n\n\n        \n    \n\n    apps/media/src/typeorm.data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TypeormDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DataSource.getInstance('media')\n                    \n                \n\n\n        \n    \n\n    apps/notification/src/typeorm.data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TypeormDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DataSource.getInstance('notification')\n                    \n                \n\n\n        \n    \n\n    apps/organization/src/typeorm.data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TypeormDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DataSource.getInstance('organization')\n                    \n                \n\n\n        \n    \n\n    apps/payment/src/typeorm.data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TypeormDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DataSource.getInstance('payment')\n                    \n                \n\n\n        \n    \n\n    apps/property/src/typeorm.data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TypeormDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DataSource.getInstance('property')\n                    \n                \n\n\n        \n    \n\n    apps/user/src/typeorm.data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TypeormDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DataSource.getInstance('user')\n                    \n                \n\n\n        \n    \n\n    apps/gateway/src/gateway.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : EnvironmentConstant\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/user.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_USER: 'PING_USER',\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
