var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppConfigModule.html",[0,0.695,1,2.629]],["body/modules/AppConfigModule.html",[0,1.062,1,4.021,2,1.523,3,0.152,4,0.152,5,0.115,6,4.693,7,0.245,8,0.014,9,4.074,10,3.361,11,0.668,12,5.253,13,1.715,14,4.074,15,4.074,16,2.03,17,4.693,18,4.693,19,4.074,20,7.629,21,4.074,22,4.693,23,4.074,24,4.074,25,4.074,26,4.074,27,4.074,28,4.074,29,4.693,30,4.693,31,4.693,32,4.693,33,4.693,34,4.693,35,0.152,36,0.156,37,0.011,38,0.011]],["title/injectables/AppConfigService.html",[39,0.984,40,2.834]],["body/injectables/AppConfigService.html",[3,0.145,4,0.145,5,0.109,7,0.214,8,0.014,10,3.189,11,0.634,35,0.145,36,0.148,37,0.011,38,0.011,39,1.454,40,4.188,41,1.843,42,3.865,43,0.431,44,0.832,45,5.076,46,2.33,47,4.453,48,6.417,49,0.597,50,4.453,51,2.203,52,1.249,53,1.563,54,1.568,55,5.076,56,0.702,57,4.453,58,5.101,59,2.602,60,0.606,61,1.926,62,1.767,63,0.75,64,4.453]],["title/controllers/AuthController.html",[65,1.335,66,2.834]],["body/controllers/AuthController.html",[3,0.149,4,0.149,5,0.112,7,0.256,8,0.015,11,0.653,35,0.149,36,0.153,37,0.011,38,0.011,43,0.444,44,0.849,49,0.468,56,0.641,60,0.625,61,1.985,62,1.821,63,0.773,65,2.013,66,4.272,67,1.549,68,3.984,69,2.463,70,1.231,71,2.533,72,2.401,73,4.59,74,4.117,75,3.984,76,3.292,77,2.076,78,3.585,79,4.59,80,2.533,81,4.59,82,4.59]],["title/modules/AuthModule.html",[0,0.695,83,2.834]],["body/modules/AuthModule.html",[0,1.104,2,1.342,3,0.134,4,0.134,5,0.101,7,0.257,8,0.014,11,0.589,13,2.034,35,0.134,36,0.138,37,0.01,38,0.01,66,4.508,67,1.878,74,4.497,75,3.589,83,5.515,84,1.64,85,1.788,86,1.788,87,1.64,88,2.721,89,1.64,90,3.589,91,3.589,92,3.589,93,3.13,94,3.274,95,2.407,96,1.788,97,1.788,98,4.135,99,4.135,100,1.028,101,3.987,102,4.135]],["title/classes/AuthResolver.html",[36,0.132,101,2.834]],["body/classes/AuthResolver.html",[3,0.159,4,0.159,5,0.12,7,0.18,8,0.015,35,0.159,36,0.164,37,0.011,38,0.011,43,0.476,44,0.887,49,0.502,52,1.331,56,0.735,60,0.669,63,0.828,70,1.318,101,4.464,103,1.595,104,4.266,105,3.766,106,2.712,107,6.233,108,4.915,109,3.44,110,3.261,111,1.658,112,2.712]],["title/injectables/AuthService.html",[39,0.984,74,2.459]],["body/injectables/AuthService.html",[3,0.168,4,0.168,5,0.127,7,0.189,8,0.014,11,0.738,35,0.168,36,0.173,37,0.012,38,0.012,39,1.602,41,2.146,43,0.502,44,0.917,49,0.529,56,0.692,60,0.706,63,0.873,69,2.576,74,4.003,113,4.499,114,5.183,115,2.578,116,5.183,117,2.456]],["title/entities/BaseEntity.html",[118,1.79,119,2.312]],["body/entities/BaseEntity.html",[3,0.079,4,0.079,5,0.06,7,0.208,8,0.015,16,2.605,35,0.079,36,0.082,37,0.007,38,0.007,43,0.237,49,0.536,52,0.995,53,1.258,54,1.409,56,0.501,63,0.786,70,1.409,72,1.28,111,0.826,118,1.719,119,2.724,120,1.35,121,2.124,122,1.644,123,4.662,124,4.662,125,2.439,126,4.662,127,6.676,128,2.447,129,2.969,130,2.447,131,3.801,132,3.588,133,2.447,134,2.969,135,2.447,136,2.447,137,2.447,138,2.447,139,2.969,140,2.447,141,3.801,142,3.801,143,3.801,144,3.097,145,3.801,146,2.447,147,3.801,148,0.931,149,3.326,150,2.221,151,3.641,152,2.969,153,2.447,154,3.801,155,2.447,156,1.752,157,2.447,158,2.447,159,1.625,160,1.752,161,2.447,162,4.662,163,2.447,164,2.447,165,2.447,166,1.28,167,2.447,168,2.447,169,2.978,170,2.969,171,2.447,172,2.447,173,2.525,174,4.563,175,2.447,176,2.447,177,2.447,178,2.447,179,2.447,180,2.447,181,5.256,182,2.447,183,3.801,184,2.124,185,2.447,186,2.447,187,2.447,188,1.429,189,2.447,190,1.429,191,2.447,192,1.625,193,2.447,194,3.801,195,2.447,196,2.447,197,2.447,198,2.447,199,2.447,200,2.447,201,2.447,202,2.447,203,2.447,204,3.801,205,2.447,206,3.801,207,2.447,208,2.447,209,2.447]],["title/classes/Bootstrapper.html",[36,0.132,210,3.091]],["body/classes/Bootstrapper.html",[0,0.69,3,0.128,4,0.128,5,0.096,7,0.241,8,0.015,11,0.56,35,0.128,36,0.131,37,0.01,38,0.01,43,0.381,44,0.766,49,0.401,51,1.327,52,0.84,53,0.941,54,1.054,60,0.535,77,1.779,100,0.978,103,1.276,166,3.209,169,3.613,210,4.203,211,3.413,212,2.906,213,4.67,214,5.38,215,3.932,216,5.38,217,3.143,218,3.413,219,3.072,220,3.932,221,4.67,222,2.612,223,3.932,224,3.28,225,2.816,226,3.413,227,3.413,228,3.932,229,3.932,230,3.932,231,3.413,232,3.072,233,2.443,234,3.932,235,4.097,236,3.932,237,3.932,238,3.072,239,3.932,240,3.932,241,3.932,242,3.932]],["title/modules/ClientsModule.html",[0,0.695,243,2.629]],["body/modules/ClientsModule.html",[0,1.087,2,1.301,3,0.13,4,0.13,5,0.098,7,0.226,8,0.015,11,0.57,13,1.464,35,0.13,36,0.134,37,0.01,38,0.01,44,0.57,49,0.409,51,1.352,52,1.164,53,0.959,54,1.075,56,0.665,60,0.546,63,0.675,77,1.813,89,1.59,166,2.852,169,3.241,212,2.583,217,3.185,221,4.731,224,1.993,225,2.87,227,3.479,231,3.479,232,3.131,233,3.386,235,3.386,243,4.416,244,4.008,245,3.479,246,5.451,247,4.008,248,4.008,249,2.465,250,4.731,251,3.131,252,5.451,253,5.451,254,4.008,255,4.008,256,4.008,257,4.008]],["title/modules/CommonModule.html",[0,0.695,93,1.711]],["body/modules/CommonModule.html",[0,1.134,1,4.882,2,1.415,3,0.141,4,0.141,5,0.107,7,0.236,8,0.014,11,0.621,13,2.107,35,0.141,36,0.145,37,0.01,38,0.01,84,1.73,85,1.885,86,1.885,87,1.73,88,2.795,89,2.564,93,3.33,95,2.494,96,1.885,97,1.885,258,3.784,259,3.784,260,3.784,261,3.784,262,5.242,263,4.36,264,4.36,265,4.36]],["title/injectables/CommonService.html",[39,0.984,262,2.629]],["body/injectables/CommonService.html",[3,0.187,4,0.187,5,0.141,7,0.21,8,0.014,11,0.819,35,0.187,36,0.192,37,0.012,38,0.012,39,1.708,41,2.383,262,4.564,266,4.996]],["title/classes/ConfigHelper.html",[36,0.132,217,2.312]],["body/classes/ConfigHelper.html",[3,0.076,4,0.076,5,0.057,7,0.204,8,0.015,9,2.029,10,2.627,14,2.029,15,2.029,16,1.011,35,0.076,36,0.078,37,0.007,38,0.007,40,4.584,43,0.226,44,0.522,45,3.184,46,2.368,48,3.184,49,0.672,51,1.73,52,0.967,53,1.532,54,1.214,55,3.184,56,0.707,58,1.825,59,2.645,60,0.698,63,1.042,100,0.581,103,0.758,122,1.586,166,3.093,169,3.748,212,2.145,217,3.255,218,2.029,219,1.825,222,2.437,224,1.162,226,3.929,233,3.84,235,3.84,249,1.659,267,2.029,268,4.584,269,4.527,270,4.451,271,3.668,272,3.668,273,3.668,274,4.527,275,3.668,276,2.337,277,2.337,278,2.337,279,3.668,280,2.337,281,2.337,282,3.668,283,2.337,284,2.337,285,2.337,286,2.337,287,2.337,288,2.337,289,2.337,290,1.553,291,4.527,292,2.337,293,2.337,294,2.337,295,2.337,296,2.337,297,2.337,298,2.337,299,2.337,300,2.337,301,2.337,302,2.865,303,2.337,304,2.437,305,2.337,306,2.627,307,2.337,308,2.337,309,2.337,310,3.668,311,2.337,312,2.337,313,2.337]],["title/classes/CreateOrganizationAndMetaTable1741518145374.html",[36,0.132,314,3.091]],["body/classes/CreateOrganizationAndMetaTable1741518145374.html",[3,0.082,4,0.082,5,0.062,7,0.092,8,0.014,35,0.082,36,0.084,37,0.007,38,0.007,43,0.245,44,0.555,49,0.486,51,1.316,52,1.359,53,1.14,54,1.046,56,0.272,59,2.782,60,0.531,103,0.821,122,1.687,125,3.024,129,3.047,134,3.047,139,3.047,148,0.963,188,4.024,190,1.478,192,4.787,212,2.894,224,3.038,249,2.42,314,4.18,315,4.645,316,2.196,317,3.047,318,3.719,319,4.771,320,3.047,321,3.047,322,2.53,323,3.047,324,5.267,325,2.53,326,3.047,327,2.53,328,3.047,329,4.374,330,4.761,331,3.719,332,3.386,333,5.134,334,5.134,335,3.386,336,2.196,337,1.812,338,1.812,339,4.771,340,4.18,341,4.972,342,2.53,343,4.133,344,2.53,345,2.53,346,3.047,347,5.351,348,2.196,349,2.196,350,2.196,351,2.196,352,3.901,353,2.794,354,3.047,355,2.196,356,2.196,357,2.196,358,1.812,359,3.41,360,2.53,361,2.53,362,3.386,363,2.196,364,3.901,365,2.196,366,2.196,367,2.196,368,3.386,369,2.196,370,3.386,371,2.53,372,1.976]],["title/classes/CreateRoleTable1741519642145.html",[36,0.132,373,3.091]],["body/classes/CreateRoleTable1741519642145.html",[3,0.119,4,0.119,5,0.089,7,0.134,8,0.014,35,0.119,36,0.122,37,0.009,38,0.009,43,0.354,44,0.728,49,0.602,51,1.726,52,1.528,53,1.413,54,1.372,56,0.393,59,2.136,60,0.697,103,1.187,122,2.212,148,1.392,188,2.136,190,2.136,192,2.429,212,3.304,224,2.545,249,2.891,317,3.997,318,4.61,319,5.446,320,3.997,321,3.997,323,3.997,324,5.797,326,3.997,328,2.856,329,3.664,333,3.997,334,3.997,341,2.856,346,2.856,372,2.856,373,4.993,374,5.549,375,3.174,376,3.656,377,3.656,378,3.656,379,4.441,380,2.856,381,3.656]],["title/classes/CreateUserTable1741519705062.html",[36,0.132,382,3.091]],["body/classes/CreateUserTable1741519705062.html",[3,0.099,4,0.099,5,0.074,7,0.111,8,0.014,35,0.099,36,0.101,37,0.008,38,0.008,43,0.294,44,0.637,49,0.543,51,1.511,52,1.398,53,1.274,54,1.201,56,0.326,59,2.617,60,0.61,103,0.986,122,1.937,125,2.343,129,2.373,134,2.373,139,2.373,148,1.156,188,3.43,190,1.775,192,4.499,212,3.103,224,2.92,249,2.655,304,2.019,317,3.499,318,4.155,319,5.115,320,3.499,321,3.499,323,3.499,324,5.542,326,3.499,328,2.373,329,4.205,331,3.499,332,2.638,333,5.115,334,5.115,337,2.176,338,2.176,339,4.155,340,3.499,341,4.155,346,2.373,359,2.176,362,3.888,363,2.638,365,2.638,366,2.638,367,2.638,369,2.638,370,2.638,372,2.373,379,2.638,382,4.586,383,5.096,384,2.638,385,3.038,386,3.038,387,3.038,388,5.871,389,2.638,390,2.638,391,3.888,392,3.038,393,4.479,394,4.479]],["title/classes/DataSource.html",[36,0.132,144,2.629]],["body/classes/DataSource.html",[3,0.127,4,0.127,5,0.131,7,0.224,8,0.015,35,0.127,36,0.131,37,0.01,38,0.01,43,0.379,44,0.764,49,0.4,51,1.322,52,0.837,53,1.285,54,1.05,56,0.658,60,0.533,63,0.66,103,1.271,120,2.162,144,4.067,148,1.491,166,3.203,222,2.603,233,2.434,235,2.434,270,4.658,290,2.603,302,3.06,304,2.603,306,2.806,358,2.806,395,4.658,396,3.401,397,5.367,398,3.917,399,3.334,400,3.917,401,3.917,402,4.658,403,4.192,404,3.917,405,3.06,406,3.917,407,3.917,408,3.917,409,3.917,410,3.917,411,6.584,412,3.917,413,3.917,414,3.917,415,3.917,416,3.917,417,3.917,418,3.917,419,3.917,420,3.401,421,3.401,422,3.917,423,3.917,424,3.917,425,3.917,426,3.917]],["title/modules/DatabaseModule.html",[0,0.695,427,2.459]],["body/modules/DatabaseModule.html",[0,0.935,2,0.989,3,0.099,4,0.099,5,0.074,7,0.229,8,0.015,11,0.434,13,1.113,16,1.941,35,0.099,36,0.15,37,0.008,38,0.008,44,0.434,49,0.458,51,1.515,52,0.959,53,1.407,54,1.204,56,0.704,60,0.611,63,0.898,100,0.758,120,2.477,144,4.621,148,1.16,166,3.076,169,2.788,212,1.444,213,2.645,217,2.622,224,1.516,225,2.183,232,3.506,233,2.788,235,2.788,251,4.895,302,3.506,304,2.982,306,3.215,358,2.183,399,3.652,420,2.645,421,2.645,427,3.31,428,3.047,429,4.489,430,3.047,431,4.489,432,3.047,433,5.879,434,5.879,435,3.047,436,4.489,437,2.645,438,4.489,439,1.893,440,3.047,441,3.047,442,3.047,443,2.645,444,3.047,445,3.047,446,3.047,447,3.047,448,3.047,449,3.047,450,3.047,451,3.047]],["title/classes/DatabaseUtil.html",[36,0.132,156,2.834]],["body/classes/DatabaseUtil.html",[3,0.138,4,0.138,5,0.104,8,0.014,35,0.138,36,0.142,37,0.01,38,0.01,43,0.412,44,0.807,49,0.434,56,0.61,60,0.579,63,0.717,103,1.38,156,4.063,166,3.34,169,3.34,339,4.431,340,3.322,353,3.046,452,3.692,453,6.81,454,4.253,455,4.253,456,4.253,457,4.431,458,4.253,459,4.253,460,3.692,461,4.253,462,4.253,463,4.253,464,4.253,465,4.253,466,4.253,467,4.253,468,4.253,469,4.253,470,4.253,471,4.253,472,4.253,473,4.253,474,4.253,475,4.253,476,4.253,477,4.253,478,4.253,479,4.253,480,4.253,481,4.253,482,4.253,483,4.253,484,4.253,485,4.253,486,4.253,487,4.253,488,4.253]],["title/controllers/DocumentationController.html",[65,1.335,489,2.834]],["body/controllers/DocumentationController.html",[3,0.16,4,0.16,5,0.121,7,0.228,8,0.015,11,0.703,35,0.16,36,0.165,37,0.011,38,0.011,43,0.478,44,0.89,49,0.504,56,0.672,60,0.672,61,2.135,62,1.959,63,0.832,65,2.109,67,1.666,69,2.531,70,1.324,489,4.477,490,4.286,491,4.938,492,4.261,493,4.286,494,4.938]],["title/modules/DocumentationModule.html",[0,0.695,495,2.834]],["body/modules/DocumentationModule.html",[0,1.173,2,1.516,3,0.152,4,0.152,5,0.114,7,0.244,8,0.014,11,0.665,13,1.707,35,0.152,36,0.156,37,0.011,38,0.011,67,2.036,84,1.854,85,2.02,86,2.02,87,1.854,88,2.89,89,1.854,95,2.609,96,2.02,97,2.02,489,4.787,492,4.653,493,4.056,495,5.364,496,4.056,497,4.056,498,4.672,499,4.672]],["title/injectables/DocumentationService.html",[39,0.984,492,2.459]],["body/injectables/DocumentationService.html",[3,0.169,4,0.169,5,0.127,7,0.19,8,0.014,11,0.741,35,0.169,36,0.174,37,0.012,38,0.012,39,1.607,41,2.156,43,0.504,44,0.92,49,0.532,56,0.695,60,0.709,63,0.878,69,2.58,115,2.591,492,4.016,500,4.522,501,5.209,502,5.209]],["title/controllers/EscrowController.html",[65,1.335,503,2.834]],["body/controllers/EscrowController.html",[3,0.149,4,0.149,5,0.112,7,0.256,8,0.015,11,0.653,35,0.149,36,0.153,37,0.011,38,0.011,43,0.444,44,0.849,49,0.468,56,0.641,60,0.625,61,1.985,62,1.821,63,0.773,65,2.013,67,1.549,69,2.463,70,1.231,71,2.533,72,2.401,76,3.292,77,2.076,80,2.533,100,1.141,503,4.272,504,3.984,505,4.59,506,4.117,507,3.984,508,3.585,509,4.59,510,4.59]],["title/modules/EscrowModule.html",[0,0.695,511,2.834]],["body/modules/EscrowModule.html",[0,1.104,2,1.342,3,0.134,4,0.134,5,0.101,7,0.257,8,0.014,11,0.589,13,2.034,35,0.134,36,0.138,37,0.01,38,0.01,67,1.878,84,1.64,85,1.788,86,1.788,87,1.64,88,2.721,89,1.64,93,3.13,94,3.274,95,2.407,96,1.788,97,1.788,100,1.028,503,4.508,506,4.497,507,3.589,511,5.515,512,3.589,513,4.135,514,3.589,515,4.135,516,4.135,517,3.987,518,4.135]],["title/classes/EscrowResolver.html",[36,0.132,517,2.834]],["body/classes/EscrowResolver.html",[3,0.159,4,0.159,5,0.12,7,0.18,8,0.015,35,0.159,36,0.164,37,0.011,38,0.011,43,0.476,44,0.887,49,0.502,52,1.331,56,0.735,60,0.669,63,0.828,70,1.318,103,1.595,105,3.766,106,2.712,109,3.44,110,3.261,111,1.658,112,2.712,517,4.464,519,4.266,520,6.233,521,4.915]],["title/injectables/EscrowService.html",[39,0.984,506,2.459]],["body/injectables/EscrowService.html",[3,0.168,4,0.168,5,0.127,7,0.189,8,0.014,11,0.738,35,0.168,36,0.173,37,0.012,38,0.012,39,1.602,41,2.146,43,0.502,44,0.917,49,0.529,56,0.692,60,0.706,63,0.873,69,2.576,115,2.578,117,2.456,506,4.003,522,4.499,523,5.183,524,5.183]],["title/modules/GatewayModule.html",[0,0.695,525,2.834]],["body/modules/GatewayModule.html",[0,1.083,2,1.291,3,0.129,4,0.129,5,0.097,7,0.226,8,0.014,11,0.566,13,1.981,35,0.129,36,0.133,37,0.01,38,0.01,84,1.578,85,1.72,86,1.72,87,1.578,88,2.668,89,1.578,93,3.094,95,2.345,96,1.72,97,1.72,100,0.989,169,2.081,290,3.602,525,5.475,526,3.452,527,3.452,528,3.452,529,4.607,530,4.754,531,3.107,532,3.977,533,4.707,534,4.707,535,4.707,536,4.707,537,4.707,538,4.707,539,4.707,540,4.707,541,3.977]],["title/injectables/GatewayService.html",[39,0.984,530,2.629]],["body/injectables/GatewayService.html",[3,0.163,4,0.163,5,0.123,7,0.184,8,0.014,11,0.716,35,0.163,36,0.168,37,0.011,38,0.011,39,1.573,41,2.084,43,0.487,44,0.901,46,3.621,49,0.646,56,0.68,60,0.685,63,0.848,105,3.799,115,2.503,117,2.385,530,4.204,542,4.369,543,5.033,544,5.033,545,4.369]],["title/modules/GraphQLGatewayModule.html",[0,0.695,529,2.629]],["body/modules/GraphQLGatewayModule.html",[0,1.074,2,1.271,3,0.127,4,0.127,5,0.096,7,0.252,8,0.015,11,0.558,13,1.431,35,0.127,36,0.131,37,0.01,38,0.01,44,0.558,49,0.4,51,1.322,52,0.837,53,0.938,54,1.05,56,0.658,60,0.533,63,0.904,89,1.554,100,0.974,111,1.322,166,2.808,212,2.9,222,2.603,224,1.948,245,3.401,249,2.427,250,4.658,251,3.06,443,3.401,529,4.067,545,3.401,546,4.658,547,3.917,548,5.367,549,3.917,550,3.917,551,4.658,552,5.367,553,3.917,554,3.06,555,5.367,556,3.401,557,2.806,558,3.917,559,3.401,560,3.917,561,3.917,562,3.917]],["title/modules/GraphQLMicroserviceModule.html",[0,0.695,94,1.79]],["body/modules/GraphQLMicroserviceModule.html",[0,1.107,2,1.625,3,0.163,4,0.163,5,0.122,7,0.252,8,0.015,11,0.713,13,1.83,16,2.166,35,0.163,36,0.167,37,0.011,38,0.011,94,2.853,111,1.69,353,3.588,546,4.348,551,4.348,554,3.913,559,4.348,563,5.009,564,6.308,565,5.009,566,5.009,567,5.009,568,3.328,569,5.009]],["title/controllers/MediaController.html",[65,1.335,570,2.834]],["body/controllers/MediaController.html",[3,0.149,4,0.149,5,0.112,7,0.256,8,0.015,11,0.653,35,0.149,36,0.153,37,0.011,38,0.011,43,0.444,44,0.849,49,0.468,56,0.641,60,0.625,61,1.985,62,1.821,63,0.773,65,2.013,67,1.549,69,2.463,70,1.231,71,2.533,72,2.401,76,3.292,77,2.076,80,2.533,100,1.141,570,4.272,571,3.984,572,4.59,573,4.117,574,3.984,575,3.585,576,4.59,577,4.59]],["title/modules/MediaModule.html",[0,0.695,578,2.834]],["body/modules/MediaModule.html",[0,1.104,2,1.342,3,0.134,4,0.134,5,0.101,7,0.257,8,0.014,11,0.589,13,2.034,35,0.134,36,0.138,37,0.01,38,0.01,67,1.878,84,1.64,85,1.788,86,1.788,87,1.64,88,2.721,89,1.64,93,3.13,94,3.274,95,2.407,96,1.788,97,1.788,100,1.028,570,4.508,573,4.497,574,3.589,578,5.515,579,3.589,580,4.135,581,3.589,582,4.135,583,4.135,584,3.987,585,4.135]],["title/classes/MediaResolver.html",[36,0.132,584,2.834]],["body/classes/MediaResolver.html",[3,0.159,4,0.159,5,0.12,7,0.18,8,0.015,35,0.159,36,0.164,37,0.011,38,0.011,43,0.476,44,0.887,49,0.502,52,1.331,56,0.735,60,0.669,63,0.828,70,1.318,103,1.595,105,3.766,106,2.712,109,3.44,110,3.261,111,1.658,112,2.712,584,4.464,586,4.266,587,6.233,588,4.915]],["title/injectables/MediaService.html",[39,0.984,573,2.459]],["body/injectables/MediaService.html",[3,0.168,4,0.168,5,0.127,7,0.189,8,0.014,11,0.738,35,0.168,36,0.173,37,0.012,38,0.012,39,1.602,41,2.146,43,0.502,44,0.917,49,0.529,56,0.692,60,0.706,63,0.873,69,2.576,115,2.578,117,2.456,573,4.003,589,4.499,590,5.183,591,5.183]],["title/controllers/NotificationController.html",[65,1.335,592,2.834]],["body/controllers/NotificationController.html",[3,0.149,4,0.149,5,0.112,7,0.256,8,0.015,11,0.653,35,0.149,36,0.153,37,0.011,38,0.011,43,0.444,44,0.849,49,0.468,56,0.641,60,0.625,61,1.985,62,1.821,63,0.773,65,2.013,67,1.549,69,2.463,70,1.231,71,2.533,72,2.401,76,3.292,77,2.076,80,2.533,100,1.141,592,4.272,593,3.984,594,4.59,595,4.117,596,3.984,597,3.585,598,4.59,599,4.59]],["title/modules/NotificationModule.html",[0,0.695,600,2.834]],["body/modules/NotificationModule.html",[0,1.104,2,1.342,3,0.134,4,0.134,5,0.101,7,0.257,8,0.014,11,0.589,13,2.034,35,0.134,36,0.138,37,0.01,38,0.01,67,1.878,84,1.64,85,1.788,86,1.788,87,1.64,88,2.721,89,1.64,93,3.13,94,3.274,95,2.407,96,1.788,97,1.788,100,1.028,592,4.508,595,4.497,596,3.589,600,5.515,601,3.589,602,4.135,603,3.589,604,4.135,605,4.135,606,3.987,607,4.135]],["title/classes/NotificationResolver.html",[36,0.132,606,2.834]],["body/classes/NotificationResolver.html",[3,0.159,4,0.159,5,0.12,7,0.18,8,0.015,35,0.159,36,0.164,37,0.011,38,0.011,43,0.476,44,0.887,49,0.502,52,1.331,56,0.735,60,0.669,63,0.828,70,1.318,103,1.595,105,3.766,106,2.712,109,3.44,110,3.261,111,1.658,112,2.712,606,4.464,608,4.266,609,6.233,610,4.915]],["title/injectables/NotificationService.html",[39,0.984,595,2.459]],["body/injectables/NotificationService.html",[3,0.168,4,0.168,5,0.127,7,0.189,8,0.014,11,0.738,35,0.168,36,0.173,37,0.012,38,0.012,39,1.602,41,2.146,43,0.502,44,0.917,49,0.529,56,0.692,60,0.706,63,0.873,69,2.576,115,2.578,117,2.456,595,4.003,611,4.499,612,5.183,613,5.183]],["title/entities/Organization.html",[118,1.79,614,1.711]],["body/entities/Organization.html",[3,0.1,4,0.1,5,0.076,7,0.216,8,0.015,16,2.726,35,0.1,36,0.103,37,0.008,38,0.008,43,0.299,49,0.673,52,1.346,53,1.578,54,1.217,56,0.819,70,1.767,100,0.769,111,1.044,118,2.052,119,2.651,120,1.707,122,1.962,125,1.618,132,2.504,148,1.177,149,3.979,150,2.651,159,2.055,170,4.925,173,4.378,335,4.665,336,3.939,337,3.849,338,3.849,343,3.939,614,2.324,615,2.684,616,5.374,617,3.544,618,3.093,619,4.189,620,2.055,621,3.093,622,4.537,623,3.093,624,4.537,625,3.093,626,3.093,627,2.684,628,3.093,629,3.093,630,3.939,631,1.921,632,2.684,633,2.684,634,2.215]],["title/classes/Organization-1.html",[36,0.11,160,2.366,614,1.429]],["body/classes/Organization-1.html",[3,0.152,4,0.152,5,0.114,7,0.221,8,0.014,35,0.152,36,0.156,37,0.011,38,0.011,43,0.452,49,0.477,53,1.119,56,0.718,59,2.73,70,1.253,100,1.162,103,1.516,111,1.577,122,2.609,125,3.696,149,3.905,150,3.526,568,3.104,614,3.054,631,2.903,634,3.346,635,4.056,636,4.672,637,4.672,638,3.65,639,4.056,640,4.056,641,4.714,642,4.056,643,4.672]],["title/controllers/OrganizationController.html",[65,1.335,644,2.834]],["body/controllers/OrganizationController.html",[3,0.131,4,0.131,5,0.099,7,0.244,8,0.015,11,0.575,35,0.131,36,0.135,37,0.01,38,0.01,43,0.391,44,0.78,49,0.559,51,1.363,52,0.862,53,0.967,54,1.083,56,0.749,60,0.746,61,1.746,62,1.602,63,0.923,65,1.849,67,1.363,69,2.341,70,1.469,71,3.024,72,2.867,76,3.432,77,1.827,80,3.024,125,2.867,644,3.924,645,3.506,646,5.479,647,5.479,648,4.039,649,4.039,650,3.432,651,2.893,652,3.155,653,4.039,654,4.039,655,4.039,656,4.039,657,3.506]],["title/entities/OrganizationMetadata.html",[118,1.79,619,2.629]],["body/entities/OrganizationMetadata.html",[3,0.077,4,0.077,5,0.058,7,0.205,8,0.015,16,2.783,35,0.077,36,0.079,37,0.007,38,0.007,43,0.23,49,0.635,52,1.271,53,1.7,54,1.387,56,0.711,70,1.667,100,0.59,111,0.801,118,1.68,119,2.17,120,1.31,122,1.606,132,3.432,148,1.413,149,3.633,150,2.17,159,1.577,173,4.131,188,3.477,238,4.04,348,3.223,349,3.97,350,3.97,351,3.223,353,3.704,354,4.648,355,3.223,356,3.223,357,4.872,358,2.659,359,2.659,368,4.872,614,2.86,617,1.855,619,2.467,620,2.467,627,3.97,630,3.223,658,5.586,659,2.061,660,4.573,661,4.573,662,4.573,663,4.573,664,2.374,665,5.172,666,5.172,667,5.172,668,2.374,669,2.061,670,2.374,671,2.374,672,2.374,673,3.713,674,3.713,675,3.713,676,2.374,677,2.374,678,2.061,679,2.374,680,2.374,681,4.573,682,3.223,683,2.061,684,2.374,685,3.713]],["title/modules/OrganizationModule.html",[0,0.695,686,2.834]],["body/modules/OrganizationModule.html",[0,1.042,2,1.199,3,0.12,4,0.12,5,0.09,7,0.262,8,0.015,11,0.526,13,1.883,35,0.12,36,0.123,37,0.009,38,0.009,67,1.739,84,1.466,85,1.598,86,1.598,87,1.466,88,2.567,89,1.466,93,3.025,94,3.164,95,2.229,96,1.598,97,1.598,100,0.919,399,2.296,427,4.46,614,1.598,619,3.424,632,3.208,644,4.251,650,3.861,651,2.647,686,5.58,687,3.208,688,3.208,689,3.208,690,3.695,691,3.695,692,3.692,693,3.695,694,2.647,695,3.695,696,3.695,697,3.695]],["title/classes/OrganizationResolver.html",[36,0.132,692,2.834]],["body/classes/OrganizationResolver.html",[3,0.128,4,0.128,5,0.096,7,0.224,8,0.015,16,2.327,35,0.128,36,0.131,37,0.01,38,0.01,43,0.381,44,0.766,46,2.057,49,0.626,51,1.327,52,1.31,53,0.941,54,1.054,56,0.659,60,0.733,61,1.7,62,1.56,63,0.907,70,1.443,103,1.276,105,3.45,106,2.97,109,3.385,110,2.815,111,1.327,112,2.17,132,2.97,249,2.434,614,2.327,633,5.724,650,3.936,651,2.816,692,3.853,694,2.816,698,3.413,699,3.413,700,3.932,701,3.932,702,5.38,703,3.932,704,3.932]],["title/injectables/OrganizationService.html",[39,0.984,650,2.184]],["body/injectables/OrganizationService.html",[3,0.121,4,0.121,5,0.091,7,0.248,8,0.015,11,0.53,35,0.121,36,0.124,37,0.009,38,0.009,39,1.288,41,1.541,43,0.36,44,0.737,46,2.71,49,0.657,51,1.748,52,1.106,53,1.24,54,1.389,56,0.557,60,0.811,62,1.477,63,1.004,69,2.261,115,1.851,117,1.763,148,1.416,170,2.907,249,2.343,268,2.666,439,2.312,614,2.24,650,2.859,694,2.666,705,3.231,706,6.442,707,5.18,708,3.722,709,5.477,710,3.722,711,3.722,712,5.18,713,6.442,714,3.722,715,3.722,716,2.907,717,3.722,718,3.722,719,3.722,720,3.231,721,3.722,722,3.722]],["title/controllers/PaymentController.html",[65,1.335,723,2.834]],["body/controllers/PaymentController.html",[3,0.149,4,0.149,5,0.112,7,0.256,8,0.015,11,0.653,35,0.149,36,0.153,37,0.011,38,0.011,43,0.444,44,0.849,49,0.468,56,0.641,60,0.625,61,1.985,62,1.821,63,0.773,65,2.013,67,1.549,69,2.463,70,1.231,71,2.533,72,2.401,76,3.292,77,2.076,80,2.533,100,1.141,723,4.272,724,3.984,725,4.59,726,4.117,727,3.984,728,3.585,729,4.59,730,4.59]],["title/modules/PaymentModule.html",[0,0.695,731,2.834]],["body/modules/PaymentModule.html",[0,1.104,2,1.342,3,0.134,4,0.134,5,0.101,7,0.257,8,0.014,11,0.589,13,2.034,35,0.134,36,0.138,37,0.01,38,0.01,67,1.878,84,1.64,85,1.788,86,1.788,87,1.64,88,2.721,89,1.64,93,3.13,94,3.274,95,2.407,96,1.788,97,1.788,100,1.028,723,4.508,726,4.497,727,3.589,731,5.515,732,3.589,733,3.589,734,4.135,735,4.135,736,4.135,737,3.987,738,4.135]],["title/classes/PaymentResolver.html",[36,0.132,737,2.834]],["body/classes/PaymentResolver.html",[3,0.159,4,0.159,5,0.12,7,0.18,8,0.015,35,0.159,36,0.164,37,0.011,38,0.011,43,0.476,44,0.887,49,0.502,52,1.331,56,0.735,60,0.669,63,0.828,70,1.318,103,1.595,105,3.766,106,2.712,109,3.44,110,3.261,111,1.658,112,2.712,737,4.464,739,4.266,740,6.233,741,4.915]],["title/injectables/PaymentService.html",[39,0.984,726,2.459]],["body/injectables/PaymentService.html",[3,0.168,4,0.168,5,0.127,7,0.189,8,0.014,11,0.738,35,0.168,36,0.173,37,0.012,38,0.012,39,1.602,41,2.146,43,0.502,44,0.917,49,0.529,56,0.692,60,0.706,63,0.873,69,2.576,115,2.578,117,2.456,726,4.003,742,4.499,743,5.183,744,5.183]],["title/controllers/PropertyController.html",[65,1.335,745,2.834]],["body/controllers/PropertyController.html",[3,0.149,4,0.149,5,0.112,7,0.256,8,0.015,11,0.653,35,0.149,36,0.153,37,0.011,38,0.011,43,0.444,44,0.849,49,0.468,56,0.641,60,0.625,61,1.985,62,1.821,63,0.773,65,2.013,67,1.549,69,2.463,70,1.231,71,2.533,72,2.401,76,3.292,77,2.076,80,2.533,100,1.141,745,4.272,746,3.984,747,4.59,748,4.117,749,3.984,750,3.585,751,4.59,752,4.59]],["title/modules/PropertyModule.html",[0,0.695,753,2.834]],["body/modules/PropertyModule.html",[0,1.104,2,1.342,3,0.134,4,0.134,5,0.101,7,0.257,8,0.014,11,0.589,13,2.034,35,0.134,36,0.138,37,0.01,38,0.01,67,1.878,84,1.64,85,1.788,86,1.788,87,1.64,88,2.721,89,1.64,93,3.13,94,3.274,95,2.407,96,1.788,97,1.788,100,1.028,745,4.508,748,4.497,749,3.589,753,5.515,754,3.589,755,4.135,756,3.589,757,4.135,758,4.135,759,3.987,760,4.135]],["title/classes/PropertyResolver.html",[36,0.132,759,2.834]],["body/classes/PropertyResolver.html",[3,0.159,4,0.159,5,0.12,7,0.18,8,0.015,35,0.159,36,0.164,37,0.011,38,0.011,43,0.476,44,0.887,49,0.502,52,1.331,56,0.735,60,0.669,63,0.828,70,1.318,103,1.595,105,3.766,106,2.712,109,3.44,110,3.261,111,1.658,112,2.712,759,4.464,761,4.266,762,6.233,763,4.915]],["title/injectables/PropertyService.html",[39,0.984,748,2.459]],["body/injectables/PropertyService.html",[3,0.168,4,0.168,5,0.127,7,0.189,8,0.014,11,0.738,35,0.168,36,0.173,37,0.012,38,0.012,39,1.602,41,2.146,43,0.502,44,0.917,49,0.529,56,0.692,60,0.706,63,0.873,69,2.576,115,2.578,117,2.456,748,4.003,764,4.499,765,5.183,766,5.183]],["title/entities/Role.html",[118,1.79,767,2.312]],["body/entities/Role.html",[3,0.14,4,0.14,5,0.105,7,0.209,8,0.015,16,2.777,35,0.14,36,0.144,37,0.01,38,0.01,43,0.417,49,0.584,52,1.461,53,1.369,56,0.787,70,1.534,111,1.453,118,2.587,119,3.342,120,2.376,122,2.473,132,3.545,148,1.639,149,3.753,150,3.342,159,2.861,173,3.8,380,5.017,620,2.861,669,3.738,767,3.342,768,3.738,769,4.306,770,4.306,771,4.306,772,5.72,773,3.363]],["title/modules/SeederModule.html",[0,0.695,774,2.629]],["body/modules/SeederModule.html",[0,1.144,2,1.439,3,0.144,4,0.144,5,0.108,7,0.253,8,0.014,11,0.631,13,1.62,35,0.144,36,0.148,37,0.01,38,0.01,84,1.759,85,1.917,86,1.917,87,1.759,88,2.818,89,2.585,95,2.522,96,1.917,97,1.917,437,3.849,439,2.754,767,2.591,774,5,775,3.849,776,3.849,777,3.849,778,5.255,779,4.434,780,4.434,781,3.463,782,4.434]],["title/injectables/SeederService.html",[39,0.984,778,2.629]],["body/injectables/SeederService.html",[3,0.116,4,0.116,5,0.088,7,0.244,8,0.015,11,0.51,35,0.116,36,0.119,37,0.009,38,0.009,39,1.254,41,1.482,43,0.347,44,0.718,46,2.638,49,0.596,51,1.208,52,1.246,53,0.857,54,0.96,60,0.687,100,0.89,148,1.363,169,3.053,212,3.282,224,2.902,268,4.537,306,2.565,439,2.225,709,4.948,716,2.797,767,2.946,773,4.558,778,3.35,781,2.797,783,3.109,784,5.498,785,6.334,786,3.581,787,3.581,788,5.042,789,3.581,790,3.581,791,3.581,792,3.581,793,3.581,794,3.581,795,3.581,796,3.581,797,6.334,798,5.042,799,3.581,800,3.581,801,3.581,802,3.581]],["title/classes/SubgraphsBuilder.html",[36,0.132,557,2.834]],["body/classes/SubgraphsBuilder.html",[3,0.133,4,0.133,5,0.1,7,0.202,8,0.015,35,0.133,36,0.137,37,0.01,38,0.01,43,0.397,44,0.788,49,0.419,51,1.384,52,1.183,53,0.982,54,1.1,56,0.674,59,2.397,60,0.559,63,0.933,100,1.02,103,1.331,166,3.28,169,3.511,212,2.97,217,3.235,224,2.04,225,2.938,233,2.549,235,2.549,249,2.505,557,3.966,803,4.807,804,3.561,805,6.268,806,4.102,807,4.102,808,5.538,809,4.102,810,4.102,811,4.102,812,5.538,813,4.102,814,5.538,815,4.102,816,4.102,817,4.102]],["title/entities/User.html",[118,1.79,818,1.968]],["body/entities/User.html",[3,0.09,4,0.09,5,0.068,7,0.22,8,0.015,16,2.601,35,0.09,36,0.092,37,0.008,38,0.008,43,0.268,49,0.69,52,1.074,53,1.688,54,1.502,56,0.815,70,1.812,100,0.687,111,0.933,118,1.888,119,2.439,120,1.526,122,1.805,125,1.446,132,3.49,148,1.052,149,3.949,150,2.439,159,1.837,173,4.49,304,3.341,331,3.261,337,3.602,338,3.602,359,2.99,389,4.365,390,4.365,391,3.623,614,2.839,617,4.376,620,2.773,631,1.717,634,1.98,678,2.4,682,3.623,767,3.949,818,2.076,819,2.4,820,4.365,821,2.765,822,2.765,823,2.765,824,2.765,825,2.765,826,2.765,827,2.765,828,2.765,829,2.765,830,4.174,831,2.765,832,2.765,833,2.4]],["title/classes/User-1.html",[36,0.11,160,2.366,818,1.643]],["body/classes/User-1.html",[3,0.119,4,0.119,5,0.09,7,0.216,8,0.015,16,2.218,35,0.119,36,0.122,37,0.009,38,0.009,43,0.355,49,0.603,53,1.416,54,1.717,56,0.75,70,1.585,100,0.912,103,1.191,111,1.238,117,1.739,118,1.66,122,2.218,125,3.35,132,3.534,149,3.741,150,2.997,614,3.098,620,3.928,631,2.279,634,2.628,638,2.866,639,3.185,640,3.185,641,2.866,642,3.185,683,3.185,818,3.35,820,6.059,834,3.185,835,3.669,836,3.669,837,3.669,838,3.669,839,3.669,840,3.669,841,3.669,842,3.669,843,3.669,844,3.669,845,3.669,846,3.669]],["title/controllers/UserController.html",[65,1.335,847,2.834]],["body/controllers/UserController.html",[3,0.149,4,0.149,5,0.112,7,0.256,8,0.015,11,0.653,35,0.149,36,0.153,37,0.011,38,0.011,43,0.444,44,0.849,49,0.468,56,0.641,60,0.625,61,1.985,62,1.821,63,0.773,65,2.013,67,1.549,69,2.463,70,1.231,71,2.533,72,2.401,76,3.292,77,2.076,80,2.533,100,1.141,847,4.272,848,3.984,849,4.59,850,3.872,851,3.585,852,3.585,853,4.59,854,4.59]],["title/modules/UserModule.html",[0,0.695,855,2.834]],["body/modules/UserModule.html",[0,1,2,1.112,3,0.111,4,0.111,5,0.084,7,0.263,8,0.015,11,0.488,13,1.786,35,0.111,36,0.114,37,0.009,38,0.009,67,1.65,84,1.36,85,1.482,86,1.482,87,1.36,88,2.464,89,1.36,93,2.952,94,3.088,95,2.114,96,1.482,97,1.482,100,0.852,243,4.363,399,2.13,427,4.365,767,2.856,774,4.536,781,2.678,818,1.705,847,4.081,850,3.989,851,2.678,855,5.635,856,2.976,857,2.976,858,2.976,859,3.428,860,3.428,861,2.678,862,3.037,863,3.428,864,2.678,865,3.428,866,3.428,867,3.428,868,3.428]],["title/classes/UserResolver.html",[36,0.132,862,2.459]],["body/classes/UserResolver.html",[3,0.131,4,0.131,5,0.098,7,0.227,8,0.015,35,0.131,36,0.134,37,0.01,38,0.01,43,0.389,44,0.778,46,2.105,49,0.633,51,1.358,52,1.325,53,0.963,54,1.079,56,0.667,60,0.744,61,1.74,62,1.596,63,0.921,70,1.465,103,1.306,105,3.483,106,3.016,109,3.425,110,2.105,111,1.358,112,2.221,249,2.472,818,2.718,833,5.779,850,4.195,851,3.143,862,3.395,864,3.143,869,3.492,870,4.023,871,4.023,872,5.465,873,4.023,874,4.023,875,4.023,876,4.023]],["title/classes/UserResolver-1.html",[36,0.11,160,2.366,862,2.052]],["body/classes/UserResolver-1.html",[3,0.127,4,0.127,5,0.096,7,0.241,8,0.015,16,2.321,35,0.127,36,0.131,37,0.01,38,0.01,43,0.379,44,0.764,46,2.05,49,0.548,51,1.811,52,1.146,53,1.285,54,1.439,60,0.533,61,1.694,62,1.554,63,0.904,70,1.05,103,1.271,110,2.808,111,1.322,125,2.05,132,2.962,192,2.603,212,2.9,249,2.427,614,2.847,650,3.931,651,2.806,657,3.401,694,2.806,699,3.401,818,3.627,862,3.334,877,3.401,878,3.917,879,3.917,880,3.917,881,3.917,882,3.917,883,5.367,884,3.917,885,3.917,886,5.367]],["title/injectables/UserService.html",[39,0.984,850,2.312]],["body/injectables/UserService.html",[3,0.125,4,0.125,5,0.094,7,0.259,8,0.015,11,0.549,35,0.125,36,0.129,37,0.01,38,0.01,39,1.321,41,1.598,43,0.374,44,0.756,46,2.779,49,0.62,51,1.302,52,0.824,53,0.924,54,1.035,56,0.571,60,0.723,62,2.107,63,0.895,69,2.297,77,1.746,100,0.96,115,1.919,117,1.829,148,1.469,249,2.403,268,3.804,439,2.398,709,5.674,716,3.015,720,3.35,818,2.642,850,3.103,861,3.015,864,3.015,887,3.35,888,6.543,889,3.859,890,6.543,891,3.859,892,5.312,893,3.859,894,3.859,895,3.859,896,3.859,897,3.859]],["title/coverage.html",[898,4.691]],["body/coverage.html",[5,0.035,8,0.015,36,0.235,37,0.004,38,0.004,39,1.532,40,1.021,42,1.238,53,0.341,65,1.851,66,1.021,68,1.238,74,0.886,78,1.114,87,2.327,101,1.021,104,1.238,113,1.238,118,1.931,119,1.427,121,2.121,144,0.947,148,1.445,151,1.114,152,1.114,156,1.021,184,5.455,210,1.114,211,1.238,217,0.833,222,0.947,262,0.947,266,1.238,267,1.238,290,0.947,314,1.114,315,1.238,316,1.238,329,1.021,373,1.114,374,1.238,375,1.238,382,1.114,383,1.238,384,1.238,395,1.238,396,1.238,399,0.886,403,3.89,452,1.238,457,6.301,489,1.021,490,1.238,492,0.886,500,1.238,503,1.021,504,1.238,506,0.886,508,1.114,517,1.021,519,1.238,522,1.238,530,0.947,531,1.114,542,1.238,557,1.021,568,1.623,570,1.021,571,1.238,573,0.886,575,1.114,584,1.021,586,1.238,589,1.238,592,1.021,593,1.238,595,0.886,597,1.114,606,1.021,608,1.238,611,1.238,614,1.386,615,2.121,619,1.623,631,0.886,635,1.238,644,1.021,645,1.238,650,0.787,652,1.114,658,2.121,659,2.121,692,1.021,698,1.238,705,1.238,723,1.021,724,1.238,726,0.886,728,1.114,737,1.021,739,1.238,742,1.238,745,1.021,746,1.238,748,0.886,750,1.114,759,1.021,761,1.238,764,1.238,767,1.427,768,2.121,778,0.947,783,1.238,803,1.238,804,1.238,818,1.594,819,2.121,834,1.238,847,1.021,848,1.238,850,0.833,852,1.114,862,1.518,869,1.238,877,1.238,887,1.238,898,1.238,899,1.426,900,1.426,901,1.426,902,7.149,903,1.238,904,7.652,905,1.238,906,1.238,907,1.238,908,4.322,909,7.055,910,4.27,911,1.238,912,1.238,913,1.238,914,1.238,915,1.238,916,5.252,917,2.443,918,2.443,919,1.238,920,1.426,921,1.238,922,1.238,923,1.238,924,1.238,925,1.238,926,1.426,927,1.238,928,1.238,929,1.238,930,1.238,931,1.238,932,1.238,933,1.238,934,1.238,935,1.238,936,1.238,937,1.238,938,1.238,939,1.238,940,2.503,941,2.503,942,1.238,943,1.908,944,1.908,945,1.238,946,3.296,947,1.238,948,1.238,949,1.238,950,1.426]],["title/dependencies.html",[84,1.889,951,2.868]],["body/dependencies.html",[8,0.015,10,3.231,11,0.642,12,3.915,37,0.011,38,0.011,77,2.04,84,1.79,111,1.522,148,1.717,219,3.523,402,3.915,439,2.802,554,3.523,556,3.915,952,5.898,953,4.511,954,4.511,955,4.511,956,5.898,957,6.571,958,4.511,959,4.511,960,4.511,961,4.511,962,4.511,963,4.511,964,4.511,965,4.511,966,4.511,967,4.511,968,4.511,969,4.511,970,4.511,971,4.511,972,4.511,973,4.511,974,4.511,975,4.511,976,4.511,977,4.511,978,4.511,979,4.511,980,4.511]],["title/miscellaneous/enumerations.html",[981,2.052,982,4.132]],["body/miscellaneous/enumerations.html",[8,0.014,37,0.011,38,0.011,43,0.442,117,2.818,190,4.642,773,4.646,861,4.646,981,2.839,982,3.967,983,4.57,984,5.948,985,4.57,986,4.57,987,5.948,988,5.948,989,5.948,990,5.948,991,5.948,992,5.948,993,5.948,994,5.948,995,4.57,996,5.948,997,5.948,998,5.948,999,5.948]],["title/miscellaneous/functions.html",[981,2.052,1000,4.132]],["body/miscellaneous/functions.html",[8,0.013,37,0.009,38,0.009,43,0.359,51,2.007,52,1.27,53,1.424,54,1.594,56,0.555,60,0.704,87,3.251,151,4.036,152,4.036,174,3.219,188,2.167,190,3.019,238,5.024,457,2.897,568,3.433,631,3.21,638,2.897,903,3.219,905,3.219,906,3.219,911,3.219,912,3.219,914,3.219,919,3.219,922,3.219,924,3.219,927,3.219,928,3.219,940,2.897,941,4.645,943,2.897,944,4.036,981,2.304,1000,3.219,1001,7.539,1002,3.708,1003,4.485,1004,3.219,1005,3.708,1006,3.708,1007,3.708,1008,5.167,1009,5.167,1010,3.708,1011,3.708]],["title/index.html",[43,0.383,1012,3.435]],["body/index.html",[0,0.42,1,3.052,2,0.776,8,0.014,37,0.007,38,0.007,41,0.99,67,0.807,74,2.853,83,4.62,84,0.948,85,1.034,86,1.034,87,0.948,88,1.034,89,0.948,90,2.075,91,2.075,92,2.075,93,3.174,94,3.066,95,1.614,96,1.034,97,1.034,103,0.776,120,1.319,243,3.052,258,2.075,259,2.075,260,2.075,261,2.075,262,4.142,354,1.867,427,3.707,492,2.853,495,3.718,496,2.075,497,2.075,506,2.853,511,4.62,512,2.075,514,2.075,525,4.62,526,2.075,527,2.075,528,2.075,529,3.052,530,3.052,573,2.853,578,4.62,579,2.075,581,2.075,595,2.853,600,4.62,601,2.075,603,2.075,650,2.535,686,5.026,687,2.075,688,2.075,689,2.075,726,2.853,731,4.62,732,2.075,733,2.075,748,2.853,753,4.62,754,2.075,756,2.075,774,3.965,775,2.075,776,2.075,777,2.075,778,4.142,850,2.684,855,5.258,856,2.075,857,2.075,858,2.075,1012,2.075,1013,2.391,1014,2.391,1015,2.391,1016,2.391]],["title/modules.html",[2,1.754]],["body/modules.html",[1,2.814,2,1.375,8,0.01,37,0.01,38,0.01,83,3.034,93,1.832,94,1.916,243,2.814,427,2.631,495,3.034,511,3.034,525,3.034,529,2.814,578,3.034,600,3.034,686,3.034,731,3.034,753,3.034,774,2.814,855,3.034,1017,7.085,1018,7.085,1019,8.039,1020,7.855,1021,7.855,1022,7.855]],["title/properties.html",[122,2.059,951,2.868]],["body/properties.html",[8,0.014,37,0.013,38,0.013,122,2.559,380,4.624,1023,5.919,1024,5.919,1025,5.919,1026,5.919,1027,5.919]],["title/miscellaneous/variables.html",[405,3.719,981,2.052]],["body/miscellaneous/variables.html",[5,0.043,8,0.015,16,1.61,19,2.523,21,2.523,23,2.523,24,2.523,25,2.523,26,2.523,27,2.523,28,2.523,37,0.005,38,0.005,43,0.17,52,0.374,53,1.598,54,0.779,56,0.617,58,1.368,78,2.27,148,2.089,188,4.332,190,4.286,290,2.474,399,1.805,403,5.214,405,1.368,460,2.523,508,2.27,531,1.368,533,2.523,534,2.523,535,2.523,536,2.523,537,2.523,538,2.523,539,2.523,540,2.523,568,1.931,575,2.27,597,2.27,614,1.257,641,2.909,652,2.27,728,2.27,750,2.27,784,1.521,818,1.445,852,2.27,907,1.521,908,5.879,913,1.521,915,1.521,921,1.521,923,1.521,925,1.521,929,1.521,930,1.521,931,1.521,932,1.521,933,1.521,934,1.521,935,1.521,936,1.521,937,1.521,938,1.521,939,1.521,940,1.368,941,2.27,942,2.523,943,1.368,944,2.27,945,2.523,946,4.171,947,3.232,948,3.232,949,2.523,981,1.088,1003,1.521,1004,1.521,1028,1.752,1029,1.752,1030,1.752,1031,1.752,1032,1.752,1033,1.752,1034,1.752,1035,1.752,1036,1.752,1037,5.489,1038,1.752,1039,1.752,1040,1.752,1041,1.752,1042,4.333,1043,1.752,1044,4.333,1045,2.906,1046,1.752,1047,1.752,1048,2.906,1049,3.724,1050,1.752,1051,1.752,1052,1.752,1053,1.752,1054,1.752,1055,1.752,1056,1.752,1057,4.333,1058,1.752,1059,1.752,1060,1.752,1061,1.752,1062,1.752,1063,1.752,1064,1.752,1065,1.752,1066,1.752,1067,1.752,1068,1.752,1069,1.752,1070,1.752,1071,1.752,1072,1.752,1073,1.752,1074,1.752,1075,2.906,1076,6.144,1077,2.906,1078,2.906,1079,2.906,1080,2.906,1081,2.906,1082,2.906,1083,2.906,1084,2.906,1085,2.906,1086,2.906,1087,2.906,1088,1.752,1089,1.752,1090,2.906,1091,1.752,1092,2.906,1093,2.906,1094,1.752,1095,2.906,1096,2.906,1097,2.906,1098,2.906,1099,1.752,1100,1.752,1101,1.752,1102,1.752,1103,1.752,1104,1.752,1105,1.752,1106,2.906]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"entities/Role.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":457,"title":{},"body":{"classes/DatabaseUtil.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["0.0.1",{"_index":1024,"title":{},"body":{"properties.html":{}}}],["0.2.0",{"_index":975,"title":{},"body":{"dependencies.html":{}}}],["0.3.20",{"_index":978,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":904,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":902,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":910,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":916,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":920,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":918,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":917,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":926,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":160,"title":{"classes/Organization-1.html":{},"classes/User-1.html":{},"classes/UserResolver-1.html":{}},"body":{"entities/BaseEntity.html":{}}}],["10",{"_index":461,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["10.0.0",{"_index":957,"title":{},"body":{"dependencies.html":{}}}],["10.4.15",{"_index":959,"title":{},"body":{"dependencies.html":{}}}],["11.0.0",{"_index":962,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":482,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["12.2.2",{"_index":956,"title":{},"body":{"dependencies.html":{}}}],["13",{"_index":1015,"title":{},"body":{"index.html":{}}}],["16.10.0",{"_index":967,"title":{},"body":{"dependencies.html":{}}}],["16.4.7",{"_index":965,"title":{},"body":{"dependencies.html":{}}}],["17",{"_index":1013,"title":{},"body":{"index.html":{}}}],["17.0.33",{"_index":964,"title":{},"body":{"dependencies.html":{}}}],["17.13.3",{"_index":970,"title":{},"body":{"dependencies.html":{}}}],["17.7.2",{"_index":980,"title":{},"body":{"dependencies.html":{}}}],["19",{"_index":488,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["2",{"_index":353,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/DatabaseUtil.html":{},"modules/GraphQLMicroserviceModule.html":{},"entities/OrganizationMetadata.html":{}}}],["2.9.3",{"_index":952,"title":{},"body":{"dependencies.html":{}}}],["24",{"_index":1016,"title":{},"body":{"index.html":{}}}],["3",{"_index":484,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["3.3.0",{"_index":958,"title":{},"body":{"dependencies.html":{}}}],["4.11.3",{"_index":954,"title":{},"body":{"dependencies.html":{}}}],["48",{"_index":458,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["5",{"_index":354,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"entities/OrganizationMetadata.html":{},"index.html":{}}}],["5.0",{"_index":685,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["5.4.2",{"_index":969,"title":{},"body":{"dependencies.html":{}}}],["5432",{"_index":415,"title":{},"body":{"classes/DataSource.html":{}}}],["7",{"_index":486,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["7${randombytes.substring(1",{"_index":483,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["7.8.1",{"_index":977,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":480,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["8.13.1",{"_index":972,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":1014,"title":{},"body":{"index.html":{}}}],["9996",{"_index":191,"title":{},"body":{"entities/BaseEntity.html":{}}}],["__dirname",{"_index":1063,"title":{},"body":{"miscellaneous/variables.html":{}}}],["abstract",{"_index":158,"title":{},"body":{"entities/BaseEntity.html":{}}}],["accessors",{"_index":273,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["action",{"_index":394,"title":{},"body":{"classes/CreateUserTable1741519705062.html":{}}}],["add",{"_index":363,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["additional",{"_index":1054,"title":{},"body":{"miscellaneous/variables.html":{}}}],["admin",{"_index":998,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["alias",{"_index":1042,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allow_interest_earning",{"_index":356,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"entities/OrganizationMetadata.html":{}}}],["allowinterestearning",{"_index":660,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["apollo/gateway",{"_index":556,"title":{},"body":{"modules/GraphQLGatewayModule.html":{},"dependencies.html":{}}}],["apollo/gateway/src/config",{"_index":810,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["apollo/server",{"_index":953,"title":{},"body":{"dependencies.html":{}}}],["apollo/subgraph",{"_index":955,"title":{},"body":{"dependencies.html":{}}}],["apollofederationdriver",{"_index":564,"title":{},"body":{"modules/GraphQLMicroserviceModule.html":{}}}],["apollofederationdriverconfig",{"_index":565,"title":{},"body":{"modules/GraphQLMicroserviceModule.html":{}}}],["apollogatewaydriver",{"_index":552,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["apollogatewaydriverconfig",{"_index":553,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["app",{"_index":228,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["app.connectmicroservice",{"_index":230,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["app.listen(port",{"_index":240,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["app.startallmicroservices",{"_index":237,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["appconfigmodule",{"_index":1,"title":{"modules/AppConfigModule.html":{}},"body":{"modules/AppConfigModule.html":{},"modules/CommonModule.html":{},"index.html":{},"modules.html":{}}}],["appconfigservice",{"_index":40,"title":{"injectables/AppConfigService.html":{}},"body":{"injectables/AppConfigService.html":{},"classes/ConfigHelper.html":{},"coverage.html":{}}}],["appconfigservice(configservice",{"_index":295,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["appcontext",{"_index":292,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["appcontext.get(configservice",{"_index":294,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["apps",{"_index":1072,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/${microservice}/src/typeorm.data",{"_index":1064,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/${schema}/**/**.entity{.ts,.js",{"_index":422,"title":{},"body":{"classes/DataSource.html":{}}}],["apps/${schema}/src/migrations/**/*{.ts,.js",{"_index":424,"title":{},"body":{"classes/DataSource.html":{}}}],["apps/${schema}/src/subscriber/**/*{.ts,.js",{"_index":426,"title":{},"body":{"classes/DataSource.html":{}}}],["apps/.../gateway.module.ts",{"_index":1038,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../main.ts",{"_index":1001,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../seeder.ts",{"_index":1002,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../typeorm.data",{"_index":1037,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/auth/src/auth.controller.ts",{"_index":68,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["apps/auth/src/auth.controller.ts:11",{"_index":73,"title":{},"body":{"controllers/AuthController.html":{}}}],["apps/auth/src/auth.module.ts",{"_index":98,"title":{},"body":{"modules/AuthModule.html":{}}}],["apps/auth/src/auth.service.ts",{"_index":113,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["apps/auth/src/auth.service.ts:5",{"_index":114,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/auth/src/main.ts",{"_index":903,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/auth/src/resolvers/auth.resolver.ts",{"_index":104,"title":{},"body":{"classes/AuthResolver.html":{},"coverage.html":{}}}],["apps/auth/src/resolvers/auth.resolver.ts:6",{"_index":108,"title":{},"body":{"classes/AuthResolver.html":{}}}],["apps/documentation/src/documentation.controller.ts",{"_index":490,"title":{},"body":{"controllers/DocumentationController.html":{},"coverage.html":{}}}],["apps/documentation/src/documentation.controller.ts:9",{"_index":491,"title":{},"body":{"controllers/DocumentationController.html":{}}}],["apps/documentation/src/documentation.module.ts",{"_index":498,"title":{},"body":{"modules/DocumentationModule.html":{}}}],["apps/documentation/src/documentation.service.ts",{"_index":500,"title":{},"body":{"injectables/DocumentationService.html":{},"coverage.html":{}}}],["apps/documentation/src/documentation.service.ts:5",{"_index":501,"title":{},"body":{"injectables/DocumentationService.html":{}}}],["apps/documentation/src/main.ts",{"_index":905,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/escrow/src/escrow.controller.ts",{"_index":504,"title":{},"body":{"controllers/EscrowController.html":{},"coverage.html":{}}}],["apps/escrow/src/escrow.controller.ts:11",{"_index":505,"title":{},"body":{"controllers/EscrowController.html":{}}}],["apps/escrow/src/escrow.module.ts",{"_index":515,"title":{},"body":{"modules/EscrowModule.html":{}}}],["apps/escrow/src/escrow.service.ts",{"_index":522,"title":{},"body":{"injectables/EscrowService.html":{},"coverage.html":{}}}],["apps/escrow/src/escrow.service.ts:5",{"_index":523,"title":{},"body":{"injectables/EscrowService.html":{}}}],["apps/escrow/src/main.ts",{"_index":906,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/escrow/src/resolvers/escrow.resolver.ts",{"_index":519,"title":{},"body":{"classes/EscrowResolver.html":{},"coverage.html":{}}}],["apps/escrow/src/resolvers/escrow.resolver.ts:6",{"_index":521,"title":{},"body":{"classes/EscrowResolver.html":{}}}],["apps/escrow/src/typeorm.data",{"_index":907,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/gateway/src/gateway.module.ts",{"_index":531,"title":{},"body":{"modules/GatewayModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/gateway/src/gateway.service.ts",{"_index":542,"title":{},"body":{"injectables/GatewayService.html":{},"coverage.html":{}}}],["apps/gateway/src/gateway.service.ts:4",{"_index":543,"title":{},"body":{"injectables/GatewayService.html":{}}}],["apps/gateway/src/gateway.service.ts:7",{"_index":544,"title":{},"body":{"injectables/GatewayService.html":{}}}],["apps/gateway/src/main.ts",{"_index":911,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/media/src/main.ts",{"_index":912,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/media/src/media.controller.ts",{"_index":571,"title":{},"body":{"controllers/MediaController.html":{},"coverage.html":{}}}],["apps/media/src/media.controller.ts:11",{"_index":572,"title":{},"body":{"controllers/MediaController.html":{}}}],["apps/media/src/media.module.ts",{"_index":582,"title":{},"body":{"modules/MediaModule.html":{}}}],["apps/media/src/media.service.ts",{"_index":589,"title":{},"body":{"injectables/MediaService.html":{},"coverage.html":{}}}],["apps/media/src/media.service.ts:5",{"_index":590,"title":{},"body":{"injectables/MediaService.html":{}}}],["apps/media/src/resolvers/media.resolver.ts",{"_index":586,"title":{},"body":{"classes/MediaResolver.html":{},"coverage.html":{}}}],["apps/media/src/resolvers/media.resolver.ts:6",{"_index":588,"title":{},"body":{"classes/MediaResolver.html":{}}}],["apps/media/src/typeorm.data",{"_index":913,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/notification/src/main.ts",{"_index":914,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/notification/src/notification.controller.ts",{"_index":593,"title":{},"body":{"controllers/NotificationController.html":{},"coverage.html":{}}}],["apps/notification/src/notification.controller.ts:11",{"_index":594,"title":{},"body":{"controllers/NotificationController.html":{}}}],["apps/notification/src/notification.module.ts",{"_index":604,"title":{},"body":{"modules/NotificationModule.html":{}}}],["apps/notification/src/notification.service.ts",{"_index":611,"title":{},"body":{"injectables/NotificationService.html":{},"coverage.html":{}}}],["apps/notification/src/notification.service.ts:5",{"_index":612,"title":{},"body":{"injectables/NotificationService.html":{}}}],["apps/notification/src/resolvers/notification.resolver.ts",{"_index":608,"title":{},"body":{"classes/NotificationResolver.html":{},"coverage.html":{}}}],["apps/notification/src/resolvers/notification.resolver.ts:6",{"_index":610,"title":{},"body":{"classes/NotificationResolver.html":{}}}],["apps/notification/src/typeorm.data",{"_index":915,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/organization/src/entities/external/user.entity.ts",{"_index":834,"title":{},"body":{"classes/User-1.html":{},"coverage.html":{}}}],["apps/organization/src/entities/external/user.entity.ts:10",{"_index":835,"title":{},"body":{"classes/User-1.html":{}}}],["apps/organization/src/entities/external/user.entity.ts:14",{"_index":839,"title":{},"body":{"classes/User-1.html":{}}}],["apps/organization/src/entities/external/user.entity.ts:18",{"_index":837,"title":{},"body":{"classes/User-1.html":{}}}],["apps/organization/src/entities/organization",{"_index":658,"title":{},"body":{"entities/OrganizationMetadata.html":{},"coverage.html":{}}}],["apps/organization/src/entities/organization.entity.ts",{"_index":615,"title":{},"body":{"entities/Organization.html":{},"coverage.html":{}}}],["apps/organization/src/entities/organization.entity.ts:12",{"_index":625,"title":{},"body":{"entities/Organization.html":{}}}],["apps/organization/src/entities/organization.entity.ts:16",{"_index":629,"title":{},"body":{"entities/Organization.html":{}}}],["apps/organization/src/entities/organization.entity.ts:20",{"_index":628,"title":{},"body":{"entities/Organization.html":{}}}],["apps/organization/src/entities/organization.entity.ts:24",{"_index":618,"title":{},"body":{"entities/Organization.html":{}}}],["apps/organization/src/entities/organization.entity.ts:28",{"_index":626,"title":{},"body":{"entities/Organization.html":{}}}],["apps/organization/src/entities/organization.entity.ts:32",{"_index":623,"title":{},"body":{"entities/Organization.html":{}}}],["apps/organization/src/main.ts",{"_index":919,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/organization/src/migrations/1741518145374",{"_index":315,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"coverage.html":{}}}],["apps/organization/src/organization.controller.ts",{"_index":645,"title":{},"body":{"controllers/OrganizationController.html":{},"coverage.html":{}}}],["apps/organization/src/organization.controller.ts:11",{"_index":649,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["apps/organization/src/organization.controller.ts:16",{"_index":648,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["apps/organization/src/organization.module.ts",{"_index":690,"title":{},"body":{"modules/OrganizationModule.html":{}}}],["apps/organization/src/organization.service.ts",{"_index":705,"title":{},"body":{"injectables/OrganizationService.html":{},"coverage.html":{}}}],["apps/organization/src/organization.service.ts:14",{"_index":715,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["apps/organization/src/organization.service.ts:18",{"_index":711,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["apps/organization/src/organization.service.ts:24",{"_index":714,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["apps/organization/src/organization.service.ts:8",{"_index":710,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["apps/organization/src/resolvers/external/user.resolver.ts",{"_index":877,"title":{},"body":{"classes/UserResolver-1.html":{},"coverage.html":{}}}],["apps/organization/src/resolvers/external/user.resolver.ts:11",{"_index":881,"title":{},"body":{"classes/UserResolver-1.html":{}}}],["apps/organization/src/resolvers/external/user.resolver.ts:7",{"_index":878,"title":{},"body":{"classes/UserResolver-1.html":{}}}],["apps/organization/src/resolvers/organization.resolver.ts",{"_index":698,"title":{},"body":{"classes/OrganizationResolver.html":{},"coverage.html":{}}}],["apps/organization/src/resolvers/organization.resolver.ts:10",{"_index":703,"title":{},"body":{"classes/OrganizationResolver.html":{}}}],["apps/organization/src/resolvers/organization.resolver.ts:15",{"_index":701,"title":{},"body":{"classes/OrganizationResolver.html":{}}}],["apps/organization/src/resolvers/organization.resolver.ts:6",{"_index":700,"title":{},"body":{"classes/OrganizationResolver.html":{}}}],["apps/organization/src/typeorm.data",{"_index":921,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/payment/src/main.ts",{"_index":922,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/payment/src/payment.controller.ts",{"_index":724,"title":{},"body":{"controllers/PaymentController.html":{},"coverage.html":{}}}],["apps/payment/src/payment.controller.ts:11",{"_index":725,"title":{},"body":{"controllers/PaymentController.html":{}}}],["apps/payment/src/payment.module.ts",{"_index":735,"title":{},"body":{"modules/PaymentModule.html":{}}}],["apps/payment/src/payment.service.ts",{"_index":742,"title":{},"body":{"injectables/PaymentService.html":{},"coverage.html":{}}}],["apps/payment/src/payment.service.ts:5",{"_index":743,"title":{},"body":{"injectables/PaymentService.html":{}}}],["apps/payment/src/resolvers/payment.resolver.ts",{"_index":739,"title":{},"body":{"classes/PaymentResolver.html":{},"coverage.html":{}}}],["apps/payment/src/resolvers/payment.resolver.ts:6",{"_index":741,"title":{},"body":{"classes/PaymentResolver.html":{}}}],["apps/payment/src/typeorm.data",{"_index":923,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/property/src/main.ts",{"_index":924,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/property/src/property.controller.ts",{"_index":746,"title":{},"body":{"controllers/PropertyController.html":{},"coverage.html":{}}}],["apps/property/src/property.controller.ts:11",{"_index":747,"title":{},"body":{"controllers/PropertyController.html":{}}}],["apps/property/src/property.module.ts",{"_index":757,"title":{},"body":{"modules/PropertyModule.html":{}}}],["apps/property/src/property.service.ts",{"_index":764,"title":{},"body":{"injectables/PropertyService.html":{},"coverage.html":{}}}],["apps/property/src/property.service.ts:5",{"_index":765,"title":{},"body":{"injectables/PropertyService.html":{}}}],["apps/property/src/resolvers/property.resolver.ts",{"_index":761,"title":{},"body":{"classes/PropertyResolver.html":{},"coverage.html":{}}}],["apps/property/src/resolvers/property.resolver.ts:6",{"_index":763,"title":{},"body":{"classes/PropertyResolver.html":{}}}],["apps/property/src/typeorm.data",{"_index":925,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/user/src/entities/external/organization.entity.ts",{"_index":635,"title":{},"body":{"classes/Organization-1.html":{},"coverage.html":{}}}],["apps/user/src/entities/external/organization.entity.ts:10",{"_index":637,"title":{},"body":{"classes/Organization-1.html":{}}}],["apps/user/src/entities/role.entity.ts",{"_index":768,"title":{},"body":{"entities/Role.html":{},"coverage.html":{}}}],["apps/user/src/entities/role.entity.ts:13",{"_index":769,"title":{},"body":{"entities/Role.html":{}}}],["apps/user/src/entities/role.entity.ts:9",{"_index":771,"title":{},"body":{"entities/Role.html":{}}}],["apps/user/src/entities/user.entity.ts",{"_index":819,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["apps/user/src/entities/user.entity.ts:13",{"_index":822,"title":{},"body":{"entities/User.html":{}}}],["apps/user/src/entities/user.entity.ts:17",{"_index":823,"title":{},"body":{"entities/User.html":{}}}],["apps/user/src/entities/user.entity.ts:21",{"_index":821,"title":{},"body":{"entities/User.html":{}}}],["apps/user/src/entities/user.entity.ts:24",{"_index":826,"title":{},"body":{"entities/User.html":{}}}],["apps/user/src/entities/user.entity.ts:28",{"_index":827,"title":{},"body":{"entities/User.html":{}}}],["apps/user/src/entities/user.entity.ts:33",{"_index":829,"title":{},"body":{"entities/User.html":{}}}],["apps/user/src/entities/user.entity.ts:37",{"_index":825,"title":{},"body":{"entities/User.html":{}}}],["apps/user/src/entities/user.entity.ts:40",{"_index":824,"title":{},"body":{"entities/User.html":{}}}],["apps/user/src/main.ts",{"_index":927,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/user/src/migrations/1741519642145",{"_index":374,"title":{},"body":{"classes/CreateRoleTable1741519642145.html":{},"coverage.html":{}}}],["apps/user/src/migrations/1741519705062",{"_index":383,"title":{},"body":{"classes/CreateUserTable1741519705062.html":{},"coverage.html":{}}}],["apps/user/src/resolvers/user.resolver.ts",{"_index":869,"title":{},"body":{"classes/UserResolver.html":{},"coverage.html":{}}}],["apps/user/src/resolvers/user.resolver.ts:10",{"_index":873,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/user/src/resolvers/user.resolver.ts:15",{"_index":874,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/user/src/resolvers/user.resolver.ts:6",{"_index":871,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/user/src/seeder/seeder.module.ts",{"_index":779,"title":{},"body":{"modules/SeederModule.html":{}}}],["apps/user/src/seeder/seeder.service.ts",{"_index":783,"title":{},"body":{"injectables/SeederService.html":{},"coverage.html":{}}}],["apps/user/src/seeder/seeder.service.ts:13",{"_index":789,"title":{},"body":{"injectables/SeederService.html":{}}}],["apps/user/src/seeder/seeder.service.ts:18",{"_index":790,"title":{},"body":{"injectables/SeederService.html":{}}}],["apps/user/src/seeder/seeder.service.ts:8",{"_index":787,"title":{},"body":{"injectables/SeederService.html":{}}}],["apps/user/src/seeder/seeder.ts",{"_index":928,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/user/src/typeorm.data",{"_index":929,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/user/src/user.controller.ts",{"_index":848,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["apps/user/src/user.controller.ts:11",{"_index":849,"title":{},"body":{"controllers/UserController.html":{}}}],["apps/user/src/user.module.ts",{"_index":859,"title":{},"body":{"modules/UserModule.html":{}}}],["apps/user/src/user.service.ts",{"_index":887,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["apps/user/src/user.service.ts:17",{"_index":894,"title":{},"body":{"injectables/UserService.html":{}}}],["apps/user/src/user.service.ts:21",{"_index":893,"title":{},"body":{"injectables/UserService.html":{}}}],["apps/user/src/user.service.ts:9",{"_index":891,"title":{},"body":{"injectables/UserService.html":{}}}],["args",{"_index":1075,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arguments",{"_index":1055,"title":{},"body":{"miscellaneous/variables.html":{}}}],["argv",{"_index":947,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["array.from(crypto.getrandomvalues(new",{"_index":465,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["ascending",{"_index":209,"title":{},"body":{"entities/BaseEntity.html":{}}}],["async",{"_index":212,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"modules/DatabaseModule.html":{},"modules/GraphQLGatewayModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"classes/UserResolver-1.html":{}}}],["auth",{"_index":116,"title":{},"body":{"injectables/AuthService.html":{}}}],["auth.controller",{"_index":99,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":75,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth_client",{"_index":987,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth_host",{"_index":533,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["auth_port",{"_index":1078,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authcommand",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authcommand.ping_auth",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{}}}],["authcontroller",{"_index":66,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authmodule",{"_index":83,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"index.html":{},"modules.html":{}}}],["author",{"_index":1027,"title":{},"body":{"properties.html":{}}}],["authresolver",{"_index":101,"title":{"classes/AuthResolver.html":{}},"body":{"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"coverage.html":{}}}],["authservice",{"_index":74,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"index.html":{}}}],["autoloadentities",{"_index":447,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["autoschemafile",{"_index":567,"title":{},"body":{"modules/GraphQLMicroserviceModule.html":{}}}],["available",{"_index":1018,"title":{},"body":{"modules.html":{}}}],["await",{"_index":224,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"modules/DatabaseModule.html":{},"modules/GraphQLGatewayModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{}}}],["b.tostring(16).padstart(2",{"_index":468,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["based",{"_index":195,"title":{},"body":{"entities/BaseEntity.html":{}}}],["baseentity",{"_index":119,"title":{"entities/BaseEntity.html":{}},"body":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"entities/Role.html":{},"entities/User.html":{},"coverage.html":{}}}],["baseentitytypeorm",{"_index":141,"title":{},"body":{"entities/BaseEntity.html":{}}}],["baseentitytypeorm.usedatasource.call(this",{"_index":168,"title":{},"body":{"entities/BaseEntity.html":{}}}],["beforeinsert",{"_index":142,"title":{},"body":{"entities/BaseEntity.html":{}}}],["being",{"_index":202,"title":{},"body":{"entities/BaseEntity.html":{}}}],["bit",{"_index":459,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["boolean",{"_index":357,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"entities/OrganizationMetadata.html":{}}}],["bootstrap",{"_index":87,"title":{},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/SeederModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["bootstrapper",{"_index":210,"title":{"classes/Bootstrapper.html":{}},"body":{"classes/Bootstrapper.html":{},"coverage.html":{}}}],["both",{"_index":201,"title":{},"body":{"entities/BaseEntity.html":{}}}],["browse",{"_index":1019,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1020,"title":{},"body":{"modules.html":{}}}],["build",{"_index":805,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["build(...graphnames",{"_index":806,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["builder.util.ts",{"_index":804,"title":{},"body":{"classes/SubgraphsBuilder.html":{},"coverage.html":{}}}],["builder.util.ts:5",{"_index":807,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["bytes",{"_index":463,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["c",{"_index":1047,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cascade",{"_index":368,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"entities/OrganizationMetadata.html":{}}}],["cascade'})@joincolumn({name",{"_index":676,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["character",{"_index":333,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["characters",{"_index":472,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["check",{"_index":176,"title":{},"body":{"entities/BaseEntity.html":{}}}],["class",{"_index":36,"title":{"classes/AuthResolver.html":{},"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"classes/DatabaseUtil.html":{},"classes/EscrowResolver.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"classes/Organization-1.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"classes/SubgraphsBuilder.html":{},"classes/User-1.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{}},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"entities/Role.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["classdecorator",{"_index":1011,"title":{},"body":{"miscellaneous/functions.html":{}}}],["classes",{"_index":103,"title":{},"body":{"classes/AuthResolver.html":{},"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"classes/DatabaseUtil.html":{},"classes/EscrowResolver.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"classes/Organization-1.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"classes/SubgraphsBuilder.html":{},"classes/User-1.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"index.html":{}}}],["cli",{"_index":1048,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cli.ts",{"_index":946,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["client.enum.ts",{"_index":984,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["clientproxy",{"_index":890,"title":{},"body":{"injectables/UserService.html":{}}}],["clients",{"_index":255,"title":{},"body":{"modules/ClientsModule.html":{}}}],["clientsmodule",{"_index":243,"title":{"modules/ClientsModule.html":{}},"body":{"modules/ClientsModule.html":{},"modules/UserModule.html":{},"index.html":{},"modules.html":{}}}],["clientsmodule.register(microserviceclient.organization_client",{"_index":868,"title":{},"body":{"modules/UserModule.html":{}}}],["clientsmoduleoptions",{"_index":253,"title":{},"body":{"modules/ClientsModule.html":{}}}],["cluster_authmodule",{"_index":90,"title":{},"body":{"modules/AuthModule.html":{},"index.html":{}}}],["cluster_authmodule_imports",{"_index":91,"title":{},"body":{"modules/AuthModule.html":{},"index.html":{}}}],["cluster_authmodule_providers",{"_index":92,"title":{},"body":{"modules/AuthModule.html":{},"index.html":{}}}],["cluster_commonmodule",{"_index":258,"title":{},"body":{"modules/CommonModule.html":{},"index.html":{}}}],["cluster_commonmodule_exports",{"_index":259,"title":{},"body":{"modules/CommonModule.html":{},"index.html":{}}}],["cluster_commonmodule_imports",{"_index":260,"title":{},"body":{"modules/CommonModule.html":{},"index.html":{}}}],["cluster_commonmodule_providers",{"_index":261,"title":{},"body":{"modules/CommonModule.html":{},"index.html":{}}}],["cluster_documentationmodule",{"_index":496,"title":{},"body":{"modules/DocumentationModule.html":{},"index.html":{}}}],["cluster_documentationmodule_providers",{"_index":497,"title":{},"body":{"modules/DocumentationModule.html":{},"index.html":{}}}],["cluster_escrowmodule",{"_index":512,"title":{},"body":{"modules/EscrowModule.html":{},"index.html":{}}}],["cluster_escrowmodule_imports",{"_index":513,"title":{},"body":{"modules/EscrowModule.html":{}}}],["cluster_escrowmodule_providers",{"_index":514,"title":{},"body":{"modules/EscrowModule.html":{},"index.html":{}}}],["cluster_gatewaymodule",{"_index":526,"title":{},"body":{"modules/GatewayModule.html":{},"index.html":{}}}],["cluster_gatewaymodule_imports",{"_index":528,"title":{},"body":{"modules/GatewayModule.html":{},"index.html":{}}}],["cluster_gatewaymodule_providers",{"_index":527,"title":{},"body":{"modules/GatewayModule.html":{},"index.html":{}}}],["cluster_mediamodule",{"_index":579,"title":{},"body":{"modules/MediaModule.html":{},"index.html":{}}}],["cluster_mediamodule_imports",{"_index":580,"title":{},"body":{"modules/MediaModule.html":{}}}],["cluster_mediamodule_providers",{"_index":581,"title":{},"body":{"modules/MediaModule.html":{},"index.html":{}}}],["cluster_notificationmodule",{"_index":601,"title":{},"body":{"modules/NotificationModule.html":{},"index.html":{}}}],["cluster_notificationmodule_imports",{"_index":602,"title":{},"body":{"modules/NotificationModule.html":{}}}],["cluster_notificationmodule_providers",{"_index":603,"title":{},"body":{"modules/NotificationModule.html":{},"index.html":{}}}],["cluster_organizationmodule",{"_index":687,"title":{},"body":{"modules/OrganizationModule.html":{},"index.html":{}}}],["cluster_organizationmodule_imports",{"_index":688,"title":{},"body":{"modules/OrganizationModule.html":{},"index.html":{}}}],["cluster_organizationmodule_providers",{"_index":689,"title":{},"body":{"modules/OrganizationModule.html":{},"index.html":{}}}],["cluster_paymentmodule",{"_index":732,"title":{},"body":{"modules/PaymentModule.html":{},"index.html":{}}}],["cluster_paymentmodule_imports",{"_index":734,"title":{},"body":{"modules/PaymentModule.html":{}}}],["cluster_paymentmodule_providers",{"_index":733,"title":{},"body":{"modules/PaymentModule.html":{},"index.html":{}}}],["cluster_propertymodule",{"_index":754,"title":{},"body":{"modules/PropertyModule.html":{},"index.html":{}}}],["cluster_propertymodule_imports",{"_index":755,"title":{},"body":{"modules/PropertyModule.html":{}}}],["cluster_propertymodule_providers",{"_index":756,"title":{},"body":{"modules/PropertyModule.html":{},"index.html":{}}}],["cluster_seedermodule",{"_index":775,"title":{},"body":{"modules/SeederModule.html":{},"index.html":{}}}],["cluster_seedermodule_exports",{"_index":777,"title":{},"body":{"modules/SeederModule.html":{},"index.html":{}}}],["cluster_seedermodule_providers",{"_index":776,"title":{},"body":{"modules/SeederModule.html":{},"index.html":{}}}],["cluster_usermodule",{"_index":856,"title":{},"body":{"modules/UserModule.html":{},"index.html":{}}}],["cluster_usermodule_imports",{"_index":858,"title":{},"body":{"modules/UserModule.html":{},"index.html":{}}}],["cluster_usermodule_providers",{"_index":857,"title":{},"body":{"modules/UserModule.html":{},"index.html":{}}}],["cmd",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{}}}],["column",{"_index":173,"title":{},"body":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["column.propertyname",{"_index":186,"title":{},"body":{"entities/BaseEntity.html":{}}}],["column.target",{"_index":175,"title":{},"body":{"entities/BaseEntity.html":{}}}],["columnmetadata",{"_index":154,"title":{},"body":{"entities/BaseEntity.html":{}}}],["columnorder",{"_index":151,"title":{},"body":{"entities/BaseEntity.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["columnorder(9999",{"_index":162,"title":{},"body":{"entities/BaseEntity.html":{}}}],["columnorder(9999)@field(undefined",{"_index":131,"title":{},"body":{"entities/BaseEntity.html":{}}}],["columnorder(9999)@field(undefined)@createdatecolumn({name",{"_index":128,"title":{},"body":{"entities/BaseEntity.html":{}}}],["columnorder(undefined)@field(undefined)@primarygeneratedcolumn('uuid",{"_index":136,"title":{},"body":{"entities/BaseEntity.html":{}}}],["columnorder(value",{"_index":1005,"title":{},"body":{"miscellaneous/functions.html":{}}}],["columns",{"_index":194,"title":{},"body":{"entities/BaseEntity.html":{}}}],["command",{"_index":1049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["common.service",{"_index":264,"title":{},"body":{"modules/CommonModule.html":{}}}],["commonmodule",{"_index":93,"title":{"modules/CommonModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/UserModule.html":{},"index.html":{},"modules.html":{}}}],["commonservice",{"_index":262,"title":{"injectables/CommonService.html":{}},"body":{"modules/CommonModule.html":{},"injectables/CommonService.html":{},"coverage.html":{},"index.html":{}}}],["compared",{"_index":203,"title":{},"body":{"entities/BaseEntity.html":{}}}],["completed",{"_index":795,"title":{},"body":{"injectables/SeederService.html":{}}}],["config.service",{"_index":289,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["confighelper",{"_index":217,"title":{"classes/ConfigHelper.html":{}},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"modules/DatabaseModule.html":{},"classes/SubgraphsBuilder.html":{},"coverage.html":{}}}],["confighelper.databaseconfig",{"_index":444,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["confighelper.getinstance",{"_index":225,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/DatabaseModule.html":{},"classes/SubgraphsBuilder.html":{}}}],["confighelper.getmicroservicehosts(key",{"_index":815,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["confighelper.getmoduleport(module.name",{"_index":239,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["confighelper.instance",{"_index":291,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["confighelper.instance.appconfigservice",{"_index":296,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["confighelper.redisconfig",{"_index":227,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{}}}],["configmodule",{"_index":9,"title":{},"body":{"modules/AppConfigModule.html":{},"classes/ConfigHelper.html":{}}}],["configmodule.forroot",{"_index":14,"title":{},"body":{"modules/AppConfigModule.html":{},"classes/ConfigHelper.html":{}}}],["configservice",{"_index":48,"title":{},"body":{"injectables/AppConfigService.html":{},"classes/ConfigHelper.html":{}}}],["console.log",{"_index":793,"title":{},"body":{"injectables/SeederService.html":{}}}],["console.log(`inserted",{"_index":802,"title":{},"body":{"injectables/SeederService.html":{}}}],["const",{"_index":169,"title":{},"body":{"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"modules/GatewayModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{}}}],["constraint",{"_index":341,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["construct",{"_index":474,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["constructor",{"_index":46,"title":{},"body":{"injectables/AppConfigService.html":{},"classes/ConfigHelper.html":{},"injectables/GatewayService.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"injectables/SeederService.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{}}}],["constructor(configservice",{"_index":47,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["constructor(organizationclient",{"_index":889,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(organizationservice",{"_index":699,"title":{},"body":{"classes/OrganizationResolver.html":{},"classes/UserResolver-1.html":{}}}],["constructor(private",{"_index":61,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"controllers/DocumentationController.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResolver.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{}}}],["constructor(repository",{"_index":708,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["constructor(rolerepository",{"_index":786,"title":{},"body":{"injectables/SeederService.html":{}}}],["constructor(userservice",{"_index":870,"title":{},"body":{"classes/UserResolver.html":{}}}],["controller",{"_index":65,"title":{"controllers/AuthController.html":{},"controllers/DocumentationController.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AuthController.html":{},"controllers/DocumentationController.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controllers",{"_index":67,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"index.html":{}}}],["convert",{"_index":469,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["correct",{"_index":477,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["coverage",{"_index":898,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created_at",{"_index":129,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["createdat",{"_index":123,"title":{},"body":{"entities/BaseEntity.html":{}}}],["createdatecolumn",{"_index":143,"title":{},"body":{"entities/BaseEntity.html":{}}}],["createorganizationandmetatable.ts",{"_index":316,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"coverage.html":{}}}],["createorganizationandmetatable.ts:44",{"_index":325,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["createorganizationandmetatable.ts:6",{"_index":322,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["createorganizationandmetatable.ts:8",{"_index":327,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["createorganizationandmetatable1741518145374",{"_index":314,"title":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"coverage.html":{}}}],["createroletable.ts",{"_index":375,"title":{},"body":{"classes/CreateRoleTable1741519642145.html":{},"coverage.html":{}}}],["createroletable.ts:15",{"_index":377,"title":{},"body":{"classes/CreateRoleTable1741519642145.html":{}}}],["createroletable.ts:4",{"_index":376,"title":{},"body":{"classes/CreateRoleTable1741519642145.html":{}}}],["createroletable.ts:6",{"_index":378,"title":{},"body":{"classes/CreateRoleTable1741519642145.html":{}}}],["createroletable1741519642145",{"_index":373,"title":{"classes/CreateRoleTable1741519642145.html":{}},"body":{"classes/CreateRoleTable1741519642145.html":{},"coverage.html":{}}}],["createusertable.ts",{"_index":384,"title":{},"body":{"classes/CreateUserTable1741519705062.html":{},"coverage.html":{}}}],["createusertable.ts:26",{"_index":386,"title":{},"body":{"classes/CreateUserTable1741519705062.html":{}}}],["createusertable.ts:4",{"_index":385,"title":{},"body":{"classes/CreateUserTable1741519705062.html":{}}}],["createusertable.ts:6",{"_index":387,"title":{},"body":{"classes/CreateUserTable1741519705062.html":{}}}],["createusertable1741519705062",{"_index":382,"title":{"classes/CreateUserTable1741519705062.html":{}},"body":{"classes/CreateUserTable1741519705062.html":{},"coverage.html":{}}}],["custom",{"_index":183,"title":{},"body":{"entities/BaseEntity.html":{}}}],["d",{"_index":1074,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database",{"_index":306,"title":{},"body":{"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"injectables/SeederService.html":{}}}],["database_host",{"_index":24,"title":{},"body":{"modules/AppConfigModule.html":{},"miscellaneous/variables.html":{}}}],["database_name",{"_index":28,"title":{},"body":{"modules/AppConfigModule.html":{},"miscellaneous/variables.html":{}}}],["database_password",{"_index":27,"title":{},"body":{"modules/AppConfigModule.html":{},"miscellaneous/variables.html":{}}}],["database_port",{"_index":25,"title":{},"body":{"modules/AppConfigModule.html":{},"miscellaneous/variables.html":{}}}],["database_type",{"_index":23,"title":{},"body":{"modules/AppConfigModule.html":{},"miscellaneous/variables.html":{}}}],["database_username",{"_index":26,"title":{},"body":{"modules/AppConfigModule.html":{},"miscellaneous/variables.html":{}}}],["databaseconfig",{"_index":274,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["databasemodule",{"_index":427,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/DatabaseModule.html":{},"modules/OrganizationModule.html":{},"modules/UserModule.html":{},"index.html":{},"modules.html":{}}}],["databasemodule.init(schema.organization",{"_index":696,"title":{},"body":{"modules/OrganizationModule.html":{}}}],["databasemodule.init(schema.user",{"_index":866,"title":{},"body":{"modules/UserModule.html":{}}}],["databasemodule.loadentities([organization",{"_index":697,"title":{},"body":{"modules/OrganizationModule.html":{}}}],["databasemodule.loadentities([user",{"_index":867,"title":{},"body":{"modules/UserModule.html":{}}}],["databaseutil",{"_index":156,"title":{"classes/DatabaseUtil.html":{}},"body":{"entities/BaseEntity.html":{},"classes/DatabaseUtil.html":{},"coverage.html":{}}}],["databaseutil.generateuuidv7",{"_index":165,"title":{},"body":{"entities/BaseEntity.html":{}}}],["datasource",{"_index":144,"title":{"classes/DataSource.html":{}},"body":{"entities/BaseEntity.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"coverage.html":{}}}],["datasource.entitymetadatasmap.get(this",{"_index":171,"title":{},"body":{"entities/BaseEntity.html":{}}}],["datasource.getinstance('escrow",{"_index":1099,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource.getinstance('media",{"_index":1100,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource.getinstance('notification",{"_index":1101,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource.getinstance('organization",{"_index":1102,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource.getinstance('payment",{"_index":1103,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource.getinstance('property",{"_index":1104,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource.getinstance('user",{"_index":1105,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasourceoptions",{"_index":434,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["datasourcepath",{"_index":948,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":127,"title":{},"body":{"entities/BaseEntity.html":{}}}],["date.now",{"_index":455,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["db",{"_index":419,"title":{},"body":{"classes/DataSource.html":{}}}],["decimal",{"_index":667,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["declarations",{"_index":86,"title":{},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/SeederModule.html":{},"modules/UserModule.html":{},"index.html":{}}}],["decorator",{"_index":196,"title":{},"body":{"entities/BaseEntity.html":{}}}],["decorators",{"_index":70,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"entities/BaseEntity.html":{},"controllers/DocumentationController.html":{},"controllers/EscrowController.html":{},"classes/EscrowResolver.html":{},"controllers/MediaController.html":{},"classes/MediaResolver.html":{},"controllers/NotificationController.html":{},"classes/NotificationResolver.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"controllers/PaymentController.html":{},"classes/PaymentResolver.html":{},"controllers/PropertyController.html":{},"classes/PropertyResolver.html":{},"entities/Role.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{}}}],["default",{"_index":188,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"entities/OrganizationMetadata.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["default('development",{"_index":34,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["defaultval",{"_index":1009,"title":{},"body":{"miscellaneous/functions.html":{}}}],["defined",{"_index":49,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"controllers/MediaController.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"entities/Role.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":367,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["deleted_at",{"_index":134,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["deletedat",{"_index":124,"title":{},"body":{"entities/BaseEntity.html":{}}}],["deletedatecolumn",{"_index":145,"title":{},"body":{"entities/BaseEntity.html":{}}}],["demandoption",{"_index":1045,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dependencies",{"_index":84,"title":{"dependencies.html":{}},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/SeederModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"index.html":{}}}],["deposit_fee_percentage",{"_index":355,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"entities/OrganizationMetadata.html":{}}}],["depositfeepercentage",{"_index":661,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["describe",{"_index":1044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":380,"title":{},"body":{"classes/CreateRoleTable1741519642145.html":{},"entities/Role.html":{},"properties.html":{}}}],["development",{"_index":450,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["directive",{"_index":638,"title":{},"body":{"classes/Organization-1.html":{},"classes/User-1.html":{},"miscellaneous/functions.html":{}}}],["directive('@external",{"_index":642,"title":{},"body":{"classes/Organization-1.html":{},"classes/User-1.html":{}}}],["directive('@requires(fields",{"_index":842,"title":{},"body":{"classes/User-1.html":{}}}],["directive.decorator.ts",{"_index":944,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["documentation",{"_index":899,"title":{},"body":{"coverage.html":{}}}],["documentation.controller",{"_index":499,"title":{},"body":{"modules/DocumentationModule.html":{}}}],["documentation.service",{"_index":493,"title":{},"body":{"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{}}}],["documentationcontroller",{"_index":489,"title":{"controllers/DocumentationController.html":{}},"body":{"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"coverage.html":{}}}],["documentationmodule",{"_index":495,"title":{"modules/DocumentationModule.html":{}},"body":{"modules/DocumentationModule.html":{},"index.html":{},"modules.html":{}}}],["documentationservice",{"_index":492,"title":{"injectables/DocumentationService.html":{}},"body":{"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"coverage.html":{},"index.html":{}}}],["domain",{"_index":349,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"entities/OrganizationMetadata.html":{}}}],["dotenv",{"_index":402,"title":{},"body":{"classes/DataSource.html":{},"dependencies.html":{}}}],["dotenv.config",{"_index":407,"title":{},"body":{"classes/DataSource.html":{}}}],["down",{"_index":320,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["down(queryrunner",{"_index":323,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["driver",{"_index":559,"title":{},"body":{"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{}}}],["drop",{"_index":370,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["dynamically",{"_index":446,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["dynamicmodule",{"_index":251,"title":{},"body":{"modules/ClientsModule.html":{},"modules/DatabaseModule.html":{},"modules/GraphQLGatewayModule.html":{}}}],["e.g",{"_index":1050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["email",{"_index":337,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{},"entities/Organization.html":{},"entities/User.html":{}}}],["enable",{"_index":449,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["ensure",{"_index":471,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["ensuring",{"_index":476,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["entities",{"_index":120,"title":{},"body":{"entities/BaseEntity.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"entities/Role.html":{},"entities/User.html":{},"index.html":{}}}],["entities/external/user.entity",{"_index":884,"title":{},"body":{"classes/UserResolver-1.html":{}}}],["entities/organization",{"_index":695,"title":{},"body":{"modules/OrganizationModule.html":{}}}],["entities/organization.entity",{"_index":694,"title":{},"body":{"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"classes/UserResolver-1.html":{}}}],["entities/role.entity",{"_index":781,"title":{},"body":{"modules/SeederModule.html":{},"injectables/SeederService.html":{},"modules/UserModule.html":{}}}],["entities/user.entity",{"_index":864,"title":{},"body":{"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["entity",{"_index":118,"title":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"entities/Role.html":{},"entities/User.html":{}},"body":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"entities/Role.html":{},"entities/User.html":{},"classes/User-1.html":{},"coverage.html":{}}}],["entityclassorschema",{"_index":433,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["enumerations",{"_index":982,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":406,"title":{},"body":{"classes/DataSource.html":{}}}],["environment",{"_index":290,"title":{},"body":{"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/GatewayModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.is_doc_env",{"_index":1091,"title":{},"body":{"miscellaneous/variables.html":{}}}],["escrow",{"_index":524,"title":{},"body":{"injectables/EscrowService.html":{}}}],["escrow.controller",{"_index":516,"title":{},"body":{"modules/EscrowModule.html":{}}}],["escrow.service",{"_index":507,"title":{},"body":{"controllers/EscrowController.html":{},"modules/EscrowModule.html":{}}}],["escrow_client",{"_index":988,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["escrow_host",{"_index":534,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["escrow_port",{"_index":1079,"title":{},"body":{"miscellaneous/variables.html":{}}}],["escrowcommand",{"_index":508,"title":{},"body":{"controllers/EscrowController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["escrowcommand.ping_escrow",{"_index":509,"title":{},"body":{"controllers/EscrowController.html":{}}}],["escrowcontroller",{"_index":503,"title":{"controllers/EscrowController.html":{}},"body":{"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"coverage.html":{}}}],["escrowmodule",{"_index":511,"title":{"modules/EscrowModule.html":{}},"body":{"modules/EscrowModule.html":{},"index.html":{},"modules.html":{}}}],["escrowresolver",{"_index":517,"title":{"classes/EscrowResolver.html":{}},"body":{"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"coverage.html":{}}}],["escrowservice",{"_index":506,"title":{"injectables/EscrowService.html":{}},"body":{"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"injectables/EscrowService.html":{},"coverage.html":{},"index.html":{}}}],["exist",{"_index":178,"title":{},"body":{"entities/BaseEntity.html":{}}}],["export",{"_index":35,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"entities/Role.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":89,"title":{},"body":{"modules/AuthModule.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/GraphQLGatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/SeederModule.html":{},"modules/UserModule.html":{},"index.html":{}}}],["express",{"_index":961,"title":{},"body":{"dependencies.html":{}}}],["extending",{"_index":640,"title":{},"body":{"classes/Organization-1.html":{},"classes/User-1.html":{}}}],["extends",{"_index":159,"title":{},"body":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["external/organization.entity",{"_index":832,"title":{},"body":{"entities/User.html":{}}}],["fallback",{"_index":187,"title":{},"body":{"entities/BaseEntity.html":{}}}],["false",{"_index":358,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"entities/OrganizationMetadata.html":{}}}],["federated",{"_index":840,"title":{},"body":{"classes/User-1.html":{}}}],["federation",{"_index":568,"title":{},"body":{"modules/GraphQLMicroserviceModule.html":{},"classes/Organization-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["fetch",{"_index":845,"title":{},"body":{"classes/User-1.html":{}}}],["field",{"_index":149,"title":{},"body":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"entities/OrganizationMetadata.html":{},"entities/Role.html":{},"entities/User.html":{},"classes/User-1.html":{}}}],["field(undefined",{"_index":620,"title":{},"body":{"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"entities/Role.html":{},"entities/User.html":{},"classes/User-1.html":{}}}],["field(undefined)@column",{"_index":617,"title":{},"body":{"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"entities/User.html":{}}}],["field(undefined)@column({name",{"_index":627,"title":{},"body":{"entities/Organization.html":{},"entities/OrganizationMetadata.html":{}}}],["field(undefined)@column({unique",{"_index":624,"title":{},"body":{"entities/Organization.html":{}}}],["field(undefined)@directive('@external",{"_index":636,"title":{},"body":{"classes/Organization-1.html":{}}}],["field(undefined)@manytoone(undefined)@joincolumn({name",{"_index":828,"title":{},"body":{"entities/User.html":{}}}],["field(undefined)@primarycolumn",{"_index":770,"title":{},"body":{"entities/Role.html":{}}}],["file",{"_index":5,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"entities/Role.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["find",{"_index":888,"title":{},"body":{"injectables/UserService.html":{}}}],["find_organization_by_id",{"_index":1096,"title":{},"body":{"miscellaneous/variables.html":{}}}],["findall",{"_index":706,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["findone",{"_index":707,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["findone(where",{"_index":712,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["findonebyid",{"_index":646,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["findonebyid(id",{"_index":647,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["findoptionswhere",{"_index":713,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["firstname",{"_index":389,"title":{},"body":{"classes/CreateUserTable1741519705062.html":{},"entities/User.html":{}}}],["fk_a2cecd1a3531c0b041e29ba46e1",{"_index":393,"title":{},"body":{"classes/CreateUserTable1741519705062.html":{}}}],["fk_ad9c5b4a8fb0a54d63b84710190",{"_index":364,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["float",{"_index":681,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["foreign",{"_index":365,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["format",{"_index":478,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["function",{"_index":184,"title":{},"body":{"entities/BaseEntity.html":{},"coverage.html":{}}}],["functions",{"_index":1000,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gateway",{"_index":545,"title":{},"body":{"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{}}}],["gateway.module.ts",{"_index":547,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["gateway.module.ts:10",{"_index":549,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["gateway.service",{"_index":532,"title":{},"body":{"modules/GatewayModule.html":{}}}],["gateway_host",{"_index":1087,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gateway_port",{"_index":1080,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gatewaymodule",{"_index":525,"title":{"modules/GatewayModule.html":{}},"body":{"modules/GatewayModule.html":{},"index.html":{},"modules.html":{}}}],["gatewayservice",{"_index":530,"title":{"injectables/GatewayService.html":{}},"body":{"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"coverage.html":{},"index.html":{}}}],["generate",{"_index":460,"title":{},"body":{"classes/DatabaseUtil.html":{},"miscellaneous/variables.html":{}}}],["generateuuid",{"_index":163,"title":{},"body":{"entities/BaseEntity.html":{}}}],["generateuuidv7",{"_index":453,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["getcolumnorder",{"_index":152,"title":{},"body":{"entities/BaseEntity.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getcolumnorder(target",{"_index":1007,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getcolumnorder(target.prototype",{"_index":185,"title":{},"body":{"entities/BaseEntity.html":{}}}],["getconfig",{"_index":45,"title":{},"body":{"injectables/AppConfigService.html":{},"classes/ConfigHelper.html":{}}}],["getconfig(key",{"_index":55,"title":{},"body":{"injectables/AppConfigService.html":{},"classes/ConfigHelper.html":{}}}],["getdatabaseconfig",{"_index":287,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["gethello",{"_index":69,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/DocumentationController.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"injectables/EscrowService.html":{},"controllers/MediaController.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"injectables/NotificationService.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"injectables/PropertyService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["getinstance",{"_index":270,"title":{},"body":{"classes/ConfigHelper.html":{},"classes/DataSource.html":{}}}],["getinstance(schema",{"_index":397,"title":{},"body":{"classes/DataSource.html":{}}}],["getmicroservicehosts",{"_index":271,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["getmicroservicehosts(microservicename",{"_index":279,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["getmoduleport",{"_index":272,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["getmoduleport(modulename",{"_index":282,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["getordersafely",{"_index":172,"title":{},"body":{"entities/BaseEntity.html":{}}}],["getordersafely(xcolumn",{"_index":205,"title":{},"body":{"entities/BaseEntity.html":{}}}],["getordersafely(ycolumn",{"_index":207,"title":{},"body":{"entities/BaseEntity.html":{}}}],["getredisconfig",{"_index":285,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["global",{"_index":250,"title":{},"body":{"modules/ClientsModule.html":{},"modules/GraphQLGatewayModule.html":{}}}],["graph",{"_index":1017,"title":{},"body":{"modules.html":{}}}],["graphname",{"_index":814,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["graphname?.split('_host')?.[0",{"_index":813,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["graphnames",{"_index":808,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["graphnames.map((graphname",{"_index":811,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["graphql",{"_index":966,"title":{},"body":{"dependencies.html":{}}}],["graphqlfederationdirective",{"_index":631,"title":{},"body":{"entities/Organization.html":{},"classes/Organization-1.html":{},"entities/User.html":{},"classes/User-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["graphqlfederationdirective('@extends",{"_index":639,"title":{},"body":{"classes/Organization-1.html":{},"classes/User-1.html":{}}}],["graphqlfederationdirective('@key(fields",{"_index":634,"title":{},"body":{"entities/Organization.html":{},"classes/Organization-1.html":{},"entities/User.html":{},"classes/User-1.html":{}}}],["graphqlfederationdirective(directive",{"_index":1010,"title":{},"body":{"miscellaneous/functions.html":{}}}],["graphqlgatewaymodule",{"_index":529,"title":{"modules/GraphQLGatewayModule.html":{}},"body":{"modules/GatewayModule.html":{},"modules/GraphQLGatewayModule.html":{},"index.html":{},"modules.html":{}}}],["graphqlgatewaymodule.register",{"_index":541,"title":{},"body":{"modules/GatewayModule.html":{}}}],["graphqlmicroservicemodule",{"_index":94,"title":{"modules/GraphQLMicroserviceModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/EscrowModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/UserModule.html":{},"index.html":{},"modules.html":{}}}],["graphqlmodule",{"_index":551,"title":{},"body":{"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{}}}],["graphqlmodule.forroot",{"_index":566,"title":{},"body":{"modules/GraphQLMicroserviceModule.html":{}}}],["graphqlmodule.forrootasync",{"_index":558,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["hello",{"_index":115,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DocumentationService.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"injectables/MediaService.html":{},"injectables/NotificationService.html":{},"injectables/OrganizationService.html":{},"injectables/PaymentService.html":{},"injectables/PropertyService.html":{},"injectables/UserService.html":{}}}],["help().argv",{"_index":1061,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hex",{"_index":470,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["high",{"_index":189,"title":{},"body":{"entities/BaseEntity.html":{}}}],["host",{"_index":233,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/SubgraphsBuilder.html":{}}}],["host}:${port}/graphql",{"_index":817,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["id",{"_index":125,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/User.html":{},"classes/User-1.html":{},"classes/UserResolver-1.html":{}}}],["identifier",{"_index":900,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":317,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["import",{"_index":7,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"entities/Role.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":13,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/AuthModule.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/SeederModule.html":{},"modules/UserModule.html":{}}}],["index",{"_index":43,"title":{"index.html":{}},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"controllers/MediaController.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"entities/Role.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"entities/Role.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{}}}],["init",{"_index":213,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/DatabaseModule.html":{}}}],["init(module",{"_index":214,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["init(schema",{"_index":429,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["inject",{"_index":895,"title":{},"body":{"injectables/UserService.html":{}}}],["inject(microserviceclient.organization_client",{"_index":896,"title":{},"body":{"injectables/UserService.html":{}}}],["injectable",{"_index":39,"title":{"injectables/AppConfigService.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/DocumentationService.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"injectables/MediaService.html":{},"injectables/NotificationService.html":{},"injectables/OrganizationService.html":{},"injectables/PaymentService.html":{},"injectables/PropertyService.html":{},"injectables/SeederService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppConfigService.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/DocumentationService.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"injectables/MediaService.html":{},"injectables/NotificationService.html":{},"injectables/OrganizationService.html":{},"injectables/PaymentService.html":{},"injectables/PropertyService.html":{},"injectables/SeederService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":41,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/DocumentationService.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"injectables/MediaService.html":{},"injectables/NotificationService.html":{},"injectables/OrganizationService.html":{},"injectables/PaymentService.html":{},"injectables/PropertyService.html":{},"injectables/SeederService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["injectrepository",{"_index":716,"title":{},"body":{"injectables/OrganizationService.html":{},"injectables/SeederService.html":{},"injectables/UserService.html":{}}}],["injectrepository(organization",{"_index":719,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["injectrepository(role",{"_index":791,"title":{},"body":{"injectables/SeederService.html":{}}}],["injectrepository(user",{"_index":897,"title":{},"body":{"injectables/UserService.html":{}}}],["instance",{"_index":269,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["introspectandcompose",{"_index":555,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["ioredis",{"_index":968,"title":{},"body":{"dependencies.html":{}}}],["is_doc_env",{"_index":1088,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isdocenv",{"_index":945,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isglobal",{"_index":15,"title":{},"body":{"modules/AppConfigModule.html":{},"classes/ConfigHelper.html":{}}}],["joi",{"_index":12,"title":{},"body":{"modules/AppConfigModule.html":{},"dependencies.html":{}}}],["joi.number().required",{"_index":22,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["joi.object",{"_index":18,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["joi.string",{"_index":30,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["joi.string().required",{"_index":20,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["join",{"_index":473,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["joincolumn",{"_index":682,"title":{},"body":{"entities/OrganizationMetadata.html":{},"entities/User.html":{}}}],["key",{"_index":59,"title":{},"body":{"injectables/AppConfigService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/Organization-1.html":{},"classes/SubgraphsBuilder.html":{}}}],["keypart",{"_index":812,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["lastname",{"_index":390,"title":{},"body":{"classes/CreateUserTable1741519705062.html":{},"entities/User.html":{}}}],["legend",{"_index":85,"title":{},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/SeederModule.html":{},"modules/UserModule.html":{},"index.html":{}}}],["libs/.../auth.command.ts",{"_index":1028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../column",{"_index":1003,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/.../environment.constant.ts",{"_index":1029,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../escrow.command.ts",{"_index":1030,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../graphql",{"_index":1004,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/.../media.command.ts",{"_index":1031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../micro",{"_index":983,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../notification.command.ts",{"_index":1032,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../organization.command.ts",{"_index":1033,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../payment.command.ts",{"_index":1034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../property.command.ts",{"_index":1035,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../roles.enum.ts",{"_index":985,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../schema.constant.ts",{"_index":1036,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../user.command.ts",{"_index":1039,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/common/src/clients/clients.module.ts",{"_index":244,"title":{},"body":{"modules/ClientsModule.html":{}}}],["libs/common/src/clients/clients.module.ts:12",{"_index":247,"title":{},"body":{"modules/ClientsModule.html":{}}}],["libs/common/src/common.module.ts",{"_index":263,"title":{},"body":{"modules/CommonModule.html":{}}}],["libs/common/src/common.service.ts",{"_index":266,"title":{},"body":{"injectables/CommonService.html":{},"coverage.html":{}}}],["libs/common/src/config/config.helper.ts",{"_index":267,"title":{},"body":{"classes/ConfigHelper.html":{},"coverage.html":{}}}],["libs/common/src/config/config.helper.ts:13",{"_index":278,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.helper.ts:31",{"_index":286,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.helper.ts:37",{"_index":288,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.helper.ts:47",{"_index":283,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.helper.ts:53",{"_index":280,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.helper.ts:63",{"_index":277,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.helper.ts:8",{"_index":276,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.helper.ts:9",{"_index":275,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.module.ts",{"_index":6,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["libs/common/src/config/config.service.ts",{"_index":42,"title":{},"body":{"injectables/AppConfigService.html":{},"coverage.html":{}}}],["libs/common/src/config/config.service.ts:5",{"_index":50,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["libs/common/src/config/config.service.ts:8",{"_index":57,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["libs/common/src/constants/commands/auth.command.ts",{"_index":930,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/commands/escrow.command.ts",{"_index":931,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/commands/media.command.ts",{"_index":932,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/commands/notification.command.ts",{"_index":933,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/commands/organization.command.ts",{"_index":934,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/commands/payment.command.ts",{"_index":935,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/commands/property.command.ts",{"_index":936,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/commands/user.command.ts",{"_index":937,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/environment.constant.ts",{"_index":938,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/schema.constant.ts",{"_index":939,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/database/database.module.ts",{"_index":428,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["libs/common/src/database/database.module.ts:38",{"_index":435,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["libs/common/src/database/database.module.ts:9",{"_index":430,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["libs/common/src/database/entities/base.entity.ts",{"_index":121,"title":{},"body":{"entities/BaseEntity.html":{},"coverage.html":{}}}],["libs/common/src/database/entities/base.entity.ts:22",{"_index":137,"title":{},"body":{"entities/BaseEntity.html":{}}}],["libs/common/src/database/entities/base.entity.ts:27",{"_index":130,"title":{},"body":{"entities/BaseEntity.html":{}}}],["libs/common/src/database/entities/base.entity.ts:32",{"_index":140,"title":{},"body":{"entities/BaseEntity.html":{}}}],["libs/common/src/database/entities/base.entity.ts:37",{"_index":135,"title":{},"body":{"entities/BaseEntity.html":{}}}],["libs/common/src/decorators/column",{"_index":940,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/decorators/graphql",{"_index":943,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/enums/micro",{"_index":986,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/common/src/enums/roles.enum.ts",{"_index":995,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/common/src/graphql/graphql",{"_index":546,"title":{},"body":{"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{}}}],["libs/common/src/utils/bootstrapper.util.ts",{"_index":211,"title":{},"body":{"classes/Bootstrapper.html":{},"coverage.html":{}}}],["libs/common/src/utils/bootstrapper.util.ts:7",{"_index":215,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["libs/common/src/utils/data",{"_index":395,"title":{},"body":{"classes/DataSource.html":{},"coverage.html":{}}}],["libs/common/src/utils/database.util.ts",{"_index":452,"title":{},"body":{"classes/DatabaseUtil.html":{},"coverage.html":{}}}],["libs/common/src/utils/database.util.ts:2",{"_index":454,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["libs/common/src/utils/subgraphs",{"_index":803,"title":{},"body":{"classes/SubgraphsBuilder.html":{},"coverage.html":{}}}],["license",{"_index":1025,"title":{},"body":{"properties.html":{}}}],["listening",{"_index":242,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["load",{"_index":404,"title":{},"body":{"classes/DataSource.html":{}}}],["loadentities",{"_index":431,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["loadentities(entities",{"_index":432,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["localhost",{"_index":413,"title":{},"body":{"classes/DataSource.html":{}}}],["logger",{"_index":216,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["logger(`${module.name}bootstrap",{"_index":223,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["logger.log(`microservice",{"_index":241,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["logo",{"_index":350,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"entities/OrganizationMetadata.html":{}}}],["m",{"_index":1043,"title":{},"body":{"miscellaneous/variables.html":{}}}],["managed",{"_index":643,"title":{},"body":{"classes/Organization-1.html":{}}}],["manytoone",{"_index":830,"title":{},"body":{"entities/User.html":{}}}],["map((b",{"_index":467,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["matching",{"_index":38,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"entities/Role.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["media",{"_index":591,"title":{},"body":{"injectables/MediaService.html":{}}}],["media.controller",{"_index":583,"title":{},"body":{"modules/MediaModule.html":{}}}],["media.service",{"_index":574,"title":{},"body":{"controllers/MediaController.html":{},"modules/MediaModule.html":{}}}],["media_client",{"_index":989,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["media_host",{"_index":535,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["media_port",{"_index":1081,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mediacommand",{"_index":575,"title":{},"body":{"controllers/MediaController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mediacommand.ping_media",{"_index":576,"title":{},"body":{"controllers/MediaController.html":{}}}],["mediacontroller",{"_index":570,"title":{"controllers/MediaController.html":{}},"body":{"controllers/MediaController.html":{},"modules/MediaModule.html":{},"coverage.html":{}}}],["mediamodule",{"_index":578,"title":{"modules/MediaModule.html":{}},"body":{"modules/MediaModule.html":{},"index.html":{},"modules.html":{}}}],["mediaresolver",{"_index":584,"title":{"classes/MediaResolver.html":{}},"body":{"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"coverage.html":{}}}],["mediaservice",{"_index":573,"title":{"injectables/MediaService.html":{}},"body":{"controllers/MediaController.html":{},"modules/MediaModule.html":{},"injectables/MediaService.html":{},"coverage.html":{},"index.html":{}}}],["member",{"_index":999,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["messagepattern",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{}}}],["messagepattern({cmd",{"_index":71,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{}}}],["meta",{"_index":170,"title":{},"body":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"injectables/OrganizationService.html":{}}}],["meta.columns",{"_index":197,"title":{},"body":{"entities/BaseEntity.html":{}}}],["meta.columns].sort((xcolumn",{"_index":198,"title":{},"body":{"entities/BaseEntity.html":{}}}],["meta.organization",{"_index":622,"title":{},"body":{"entities/Organization.html":{}}}],["metadata",{"_index":974,"title":{},"body":{"dependencies.html":{}}}],["metadata.entity",{"_index":632,"title":{},"body":{"entities/Organization.html":{},"modules/OrganizationModule.html":{}}}],["metadata.entity.ts",{"_index":659,"title":{},"body":{"entities/OrganizationMetadata.html":{},"coverage.html":{}}}],["metadata.entity.ts:16",{"_index":677,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["metadata.entity.ts:20",{"_index":679,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["metadata.entity.ts:24",{"_index":670,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["metadata.entity.ts:28",{"_index":671,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["metadata.entity.ts:38",{"_index":680,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["metadata.entity.ts:48",{"_index":668,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["metadata.entity.ts:52",{"_index":664,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["methods",{"_index":44,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"controllers/MediaController.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{}}}],["microservice",{"_index":641,"title":{},"body":{"classes/Organization-1.html":{},"classes/User-1.html":{},"miscellaneous/variables.html":{}}}],["microservice.module.ts",{"_index":563,"title":{},"body":{"modules/GraphQLMicroserviceModule.html":{}}}],["microserviceclient",{"_index":861,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["microservicename",{"_index":281,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["microservicename}_host`.touppercase",{"_index":311,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["microservicename}_port`.touppercase",{"_index":312,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["microserviceoptions",{"_index":220,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["migration",{"_index":1058,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migration:${command",{"_index":1071,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migrationinterface",{"_index":318,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["migrations",{"_index":423,"title":{},"body":{"classes/DataSource.html":{}}}],["migrationstablename",{"_index":408,"title":{},"body":{"classes/DataSource.html":{}}}],["miscellaneous",{"_index":981,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":0,"title":{"modules/AppConfigModule.html":{},"modules/AuthModule.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/SeederModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppConfigModule.html":{},"modules/AuthModule.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/SeederModule.html":{},"modules/UserModule.html":{},"index.html":{}}}],["modulename",{"_index":284,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["modulename?.split('module')?.[0]?.touppercase",{"_index":308,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppConfigModule.html":{},"modules/AuthModule.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/SeederModule.html":{},"modules/UserModule.html":{},"index.html":{},"modules.html":{}}}],["name",{"_index":52,"title":{},"body":{"injectables/AppConfigService.html":{},"classes/AuthResolver.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/EscrowResolver.html":{},"modules/GraphQLGatewayModule.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"entities/Organization.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"entities/Role.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["names",{"_index":248,"title":{},"body":{"modules/ClientsModule.html":{}}}],["names.map((name",{"_index":256,"title":{},"body":{"modules/ClientsModule.html":{}}}],["needed",{"_index":1059,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nestclientsmodule",{"_index":252,"title":{},"body":{"modules/ClientsModule.html":{}}}],["nestclientsmodule.register(clients",{"_index":257,"title":{},"body":{"modules/ClientsModule.html":{}}}],["nestfactory",{"_index":218,"title":{},"body":{"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{}}}],["nestfactory.create(module",{"_index":229,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["nestfactory.createapplicationcontext",{"_index":293,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["nestjs/apollo",{"_index":554,"title":{},"body":{"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":11,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"modules/DatabaseModule.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"injectables/PropertyService.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":10,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"classes/ConfigHelper.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":219,"title":{},"body":{"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{},"dependencies.html":{}}}],["nestjs/graphql",{"_index":111,"title":{},"body":{"classes/AuthResolver.html":{},"entities/BaseEntity.html":{},"classes/EscrowResolver.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"entities/Role.html":{},"entities/User.html":{},"classes/User-1.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":960,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":439,"title":{},"body":{"modules/DatabaseModule.html":{},"injectables/OrganizationService.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/typeorm/dist/interfaces/entity",{"_index":440,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["new",{"_index":222,"title":{},"body":{"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/GraphQLGatewayModule.html":{},"coverage.html":{}}}],["node",{"_index":1066,"title":{},"body":{"miscellaneous/variables.html":{}}}],["node:process",{"_index":401,"title":{},"body":{"classes/DataSource.html":{}}}],["node_env",{"_index":29,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["node_modules/typeorm/cli.js",{"_index":1070,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notification",{"_index":613,"title":{},"body":{"injectables/NotificationService.html":{}}}],["notification.controller",{"_index":605,"title":{},"body":{"modules/NotificationModule.html":{}}}],["notification.service",{"_index":596,"title":{},"body":{"controllers/NotificationController.html":{},"modules/NotificationModule.html":{}}}],["notification_client",{"_index":990,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["notification_host",{"_index":536,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["notification_port",{"_index":1082,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notificationcommand",{"_index":597,"title":{},"body":{"controllers/NotificationController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["notificationcommand.ping_notification",{"_index":598,"title":{},"body":{"controllers/NotificationController.html":{}}}],["notificationcontroller",{"_index":592,"title":{"controllers/NotificationController.html":{}},"body":{"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"coverage.html":{}}}],["notificationmodule",{"_index":600,"title":{"modules/NotificationModule.html":{}},"body":{"modules/NotificationModule.html":{},"index.html":{},"modules.html":{}}}],["notificationresolver",{"_index":606,"title":{"classes/NotificationResolver.html":{}},"body":{"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"coverage.html":{}}}],["notificationservice",{"_index":595,"title":{"injectables/NotificationService.html":{}},"body":{"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"coverage.html":{},"index.html":{}}}],["now",{"_index":340,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DatabaseUtil.html":{}}}],["now.tostring(16).padstart(12",{"_index":456,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["null",{"_index":192,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/UserResolver-1.html":{}}}],["nullable",{"_index":132,"title":{},"body":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"entities/Role.html":{},"entities/User.html":{},"classes/User-1.html":{},"classes/UserResolver-1.html":{}}}],["number",{"_index":238,"title":{},"body":{"classes/Bootstrapper.html":{},"entities/OrganizationMetadata.html":{},"miscellaneous/functions.html":{}}}],["numeric(5",{"_index":352,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["object",{"_index":1076,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.values(roles",{"_index":796,"title":{},"body":{"injectables/SeederService.html":{}}}],["objecttype",{"_index":150,"title":{},"body":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"entities/OrganizationMetadata.html":{},"entities/Role.html":{},"entities/User.html":{},"classes/User-1.html":{}}}],["ondelete",{"_index":674,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["onetoone",{"_index":630,"title":{},"body":{"entities/Organization.html":{},"entities/OrganizationMetadata.html":{}}}],["onetoone(undefined",{"_index":672,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["onupdate",{"_index":675,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["option('args",{"_index":1053,"title":{},"body":{"miscellaneous/variables.html":{}}}],["option('command",{"_index":1046,"title":{},"body":{"miscellaneous/variables.html":{}}}],["option('microservice",{"_index":1041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["option('title",{"_index":1056,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optional",{"_index":54,"title":{},"body":{"injectables/AppConfigService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"modules/GraphQLGatewayModule.html":{},"entities/Organization.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["options",{"_index":232,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/DatabaseModule.html":{}}}],["options/findoptionswhere",{"_index":718,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["order",{"_index":181,"title":{},"body":{"entities/BaseEntity.html":{}}}],["order.decorator.ts",{"_index":941,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["order_key",{"_index":942,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["orderxcolumn",{"_index":204,"title":{},"body":{"entities/BaseEntity.html":{}}}],["orderycolumn",{"_index":206,"title":{},"body":{"entities/BaseEntity.html":{}}}],["org",{"_index":846,"title":{},"body":{"classes/User-1.html":{}}}],["organization",{"_index":614,"title":{"entities/Organization.html":{},"classes/Organization-1.html":{}},"body":{"entities/Organization.html":{},"classes/Organization-1.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"entities/User.html":{},"classes/User-1.html":{},"classes/UserResolver-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["organization\".\"organizations",{"_index":330,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["organization\".\"organizations_metadata",{"_index":347,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["organization(@parent",{"_index":885,"title":{},"body":{"classes/UserResolver-1.html":{}}}],["organization(user",{"_index":879,"title":{},"body":{"classes/UserResolver-1.html":{}}}],["organization.controller",{"_index":691,"title":{},"body":{"modules/OrganizationModule.html":{}}}],["organization.entity",{"_index":683,"title":{},"body":{"entities/OrganizationMetadata.html":{},"classes/User-1.html":{}}}],["organization.meta",{"_index":673,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["organization.service",{"_index":651,"title":{},"body":{"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"classes/UserResolver-1.html":{}}}],["organization_client",{"_index":991,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["organization_host",{"_index":537,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["organization_id",{"_index":359,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{},"entities/OrganizationMetadata.html":{},"entities/User.html":{}}}],["organization_port",{"_index":1083,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organizationclient",{"_index":892,"title":{},"body":{"injectables/UserService.html":{}}}],["organizationcommand",{"_index":652,"title":{},"body":{"controllers/OrganizationController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["organizationcommand.find_organization_by_id",{"_index":656,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["organizationcommand.ping_organization",{"_index":654,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["organizationcontroller",{"_index":644,"title":{"controllers/OrganizationController.html":{}},"body":{"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"coverage.html":{}}}],["organizationid",{"_index":820,"title":{},"body":{"entities/User.html":{},"classes/User-1.html":{}}}],["organizationmetadata",{"_index":619,"title":{"entities/OrganizationMetadata.html":{}},"body":{"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"coverage.html":{}}}],["organizationmodule",{"_index":686,"title":{"modules/OrganizationModule.html":{}},"body":{"modules/OrganizationModule.html":{},"index.html":{},"modules.html":{}}}],["organizationresolver",{"_index":692,"title":{"classes/OrganizationResolver.html":{}},"body":{"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"coverage.html":{}}}],["organizations",{"_index":633,"title":{},"body":{"entities/Organization.html":{},"classes/OrganizationResolver.html":{}}}],["organizations_metadata",{"_index":684,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["organizationservice",{"_index":650,"title":{"injectables/OrganizationService.html":{}},"body":{"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"classes/UserResolver-1.html":{},"coverage.html":{},"index.html":{}}}],["orgid",{"_index":844,"title":{},"body":{"classes/User-1.html":{}}}],["out",{"_index":97,"title":{},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/SeederModule.html":{},"modules/UserModule.html":{},"index.html":{}}}],["overview",{"_index":1012,"title":{"index.html":{}},"body":{"index.html":{}}}],["owner",{"_index":997,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["package",{"_index":951,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameters",{"_index":51,"title":{},"body":{"injectables/AppConfigService.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"modules/GraphQLGatewayModule.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":882,"title":{},"body":{"classes/UserResolver-1.html":{}}}],["password",{"_index":304,"title":{},"body":{"classes/ConfigHelper.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"entities/User.html":{}}}],["path.join",{"_index":1062,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paths/register",{"_index":1069,"title":{},"body":{"miscellaneous/variables.html":{}}}],["payment",{"_index":744,"title":{},"body":{"injectables/PaymentService.html":{}}}],["payment.controller",{"_index":736,"title":{},"body":{"modules/PaymentModule.html":{}}}],["payment.service",{"_index":727,"title":{},"body":{"controllers/PaymentController.html":{},"modules/PaymentModule.html":{}}}],["payment_client",{"_index":992,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["payment_host",{"_index":538,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["payment_port",{"_index":1084,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paymentcommand",{"_index":728,"title":{},"body":{"controllers/PaymentController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["paymentcommand.ping_payment",{"_index":729,"title":{},"body":{"controllers/PaymentController.html":{}}}],["paymentcontroller",{"_index":723,"title":{"controllers/PaymentController.html":{}},"body":{"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"coverage.html":{}}}],["paymentmodule",{"_index":731,"title":{"modules/PaymentModule.html":{}},"body":{"modules/PaymentModule.html":{},"index.html":{},"modules.html":{}}}],["paymentresolver",{"_index":737,"title":{"classes/PaymentResolver.html":{}},"body":{"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"coverage.html":{}}}],["paymentservice",{"_index":726,"title":{"injectables/PaymentService.html":{}},"body":{"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"coverage.html":{},"index.html":{}}}],["pg",{"_index":971,"title":{},"body":{"dependencies.html":{}}}],["phone",{"_index":338,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{},"entities/Organization.html":{},"entities/User.html":{}}}],["ping",{"_index":105,"title":{},"body":{"classes/AuthResolver.html":{},"classes/EscrowResolver.html":{},"injectables/GatewayService.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"classes/UserResolver.html":{}}}],["ping_auth",{"_index":1077,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ping_escrow",{"_index":1090,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ping_media",{"_index":1092,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ping_notification",{"_index":1093,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ping_organization",{"_index":1095,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ping_payment",{"_index":1097,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ping_property",{"_index":1098,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ping_user",{"_index":1106,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pingauth",{"_index":107,"title":{},"body":{"classes/AuthResolver.html":{}}}],["pingescrow",{"_index":520,"title":{},"body":{"classes/EscrowResolver.html":{}}}],["pingmedia",{"_index":587,"title":{},"body":{"classes/MediaResolver.html":{}}}],["pingnotification",{"_index":609,"title":{},"body":{"classes/NotificationResolver.html":{}}}],["pingorganization",{"_index":702,"title":{},"body":{"classes/OrganizationResolver.html":{}}}],["pingpayment",{"_index":740,"title":{},"body":{"classes/PaymentResolver.html":{}}}],["pingproperty",{"_index":762,"title":{},"body":{"classes/PropertyResolver.html":{}}}],["pinguser",{"_index":872,"title":{},"body":{"classes/UserResolver.html":{}}}],["pk_63bbcee313cee9e95bfba3c7d2b",{"_index":361,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["pk_648e3f5447f725579d7d4ffdfb7",{"_index":381,"title":{},"body":{"classes/CreateRoleTable1741519642145.html":{}}}],["pk_6b031fcd0863e3f6b44230163f9",{"_index":345,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["pk_a3ffb1c0c8416b9fc6f907b7433",{"_index":392,"title":{},"body":{"classes/CreateUserTable1741519705062.html":{}}}],["pong",{"_index":112,"title":{},"body":{"classes/AuthResolver.html":{},"classes/EscrowResolver.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"classes/UserResolver.html":{}}}],["port",{"_index":235,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/SubgraphsBuilder.html":{}}}],["postgres",{"_index":411,"title":{},"body":{"classes/DataSource.html":{}}}],["precision",{"_index":665,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["primary",{"_index":346,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["primary_color",{"_index":348,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"entities/OrganizationMetadata.html":{}}}],["primary_contact_name",{"_index":336,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"entities/Organization.html":{}}}],["primarycolor",{"_index":662,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["primarycolumn",{"_index":772,"title":{},"body":{"entities/Role.html":{}}}],["primarycontactname",{"_index":616,"title":{},"body":{"entities/Organization.html":{}}}],["primarygeneratedcolumn",{"_index":146,"title":{},"body":{"entities/BaseEntity.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":161,"title":{},"body":{"entities/BaseEntity.html":{}}}],["private",{"_index":268,"title":{},"body":{"classes/ConfigHelper.html":{},"injectables/OrganizationService.html":{},"injectables/SeederService.html":{},"injectables/UserService.html":{}}}],["process",{"_index":400,"title":{},"body":{"classes/DataSource.html":{}}}],["process.env.database_host",{"_index":412,"title":{},"body":{"classes/DataSource.html":{}}}],["process.env.database_name",{"_index":418,"title":{},"body":{"classes/DataSource.html":{}}}],["process.env.database_password",{"_index":417,"title":{},"body":{"classes/DataSource.html":{}}}],["process.env.database_port",{"_index":414,"title":{},"body":{"classes/DataSource.html":{}}}],["process.env.database_type",{"_index":410,"title":{},"body":{"classes/DataSource.html":{}}}],["process.env.database_username",{"_index":416,"title":{},"body":{"classes/DataSource.html":{}}}],["process.env.is_doc_env",{"_index":1089,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":32,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["promise",{"_index":249,"title":{},"body":{"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"modules/GraphQLGatewayModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"classes/SubgraphsBuilder.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{}}}],["properties",{"_index":122,"title":{"properties.html":{}},"body":{"entities/BaseEntity.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"entities/OrganizationMetadata.html":{},"entities/Role.html":{},"entities/User.html":{},"classes/User-1.html":{},"properties.html":{}}}],["property",{"_index":766,"title":{},"body":{"injectables/PropertyService.html":{}}}],["property.controller",{"_index":758,"title":{},"body":{"modules/PropertyModule.html":{}}}],["property.service",{"_index":749,"title":{},"body":{"controllers/PropertyController.html":{},"modules/PropertyModule.html":{}}}],["property_client",{"_index":993,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["property_host",{"_index":539,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["property_port",{"_index":1085,"title":{},"body":{"miscellaneous/variables.html":{}}}],["propertycommand",{"_index":750,"title":{},"body":{"controllers/PropertyController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["propertycommand.ping_property",{"_index":751,"title":{},"body":{"controllers/PropertyController.html":{}}}],["propertycontroller",{"_index":745,"title":{"controllers/PropertyController.html":{}},"body":{"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"coverage.html":{}}}],["propertydecorator",{"_index":1006,"title":{},"body":{"miscellaneous/functions.html":{}}}],["propertykey",{"_index":1008,"title":{},"body":{"miscellaneous/functions.html":{}}}],["propertymodule",{"_index":753,"title":{"modules/PropertyModule.html":{}},"body":{"modules/PropertyModule.html":{},"index.html":{},"modules.html":{}}}],["propertyresolver",{"_index":759,"title":{"classes/PropertyResolver.html":{}},"body":{"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"coverage.html":{}}}],["propertyservice",{"_index":748,"title":{"injectables/PropertyService.html":{}},"body":{"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"injectables/PropertyService.html":{},"coverage.html":{},"index.html":{}}}],["prototype",{"_index":177,"title":{},"body":{"entities/BaseEntity.html":{}}}],["providers",{"_index":88,"title":{},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/SeederModule.html":{},"modules/UserModule.html":{},"index.html":{}}}],["public",{"_index":319,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["query",{"_index":109,"title":{},"body":{"classes/AuthResolver.html":{},"classes/EscrowResolver.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"classes/UserResolver.html":{}}}],["query(undefined",{"_index":106,"title":{},"body":{"classes/AuthResolver.html":{},"classes/EscrowResolver.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"classes/UserResolver.html":{}}}],["queryrunner",{"_index":324,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["queryrunner.query",{"_index":371,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["queryrunner.query(`alter",{"_index":362,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["queryrunner.query(`create",{"_index":328,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["queryrunner.query(`drop",{"_index":372,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["qushah/common",{"_index":100,"title":{},"body":{"modules/AuthModule.html":{},"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{},"modules/DatabaseModule.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/GraphQLGatewayModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["qushah/common/config",{"_index":265,"title":{},"body":{"modules/CommonModule.html":{}}}],["qushah/common/config/config.helper",{"_index":254,"title":{},"body":{"modules/ClientsModule.html":{}}}],["qushah/common/constants/commands",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{}}}],["qushah/common/constants/commands/organization.command",{"_index":653,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["qushah/common/decorators",{"_index":153,"title":{},"body":{"entities/BaseEntity.html":{}}}],["qushah/common/utils",{"_index":157,"title":{},"body":{"entities/BaseEntity.html":{}}}],["r",{"_index":1067,"title":{},"body":{"miscellaneous/variables.html":{}}}],["random",{"_index":462,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["randombytes",{"_index":464,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["randombytes.substring(3",{"_index":485,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["randombytes.substring(7",{"_index":487,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["readonly",{"_index":62,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"controllers/DocumentationController.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{}}}],["redis_host",{"_index":19,"title":{},"body":{"modules/AppConfigModule.html":{},"miscellaneous/variables.html":{}}}],["redis_port",{"_index":21,"title":{},"body":{"modules/AppConfigModule.html":{},"miscellaneous/variables.html":{}}}],["redisconfig",{"_index":226,"title":{},"body":{"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{}}}],["redisconfig.host",{"_index":234,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["redisconfig.port",{"_index":236,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["references",{"_index":366,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["reflect",{"_index":973,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":245,"title":{},"body":{"modules/ClientsModule.html":{},"modules/GraphQLGatewayModule.html":{}}}],["register(...names",{"_index":246,"title":{},"body":{"modules/ClientsModule.html":{}}}],["register(...subgraphnames",{"_index":548,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["rejectunauthorized",{"_index":421,"title":{},"body":{"classes/DataSource.html":{},"modules/DatabaseModule.html":{}}}],["rel_ad9c5b4a8fb0a54d63b8471019",{"_index":360,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["relations",{"_index":721,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["rent_fee_percentage",{"_index":351,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"entities/OrganizationMetadata.html":{}}}],["rentfeepercentage",{"_index":663,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["reorder",{"_index":193,"title":{},"body":{"entities/BaseEntity.html":{}}}],["repository",{"_index":709,"title":{},"body":{"injectables/OrganizationService.html":{},"injectables/SeederService.html":{},"injectables/UserService.html":{}}}],["requires",{"_index":843,"title":{},"body":{"classes/User-1.html":{}}}],["reset",{"_index":96,"title":{},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/SeederModule.html":{},"modules/UserModule.html":{},"index.html":{}}}],["resolvefield",{"_index":883,"title":{},"body":{"classes/UserResolver-1.html":{}}}],["resolvefield(undefined",{"_index":880,"title":{},"body":{"classes/UserResolver-1.html":{}}}],["resolver",{"_index":110,"title":{},"body":{"classes/AuthResolver.html":{},"classes/EscrowResolver.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{}}}],["resolver(user",{"_index":875,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolvers/auth.resolver",{"_index":102,"title":{},"body":{"modules/AuthModule.html":{}}}],["resolvers/escrow.resolver",{"_index":518,"title":{},"body":{"modules/EscrowModule.html":{}}}],["resolvers/media.resolver",{"_index":585,"title":{},"body":{"modules/MediaModule.html":{}}}],["resolvers/notification.resolver",{"_index":607,"title":{},"body":{"modules/NotificationModule.html":{}}}],["resolvers/organization.resolver",{"_index":693,"title":{},"body":{"modules/OrganizationModule.html":{}}}],["resolvers/payment.resolver",{"_index":738,"title":{},"body":{"modules/PaymentModule.html":{}}}],["resolvers/property.resolver",{"_index":760,"title":{},"body":{"modules/PropertyModule.html":{}}}],["resolvers/user.resolver",{"_index":863,"title":{},"body":{"modules/UserModule.html":{}}}],["results",{"_index":37,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"entities/Role.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":180,"title":{},"body":{"entities/BaseEntity.html":{}}}],["return",{"_index":63,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"controllers/MediaController.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"classes/SubgraphsBuilder.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":60,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"controllers/MediaController.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["revert",{"_index":1052,"title":{},"body":{"miscellaneous/variables.html":{}}}],["role",{"_index":767,"title":{"entities/Role.html":{}},"body":{"entities/Role.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"entities/User.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["role.entity",{"_index":831,"title":{},"body":{"entities/User.html":{}}}],["role_id",{"_index":391,"title":{},"body":{"classes/CreateUserTable1741519705062.html":{},"entities/User.html":{}}}],["roleexists",{"_index":798,"title":{},"body":{"injectables/SeederService.html":{}}}],["rolename",{"_index":797,"title":{},"body":{"injectables/SeederService.html":{}}}],["rolerepository",{"_index":788,"title":{},"body":{"injectables/SeederService.html":{}}}],["roles",{"_index":773,"title":{},"body":{"entities/Role.html":{},"injectables/SeederService.html":{},"miscellaneous/enumerations.html":{}}}],["run",{"_index":1051,"title":{},"body":{"miscellaneous/variables.html":{}}}],["running",{"_index":1060,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rxjs",{"_index":976,"title":{},"body":{"dependencies.html":{}}}],["scale",{"_index":666,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["schema",{"_index":399,"title":{},"body":{"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"modules/OrganizationModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["schema.type",{"_index":441,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["seed",{"_index":784,"title":{},"body":{"injectables/SeederService.html":{},"miscellaneous/variables.html":{}}}],["seeder.service",{"_index":780,"title":{},"body":{"modules/SeederModule.html":{}}}],["seeder/seeder.module",{"_index":865,"title":{},"body":{"modules/UserModule.html":{}}}],["seedermodule",{"_index":774,"title":{"modules/SeederModule.html":{}},"body":{"modules/SeederModule.html":{},"modules/UserModule.html":{},"index.html":{},"modules.html":{}}}],["seederservice",{"_index":778,"title":{"injectables/SeederService.html":{}},"body":{"modules/SeederModule.html":{},"injectables/SeederService.html":{},"coverage.html":{},"index.html":{}}}],["seeding",{"_index":794,"title":{},"body":{"injectables/SeederService.html":{}}}],["seedroles",{"_index":785,"title":{},"body":{"injectables/SeederService.html":{}}}],["service",{"_index":117,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"injectables/MediaService.html":{},"injectables/NotificationService.html":{},"injectables/OrganizationService.html":{},"injectables/PaymentService.html":{},"injectables/PropertyService.html":{},"classes/User-1.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["serviceendpointdefinition",{"_index":809,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["set",{"_index":445,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["slug",{"_index":335,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"entities/Organization.html":{}}}],["sort",{"_index":208,"title":{},"body":{"entities/BaseEntity.html":{}}}],["sortschema",{"_index":569,"title":{},"body":{"modules/GraphQLMicroserviceModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"entities/Role.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{}}}],["source.ts",{"_index":908,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["source.util.ts",{"_index":396,"title":{},"body":{"classes/DataSource.html":{},"coverage.html":{}}}],["source.util.ts:9",{"_index":398,"title":{},"body":{"classes/DataSource.html":{}}}],["src/migrations",{"_index":1073,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ssl",{"_index":420,"title":{},"body":{"classes/DataSource.html":{},"modules/DatabaseModule.html":{}}}],["statements",{"_index":901,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":166,"title":{},"body":{"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"modules/GraphQLGatewayModule.html":{},"classes/SubgraphsBuilder.html":{}}}],["stored",{"_index":841,"title":{},"body":{"classes/User-1.html":{}}}],["string",{"_index":56,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"controllers/MediaController.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"entities/Role.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["subgraphnames",{"_index":550,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["subgraphs",{"_index":561,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["subgraphsbuilder",{"_index":557,"title":{"classes/SubgraphsBuilder.html":{}},"body":{"modules/GraphQLGatewayModule.html":{},"classes/SubgraphsBuilder.html":{},"coverage.html":{}}}],["subgraphsbuilder.build(...subgraphnames",{"_index":562,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["subscribers",{"_index":425,"title":{},"body":{"classes/DataSource.html":{}}}],["super_admin",{"_index":996,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["supergraphsdl",{"_index":560,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["support",{"_index":1021,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1022,"title":{},"body":{"modules.html":{}}}],["symbol.for('order_key",{"_index":1094,"title":{},"body":{"miscellaneous/variables.html":{}}}],["synchronize",{"_index":448,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["t",{"_index":58,"title":{},"body":{"injectables/AppConfigService.html":{},"classes/ConfigHelper.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":329,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":950,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":174,"title":{},"body":{"entities/BaseEntity.html":{},"miscellaneous/functions.html":{}}}],["target.prototype",{"_index":179,"title":{},"body":{"entities/BaseEntity.html":{}}}],["test",{"_index":33,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["this.appconfigservice.getconfig(key",{"_index":313,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.authservice.gethello",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.configservice.get(key",{"_index":64,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.documentationservice.gethello",{"_index":494,"title":{},"body":{"controllers/DocumentationController.html":{}}}],["this.escrowservice.gethello",{"_index":510,"title":{},"body":{"controllers/EscrowController.html":{}}}],["this.getconfig",{"_index":310,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environment.database_host",{"_index":300,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environment.database_name",{"_index":307,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environment.database_password",{"_index":305,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environment.database_port",{"_index":301,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environment.database_type",{"_index":299,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environment.database_username",{"_index":303,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environment.redis_host",{"_index":297,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environment.redis_port",{"_index":298,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environment[`${key}_port",{"_index":309,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.id",{"_index":164,"title":{},"body":{"entities/BaseEntity.html":{}}}],["this.mediaservice.gethello",{"_index":577,"title":{},"body":{"controllers/MediaController.html":{}}}],["this.notificationservice.gethello",{"_index":599,"title":{},"body":{"controllers/NotificationController.html":{}}}],["this.organizationservice.findall",{"_index":704,"title":{},"body":{"classes/OrganizationResolver.html":{}}}],["this.organizationservice.findone",{"_index":657,"title":{},"body":{"controllers/OrganizationController.html":{},"classes/UserResolver-1.html":{}}}],["this.organizationservice.gethello",{"_index":655,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["this.paymentservice.gethello",{"_index":730,"title":{},"body":{"controllers/PaymentController.html":{}}}],["this.propertyservice.gethello",{"_index":752,"title":{},"body":{"controllers/PropertyController.html":{}}}],["this.repository.find",{"_index":720,"title":{},"body":{"injectables/OrganizationService.html":{},"injectables/UserService.html":{}}}],["this.repository.findone",{"_index":722,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["this.rolerepository.create",{"_index":801,"title":{},"body":{"injectables/SeederService.html":{}}}],["this.rolerepository.findone",{"_index":799,"title":{},"body":{"injectables/SeederService.html":{}}}],["this.rolerepository.save",{"_index":800,"title":{},"body":{"injectables/SeederService.html":{}}}],["this.seedroles",{"_index":792,"title":{},"body":{"injectables/SeederService.html":{}}}],["this.userservice.find",{"_index":876,"title":{},"body":{"classes/UserResolver.html":{}}}],["this.userservice.gethello",{"_index":854,"title":{},"body":{"controllers/UserController.html":{}}}],["timestamp",{"_index":339,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DatabaseUtil.html":{}}}],["timestamp.substring(0",{"_index":479,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["timestamp.substring(8",{"_index":481,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["title",{"_index":1057,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transport",{"_index":221,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{}}}],["transport.redis",{"_index":231,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{}}}],["true",{"_index":16,"title":{},"body":{"modules/AppConfigModule.html":{},"entities/BaseEntity.html":{},"classes/ConfigHelper.html":{},"modules/DatabaseModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"entities/Role.html":{},"entities/User.html":{},"classes/User-1.html":{},"classes/UserResolver-1.html":{},"miscellaneous/variables.html":{}}}],["true})@column({name",{"_index":678,"title":{},"body":{"entities/OrganizationMetadata.html":{},"entities/User.html":{}}}],["true})@column({nullable",{"_index":669,"title":{},"body":{"entities/OrganizationMetadata.html":{},"entities/Role.html":{}}}],["true})@deletedatecolumn({name",{"_index":133,"title":{},"body":{"entities/BaseEntity.html":{}}}],["true})@directive('@external",{"_index":838,"title":{},"body":{"classes/User-1.html":{}}}],["true})@directive('@requires(fields",{"_index":836,"title":{},"body":{"classes/User-1.html":{}}}],["true})@onetoone(undefined",{"_index":621,"title":{},"body":{"entities/Organization.html":{}}}],["true})@updatedatecolumn({name",{"_index":138,"title":{},"body":{"entities/BaseEntity.html":{}}}],["ts",{"_index":1065,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tsconfig",{"_index":1068,"title":{},"body":{"miscellaneous/variables.html":{}}}],["type",{"_index":53,"title":{},"body":{"injectables/AppConfigService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"modules/GraphQLGatewayModule.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"entities/Role.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":148,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"injectables/OrganizationService.html":{},"entities/Role.html":{},"injectables/SeederService.html":{},"entities/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["typeorm/find",{"_index":717,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["typeorm/metadata/columnmetadata",{"_index":155,"title":{},"body":{"entities/BaseEntity.html":{}}}],["typeorm_migrations",{"_index":409,"title":{},"body":{"classes/DataSource.html":{}}}],["typeormcommand",{"_index":949,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeormdatasource",{"_index":403,"title":{},"body":{"classes/DataSource.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeormmodule",{"_index":437,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/SeederModule.html":{}}}],["typeormmodule.forfeature([role",{"_index":782,"title":{},"body":{"modules/SeederModule.html":{}}}],["typeormmodule.forfeature(entities",{"_index":451,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["typeormmodule.forrootasync",{"_index":442,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["typeormmoduleoptions",{"_index":438,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["types/yargs",{"_index":963,"title":{},"body":{"dependencies.html":{}}}],["uint8array(10",{"_index":466,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["undefined",{"_index":72,"title":{},"body":{"controllers/AuthController.html":{},"entities/BaseEntity.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{}}}],["unique",{"_index":343,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"entities/Organization.html":{}}}],["unlicensed",{"_index":1026,"title":{},"body":{"properties.html":{}}}],["up",{"_index":321,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["up(queryrunner",{"_index":326,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["update",{"_index":369,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["updated_at",{"_index":139,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["updatedat",{"_index":126,"title":{},"body":{"entities/BaseEntity.html":{}}}],["updatedatecolumn",{"_index":147,"title":{},"body":{"entities/BaseEntity.html":{}}}],["uq_963693341bd612aa01ddf3a4b68",{"_index":344,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["uq_9b7ca6d30b94fef571cff876884",{"_index":342,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["url",{"_index":816,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["usedatasource(datasource",{"_index":167,"title":{},"body":{"entities/BaseEntity.html":{}}}],["usefactory",{"_index":443,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/GraphQLGatewayModule.html":{}}}],["user",{"_index":818,"title":{"entities/User.html":{},"classes/User-1.html":{}},"body":{"entities/User.html":{},"classes/User-1.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user\".\"roles",{"_index":379,"title":{},"body":{"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["user\".\"users",{"_index":388,"title":{},"body":{"classes/CreateUserTable1741519705062.html":{}}}],["user.controller",{"_index":860,"title":{},"body":{"modules/UserModule.html":{}}}],["user.organizationid",{"_index":886,"title":{},"body":{"classes/UserResolver-1.html":{}}}],["user.service",{"_index":851,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{}}}],["user_client",{"_index":994,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["user_host",{"_index":540,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["user_port",{"_index":1086,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usercommand",{"_index":852,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usercommand.ping_user",{"_index":853,"title":{},"body":{"controllers/UserController.html":{}}}],["usercontroller",{"_index":847,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["usermodule",{"_index":855,"title":{"modules/UserModule.html":{}},"body":{"modules/UserModule.html":{},"index.html":{},"modules.html":{}}}],["username",{"_index":302,"title":{},"body":{"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{}}}],["userresolver",{"_index":862,"title":{"classes/UserResolver.html":{},"classes/UserResolver-1.html":{}},"body":{"modules/UserModule.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"coverage.html":{}}}],["users",{"_index":833,"title":{},"body":{"entities/User.html":{},"classes/UserResolver.html":{}}}],["userservice",{"_index":850,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["using",{"_index":182,"title":{},"body":{"entities/BaseEntity.html":{}}}],["uuid",{"_index":331,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{},"entities/User.html":{}}}],["uuid_generate_v4",{"_index":332,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["uuidv7",{"_index":475,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["valid('development",{"_index":31,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["validationschema",{"_index":17,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["value",{"_index":190,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":200,"title":{},"body":{"entities/BaseEntity.html":{}}}],["variable",{"_index":909,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":405,"title":{"miscellaneous/variables.html":{}},"body":{"classes/DataSource.html":{},"miscellaneous/variables.html":{}}}],["varying",{"_index":334,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["version",{"_index":1023,"title":{},"body":{"properties.html":{}}}],["world",{"_index":502,"title":{},"body":{"injectables/DocumentationService.html":{}}}],["yargs",{"_index":979,"title":{},"body":{"dependencies.html":{}}}],["yargs(process.argv.slice(2",{"_index":1040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ycolumn",{"_index":199,"title":{},"body":{"entities/BaseEntity.html":{}}}],["yes",{"_index":436,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["zoom",{"_index":95,"title":{},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/SeederModule.html":{},"modules/UserModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppConfigModule.html":{"url":"modules/AppConfigModule.html","title":"module - AppConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    AppConfigModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/config/config.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { ConfigModule } from '@nestjs/config';\nimport { Module } from '@nestjs/common';\nimport Joi from 'joi';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      validationSchema: Joi.object({\n        REDIS_HOST: Joi.string().required(),\n        REDIS_PORT: Joi.number().required(),\n        DATABASE_TYPE: Joi.string().required(),\n        DATABASE_HOST: Joi.string().required(),\n        DATABASE_PORT: Joi.string().required(),\n        DATABASE_USERNAME: Joi.string().required(),\n        DATABASE_PASSWORD: Joi.string().required(),\n        DATABASE_NAME: Joi.string().required(),\n        NODE_ENV: Joi.string()\n          .valid('development', 'production', 'test')\n          .default('development'),\n      }),\n    }),\n  ],\n})\nexport class AppConfigModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppConfigService.html":{"url":"injectables/AppConfigService.html","title":"injectable - AppConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/config/config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in libs/common/src/config/config.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getConfig\n                        \n                    \n                \n            \n            \n                \ngetConfig(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/config/config.service.ts:8\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class AppConfigService {\n  constructor(private readonly configService: ConfigService) {}\n\n  getConfig(key: string): T {\n    return this.configService.get(key);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/auth.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/auth/src/auth.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { AuthCommand } from '@qushah/common/constants/commands';\n\n@Controller()\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @MessagePattern({ cmd: AuthCommand.PING_AUTH })\n  getHello(): string {\n    return this.authService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nCommonModule->AuthModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nAuthModule -->\n\nGraphQLMicroserviceModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/auth/src/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { CommonModule, GraphQLMicroserviceModule } from '@qushah/common';\nimport { AuthResolver } from './resolvers/auth.resolver';\n\n@Module({\n  imports: [CommonModule, GraphQLMicroserviceModule],\n  controllers: [AuthController],\n  providers: [AuthService, AuthResolver],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthResolver.html":{"url":"classes/AuthResolver.html","title":"class - AuthResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/resolvers/auth.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingAuth'})\n                \n            \n\n                    \n                        \n                            Defined in apps/auth/src/resolvers/auth.resolver.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\n\n@Resolver()\nexport class AuthResolver {\n  @Query(() => String, { name: 'pingAuth' })\n  ping(): string {\n    return 'pong';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/auth/src/auth.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AuthService {\n  getHello(): string {\n    return 'Hello from Auth Service!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/BaseEntity.html":{"url":"entities/BaseEntity.html","title":"entity - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/database/entities/base.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ColumnOrder(9999)@Field(undefined)@CreateDateColumn({name: 'created_at'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/common/src/database/entities/base.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ColumnOrder(9999)@Field(undefined, {nullable: true})@DeleteDateColumn({name: 'deleted_at', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/common/src/database/entities/base.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ColumnOrder(undefined)@Field(undefined)@PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/common/src/database/entities/base.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ColumnOrder(9999)@Field(undefined, {nullable: true})@UpdateDateColumn({name: 'updated_at', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/common/src/database/entities/base.entity.ts:32\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  BaseEntity as BaseEntityTypeOrm,\n  BeforeInsert,\n  CreateDateColumn,\n  DataSource,\n  DeleteDateColumn,\n  Entity,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { Field, ObjectType } from '@nestjs/graphql';\nimport { ColumnOrder, getColumnOrder } from '@qushah/common/decorators';\nimport { ColumnMetadata } from 'typeorm/metadata/ColumnMetadata';\nimport { DatabaseUtil } from '@qushah/common/utils';\n\n@ObjectType()\n@Entity()\nexport abstract class BaseEntity extends BaseEntityTypeOrm {\n  @ColumnOrder(-1)\n  @Field(() => String)\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @ColumnOrder(9999)\n  @Field(() => Date)\n  @CreateDateColumn({ name: 'created_at' })\n  createdAt: Date;\n\n  @ColumnOrder(9999)\n  @Field(() => Date, { nullable: true })\n  @UpdateDateColumn({ name: 'updated_at', nullable: true })\n  updatedAt?: Date;\n\n  @ColumnOrder(9999)\n  @Field(() => Date, { nullable: true })\n  @DeleteDateColumn({ name: 'deleted_at', nullable: true })\n  deletedAt?: Date;\n\n  @BeforeInsert()\n  generateUUID() {\n    this.id = DatabaseUtil.generateUUIDv7();\n  }\n\n  static useDataSource(dataSource: DataSource) {\n    BaseEntityTypeOrm.useDataSource.call(this, dataSource);\n    const meta = dataSource.entityMetadatasMap.get(this);\n\n    const getOrderSafely = (column: ColumnMetadata) => {\n      const target = column.target as any;\n\n      // Check if the target and its prototype exist\n      if (target && target.prototype) {\n        // Retrieve the column order using the custom getColumnOrder function\n        return getColumnOrder(target.prototype, column.propertyName);\n      }\n\n      // Fallback to a default high order value if target is undefined\n      return 9996;\n    };\n\n    if (meta != null) {\n      // Reorder columns based on custom `@ColumnOrder` decorator\n      meta.columns = [...meta.columns].sort((xColumn, yColumn) => {\n        // Get the order values for both columns being compared\n        const orderXColumn = getOrderSafely(xColumn);\n        const orderYColumn = getOrderSafely(yColumn);\n\n        // Sort in ascending order\n        return orderXColumn - orderYColumn;\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Bootstrapper.html":{"url":"classes/Bootstrapper.html","title":"class - Bootstrapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Bootstrapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/utils/bootstrapper.util.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Async\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init(module: any)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/utils/bootstrapper.util.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                module\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Logger } from '@nestjs/common';\nimport { ConfigHelper } from '@qushah/common';\nimport { NestFactory } from '@nestjs/core';\nimport { MicroserviceOptions, Transport } from '@nestjs/microservices';\n\nexport class Bootstrapper {\n  static async init(module: any) {\n    const logger = new Logger(`${module.name}Bootstrap`);\n    const configHelper = await ConfigHelper.getInstance();\n    const redisConfig = configHelper.redisConfig;\n    const app = await NestFactory.create(module);\n    app.connectMicroservice({\n      transport: Transport.REDIS,\n      options: {\n        host: redisConfig.host,\n        port: redisConfig.port,\n      },\n    });\n    await app.startAllMicroservices();\n    const port: number = configHelper.getModulePort(module.name);\n    await app.listen(port);\n    logger.log(`Microservice listening on port ${port}...`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ClientsModule.html":{"url":"modules/ClientsModule.html","title":"module - ClientsModule","body":"\n                   \n\n\n\n\n    Modules\n    ClientsModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/clients/clients.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(...names: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/clients/clients.module.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                names\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, Global, DynamicModule } from '@nestjs/common';\nimport {\n  ClientsModule as NestClientsModule,\n  ClientsModuleOptions,\n  Transport,\n} from '@nestjs/microservices';\nimport { ConfigHelper } from '@qushah/common/config/config.helper';\n\n@Global()\n@Module({})\nexport class ClientsModule {\n  static async register(...names: string[]): Promise {\n    const configHelper = await ConfigHelper.getInstance();\n    const { host, port } = configHelper.redisConfig;\n    const clients: ClientsModuleOptions = names.map((name) => ({\n      name,\n      transport: Transport.REDIS,\n      options: {\n        host,\n        port,\n      },\n    }));\n    return {\n      module: ClientsModule,\n      imports: [NestClientsModule.register(clients)],\n      exports: [NestClientsModule],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CommonModule.html":{"url":"modules/CommonModule.html","title":"module - CommonModule","body":"\n                   \n\n\n\n\n    Modules\n    CommonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_exports\n\n\n\ncluster_CommonModule_imports\n\n\n\ncluster_CommonModule_providers\n\n\n\n\nAppConfigModule\n\nAppConfigModule\n\n\n\nCommonModule\n\nCommonModule\n\nCommonModule -->\n\nAppConfigModule->CommonModule\n\n\n\n\n\nCommonService \n\nCommonService \n\nCommonService  -->\n\nCommonModule->CommonService \n\n\n\n\n\nCommonService\n\nCommonService\n\nCommonModule -->\n\nCommonService->CommonModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/common.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CommonService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppConfigModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CommonService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CommonService } from './common.service';\nimport { AppConfigModule } from '@qushah/common/config';\n\n@Module({\n  imports: [AppConfigModule],\n  providers: [CommonService],\n  exports: [CommonService],\n})\nexport class CommonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CommonService.html":{"url":"injectables/CommonService.html","title":"injectable - CommonService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CommonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/common.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class CommonService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigHelper.html":{"url":"classes/ConfigHelper.html","title":"class - ConfigHelper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/config/config.helper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                appConfigService\n                            \n                            \n                                    Private\n                                    Static\n                                instance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getConfig\n                            \n                            \n                                    Static\n                                    Async\n                                getInstance\n                            \n                            \n                                getMicroServiceHosts\n                            \n                            \n                                getModulePort\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    redisConfig\n                                \n                                \n                                    databaseConfig\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Private\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in libs/common/src/config/config.helper.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        appConfigService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AppConfigService\n\n                    \n                \n                    \n                        \n                                Defined in libs/common/src/config/config.helper.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        instance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigHelper\n\n                    \n                \n                    \n                        \n                                Defined in libs/common/src/config/config.helper.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getConfig\n                        \n                    \n                \n            \n            \n                \ngetConfig(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/config/config.helper.ts:63\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        getInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    getInstance()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/config/config.helper.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMicroServiceHosts\n                        \n                    \n                \n            \n            \n                \ngetMicroServiceHosts(microserviceName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/config/config.helper.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                microserviceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { host: any; port: any; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getModulePort\n                        \n                    \n                \n            \n            \n                \ngetModulePort(moduleName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/config/config.helper.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                moduleName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        redisConfig\n                    \n                \n\n                \n                    \n                        getredisConfig()\n                    \n                \n                            \n                                \n                                    Defined in libs/common/src/config/config.helper.ts:31\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        databaseConfig\n                    \n                \n\n                \n                    \n                        getdatabaseConfig()\n                    \n                \n                            \n                                \n                                    Defined in libs/common/src/config/config.helper.ts:37\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ConfigService } from '@nestjs/config';\nimport { AppConfigService } from './config.service';\nimport { NestFactory } from '@nestjs/core';\nimport { ConfigModule } from '@nestjs/config';\nimport { ENVIRONMENT } from '@qushah/common';\n\nexport class ConfigHelper {\n  private static instance: ConfigHelper;\n  private appConfigService: AppConfigService;\n\n  private constructor() {}\n\n  static async getInstance(): Promise {\n    if (!ConfigHelper.instance) {\n      const appContext = await NestFactory.createApplicationContext(\n        ConfigModule.forRoot({\n          isGlobal: true,\n        }),\n      );\n\n      const configService = appContext.get(ConfigService);\n      const appConfigService = new AppConfigService(configService);\n\n      ConfigHelper.instance = new ConfigHelper();\n      ConfigHelper.instance.appConfigService = appConfigService;\n    }\n\n    return ConfigHelper.instance;\n  }\n\n  get redisConfig() {\n    const host = this.getConfig(ENVIRONMENT.REDIS_HOST);\n    const port = this.getConfig(ENVIRONMENT.REDIS_PORT);\n    return { host, port };\n  }\n\n  get databaseConfig() {\n    const type = this.getConfig(ENVIRONMENT.DATABASE_TYPE);\n    const host = this.getConfig(ENVIRONMENT.DATABASE_HOST);\n    const port = this.getConfig(ENVIRONMENT.DATABASE_PORT);\n    const username = this.getConfig(ENVIRONMENT.DATABASE_USERNAME);\n    const password = this.getConfig(ENVIRONMENT.DATABASE_PASSWORD);\n    const database = this.getConfig(ENVIRONMENT.DATABASE_NAME);\n    return { type, host, port, username, password, database };\n  }\n\n  getModulePort(moduleName: string) {\n    const key = moduleName?.split('Module')?.[0]?.toUpperCase();\n    if (!key) return;\n    return this.getConfig(ENVIRONMENT[`${key}_PORT`]);\n  }\n\n  getMicroServiceHosts(microserviceName: string) {\n    const host = this.getConfig(\n      `${microserviceName}_HOST`.toUpperCase(),\n    );\n    const port = this.getConfig(\n      `${microserviceName}_PORT`.toUpperCase(),\n    );\n    return { host, port };\n  }\n\n  getConfig(key: string) {\n    return this.appConfigService.getConfig(key);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrganizationAndMetaTable1741518145374.html":{"url":"classes/CreateOrganizationAndMetaTable1741518145374.html","title":"class - CreateOrganizationAndMetaTable1741518145374","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrganizationAndMetaTable1741518145374\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/organization/src/migrations/1741518145374-CreateOrganizationAndMetaTable.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'CreateOrganizationAndMetaTable1741518145374'\n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/migrations/1741518145374-CreateOrganizationAndMetaTable.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/organization/src/migrations/1741518145374-CreateOrganizationAndMetaTable.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/organization/src/migrations/1741518145374-CreateOrganizationAndMetaTable.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class CreateOrganizationAndMetaTable1741518145374\n  implements MigrationInterface\n{\n  name = 'CreateOrganizationAndMetaTable1741518145374';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`CREATE TABLE \"organization\".\"organizations\"\n                             (\n                                 \"id\"                   uuid              NOT NULL DEFAULT uuid_generate_v4(),\n                                 \"name\"                 character varying NOT NULL,\n                                 \"slug\"                 character varying NOT NULL,\n                                 \"primary_contact_name\" character varying NOT NULL,\n                                 \"email\"                character varying NOT NULL,\n                                 \"phone\"                character varying NOT NULL,\n                                 \"created_at\"           TIMESTAMP         NOT NULL DEFAULT now(),\n                                 \"updated_at\"           TIMESTAMP                  DEFAULT now(),\n                                 \"deleted_at\"           TIMESTAMP,\n                                 CONSTRAINT \"UQ_9b7ca6d30b94fef571cff876884\" UNIQUE (\"name\"),\n                                 CONSTRAINT \"UQ_963693341bd612aa01ddf3a4b68\" UNIQUE (\"slug\"),\n                                 CONSTRAINT \"PK_6b031fcd0863e3f6b44230163f9\" PRIMARY KEY (\"id\")\n                             )`);\n    await queryRunner.query(`CREATE TABLE \"organization\".\"organizations_metadata\"\n                             (\n                                 \"id\"                     uuid              NOT NULL DEFAULT uuid_generate_v4(),\n                                 \"primary_color\"          character varying,\n                                 \"domain\"                 character varying,\n                                 \"logo\"                   character varying NOT NULL,\n                                 \"rent_fee_percentage\"    numeric(5, 2)     NOT NULL DEFAULT '5',\n                                 \"deposit_fee_percentage\" numeric(5, 2)     NOT NULL DEFAULT '5',\n                                 \"allow_interest_earning\" boolean           NOT NULL DEFAULT false,\n                                 \"organization_id\"        uuid,\n                                 \"created_at\"             TIMESTAMP         NOT NULL DEFAULT now(),\n                                 \"updated_at\"             TIMESTAMP                  DEFAULT now(),\n                                 \"deleted_at\"             TIMESTAMP,\n                                 CONSTRAINT \"REL_ad9c5b4a8fb0a54d63b8471019\" UNIQUE (\"organization_id\"),\n                                 CONSTRAINT \"PK_63bbcee313cee9e95bfba3c7d2b\" PRIMARY KEY (\"id\")\n                             )`);\n    await queryRunner.query(`ALTER TABLE \"organization\".\"organizations_metadata\"\n        ADD CONSTRAINT \"FK_ad9c5b4a8fb0a54d63b84710190\" FOREIGN KEY (\"organization_id\") REFERENCES \"organization\".\"organizations\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE`);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"organization\".\"organizations_metadata\"\n        DROP CONSTRAINT \"FK_ad9c5b4a8fb0a54d63b84710190\"`);\n    await queryRunner.query(\n      `DROP TABLE \"organization\".\"organizations_metadata\"`,\n    );\n    await queryRunner.query(`DROP TABLE \"organization\".\"organizations\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRoleTable1741519642145.html":{"url":"classes/CreateRoleTable1741519642145.html","title":"class - CreateRoleTable1741519642145","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRoleTable1741519642145\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user/src/migrations/1741519642145-CreateRoleTable.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'CreateRoleTable1741519642145'\n                    \n                \n                    \n                        \n                                Defined in apps/user/src/migrations/1741519642145-CreateRoleTable.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/user/src/migrations/1741519642145-CreateRoleTable.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/user/src/migrations/1741519642145-CreateRoleTable.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class CreateRoleTable1741519642145 implements MigrationInterface {\n  name = 'CreateRoleTable1741519642145';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`CREATE TABLE \"user\".\"roles\"\n                             (\n                                 \"name\"        character varying NOT NULL,\n                                 \"description\" character varying,\n                                 CONSTRAINT \"PK_648e3f5447f725579d7d4ffdfb7\" PRIMARY KEY (\"name\")\n                             )`);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`DROP TABLE \"user\".\"roles\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserTable1741519705062.html":{"url":"classes/CreateUserTable1741519705062.html","title":"class - CreateUserTable1741519705062","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserTable1741519705062\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user/src/migrations/1741519705062-CreateUserTable.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'CreateUserTable1741519705062'\n                    \n                \n                    \n                        \n                                Defined in apps/user/src/migrations/1741519705062-CreateUserTable.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/user/src/migrations/1741519705062-CreateUserTable.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/user/src/migrations/1741519705062-CreateUserTable.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class CreateUserTable1741519705062 implements MigrationInterface {\n  name = 'CreateUserTable1741519705062';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`CREATE TABLE \"user\".\"users\"\n                             (\n                                 \"id\"              uuid              NOT NULL DEFAULT uuid_generate_v4(),\n                                 \"firstName\"       character varying NOT NULL,\n                                 \"lastName\"        character varying NOT NULL,\n                                 \"email\"           character varying NOT NULL,\n                                 \"password\"        character varying NOT NULL,\n                                 \"phone\"           character varying NOT NULL,\n                                 \"organization_id\" uuid,\n                                 \"role_id\"         character varying,\n                                 \"created_at\"      TIMESTAMP         NOT NULL DEFAULT now(),\n                                 \"updated_at\"      TIMESTAMP                  DEFAULT now(),\n                                 \"deleted_at\"      TIMESTAMP,\n                                 CONSTRAINT \"PK_a3ffb1c0c8416b9fc6f907b7433\" PRIMARY KEY (\"id\")\n                             )`);\n    await queryRunner.query(`ALTER TABLE \"user\".\"users\"\n        ADD CONSTRAINT \"FK_a2cecd1a3531c0b041e29ba46e1\" FOREIGN KEY (\"role_id\") REFERENCES \"user\".\"roles\" (\"name\") ON DELETE NO ACTION ON UPDATE NO ACTION`);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"user\".\"users\"\n        DROP CONSTRAINT \"FK_a2cecd1a3531c0b041e29ba46e1\"`);\n    await queryRunner.query(`DROP TABLE \"user\".\"users\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DataSource.html":{"url":"classes/DataSource.html","title":"class - DataSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/utils/data-source.util.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        getInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    getInstance(schema: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/utils/data-source.util.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                schema\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import process from 'node:process';\nimport * as dotenv from 'dotenv';\nimport { DataSource as TypeormDataSource } from 'typeorm';\n\n// Load environment variables from .env file\ndotenv.config();\n\nexport class DataSource {\n  static getInstance(schema: string) {\n    return new TypeormDataSource({\n      migrationsTableName: 'typeorm_migrations',\n      type: (process.env.DATABASE_TYPE as 'postgres') || 'postgres',\n      host: process.env.DATABASE_HOST || 'localhost',\n      port: +process.env.DATABASE_PORT || 5432,\n      username: process.env.DATABASE_USERNAME || 'postgres',\n      password: process.env.DATABASE_PASSWORD || 'postgres',\n      database: process.env.DATABASE_NAME || 'my-db',\n      ssl: { rejectUnauthorized: false },\n      schema,\n      entities: [`apps/${schema}/**/**.entity{.ts,.js}`],\n      migrations: [`apps/${schema}/src/migrations/**/*{.ts,.js}`],\n      subscribers: [`apps/${schema}/src/subscriber/**/*{.ts,.js}`],\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/database/database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init(schema: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/database/database.module.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                schema\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        loadEntities\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadEntities(entities?: EntityClassOrSchema[], dataSource?: DataSource | DataSourceOptions | string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/database/database.module.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        EntityClassOrSchema[]\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                dataSource\n                                            \n                                                            DataSource | DataSourceOptions | string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, DynamicModule } from '@nestjs/common';\nimport { TypeOrmModule, TypeOrmModuleOptions } from '@nestjs/typeorm';\nimport { ConfigHelper } from '@qushah/common';\nimport { EntityClassOrSchema } from '@nestjs/typeorm/dist/interfaces/entity-class-or-schema.type';\nimport { DataSource, DataSourceOptions } from 'typeorm';\n\n@Module({})\nexport class DatabaseModule {\n  static init(schema: string): DynamicModule {\n    return {\n      module: DatabaseModule,\n      imports: [\n        TypeOrmModule.forRootAsync({\n          useFactory: async () => {\n            const configHelper = await ConfigHelper.getInstance();\n            const { type, host, port, username, password, database } =\n              configHelper.databaseConfig;\n            const options: TypeOrmModuleOptions = {\n              type,\n              host,\n              port,\n              username,\n              password,\n              database,\n              schema: schema, // Set schema dynamically\n              autoLoadEntities: true,\n              // synchronize: true, // Enable only for development\n              ssl: { rejectUnauthorized: false },\n            };\n\n            return options;\n          },\n        }),\n      ],\n    };\n  }\n\n  static loadEntities(\n    entities?: EntityClassOrSchema[],\n    dataSource?: DataSource | DataSourceOptions | string,\n  ): DynamicModule {\n    return TypeOrmModule.forFeature(entities, dataSource);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DatabaseUtil.html":{"url":"classes/DatabaseUtil.html","title":"class - DatabaseUtil","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DatabaseUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/utils/database.util.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                generateUUIDv7\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        generateUUIDv7\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateUUIDv7()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/utils/database.util.ts:2\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class DatabaseUtil {\n  static generateUUIDv7(): string {\n    const now = Date.now();\n    const timestamp = now.toString(16).padStart(12, '0'); // 48-bit timestamp\n\n    // Generate 10 random bytes\n    const randomBytes = Array.from(crypto.getRandomValues(new Uint8Array(10)))\n      .map((b) => b.toString(16).padStart(2, '0')) // Convert to hex and ensure 2 characters\n      .join('');\n\n    // Construct UUIDv7 (ensuring the correct format)\n    return `${timestamp.substring(0, 8)}-${timestamp.substring(8, 12)}-7${randomBytes.substring(1, 3)}-${randomBytes.substring(3, 7)}-${randomBytes.substring(7, 19)}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DocumentationController.html":{"url":"controllers/DocumentationController.html","title":"controller - DocumentationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DocumentationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/documentation/src/documentation.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in apps/documentation/src/documentation.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { DocumentationService } from './documentation.service';\n\n@Controller()\nexport class DocumentationController {\n  constructor(private readonly documentationService: DocumentationService) {}\n\n  @Get()\n  getHello(): string {\n    return this.documentationService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DocumentationModule.html":{"url":"modules/DocumentationModule.html","title":"module - DocumentationModule","body":"\n                   \n\n\n\n\n    Modules\n    DocumentationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DocumentationModule\n\n\n\ncluster_DocumentationModule_providers\n\n\n\n\nDocumentationService\n\nDocumentationService\n\n\n\nDocumentationModule\n\nDocumentationModule\n\nDocumentationModule -->\n\nDocumentationService->DocumentationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/documentation/src/documentation.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DocumentationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DocumentationController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DocumentationController } from './documentation.controller';\nimport { DocumentationService } from './documentation.service';\n\n@Module({\n  imports: [],\n  controllers: [DocumentationController],\n  providers: [DocumentationService],\n})\nexport class DocumentationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DocumentationService.html":{"url":"injectables/DocumentationService.html","title":"injectable - DocumentationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DocumentationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/documentation/src/documentation.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/documentation/src/documentation.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class DocumentationService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/EscrowController.html":{"url":"controllers/EscrowController.html","title":"controller - EscrowController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  EscrowController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/escrow/src/escrow.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/escrow/src/escrow.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { EscrowService } from './escrow.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { EscrowCommand } from '@qushah/common';\n\n@Controller()\nexport class EscrowController {\n  constructor(private readonly escrowService: EscrowService) {}\n\n  @MessagePattern({ cmd: EscrowCommand.PING_ESCROW })\n  getHello(): string {\n    return this.escrowService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EscrowModule.html":{"url":"modules/EscrowModule.html","title":"module - EscrowModule","body":"\n                   \n\n\n\n\n    Modules\n    EscrowModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EscrowModule\n\n\n\ncluster_EscrowModule_imports\n\n\n\ncluster_EscrowModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nEscrowModule\n\nEscrowModule\n\nEscrowModule -->\n\nCommonModule->EscrowModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nEscrowModule -->\n\nGraphQLMicroserviceModule->EscrowModule\n\n\n\n\n\nEscrowService\n\nEscrowService\n\nEscrowModule -->\n\nEscrowService->EscrowModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/escrow/src/escrow.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            EscrowService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            EscrowController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { EscrowController } from './escrow.controller';\nimport { EscrowService } from './escrow.service';\nimport { CommonModule, GraphQLMicroserviceModule } from '@qushah/common';\nimport { EscrowResolver } from './resolvers/escrow.resolver';\n\n@Module({\n  imports: [CommonModule, GraphQLMicroserviceModule],\n  controllers: [EscrowController],\n  providers: [EscrowService, EscrowResolver],\n})\nexport class EscrowModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EscrowResolver.html":{"url":"classes/EscrowResolver.html","title":"class - EscrowResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EscrowResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/escrow/src/resolvers/escrow.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingEscrow'})\n                \n            \n\n                    \n                        \n                            Defined in apps/escrow/src/resolvers/escrow.resolver.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\n\n@Resolver()\nexport class EscrowResolver {\n  @Query(() => String, { name: 'pingEscrow' })\n  ping(): string {\n    return 'pong';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EscrowService.html":{"url":"injectables/EscrowService.html","title":"injectable - EscrowService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EscrowService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/escrow/src/escrow.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/escrow/src/escrow.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class EscrowService {\n  getHello(): string {\n    return 'Hello from Escrow Service!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GatewayModule.html":{"url":"modules/GatewayModule.html","title":"module - GatewayModule","body":"\n                   \n\n\n\n\n    Modules\n    GatewayModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GatewayModule\n\n\n\ncluster_GatewayModule_providers\n\n\n\ncluster_GatewayModule_imports\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nGatewayModule\n\nGatewayModule\n\nGatewayModule -->\n\nCommonModule->GatewayModule\n\n\n\n\n\nGraphQLGatewayModule\n\nGraphQLGatewayModule\n\nGatewayModule -->\n\nGraphQLGatewayModule->GatewayModule\n\n\n\n\n\nGatewayService\n\nGatewayService\n\nGatewayModule -->\n\nGatewayService->GatewayModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/gateway/src/gateway.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GatewayService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            GraphQLGatewayModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { GatewayService } from './gateway.service';\nimport {\n  CommonModule,\n  ENVIRONMENT,\n  GraphQLGatewayModule,\n} from '@qushah/common';\n\nconst {\n  AUTH_HOST,\n  ESCROW_HOST,\n  MEDIA_HOST,\n  NOTIFICATION_HOST,\n  ORGANIZATION_HOST,\n  PAYMENT_HOST,\n  PROPERTY_HOST,\n  USER_HOST,\n} = ENVIRONMENT;\n\n@Module({\n  imports: [\n    CommonModule,\n    GraphQLGatewayModule.register(\n      AUTH_HOST,\n      ESCROW_HOST,\n      MEDIA_HOST,\n      NOTIFICATION_HOST,\n      ORGANIZATION_HOST,\n      PAYMENT_HOST,\n      PROPERTY_HOST,\n      USER_HOST,\n    ),\n  ],\n  providers: [GatewayService],\n})\nexport class GatewayModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GatewayService.html":{"url":"injectables/GatewayService.html","title":"injectable - GatewayService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GatewayService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gateway/src/gateway.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gateway/src/gateway.service.ts:4\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ping\n                        \n                    \n                \n            \n            \n                \nping()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gateway/src/gateway.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class GatewayService {\n  constructor() {}\n\n  ping(): string {\n    return 'Hello from Gateway Service!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GraphQLGatewayModule.html":{"url":"modules/GraphQLGatewayModule.html","title":"module - GraphQLGatewayModule","body":"\n                   \n\n\n\n\n    Modules\n    GraphQLGatewayModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/graphql/graphql-gateway.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(...subgraphNames: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/graphql/graphql-gateway.module.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                subgraphNames\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, Global, DynamicModule } from '@nestjs/common';\nimport { GraphQLModule } from '@nestjs/graphql';\nimport { ApolloGatewayDriver, ApolloGatewayDriverConfig } from '@nestjs/apollo';\nimport { IntrospectAndCompose } from '@apollo/gateway';\nimport { SubgraphsBuilder } from '@qushah/common';\n\n@Global()\n@Module({})\nexport class GraphQLGatewayModule {\n  static async register(...subgraphNames: string[]): Promise {\n    return {\n      module: GraphQLGatewayModule,\n      imports: [\n        GraphQLModule.forRootAsync({\n          driver: ApolloGatewayDriver,\n          useFactory: async () => {\n            return {\n              gateway: {\n                supergraphSdl: new IntrospectAndCompose({\n                  subgraphs: await SubgraphsBuilder.build(...subgraphNames),\n                }),\n              },\n            };\n          },\n        }),\n      ],\n      exports: [GraphQLModule],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GraphQLMicroserviceModule.html":{"url":"modules/GraphQLMicroserviceModule.html","title":"module - GraphQLMicroserviceModule","body":"\n                   \n\n\n\n\n    Modules\n    GraphQLMicroserviceModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/graphql/graphql-microservice.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { GraphQLModule } from '@nestjs/graphql';\nimport {\n  ApolloFederationDriver,\n  ApolloFederationDriverConfig,\n} from '@nestjs/apollo';\n\n@Module({\n  imports: [\n    GraphQLModule.forRoot({\n      driver: ApolloFederationDriver,\n      autoSchemaFile: {\n        federation: 2,\n      },\n      sortSchema: true,\n    }),\n  ],\n})\nexport class GraphQLMicroserviceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MediaController.html":{"url":"controllers/MediaController.html","title":"controller - MediaController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MediaController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/media/src/media.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/media/src/media.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { MediaService } from './media.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { MediaCommand } from '@qushah/common';\n\n@Controller()\nexport class MediaController {\n  constructor(private readonly mediaService: MediaService) {}\n\n  @MessagePattern({ cmd: MediaCommand.PING_MEDIA })\n  getHello(): string {\n    return this.mediaService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MediaModule.html":{"url":"modules/MediaModule.html","title":"module - MediaModule","body":"\n                   \n\n\n\n\n    Modules\n    MediaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MediaModule\n\n\n\ncluster_MediaModule_imports\n\n\n\ncluster_MediaModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nMediaModule\n\nMediaModule\n\nMediaModule -->\n\nCommonModule->MediaModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nMediaModule -->\n\nGraphQLMicroserviceModule->MediaModule\n\n\n\n\n\nMediaService\n\nMediaService\n\nMediaModule -->\n\nMediaService->MediaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/media/src/media.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MediaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MediaController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MediaController } from './media.controller';\nimport { MediaService } from './media.service';\nimport { CommonModule, GraphQLMicroserviceModule } from '@qushah/common';\nimport { MediaResolver } from './resolvers/media.resolver';\n\n@Module({\n  imports: [CommonModule, GraphQLMicroserviceModule],\n  controllers: [MediaController],\n  providers: [MediaService, MediaResolver],\n})\nexport class MediaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MediaResolver.html":{"url":"classes/MediaResolver.html","title":"class - MediaResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MediaResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/media/src/resolvers/media.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingMedia'})\n                \n            \n\n                    \n                        \n                            Defined in apps/media/src/resolvers/media.resolver.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\n\n@Resolver()\nexport class MediaResolver {\n  @Query(() => String, { name: 'pingMedia' })\n  ping(): string {\n    return 'pong';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MediaService.html":{"url":"injectables/MediaService.html","title":"injectable - MediaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MediaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/media/src/media.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/media/src/media.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class MediaService {\n  getHello(): string {\n    return 'Hello from Media Service!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/NotificationController.html":{"url":"controllers/NotificationController.html","title":"controller - NotificationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  NotificationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/notification/src/notification.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/notification/src/notification.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { NotificationService } from './notification.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { NotificationCommand } from '@qushah/common';\n\n@Controller()\nexport class NotificationController {\n  constructor(private readonly notificationService: NotificationService) {}\n\n  @MessagePattern({ cmd: NotificationCommand.PING_NOTIFICATION })\n  getHello(): string {\n    return this.notificationService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NotificationModule.html":{"url":"modules/NotificationModule.html","title":"module - NotificationModule","body":"\n                   \n\n\n\n\n    Modules\n    NotificationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NotificationModule\n\n\n\ncluster_NotificationModule_imports\n\n\n\ncluster_NotificationModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nNotificationModule\n\nNotificationModule\n\nNotificationModule -->\n\nCommonModule->NotificationModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nNotificationModule -->\n\nGraphQLMicroserviceModule->NotificationModule\n\n\n\n\n\nNotificationService\n\nNotificationService\n\nNotificationModule -->\n\nNotificationService->NotificationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/notification/src/notification.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NotificationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            NotificationController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { NotificationController } from './notification.controller';\nimport { NotificationService } from './notification.service';\nimport { CommonModule, GraphQLMicroserviceModule } from '@qushah/common';\nimport { NotificationResolver } from './resolvers/notification.resolver';\n\n@Module({\n  imports: [CommonModule, GraphQLMicroserviceModule],\n  controllers: [NotificationController],\n  providers: [NotificationService, NotificationResolver],\n})\nexport class NotificationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotificationResolver.html":{"url":"classes/NotificationResolver.html","title":"class - NotificationResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotificationResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/notification/src/resolvers/notification.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingNotification'})\n                \n            \n\n                    \n                        \n                            Defined in apps/notification/src/resolvers/notification.resolver.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\n\n@Resolver()\nexport class NotificationResolver {\n  @Query(() => String, { name: 'pingNotification' })\n  ping(): string {\n    return 'pong';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationService.html":{"url":"injectables/NotificationService.html","title":"injectable - NotificationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NotificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/notification/src/notification.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/notification/src/notification.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class NotificationService {\n  getHello(): string {\n    return 'Hello from Notification Service!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Organization.html":{"url":"entities/Organization.html","title":"entity - Organization","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Organization\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/organization/src/entities/organization.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                meta\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                primaryContactName\n                            \n                            \n                                    \n                                    \n                                slug\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrganizationMetadata\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@OneToOne(undefined, meta => meta.organization)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        primaryContactName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column({name: 'primary_contact_name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization.entity.ts:16\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql';\nimport { Column, Entity, OneToOne } from 'typeorm';\nimport { BaseEntity, GraphQLFederationDirective } from '@qushah/common';\nimport { OrganizationMetadata } from './organization-metadata.entity';\n\n@ObjectType()\n@Entity({ name: 'organizations' })\n@GraphQLFederationDirective('@key(fields: \"id\")')\nexport class Organization extends BaseEntity {\n  @Field(() => String)\n  @Column({ unique: true })\n  name: string;\n\n  @Field(() => String)\n  @Column({ unique: true })\n  slug: string;\n\n  @Field(() => String)\n  @Column({ name: 'primary_contact_name' })\n  primaryContactName: string;\n\n  @Field(() => String)\n  @Column()\n  email: string;\n\n  @Field(() => String)\n  @Column()\n  phone: string;\n\n  @Field(() => OrganizationMetadata, { nullable: true })\n  @OneToOne(() => OrganizationMetadata, (meta) => meta.organization)\n  meta?: OrganizationMetadata;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Organization-1.html":{"url":"classes/Organization-1.html","title":"class - Organization-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Organization\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user/src/entities/external/organization.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Directive('@external')\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/entities/external/organization.entity.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive, Field, ObjectType } from '@nestjs/graphql';\nimport { GraphQLFederationDirective } from '@qushah/common';\n\n@ObjectType()\n@GraphQLFederationDirective('@extends') // Extending from Organization Microservice\n@GraphQLFederationDirective('@key(fields: \"id\")') // Federation key\nexport class Organization {\n  @Field(() => String)\n  @Directive('@external') // This field is managed by Organization Microservice\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrganizationController.html":{"url":"controllers/OrganizationController.html","title":"controller - OrganizationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrganizationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/organization/src/organization.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                findOneById\n                            \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/organization/src/organization.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/organization/src/organization.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { OrganizationService } from './organization.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { OrganizationCommand } from '@qushah/common/constants/commands/organization.command';\n\n@Controller()\nexport class OrganizationController {\n  constructor(private readonly organizationService: OrganizationService) {}\n\n  @MessagePattern({ cmd: OrganizationCommand.PING_ORGANIZATION })\n  getHello(): string {\n    return this.organizationService.getHello();\n  }\n\n  @MessagePattern({ cmd: OrganizationCommand.FIND_ORGANIZATION_BY_ID })\n  findOneById(id: string) {\n    return this.organizationService.findOne({ id });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/OrganizationMetadata.html":{"url":"entities/OrganizationMetadata.html","title":"entity - OrganizationMetadata","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  OrganizationMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/organization/src/entities/organization-metadata.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                allowInterestEarning\n                            \n                            \n                                    \n                                    \n                                depositFeePercentage\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                domain\n                            \n                            \n                                    \n                                    \n                                logo\n                            \n                            \n                                    \n                                    \n                                organization\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                primaryColor\n                            \n                            \n                                    \n                                    \n                                rentFeePercentage\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        allowInterestEarning\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column({name: 'allow_interest_earning', type: 'boolean', default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization-metadata.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        depositFeePercentage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column({name: 'deposit_fee_percentage', default: 5, precision: 5, scale: 2, type: 'decimal'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization-metadata.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        domain\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization-metadata.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization-metadata.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        organization\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Organization\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, organization => organization.meta, {cascade: true, onDelete: 'CASCADE', onUpdate: 'CASCADE'})@JoinColumn({name: 'organization_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization-metadata.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        primaryColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Column({name: 'primary_color', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization-metadata.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        rentFeePercentage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column({name: 'rent_fee_percentage', default: 5, precision: 5, scale: 2, type: 'decimal'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization-metadata.entity.ts:38\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, OneToOne } from 'typeorm';\nimport { Field, Float, ObjectType } from '@nestjs/graphql';\nimport { BaseEntity } from '@qushah/common';\nimport { JoinColumn } from 'typeorm';\nimport { Organization } from './organization.entity';\n\n@ObjectType()\n@Entity({ name: 'organizations_metadata' })\nexport class OrganizationMetadata extends BaseEntity {\n  @OneToOne(() => Organization, (organization) => organization.meta, {\n    cascade: true,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n  })\n  @JoinColumn({ name: 'organization_id' })\n  organization: Organization;\n\n  @Field(() => String, { nullable: true })\n  @Column({ name: 'primary_color', nullable: true })\n  primaryColor?: string;\n\n  @Field(() => String, { nullable: true })\n  @Column({ nullable: true })\n  domain?: string;\n\n  @Field(() => String)\n  @Column()\n  logo: string;\n\n  @Field(() => Float)\n  @Column({\n    name: 'rent_fee_percentage',\n    default: 5.0,\n    precision: 5,\n    scale: 2,\n    type: 'decimal',\n  })\n  rentFeePercentage: number;\n\n  @Field(() => Float)\n  @Column({\n    name: 'deposit_fee_percentage',\n    default: 5.0,\n    precision: 5,\n    scale: 2,\n    type: 'decimal',\n  })\n  depositFeePercentage: number;\n\n  @Field(() => Boolean)\n  @Column({ name: 'allow_interest_earning', type: 'boolean', default: false })\n  allowInterestEarning: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrganizationModule.html":{"url":"modules/OrganizationModule.html","title":"module - OrganizationModule","body":"\n                   \n\n\n\n\n    Modules\n    OrganizationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OrganizationModule\n\n\n\ncluster_OrganizationModule_imports\n\n\n\ncluster_OrganizationModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nOrganizationModule\n\nOrganizationModule\n\nOrganizationModule -->\n\nCommonModule->OrganizationModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nOrganizationModule -->\n\nDatabaseModule->OrganizationModule\n\n\n\nOrganizationModule -->\n\nDatabaseModule->OrganizationModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nOrganizationModule -->\n\nGraphQLMicroserviceModule->OrganizationModule\n\n\n\n\n\nOrganizationService\n\nOrganizationService\n\nOrganizationModule -->\n\nOrganizationService->OrganizationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/organization/src/organization.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrganizationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrganizationController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { OrganizationController } from './organization.controller';\nimport { OrganizationService } from './organization.service';\nimport {\n  CommonModule,\n  DatabaseModule,\n  GraphQLMicroserviceModule,\n  SCHEMA,\n} from '@qushah/common';\nimport { OrganizationResolver } from './resolvers/organization.resolver';\nimport { Organization } from './entities/organization.entity';\nimport { OrganizationMetadata } from './entities/organization-metadata.entity';\n\n@Module({\n  imports: [\n    DatabaseModule.init(SCHEMA.ORGANIZATION),\n    DatabaseModule.loadEntities([Organization, OrganizationMetadata]),\n    CommonModule,\n    GraphQLMicroserviceModule,\n  ],\n  controllers: [OrganizationController],\n  providers: [OrganizationService, OrganizationResolver],\n})\nexport class OrganizationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrganizationResolver.html":{"url":"classes/OrganizationResolver.html","title":"class - OrganizationResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrganizationResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/organization/src/resolvers/organization.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                organizations\n                            \n                            \n                                    \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(organizationService: OrganizationService)\n                    \n                \n                        \n                            \n                                Defined in apps/organization/src/resolvers/organization.resolver.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationService\n                                                  \n                                                        \n                                                                        OrganizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        organizations\n                        \n                    \n                \n            \n            \n                \n                        \n                    organizations()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: true})\n                \n            \n\n                    \n                        \n                            Defined in apps/organization/src/resolvers/organization.resolver.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingOrganization'})\n                \n            \n\n                    \n                        \n                            Defined in apps/organization/src/resolvers/organization.resolver.ts:10\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\nimport { Organization } from '../entities/organization.entity';\nimport { OrganizationService } from '../organization.service';\n\n@Resolver()\nexport class OrganizationResolver {\n  constructor(private readonly organizationService: OrganizationService) {}\n\n  @Query(() => String, { name: 'pingOrganization' })\n  ping(): string {\n    return 'pong';\n  }\n\n  @Query(() => [Organization], { nullable: true })\n  organizations(): Promise {\n    return this.organizationService.findAll();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrganizationService.html":{"url":"injectables/OrganizationService.html","title":"injectable - OrganizationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrganizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/organization/src/organization.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: Repository)\n                    \n                \n                        \n                            \n                                Defined in apps/organization/src/organization.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/organization/src/organization.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(where: FindOptionsWhere)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/organization/src/organization.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                where\n                                            \n                                                            FindOptionsWhere\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/organization/src/organization.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { Organization } from './entities/organization.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { FindOptionsWhere } from 'typeorm/find-options/FindOptionsWhere';\n\n@Injectable()\nexport class OrganizationService {\n  constructor(\n    @InjectRepository(Organization)\n    private readonly repository: Repository,\n  ) {}\n\n  getHello(): string {\n    return 'Hello from Organization Service!';\n  }\n\n  findAll(): Promise {\n    return this.repository.find({\n      relations: ['meta'],\n    });\n  }\n\n  findOne(where: FindOptionsWhere) {\n    return this.repository.findOne({ where });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PaymentController.html":{"url":"controllers/PaymentController.html","title":"controller - PaymentController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PaymentController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/payment/src/payment.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/payment/src/payment.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { PaymentService } from './payment.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { PaymentCommand } from '@qushah/common';\n\n@Controller()\nexport class PaymentController {\n  constructor(private readonly paymentService: PaymentService) {}\n\n  @MessagePattern({ cmd: PaymentCommand.PING_PAYMENT })\n  getHello(): string {\n    return this.paymentService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PaymentModule.html":{"url":"modules/PaymentModule.html","title":"module - PaymentModule","body":"\n                   \n\n\n\n\n    Modules\n    PaymentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PaymentModule\n\n\n\ncluster_PaymentModule_providers\n\n\n\ncluster_PaymentModule_imports\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nPaymentModule\n\nPaymentModule\n\nPaymentModule -->\n\nCommonModule->PaymentModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nPaymentModule -->\n\nGraphQLMicroserviceModule->PaymentModule\n\n\n\n\n\nPaymentService\n\nPaymentService\n\nPaymentModule -->\n\nPaymentService->PaymentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/payment/src/payment.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PaymentService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PaymentController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PaymentController } from './payment.controller';\nimport { PaymentService } from './payment.service';\nimport { CommonModule, GraphQLMicroserviceModule } from '@qushah/common';\nimport { PaymentResolver } from './resolvers/payment.resolver';\n\n@Module({\n  imports: [CommonModule, GraphQLMicroserviceModule],\n  controllers: [PaymentController],\n  providers: [PaymentService, PaymentResolver],\n})\nexport class PaymentModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaymentResolver.html":{"url":"classes/PaymentResolver.html","title":"class - PaymentResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaymentResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/payment/src/resolvers/payment.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingPayment'})\n                \n            \n\n                    \n                        \n                            Defined in apps/payment/src/resolvers/payment.resolver.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\n\n@Resolver()\nexport class PaymentResolver {\n  @Query(() => String, { name: 'pingPayment' })\n  ping(): string {\n    return 'pong';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PaymentService.html":{"url":"injectables/PaymentService.html","title":"injectable - PaymentService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PaymentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/payment/src/payment.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/payment/src/payment.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class PaymentService {\n  getHello(): string {\n    return 'Hello from Payment Service!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PropertyController.html":{"url":"controllers/PropertyController.html","title":"controller - PropertyController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PropertyController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/property/src/property.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/property/src/property.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { PropertyService } from './property.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { PropertyCommand } from '@qushah/common';\n\n@Controller()\nexport class PropertyController {\n  constructor(private readonly propertyService: PropertyService) {}\n\n  @MessagePattern({ cmd: PropertyCommand.PING_PROPERTY })\n  getHello(): string {\n    return this.propertyService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PropertyModule.html":{"url":"modules/PropertyModule.html","title":"module - PropertyModule","body":"\n                   \n\n\n\n\n    Modules\n    PropertyModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PropertyModule\n\n\n\ncluster_PropertyModule_imports\n\n\n\ncluster_PropertyModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nPropertyModule\n\nPropertyModule\n\nPropertyModule -->\n\nCommonModule->PropertyModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nPropertyModule -->\n\nGraphQLMicroserviceModule->PropertyModule\n\n\n\n\n\nPropertyService\n\nPropertyService\n\nPropertyModule -->\n\nPropertyService->PropertyModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/property/src/property.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PropertyService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PropertyController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PropertyController } from './property.controller';\nimport { PropertyService } from './property.service';\nimport { CommonModule, GraphQLMicroserviceModule } from '@qushah/common';\nimport { PropertyResolver } from './resolvers/property.resolver';\n\n@Module({\n  imports: [CommonModule, GraphQLMicroserviceModule],\n  controllers: [PropertyController],\n  providers: [PropertyService, PropertyResolver],\n})\nexport class PropertyModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PropertyResolver.html":{"url":"classes/PropertyResolver.html","title":"class - PropertyResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PropertyResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/property/src/resolvers/property.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingProperty'})\n                \n            \n\n                    \n                        \n                            Defined in apps/property/src/resolvers/property.resolver.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\n\n@Resolver()\nexport class PropertyResolver {\n  @Query(() => String, { name: 'pingProperty' })\n  ping(): string {\n    return 'pong';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PropertyService.html":{"url":"injectables/PropertyService.html","title":"injectable - PropertyService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PropertyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/property/src/property.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/property/src/property.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class PropertyService {\n  getHello(): string {\n    return 'Hello from Property Service!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Role.html":{"url":"entities/Role.html","title":"entity - Role","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user/src/entities/role.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/entities/role.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@PrimaryColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/entities/role.entity.ts:9\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql';\nimport { BaseEntity, Column, Entity, PrimaryColumn } from 'typeorm';\n\n@ObjectType()\n@Entity({ name: 'roles' })\nexport class Role extends BaseEntity {\n  @Field(() => String)\n  @PrimaryColumn()\n  name: string;\n\n  @Field(() => String, { nullable: true })\n  @Column({ nullable: true })\n  description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SeederModule.html":{"url":"modules/SeederModule.html","title":"module - SeederModule","body":"\n                   \n\n\n\n\n    Modules\n    SeederModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SeederModule\n\n\n\ncluster_SeederModule_providers\n\n\n\ncluster_SeederModule_exports\n\n\n\n\nSeederService \n\nSeederService \n\n\n\nSeederModule\n\nSeederModule\n\nSeederService  -->\n\nSeederModule->SeederService \n\n\n\n\n\nSeederService\n\nSeederService\n\nSeederModule -->\n\nSeederService->SeederModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/user/src/seeder/seeder.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SeederService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SeederService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { SeederService } from './seeder.service';\nimport { Role } from '../entities/role.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Role])],\n  providers: [SeederService],\n  exports: [SeederService],\n})\nexport class SeederModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SeederService.html":{"url":"injectables/SeederService.html","title":"injectable - SeederService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SeederService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user/src/seeder/seeder.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                seed\n                            \n                            \n                                    Private\n                                    Async\n                                seedRoles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in apps/user/src/seeder/seeder.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        seed\n                        \n                    \n                \n            \n            \n                \n                        \n                    seed()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/user/src/seeder/seeder.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        seedRoles\n                        \n                    \n                \n            \n            \n                \n                        \n                    seedRoles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/user/src/seeder/seeder.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Role } from '../entities/role.entity';\nimport { Roles } from '@qushah/common';\n\n@Injectable()\nexport class SeederService {\n  constructor(\n    @InjectRepository(Role) private roleRepository: Repository,\n  ) {}\n\n  async seed() {\n    await this.seedRoles();\n    console.log('✅ Database seeding completed.');\n  }\n\n  private async seedRoles() {\n    const roles = Object.values(Roles);\n    for (const roleName of roles) {\n      const roleExists = await this.roleRepository.findOne({\n        where: { name: roleName },\n      });\n      if (!roleExists) {\n        await this.roleRepository.save(\n          this.roleRepository.create({ name: roleName }),\n        );\n        console.log(`Inserted Role: ${roleName}`);\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SubgraphsBuilder.html":{"url":"classes/SubgraphsBuilder.html","title":"class - SubgraphsBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SubgraphsBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/utils/subgraphs-builder.util.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Async\n                                build\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        build\n                        \n                    \n                \n            \n            \n                \n                        \n                    build(...graphNames: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/utils/subgraphs-builder.util.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                graphNames\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ServiceEndpointDefinition } from '@apollo/gateway/src/config';\nimport { ConfigHelper } from '@qushah/common';\n\nexport class SubgraphsBuilder {\n  static async build(\n    ...graphNames: string[]\n  ): Promise {\n    const configHelper = await ConfigHelper.getInstance();\n\n    return graphNames.map((graphName) => {\n      const keyPart = graphName?.split('_HOST')?.[0];\n      const key = keyPart || graphName;\n      const { host, port } = configHelper.getMicroServiceHosts(key);\n      return {\n        name: graphName,\n        url: `${host}:${port}/graphql`,\n      };\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user/src/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                    \n                                lastName\n                            \n                            \n                                    \n                                    Optional\n                                organization\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                organizationId\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/entities/user.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/entities/user.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/entities/user.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        organization\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Organization\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/entities/user.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        organizationId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Column({name: 'organization_id', type: 'uuid', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/entities/user.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/entities/user.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/entities/user.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@ManyToOne(undefined)@JoinColumn({name: 'role_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/entities/user.entity.ts:33\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql';\nimport { Column, Entity, JoinColumn, ManyToOne } from 'typeorm';\nimport { BaseEntity, GraphQLFederationDirective } from '@qushah/common';\nimport { Role } from './role.entity';\nimport { Organization } from './external/organization.entity';\n\n@ObjectType()\n@Entity({ name: 'users' })\n@GraphQLFederationDirective('@key(fields: \"id\")')\nexport class User extends BaseEntity {\n  @Field(() => String)\n  @Column()\n  firstName: string;\n\n  @Field(() => String)\n  @Column()\n  lastName: string;\n\n  @Field(() => String)\n  @Column()\n  email: string;\n\n  @Column()\n  password: string;\n\n  @Field(() => String)\n  @Column()\n  phone: string;\n\n  @Field(() => Role)\n  @ManyToOne(() => Role)\n  @JoinColumn({ name: 'role_id' })\n  role: Role;\n\n  @Field(() => String, { nullable: true })\n  @Column({ name: 'organization_id', type: 'uuid', nullable: true })\n  organizationId?: string;\n\n  @Field(() => [Organization], { nullable: true })\n  organization?: Organization;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User-1.html":{"url":"classes/User-1.html","title":"class - User-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/organization/src/entities/external/user.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                organization\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                organizationId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/external/user.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        organization\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Organization\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Directive('@requires(fields: \"organizationId\")')\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/external/user.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        organizationId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Directive('@external')\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/external/user.entity.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive, Field, ObjectType } from '@nestjs/graphql';\nimport { Organization } from '../organization.entity';\nimport { GraphQLFederationDirective } from '@qushah/common';\n\n@ObjectType()\n@GraphQLFederationDirective('@extends') // 🚀 Extending User from User microservice\n@GraphQLFederationDirective('@key(fields: \"id\")') // Federated entity\nexport class User {\n  @Field(() => String)\n  id: string;\n\n  @Field(() => String, { nullable: true })\n  @Directive('@external') // organizationId is stored in User service\n  organizationId?: string;\n\n  @Field(() => Organization, { nullable: true })\n  @Directive('@requires(fields: \"organizationId\")') // Requires orgId to fetch org\n  organization?: Organization;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user/src/user.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/user/src/user.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { UserCommand } from '@qushah/common';\n\n@Controller()\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @MessagePattern({ cmd: UserCommand.PING_USER })\n  getHello(): string {\n    return this.userService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_UserModule_imports\n\n\n\n\nClientsModule\n\nClientsModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nClientsModule->UserModule\n\n\n\n\n\nCommonModule\n\nCommonModule\n\nUserModule -->\n\nCommonModule->UserModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nUserModule -->\n\nDatabaseModule->UserModule\n\n\n\nUserModule -->\n\nDatabaseModule->UserModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nUserModule -->\n\nGraphQLMicroserviceModule->UserModule\n\n\n\n\n\nSeederModule\n\nSeederModule\n\nUserModule -->\n\nSeederModule->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/user/src/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ClientsModule\n                        \n                        \n                            CommonModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                        \n                            SeederModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserController } from './user.controller';\nimport { UserService } from './user.service';\nimport {\n  ClientsModule,\n  CommonModule,\n  DatabaseModule,\n  GraphQLMicroserviceModule,\n  MicroServiceClient,\n  SCHEMA,\n} from '@qushah/common';\nimport { UserResolver } from './resolvers/user.resolver';\nimport { User } from './entities/user.entity';\nimport { Role } from './entities/role.entity';\nimport { SeederModule } from './seeder/seeder.module';\n\n@Module({\n  imports: [\n    CommonModule,\n    GraphQLMicroserviceModule,\n    DatabaseModule.init(SCHEMA.USER),\n    DatabaseModule.loadEntities([User, Role]),\n    ClientsModule.register(MicroServiceClient.ORGANIZATION_CLIENT),\n    SeederModule,\n  ],\n  controllers: [UserController],\n  providers: [UserService, UserResolver],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserResolver.html":{"url":"classes/UserResolver.html","title":"class - UserResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user/src/resolvers/user.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ping\n                            \n                            \n                                    \n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in apps/user/src/resolvers/user.resolver.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingUser'})\n                \n            \n\n                    \n                        \n                            Defined in apps/user/src/resolvers/user.resolver.ts:10\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        users\n                        \n                    \n                \n            \n            \n                \n                        \n                    users()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined)\n                \n            \n\n                    \n                        \n                            Defined in apps/user/src/resolvers/user.resolver.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\nimport { User } from '../entities/user.entity';\nimport { UserService } from '../user.service';\n\n@Resolver(User)\nexport class UserResolver {\n  constructor(private readonly userService: UserService) {}\n\n  @Query(() => String, { name: 'pingUser' })\n  ping(): string {\n    return 'pong';\n  }\n\n  @Query(() => [User])\n  users(): Promise {\n    return this.userService.find();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserResolver-1.html":{"url":"classes/UserResolver-1.html","title":"class - UserResolver-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/organization/src/resolvers/external/user.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                organization\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(organizationService: OrganizationService)\n                    \n                \n                        \n                            \n                                Defined in apps/organization/src/resolvers/external/user.resolver.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationService\n                                                  \n                                                        \n                                                                        OrganizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        organization\n                        \n                    \n                \n            \n            \n                \n                        \n                    organization(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResolveField(undefined, {nullable: true})\n                \n            \n\n                    \n                        \n                            Defined in apps/organization/src/resolvers/external/user.resolver.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Parent, ResolveField, Resolver } from '@nestjs/graphql';\nimport { User } from '../../entities/external/user.entity';\nimport { Organization } from '../../entities/organization.entity';\nimport { OrganizationService } from '../../organization.service';\n\n@Resolver(() => User)\nexport class UserResolver {\n  constructor(private readonly organizationService: OrganizationService) {}\n\n  @ResolveField(() => Organization, { nullable: true })\n  async organization(@Parent() user: User): Promise {\n    if (!user.organizationId) return null;\n    return this.organizationService.findOne({ id: user.organizationId });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user/src/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                find\n                            \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(organizationClient: ClientProxy, repository: Repository)\n                    \n                \n                        \n                            \n                                Defined in apps/user/src/user.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationClient\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \nfind()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/user/src/user.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/user/src/user.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { User } from './entities/user.entity';\nimport { MicroServiceClient } from '@qushah/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\n@Injectable()\nexport class UserService {\n  constructor(\n    @Inject(MicroServiceClient.ORGANIZATION_CLIENT)\n    private readonly organizationClient: ClientProxy,\n    @InjectRepository(User)\n    private readonly repository: Repository,\n  ) {}\n\n  getHello(): string {\n    return 'Hello from User Service!';\n  }\n\n  find(): Promise {\n    return this.repository.find();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/auth/src/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/auth/src/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/auth/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/auth/src/resolvers/auth.resolver.ts\n            \n            class\n            AuthResolver\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/documentation/src/documentation.controller.ts\n            \n            controller\n            DocumentationController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/documentation/src/documentation.service.ts\n            \n            injectable\n            DocumentationService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/documentation/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/escrow/src/escrow.controller.ts\n            \n            controller\n            EscrowController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/escrow/src/escrow.service.ts\n            \n            injectable\n            EscrowService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/escrow/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/escrow/src/resolvers/escrow.resolver.ts\n            \n            class\n            EscrowResolver\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/escrow/src/typeorm.data-source.ts\n            \n            variable\n            TypeormDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/gateway/src/gateway.module.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/gateway/src/gateway.service.ts\n            \n            injectable\n            GatewayService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        apps/gateway/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/media/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/media/src/media.controller.ts\n            \n            controller\n            MediaController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/media/src/media.service.ts\n            \n            injectable\n            MediaService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/media/src/resolvers/media.resolver.ts\n            \n            class\n            MediaResolver\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/media/src/typeorm.data-source.ts\n            \n            variable\n            TypeormDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/notification/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/notification/src/notification.controller.ts\n            \n            controller\n            NotificationController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/notification/src/notification.service.ts\n            \n            injectable\n            NotificationService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/notification/src/resolvers/notification.resolver.ts\n            \n            class\n            NotificationResolver\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/notification/src/typeorm.data-source.ts\n            \n            variable\n            TypeormDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/organization/src/entities/external/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/organization/src/entities/organization-metadata.entity.ts\n            \n            entity\n            OrganizationMetadata\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/organization/src/entities/organization-metadata.entity.ts\n            \n            class\n            OrganizationMetadata\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/organization/src/entities/organization.entity.ts\n            \n            entity\n            Organization\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/organization/src/entities/organization.entity.ts\n            \n            class\n            Organization\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        apps/organization/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/organization/src/migrations/1741518145374-CreateOrganizationAndMetaTable.ts\n            \n            class\n            CreateOrganizationAndMetaTable1741518145374\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/organization/src/organization.controller.ts\n            \n            controller\n            OrganizationController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/organization/src/organization.service.ts\n            \n            injectable\n            OrganizationService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/organization/src/resolvers/external/user.resolver.ts\n            \n            class\n            UserResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/organization/src/resolvers/organization.resolver.ts\n            \n            class\n            OrganizationResolver\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        apps/organization/src/typeorm.data-source.ts\n            \n            variable\n            TypeormDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/payment/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/payment/src/payment.controller.ts\n            \n            controller\n            PaymentController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/payment/src/payment.service.ts\n            \n            injectable\n            PaymentService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/payment/src/resolvers/payment.resolver.ts\n            \n            class\n            PaymentResolver\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/payment/src/typeorm.data-source.ts\n            \n            variable\n            TypeormDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/property/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/property/src/property.controller.ts\n            \n            controller\n            PropertyController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/property/src/property.service.ts\n            \n            injectable\n            PropertyService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/property/src/resolvers/property.resolver.ts\n            \n            class\n            PropertyResolver\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/property/src/typeorm.data-source.ts\n            \n            variable\n            TypeormDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/user/src/entities/external/organization.entity.ts\n            \n            class\n            Organization\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/user/src/entities/role.entity.ts\n            \n            entity\n            Role\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/user/src/entities/role.entity.ts\n            \n            class\n            Role\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/user/src/entities/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/user/src/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                        apps/user/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/user/src/migrations/1741519642145-CreateRoleTable.ts\n            \n            class\n            CreateRoleTable1741519642145\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/user/src/migrations/1741519705062-CreateUserTable.ts\n            \n            class\n            CreateUserTable1741519705062\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/user/src/resolvers/user.resolver.ts\n            \n            class\n            UserResolver\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/user/src/seeder/seeder.service.ts\n            \n            injectable\n            SeederService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        apps/user/src/seeder/seeder.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/user/src/typeorm.data-source.ts\n            \n            variable\n            TypeormDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/user/src/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/user/src/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/common/src/common.service.ts\n            \n            injectable\n            CommonService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/config/config.helper.ts\n            \n            class\n            ConfigHelper\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                libs/common/src/config/config.service.ts\n            \n            injectable\n            AppConfigService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/auth.command.ts\n            \n            variable\n            AuthCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/escrow.command.ts\n            \n            variable\n            EscrowCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/media.command.ts\n            \n            variable\n            MediaCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/notification.command.ts\n            \n            variable\n            NotificationCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/organization.command.ts\n            \n            variable\n            OrganizationCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/payment.command.ts\n            \n            variable\n            PaymentCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/property.command.ts\n            \n            variable\n            PropertyCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/user.command.ts\n            \n            variable\n            UserCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/environment.constant.ts\n            \n            variable\n            ENVIRONMENT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/schema.constant.ts\n            \n            variable\n            SCHEMA\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/database/entities/base.entity.ts\n            \n            entity\n            BaseEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/database/entities/base.entity.ts\n            \n            class\n            BaseEntity\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        libs/common/src/decorators/column-order.decorator.ts\n            \n            function\n            ColumnOrder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/decorators/column-order.decorator.ts\n            \n            function\n            getColumnOrder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/decorators/column-order.decorator.ts\n            \n            variable\n            ORDER_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/decorators/graphql-federation-directive.decorator.ts\n            \n            function\n            GraphQLFederationDirective\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/decorators/graphql-federation-directive.decorator.ts\n            \n            variable\n            isDocEnv\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/utils/bootstrapper.util.ts\n            \n            class\n            Bootstrapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/common/src/utils/data-source.util.ts\n            \n            class\n            DataSource\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/common/src/utils/database.util.ts\n            \n            class\n            DatabaseUtil\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/common/src/utils/subgraphs-builder.util.ts\n            \n            class\n            SubgraphsBuilder\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        typeorm-cli.ts\n            \n            variable\n            argv\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        typeorm-cli.ts\n            \n            variable\n            dataSourcePath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        typeorm-cli.ts\n            \n            variable\n            typeormCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        typeorm-cli.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @apollo/gateway : ^2.9.3\n        \n            @apollo/server : ^4.11.3\n        \n            @apollo/subgraph : ^2.9.3\n        \n            @nestjs/apollo : ^12.2.2\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.3.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/graphql : ^12.2.2\n        \n            @nestjs/microservices : ^10.4.15\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/typeorm : ^11.0.0\n        \n            @types/yargs : ^17.0.33\n        \n            dotenv : ^16.4.7\n        \n            graphql : ^16.10.0\n        \n            ioredis : ^5.4.2\n        \n            joi : ^17.13.3\n        \n            pg : ^8.13.1\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.20\n        \n            yargs : ^17.7.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            MicroServiceClient   (libs/.../micro-service-client.enum.ts)\n                        \n                        \n                            Roles   (libs/.../roles.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/common/src/enums/micro-service-client.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        MicroServiceClient\n                    \n                \n                        \n                            \n                                 AUTH_CLIENT\n                            \n                        \n                        \n                            \n                                Value : AUTH_CLIENT\n                            \n                        \n                        \n                            \n                                 ESCROW_CLIENT\n                            \n                        \n                        \n                            \n                                Value : ESCROW_CLIENT\n                            \n                        \n                        \n                            \n                                 MEDIA_CLIENT\n                            \n                        \n                        \n                            \n                                Value : MEDIA_CLIENT\n                            \n                        \n                        \n                            \n                                 NOTIFICATION_CLIENT\n                            \n                        \n                        \n                            \n                                Value : NOTIFICATION_CLIENT\n                            \n                        \n                        \n                            \n                                 ORGANIZATION_CLIENT\n                            \n                        \n                        \n                            \n                                Value : ORGANIZATION_CLIENT\n                            \n                        \n                        \n                            \n                                 PAYMENT_CLIENT\n                            \n                        \n                        \n                            \n                                Value : PAYMENT_CLIENT\n                            \n                        \n                        \n                            \n                                 PROPERTY_CLIENT\n                            \n                        \n                        \n                            \n                                Value : PROPERTY_CLIENT\n                            \n                        \n                        \n                            \n                                 USER_CLIENT\n                            \n                        \n                        \n                            \n                                Value : USER_CLIENT\n                            \n                        \n            \n        \n\n    libs/common/src/enums/roles.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Roles\n                    \n                \n                        \n                            \n                                 SUPER_ADMIN\n                            \n                        \n                        \n                            \n                                Value : SUPER_ADMIN\n                            \n                        \n                        \n                            \n                                 OWNER\n                            \n                        \n                        \n                            \n                                Value : OWNER\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : ADMIN\n                            \n                        \n                        \n                            \n                                 MEMBER\n                            \n                        \n                        \n                            \n                                Value : MEMBER\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../seeder.ts)\n                        \n                        \n                            ColumnOrder   (libs/.../column-order.decorator.ts)\n                        \n                        \n                            getColumnOrder   (libs/.../column-order.decorator.ts)\n                        \n                        \n                            GraphQLFederationDirective   (libs/.../graphql-federation-directive.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/auth/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/documentation/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/escrow/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/gateway/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/media/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/notification/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/organization/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/payment/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/property/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/user/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/user/src/seeder/seeder.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    libs/common/src/decorators/column-order.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ColumnOrder\n                        \n                    \n                \n            \n            \n                \nColumnOrder(value: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     PropertyDecorator\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getColumnOrder\n                        \n                    \n                \n            \n            \n                \ngetColumnOrder(target, propertyKey, defaultVal: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                propertyKey\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                defaultVal\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    libs/common/src/decorators/graphql-federation-directive.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GraphQLFederationDirective\n                        \n                    \n                \n            \n            \n                \nGraphQLFederationDirective(directive: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                directive\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ClassDecorator\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_imports\n\n\n\ncluster_CommonModule_exports\n\n\n\ncluster_CommonModule_providers\n\n\n\ncluster_DocumentationModule\n\n\n\ncluster_DocumentationModule_providers\n\n\n\ncluster_EscrowModule\n\n\n\ncluster_EscrowModule_providers\n\n\n\ncluster_GatewayModule\n\n\n\ncluster_GatewayModule_imports\n\n\n\ncluster_GatewayModule_providers\n\n\n\ncluster_MediaModule\n\n\n\ncluster_MediaModule_providers\n\n\n\ncluster_NotificationModule\n\n\n\ncluster_NotificationModule_providers\n\n\n\ncluster_OrganizationModule\n\n\n\ncluster_OrganizationModule_imports\n\n\n\ncluster_OrganizationModule_providers\n\n\n\ncluster_PaymentModule\n\n\n\ncluster_PaymentModule_providers\n\n\n\ncluster_PropertyModule\n\n\n\ncluster_PropertyModule_providers\n\n\n\ncluster_SeederModule\n\n\n\ncluster_SeederModule_exports\n\n\n\ncluster_SeederModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nCommonModule->AuthModule\n\n\n\n\n\nCommonService \n\nCommonService \n\nCommonService  -->\n\nCommonModule->CommonService \n\n\n\n\n\nEscrowModule\n\nEscrowModule\n\nEscrowModule -->\n\nCommonModule->EscrowModule\n\n\n\n\n\nGatewayModule\n\nGatewayModule\n\nGatewayModule -->\n\nCommonModule->GatewayModule\n\n\n\n\n\nMediaModule\n\nMediaModule\n\nMediaModule -->\n\nCommonModule->MediaModule\n\n\n\n\n\nNotificationModule\n\nNotificationModule\n\nNotificationModule -->\n\nCommonModule->NotificationModule\n\n\n\n\n\nOrganizationModule\n\nOrganizationModule\n\nOrganizationModule -->\n\nCommonModule->OrganizationModule\n\n\n\n\n\nPaymentModule\n\nPaymentModule\n\nPaymentModule -->\n\nCommonModule->PaymentModule\n\n\n\n\n\nPropertyModule\n\nPropertyModule\n\nPropertyModule -->\n\nCommonModule->PropertyModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nCommonModule->UserModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nAuthModule -->\n\nGraphQLMicroserviceModule->AuthModule\n\n\n\nEscrowModule -->\n\nGraphQLMicroserviceModule->EscrowModule\n\n\n\nMediaModule -->\n\nGraphQLMicroserviceModule->MediaModule\n\n\n\nNotificationModule -->\n\nGraphQLMicroserviceModule->NotificationModule\n\n\n\nOrganizationModule -->\n\nGraphQLMicroserviceModule->OrganizationModule\n\n\n\nPaymentModule -->\n\nGraphQLMicroserviceModule->PaymentModule\n\n\n\nPropertyModule -->\n\nGraphQLMicroserviceModule->PropertyModule\n\n\n\nUserModule -->\n\nGraphQLMicroserviceModule->UserModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nAppConfigModule\n\nAppConfigModule\n\nCommonModule -->\n\nAppConfigModule->CommonModule\n\n\n\n\n\nCommonService\n\nCommonService\n\nCommonModule -->\n\nCommonService->CommonModule\n\n\n\n\n\nDocumentationService\n\nDocumentationService\n\n\n\nDocumentationModule\n\nDocumentationModule\n\nDocumentationModule -->\n\nDocumentationService->DocumentationModule\n\n\n\n\n\nEscrowService\n\nEscrowService\n\nEscrowModule -->\n\nEscrowService->EscrowModule\n\n\n\n\n\nGraphQLGatewayModule\n\nGraphQLGatewayModule\n\nGatewayModule -->\n\nGraphQLGatewayModule->GatewayModule\n\n\n\n\n\nGatewayService\n\nGatewayService\n\nGatewayModule -->\n\nGatewayService->GatewayModule\n\n\n\n\n\nMediaService\n\nMediaService\n\nMediaModule -->\n\nMediaService->MediaModule\n\n\n\n\n\nNotificationService\n\nNotificationService\n\nNotificationModule -->\n\nNotificationService->NotificationModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nOrganizationModule -->\n\nDatabaseModule->OrganizationModule\n\n\n\nOrganizationModule -->\n\nDatabaseModule->OrganizationModule\n\n\n\nUserModule -->\n\nDatabaseModule->UserModule\n\n\n\nUserModule -->\n\nDatabaseModule->UserModule\n\n\n\n\n\nOrganizationService\n\nOrganizationService\n\nOrganizationModule -->\n\nOrganizationService->OrganizationModule\n\n\n\n\n\nPaymentService\n\nPaymentService\n\nPaymentModule -->\n\nPaymentService->PaymentModule\n\n\n\n\n\nPropertyService\n\nPropertyService\n\nPropertyModule -->\n\nPropertyService->PropertyModule\n\n\n\n\n\nSeederService \n\nSeederService \n\n\n\nSeederModule\n\nSeederModule\n\nSeederService  -->\n\nSeederModule->SeederService \n\n\n\nUserModule -->\n\nSeederModule->UserModule\n\n\n\n\n\nSeederService\n\nSeederService\n\nSeederModule -->\n\nSeederService->SeederModule\n\n\n\n\n\nClientsModule\n\nClientsModule\n\nUserModule -->\n\nClientsModule->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        17 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    5 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    13 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    24 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppConfigModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ClientsModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CommonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DocumentationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EscrowModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GatewayModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GraphQLGatewayModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GraphQLMicroserviceModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MediaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NotificationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrganizationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PaymentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PropertyModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SeederModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            argv   (typeorm-cli.ts)\n                        \n                        \n                            AuthCommand   (libs/.../auth.command.ts)\n                        \n                        \n                            dataSourcePath   (typeorm-cli.ts)\n                        \n                        \n                            ENVIRONMENT   (libs/.../environment.constant.ts)\n                        \n                        \n                            EscrowCommand   (libs/.../escrow.command.ts)\n                        \n                        \n                            isDocEnv   (libs/.../graphql-federation-directive.decorator.ts)\n                        \n                        \n                            MediaCommand   (libs/.../media.command.ts)\n                        \n                        \n                            NotificationCommand   (libs/.../notification.command.ts)\n                        \n                        \n                            ORDER_KEY   (libs/.../column-order.decorator.ts)\n                        \n                        \n                            OrganizationCommand   (libs/.../organization.command.ts)\n                        \n                        \n                            PaymentCommand   (libs/.../payment.command.ts)\n                        \n                        \n                            PropertyCommand   (libs/.../property.command.ts)\n                        \n                        \n                            SCHEMA   (libs/.../schema.constant.ts)\n                        \n                        \n                            typeormCommand   (typeorm-cli.ts)\n                        \n                        \n                            TypeormDataSource   (apps/.../typeorm.data-source.ts)\n                        \n                        \n                            TypeormDataSource   (apps/.../typeorm.data-source.ts)\n                        \n                        \n                            TypeormDataSource   (apps/.../typeorm.data-source.ts)\n                        \n                        \n                            TypeormDataSource   (apps/.../typeorm.data-source.ts)\n                        \n                        \n                            TypeormDataSource   (apps/.../typeorm.data-source.ts)\n                        \n                        \n                            TypeormDataSource   (apps/.../typeorm.data-source.ts)\n                        \n                        \n                            TypeormDataSource   (apps/.../typeorm.data-source.ts)\n                        \n                        \n                               (typeorm-cli.ts)\n                        \n                        \n                               (apps/.../gateway.module.ts)\n                        \n                        \n                            UserCommand   (libs/.../user.command.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    typeorm-cli.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        argv\n                        \n                    \n                \n            \n                \n                    \n                        Default value : yargs(process.argv.slice(2))\n  .option('microservice', {\n    alias: 'm',\n    type: 'string',\n    describe: 'The name of the microservice',\n    demandOption: true,\n  })\n  .option('command', {\n    alias: 'c',\n    type: 'string',\n    describe: 'TypeORM CLI command (e.g., generate, run, revert, seed)',\n    demandOption: true,\n  })\n  .option('args', {\n    alias: 'a',\n    type: 'string',\n    describe: 'Additional arguments for the TypeORM CLI command (optional)',\n    default: '',\n  })\n  .option('title', {\n    alias: 't',\n    type: 'string',\n    describe:\n      'Title for migration file. Needed while running generate (optional)',\n    default: '',\n  })\n  .help().argv\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSourcePath\n                        \n                    \n                \n            \n                \n                    \n                        Default value : path.join(\n  __dirname,\n  `./apps/${microservice}/src/typeorm.data-source.ts`,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        typeormCommand\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli.js migration:${command} ${title ? './apps/' + microservice + '/src/migrations/' + title : ''} -d ${dataSourcePath} ${args || ''}`\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : argv as {\n  microservice: string;\n  command: string;\n  args?: string;\n  title?: string;\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/auth.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AuthCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_AUTH: 'PING_AUTH',\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/environment.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ENVIRONMENT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  REDIS_HOST: 'REDIS_HOST',\n  REDIS_PORT: 'REDIS_PORT',\n  AUTH_PORT: 'AUTH_PORT',\n  ESCROW_PORT: 'ESCROW_PORT',\n  GATEWAY_PORT: 'GATEWAY_PORT',\n  MEDIA_PORT: 'MEDIA_PORT',\n  NOTIFICATION_PORT: 'NOTIFICATION_PORT',\n  ORGANIZATION_PORT: 'ORGANIZATION_PORT',\n  PAYMENT_PORT: 'PAYMENT_PORT',\n  PROPERTY_PORT: 'PROPERTY_PORT',\n  USER_PORT: 'USER_PORT',\n  AUTH_HOST: 'AUTH_HOST',\n  ESCROW_HOST: 'ESCROW_HOST',\n  GATEWAY_HOST: 'GATEWAY_HOST',\n  MEDIA_HOST: 'MEDIA_HOST',\n  NOTIFICATION_HOST: 'NOTIFICATION_HOST',\n  ORGANIZATION_HOST: 'ORGANIZATION_HOST',\n  PAYMENT_HOST: 'PAYMENT_HOST',\n  PROPERTY_HOST: 'PROPERTY_HOST',\n  USER_HOST: 'USER_HOST',\n  DATABASE_TYPE: 'DATABASE_TYPE',\n  DATABASE_HOST: 'DATABASE_HOST',\n  DATABASE_PORT: 'DATABASE_PORT',\n  DATABASE_USERNAME: 'DATABASE_USERNAME',\n  DATABASE_PASSWORD: 'DATABASE_PASSWORD',\n  DATABASE_NAME: 'DATABASE_NAME',\n  IS_DOC_ENV: process.env.IS_DOC_ENV === 'true',\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/escrow.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EscrowCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_ESCROW: 'PING_ESCROW',\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/decorators/graphql-federation-directive.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isDocEnv\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ENVIRONMENT.IS_DOC_ENV\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/media.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MediaCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_MEDIA: 'PING_MEDIA',\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/notification.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NotificationCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_NOTIFICATION: 'PING_NOTIFICATION',\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/decorators/column-order.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ORDER_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol.for('order_key')\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/organization.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        OrganizationCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_ORGANIZATION: 'PING_ORGANIZATION',\n  FIND_ORGANIZATION_BY_ID: 'FIND_ORGANIZATION_BY_ID',\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/payment.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PaymentCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_PAYMENT: 'PING_PAYMENT',\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/property.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PropertyCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_PROPERTY: 'PING_PROPERTY',\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/schema.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SCHEMA\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  ORGANIZATION: 'organization',\n  USER: 'user',\n}\n                    \n                \n\n\n        \n    \n\n    apps/escrow/src/typeorm.data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TypeormDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DataSource.getInstance('escrow')\n                    \n                \n\n\n        \n    \n\n    apps/media/src/typeorm.data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TypeormDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DataSource.getInstance('media')\n                    \n                \n\n\n        \n    \n\n    apps/notification/src/typeorm.data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TypeormDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DataSource.getInstance('notification')\n                    \n                \n\n\n        \n    \n\n    apps/organization/src/typeorm.data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TypeormDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DataSource.getInstance('organization')\n                    \n                \n\n\n        \n    \n\n    apps/payment/src/typeorm.data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TypeormDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DataSource.getInstance('payment')\n                    \n                \n\n\n        \n    \n\n    apps/property/src/typeorm.data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TypeormDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DataSource.getInstance('property')\n                    \n                \n\n\n        \n    \n\n    apps/user/src/typeorm.data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TypeormDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DataSource.getInstance('user')\n                    \n                \n\n\n        \n    \n\n    apps/gateway/src/gateway.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : ENVIRONMENT\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/user.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_USER: 'PING_USER',\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
