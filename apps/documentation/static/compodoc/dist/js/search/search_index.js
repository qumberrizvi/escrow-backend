var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppConfigModule.html",[0,0.71,1,2.649]],["body/modules/AppConfigModule.html",[0,1.099,1,4.101,2,1.575,3,0.173,4,0.173,5,0.134,6,4.817,7,0.272,8,0.014,9,4.183,10,3.455,11,0.7,12,5.351,13,1.771,14,4.183,15,4.183,16,2.093,17,4.817,18,4.817,19,4.183,20,7.696,21,4.183,22,4.817,23,4.183,24,4.183,25,4.183,26,4.183,27,4.183,28,4.183,29,4.817,30,4.817,31,4.817,32,4.183,33,4.183,34,4.817,35,0.173,36,0.147,37,0.011,38,0.011]],["title/injectables/AppConfigService.html",[39,1,40,2.855]],["body/injectables/AppConfigService.html",[3,0.164,4,0.164,5,0.128,7,0.239,8,0.014,10,3.287,11,0.666,35,0.164,36,0.14,37,0.011,38,0.011,39,1.499,40,4.28,41,1.907,42,3.981,43,0.458,44,0.867,45,5.182,46,2.406,47,4.583,48,6.488,49,0.628,50,4.583,51,2.254,52,1.291,53,1.547,54,1.615,55,5.182,56,0.77,57,4.583,58,5.188,59,2.537,60,0.638,61,1.991,62,1.828,63,0.786,64,4.583]],["title/controllers/AuthController.html",[65,1.353,66,2.855]],["body/controllers/AuthController.html",[3,0.169,4,0.169,5,0.132,7,0.284,8,0.014,11,0.686,35,0.169,36,0.144,37,0.011,38,0.011,43,0.472,44,0.884,49,0.496,56,0.706,60,0.657,61,2.049,62,1.881,63,0.809,65,2.065,66,4.36,67,1.603,68,4.097,69,2.51,70,1.277,71,2.611,72,2.476,73,4.717,74,4.188,75,4.097,76,3.365,77,2.143,78,3.688,79,4.717,80,2.611,81,4.717,82,4.717]],["title/modules/AuthModule.html",[0,0.71,83,2.855]],["body/modules/AuthModule.html",[0,1.144,2,1.397,3,0.153,4,0.153,5,0.119,7,0.285,8,0.014,11,0.621,13,2.095,35,0.153,36,0.13,37,0.01,38,0.01,66,4.597,67,1.936,74,4.561,75,3.711,83,5.573,84,1.636,85,1.856,86,1.856,87,1.704,88,2.667,89,1.704,90,3.711,91,3.711,92,3.711,93,3.182,94,3.328,95,2.475,96,1.856,97,1.778,98,4.273,99,4.273,100,1.157,101,4.086,102,4.273]],["title/classes/AuthResolver.html",[36,0.121,101,2.855]],["body/classes/AuthResolver.html",[3,0.181,4,0.181,5,0.14,7,0.201,8,0.014,35,0.181,36,0.153,37,0.011,38,0.011,43,0.503,44,0.921,49,0.529,52,1.37,56,0.805,60,0.7,63,0.862,70,1.362,101,4.542,103,1.644,104,4.369,105,3.819,106,2.784,107,6.333,108,5.03,109,3.505,110,3.324,111,1.709,112,2.784]],["title/injectables/AuthService.html",[39,1,74,2.478]],["body/injectables/AuthService.html",[3,0.19,4,0.19,5,0.148,7,0.211,8,0.014,11,0.769,35,0.19,36,0.161,37,0.012,38,0.012,39,1.642,41,2.2,43,0.529,44,0.95,49,0.557,56,0.758,60,0.736,63,0.907,69,2.617,74,4.068,113,4.593,114,5.288,115,2.639,116,4.593,117,2.402]],["title/entities/BaseEntity.html",[118,1.808,119,2.332]],["body/entities/BaseEntity.html",[3,0.093,4,0.093,5,0.072,7,0.234,8,0.015,16,2.681,35,0.093,36,0.079,37,0.007,38,0.007,43,0.258,49,0.57,52,1.045,53,1.263,54,1.467,56,0.561,63,0.828,70,1.467,72,1.355,111,0.877,118,1.801,119,2.828,120,1.429,121,2.242,122,1.65,123,4.828,124,4.828,125,2.534,126,4.828,127,6.801,128,2.582,129,3.101,130,2.582,131,3.966,132,3.671,133,2.582,134,3.101,135,2.582,136,2.582,137,2.582,138,2.582,139,3.101,140,2.582,141,3.966,142,3.966,143,3.966,144,3.213,145,3.966,146,2.582,147,3.966,148,0.949,149,3.424,150,2.323,151,3.775,152,3.101,153,2.582,154,3.966,155,2.582,156,1.852,157,2.582,158,2.582,159,1.718,160,1.718,161,2.582,162,4.828,163,2.582,164,2.582,165,2.582,166,1.355,167,2.582,168,2.582,169,3.068,170,3.101,171,2.582,172,2.582,173,2.639,174,4.705,175,2.582,176,2.582,177,2.582,178,2.582,179,2.582,180,2.582,181,5.418,182,2.242,183,3.966,184,2.242,185,2.582,186,2.582,187,2.582,188,1.512,189,2.242,190,1.512,191,2.582,192,1.718,193,2.582,194,3.966,195,2.242,196,2.582,197,2.582,198,2.582,199,2.582,200,2.582,201,2.582,202,2.242,203,2.582,204,3.966,205,2.582,206,3.966,207,2.582,208,2.582,209,2.582]],["title/classes/Bootstrapper.html",[36,0.121,210,3.113]],["body/classes/Bootstrapper.html",[0,0.727,3,0.146,4,0.146,5,0.114,7,0.268,8,0.014,11,0.592,35,0.146,36,0.124,37,0.01,38,0.01,43,0.407,44,0.802,49,0.429,51,1.384,52,0.881,53,0.95,54,1.103,60,0.567,77,1.85,100,1.103,103,1.332,166,3.284,169,3.678,210,4.314,211,3.538,212,2.976,213,4.792,214,5.517,215,4.073,216,5.517,217,3.232,218,3.538,219,3.185,220,4.073,221,4.792,222,2.711,223,4.073,224,3.347,225,2.922,226,3.538,227,3.538,228,3.538,229,4.073,230,4.073,231,3.538,232,3.185,233,2.536,234,4.073,235,4.175,236,4.073,237,4.073,238,3.185,239,4.073,240,4.073,241,4.073,242,4.073]],["title/modules/ClientsModule.html",[0,0.71,243,2.649]],["body/modules/ClientsModule.html",[0,1.127,2,1.356,3,0.149,4,0.149,5,0.116,7,0.252,8,0.015,11,0.603,13,1.525,35,0.149,36,0.126,37,0.01,38,0.01,44,0.603,49,0.437,51,1.409,52,1.208,53,0.967,54,1.123,56,0.733,60,0.578,63,0.711,77,1.884,89,1.654,166,2.932,169,3.314,212,2.657,217,3.271,221,4.851,224,2.07,225,2.975,227,3.602,231,3.602,232,3.243,233,3.477,235,3.477,243,4.496,244,4.148,245,3.602,246,5.585,247,4.148,248,3.602,249,2.537,250,4.367,251,3.243,252,5.585,253,5.585,254,4.148,255,4.148,256,4.148,257,4.148]],["title/modules/CommonModule.html",[0,0.71,93,1.729]],["body/modules/CommonModule.html",[0,1.172,1,4.945,2,1.469,3,0.161,4,0.161,5,0.125,7,0.263,8,0.014,11,0.653,13,2.165,35,0.161,36,0.137,37,0.01,38,0.01,84,1.72,85,1.952,86,1.952,87,1.792,88,2.734,89,2.621,93,3.375,95,2.559,96,1.952,97,1.869,258,3.902,259,3.902,260,3.902,261,3.902,262,5.291,263,4.493,264,4.493,265,4.493]],["title/injectables/CommonService.html",[39,1,262,2.649]],["body/injectables/CommonService.html",[3,0.209,4,0.209,5,0.163,7,0.233,8,0.014,11,0.848,35,0.209,36,0.178,37,0.012,38,0.012,39,1.742,41,2.426,262,4.614,266,5.065]],["title/classes/ConfigHelper.html",[36,0.121,217,2.332]],["body/classes/ConfigHelper.html",[3,0.089,4,0.089,5,0.069,7,0.229,8,0.015,9,2.145,10,2.748,14,2.145,15,2.145,16,1.073,35,0.089,36,0.075,37,0.007,38,0.007,40,4.688,43,0.247,44,0.557,45,3.328,46,2.464,48,3.328,49,0.706,51,1.798,52,1.016,53,1.524,54,1.271,55,3.328,56,0.779,58,1.931,59,2.599,60,0.737,63,1.084,100,0.669,103,0.807,122,1.594,166,3.181,169,3.815,212,2.233,217,3.355,218,2.145,219,1.931,222,2.55,224,1.232,226,4.078,233,3.937,235,3.937,249,1.741,267,2.145,268,4.688,269,4.695,270,4.595,271,3.832,272,3.832,273,3.832,274,4.695,275,3.832,276,2.469,277,2.469,278,2.469,279,3.832,280,2.469,281,2.469,282,3.832,283,2.469,284,2.469,285,2.469,286,2.469,287,2.469,288,2.469,289,2.469,290,1.643,291,4.695,292,2.469,293,2.469,294,2.469,295,2.469,296,2.469,297,2.469,298,2.469,299,2.469,300,2.469,301,2.469,302,2.996,303,2.469,304,2.385,305,2.469,306,2.55,307,2.469,308,2.469,309,2.469,310,3.832,311,2.469,312,2.469,313,2.469]],["title/classes/CreateOrganizationAndMetaTable1741518145374.html",[36,0.121,314,3.113]],["body/classes/CreateOrganizationAndMetaTable1741518145374.html",[3,0.096,4,0.096,5,0.074,7,0.107,8,0.014,35,0.096,36,0.081,37,0.007,38,0.007,43,0.267,44,0.591,49,0.518,51,1.381,52,1.406,53,1.149,54,1.1,56,0.31,59,2.727,60,0.566,103,0.872,122,1.691,125,3.113,129,3.178,134,3.178,139,3.178,148,0.98,188,4.102,190,1.562,192,4.864,212,2.973,224,3.119,249,2.503,314,4.308,315,4.785,316,2.316,317,3.178,318,3.852,319,4.887,320,2.915,321,3.178,322,2.667,323,3.178,324,5.368,325,2.667,326,3.178,327,2.667,328,3.178,329,4.483,330,4.926,331,3.852,332,3.53,333,5.239,334,5.239,335,3.53,336,2.316,337,1.775,338,1.775,339,4.887,340,4.308,341,5.082,342,2.667,343,4.278,344,2.667,345,2.667,346,3.178,347,5.51,348,2.316,349,2.316,350,2.316,351,2.316,352,4.065,353,2.705,354,2.915,355,2.316,356,2.316,357,2.316,358,1.913,359,3.533,360,2.667,361,2.667,362,3.53,363,2.316,364,4.065,365,2.316,366,2.316,367,2.316,368,3.53,369,2.085,370,3.53,371,2.667,372,2.085]],["title/classes/CreateRoleTable1741519642145.html",[36,0.121,373,3.113]],["body/classes/CreateRoleTable1741519642145.html",[3,0.136,4,0.136,5,0.106,7,0.152,8,0.014,35,0.136,36,0.116,37,0.009,38,0.009,43,0.38,44,0.765,49,0.635,51,1.788,52,1.569,53,1.407,54,1.424,56,0.441,59,2.104,60,0.733,103,1.242,122,2.189,148,1.397,188,2.226,190,2.226,192,2.53,212,3.365,224,2.626,249,2.959,317,4.114,318,4.719,319,5.532,320,3.774,321,4.114,323,4.114,324,5.869,326,4.114,328,2.972,329,3.774,333,4.114,334,4.114,341,2.972,346,2.972,372,2.972,373,5.093,374,5.657,375,3.301,376,3.801,377,3.801,378,3.801,379,4.57,380,2.726,381,3.801]],["title/classes/CreateUserTable1741519705062.html",[36,0.121,382,3.113]],["body/classes/CreateUserTable1741519705062.html",[3,0.114,4,0.114,5,0.089,7,0.127,8,0.014,35,0.114,36,0.097,37,0.008,38,0.008,43,0.318,44,0.674,49,0.576,51,1.576,52,1.444,53,1.276,54,1.256,56,0.369,59,2.567,60,0.646,103,1.04,122,1.93,125,2.434,129,2.488,134,2.488,139,2.488,148,1.17,188,3.522,190,1.864,192,4.585,212,3.174,224,3.001,249,2.731,304,1.981,317,3.626,318,4.279,319,5.217,320,3.326,321,3.626,323,3.626,324,5.629,326,3.626,328,2.488,329,4.313,331,3.626,332,2.764,333,5.217,334,5.217,337,2.118,338,2.118,339,4.279,340,3.626,341,4.279,346,2.488,359,2.283,362,4.028,363,2.764,365,2.764,366,2.764,367,2.764,369,2.488,370,2.764,372,2.488,379,2.764,382,4.702,383,5.222,384,2.764,385,3.183,386,3.183,387,3.183,388,6.013,389,2.764,390,2.764,391,4.028,392,3.183,393,4.638,394,4.638]],["title/classes/DataSource.html",[36,0.121,144,2.649]],["body/classes/DataSource.html",[3,0.146,4,0.146,5,0.154,7,0.25,8,0.014,35,0.146,36,0.124,37,0.01,38,0.01,43,0.406,44,0.8,49,0.427,51,1.379,52,0.878,53,1.284,54,1.099,56,0.725,60,0.565,63,0.696,103,1.327,120,2.247,144,4.157,148,1.492,166,3.278,222,2.701,233,2.527,235,2.527,270,4.78,290,2.701,302,3.174,304,2.527,306,2.701,358,2.911,395,4.78,396,3.525,397,5.504,398,4.059,399,3.427,400,4.059,401,4.059,402,4.78,403,4.304,404,3.525,405,3.174,406,4.059,407,4.059,408,4.059,409,4.059,410,4.059,411,6.696,412,4.059,413,4.059,414,4.059,415,4.059,416,4.059,417,4.059,418,4.059,419,3.525,420,3.525,421,3.525,422,4.059,423,4.059,424,4.059,425,4.059,426,4.059]],["title/modules/DatabaseModule.html",[0,0.71,427,2.478]],["body/modules/DatabaseModule.html",[0,0.978,2,1.043,3,0.115,4,0.115,5,0.089,7,0.256,8,0.015,11,0.464,13,1.173,16,2.019,35,0.115,36,0.142,37,0.008,38,0.008,44,0.464,49,0.489,51,1.579,52,1.005,53,1.404,54,1.258,56,0.775,60,0.647,63,0.94,100,0.864,120,2.572,144,4.702,148,1.173,166,3.16,169,2.877,212,1.518,213,2.772,217,2.722,224,1.593,225,2.289,232,3.634,233,2.893,235,2.893,251,5.004,302,3.634,304,2.893,306,3.093,358,2.289,399,3.748,420,2.772,421,2.772,427,3.412,428,3.191,429,4.648,430,3.191,431,4.648,432,3.191,433,6.021,434,6.021,435,3.191,436,4.648,437,2.772,438,4.648,439,1.987,440,3.191,441,3.191,442,3.191,443,2.772,444,3.191,445,3.191,446,3.191,447,3.191,448,3.191,449,3.191,450,2.772,451,3.191]],["title/classes/DatabaseUtil.html",[36,0.121,156,2.855]],["body/classes/DatabaseUtil.html",[3,0.157,4,0.157,5,0.122,8,0.014,35,0.157,36,0.134,37,0.01,38,0.01,43,0.439,44,0.843,49,0.462,56,0.673,60,0.611,63,0.752,103,1.435,156,4.159,166,3.409,169,3.409,339,4.534,340,3.431,353,2.921,452,3.811,453,6.91,454,4.388,455,4.388,456,4.388,457,4.534,458,4.388,459,4.388,460,3.811,461,4.388,462,4.388,463,4.388,464,4.388,465,4.388,466,4.388,467,4.388,468,4.388,469,4.388,470,4.388,471,4.388,472,4.388,473,4.388,474,4.388,475,4.388,476,3.811,477,3.811,478,4.388,479,4.388,480,3.811,481,4.388,482,4.388,483,4.388,484,3.811,485,4.388,486,3.811,487,4.388,488,4.388]],["title/controllers/DocumentationController.html",[65,1.353,489,2.855]],["body/controllers/DocumentationController.html",[3,0.181,4,0.181,5,0.141,7,0.254,8,0.014,11,0.735,35,0.181,36,0.154,37,0.011,38,0.011,43,0.505,44,0.923,49,0.532,56,0.737,60,0.704,61,2.195,62,2.015,63,0.866,65,2.158,67,1.717,69,2.575,70,1.368,489,4.555,490,4.388,491,5.053,492,4.324,493,4.388,494,5.053]],["title/modules/DocumentationModule.html",[0,0.71,495,2.855]],["body/modules/DocumentationModule.html",[0,1.21,2,1.568,3,0.172,4,0.172,5,0.134,7,0.271,8,0.014,11,0.697,13,1.763,35,0.172,36,0.146,37,0.011,38,0.011,67,2.088,84,1.836,85,2.084,86,2.084,87,1.913,88,2.821,89,1.913,95,2.669,96,2.084,97,1.995,489,4.863,492,4.708,493,4.166,495,5.423,496,4.166,497,4.166,498,4.796,499,4.796]],["title/injectables/DocumentationService.html",[39,1,492,2.478]],["body/injectables/DocumentationService.html",[3,0.191,4,0.191,5,0.148,7,0.212,8,0.014,11,0.772,35,0.191,36,0.162,37,0.012,38,0.012,39,1.647,41,2.21,43,0.531,44,0.953,49,0.559,56,0.761,60,0.74,63,0.911,69,2.621,115,2.652,492,4.079,500,4.614,501,5.313,502,5.313]],["title/controllers/EscrowController.html",[65,1.353,503,2.855]],["body/controllers/EscrowController.html",[3,0.169,4,0.169,5,0.132,7,0.284,8,0.014,11,0.686,35,0.169,36,0.144,37,0.011,38,0.011,43,0.472,44,0.884,49,0.496,56,0.706,60,0.657,61,2.049,62,1.881,63,0.809,65,2.065,67,1.603,69,2.51,70,1.277,71,2.611,72,2.476,76,3.365,77,2.143,80,2.611,100,1.277,503,4.36,504,4.097,505,4.717,506,4.188,507,4.097,508,3.688,509,4.717,510,4.717]],["title/modules/EscrowModule.html",[0,0.71,511,2.855]],["body/modules/EscrowModule.html",[0,1.144,2,1.397,3,0.153,4,0.153,5,0.119,7,0.285,8,0.014,11,0.621,13,2.095,35,0.153,36,0.13,37,0.01,38,0.01,67,1.936,84,1.636,85,1.856,86,1.856,87,1.704,88,2.667,89,1.704,93,3.182,94,3.328,95,2.475,96,1.856,97,1.778,100,1.157,503,4.597,506,4.561,507,3.711,511,5.573,512,3.711,513,4.273,514,3.711,515,4.273,516,4.273,517,4.086,518,4.273]],["title/classes/EscrowResolver.html",[36,0.121,517,2.855]],["body/classes/EscrowResolver.html",[3,0.181,4,0.181,5,0.14,7,0.201,8,0.014,35,0.181,36,0.153,37,0.011,38,0.011,43,0.503,44,0.921,49,0.529,52,1.37,56,0.805,60,0.7,63,0.862,70,1.362,103,1.644,105,3.819,106,2.784,109,3.505,110,3.324,111,1.709,112,2.784,517,4.542,519,4.369,520,6.333,521,5.03]],["title/injectables/EscrowService.html",[39,1,506,2.478]],["body/injectables/EscrowService.html",[3,0.19,4,0.19,5,0.148,7,0.211,8,0.014,11,0.769,35,0.19,36,0.161,37,0.012,38,0.012,39,1.642,41,2.2,43,0.529,44,0.95,49,0.557,56,0.758,60,0.736,63,0.907,69,2.617,115,2.639,117,2.402,506,4.068,522,4.593,523,5.288,524,4.593]],["title/modules/GatewayModule.html",[0,0.71,525,2.855]],["body/modules/GatewayModule.html",[0,1.122,2,1.346,3,0.148,4,0.148,5,0.115,7,0.251,8,0.014,11,0.599,13,2.043,35,0.148,36,0.126,37,0.01,38,0.01,84,1.576,85,1.789,86,1.789,87,1.642,88,2.617,89,1.642,93,3.149,95,2.415,96,1.789,97,1.713,100,1.115,169,2.161,290,3.699,525,5.535,526,3.576,527,3.576,528,3.576,529,4.681,530,4.824,531,3.22,532,4.118,533,4.827,534,4.827,535,4.827,536,4.827,537,4.827,538,4.827,539,4.827,540,4.827,541,4.118]],["title/injectables/GatewayService.html",[39,1,530,2.649]],["body/injectables/GatewayService.html",[3,0.185,4,0.185,5,0.144,7,0.206,8,0.014,11,0.748,35,0.185,36,0.157,37,0.011,38,0.011,39,1.614,41,2.14,43,0.514,44,0.934,46,3.676,49,0.676,56,0.746,60,0.716,63,0.882,105,3.85,115,2.568,117,2.337,530,4.275,542,4.468,543,5.144,544,5.144,545,4.022]],["title/modules/GraphQLGatewayModule.html",[0,0.71,529,2.649]],["body/modules/GraphQLGatewayModule.html",[0,1.114,2,1.327,3,0.146,4,0.146,5,0.113,7,0.28,8,0.015,11,0.59,13,1.492,35,0.146,36,0.124,37,0.01,38,0.01,44,0.59,49,0.427,51,1.379,52,0.878,53,0.947,54,1.099,56,0.725,60,0.565,63,0.944,89,1.619,100,1.099,111,1.379,166,2.889,212,2.971,222,2.701,224,2.026,245,3.525,249,2.5,250,4.304,251,3.174,443,3.525,529,4.157,545,3.174,546,4.78,547,4.059,548,5.504,549,4.059,550,4.059,551,4.78,552,5.504,553,4.059,554,3.174,555,5.504,556,3.525,557,2.911,558,4.059,559,3.525,560,4.059,561,4.059,562,4.059]],["title/modules/GraphQLMicroserviceModule.html",[0,0.71,94,1.808]],["body/modules/GraphQLMicroserviceModule.html",[0,1.143,2,1.674,3,0.184,4,0.184,5,0.143,7,0.279,8,0.014,11,0.744,13,1.883,16,2.225,35,0.184,36,0.156,37,0.011,38,0.011,94,2.909,111,1.74,353,3.408,546,4.448,551,4.448,554,4.004,559,4.448,563,5.121,564,6.405,565,5.121,566,5.121,567,5.121,568,4.448,569,5.121]],["title/controllers/MediaController.html",[65,1.353,570,2.855]],["body/controllers/MediaController.html",[3,0.169,4,0.169,5,0.132,7,0.284,8,0.014,11,0.686,35,0.169,36,0.144,37,0.011,38,0.011,43,0.472,44,0.884,49,0.496,56,0.706,60,0.657,61,2.049,62,1.881,63,0.809,65,2.065,67,1.603,69,2.51,70,1.277,71,2.611,72,2.476,76,3.365,77,2.143,80,2.611,100,1.277,570,4.36,571,4.097,572,4.717,573,4.188,574,4.097,575,3.688,576,4.717,577,4.717]],["title/modules/MediaModule.html",[0,0.71,578,2.855]],["body/modules/MediaModule.html",[0,1.144,2,1.397,3,0.153,4,0.153,5,0.119,7,0.285,8,0.014,11,0.621,13,2.095,35,0.153,36,0.13,37,0.01,38,0.01,67,1.936,84,1.636,85,1.856,86,1.856,87,1.704,88,2.667,89,1.704,93,3.182,94,3.328,95,2.475,96,1.856,97,1.778,100,1.157,570,4.597,573,4.561,574,3.711,578,5.573,579,3.711,580,4.273,581,3.711,582,4.273,583,4.273,584,4.086,585,4.273]],["title/classes/MediaResolver.html",[36,0.121,584,2.855]],["body/classes/MediaResolver.html",[3,0.181,4,0.181,5,0.14,7,0.201,8,0.014,35,0.181,36,0.153,37,0.011,38,0.011,43,0.503,44,0.921,49,0.529,52,1.37,56,0.805,60,0.7,63,0.862,70,1.362,103,1.644,105,3.819,106,2.784,109,3.505,110,3.324,111,1.709,112,2.784,584,4.542,586,4.369,587,6.333,588,5.03]],["title/injectables/MediaService.html",[39,1,573,2.478]],["body/injectables/MediaService.html",[3,0.19,4,0.19,5,0.148,7,0.211,8,0.014,11,0.769,35,0.19,36,0.161,37,0.012,38,0.012,39,1.642,41,2.2,43,0.529,44,0.95,49,0.557,56,0.758,60,0.736,63,0.907,69,2.617,115,2.639,117,2.402,573,4.068,589,4.593,590,5.288,591,4.593]],["title/controllers/NotificationController.html",[65,1.353,592,2.855]],["body/controllers/NotificationController.html",[3,0.169,4,0.169,5,0.132,7,0.284,8,0.014,11,0.686,35,0.169,36,0.144,37,0.011,38,0.011,43,0.472,44,0.884,49,0.496,56,0.706,60,0.657,61,2.049,62,1.881,63,0.809,65,2.065,67,1.603,69,2.51,70,1.277,71,2.611,72,2.476,76,3.365,77,2.143,80,2.611,100,1.277,592,4.36,593,4.097,594,4.717,595,4.188,596,4.097,597,3.688,598,4.717,599,4.717]],["title/modules/NotificationModule.html",[0,0.71,600,2.855]],["body/modules/NotificationModule.html",[0,1.144,2,1.397,3,0.153,4,0.153,5,0.119,7,0.285,8,0.014,11,0.621,13,2.095,35,0.153,36,0.13,37,0.01,38,0.01,67,1.936,84,1.636,85,1.856,86,1.856,87,1.704,88,2.667,89,1.704,93,3.182,94,3.328,95,2.475,96,1.856,97,1.778,100,1.157,592,4.597,595,4.561,596,3.711,600,5.573,601,3.711,602,3.711,603,4.273,604,4.273,605,4.273,606,4.086,607,4.273]],["title/classes/NotificationResolver.html",[36,0.121,606,2.855]],["body/classes/NotificationResolver.html",[3,0.181,4,0.181,5,0.14,7,0.201,8,0.014,35,0.181,36,0.153,37,0.011,38,0.011,43,0.503,44,0.921,49,0.529,52,1.37,56,0.805,60,0.7,63,0.862,70,1.362,103,1.644,105,3.819,106,2.784,109,3.505,110,3.324,111,1.709,112,2.784,606,4.542,608,4.369,609,6.333,610,5.03]],["title/injectables/NotificationService.html",[39,1,595,2.478]],["body/injectables/NotificationService.html",[3,0.19,4,0.19,5,0.148,7,0.211,8,0.014,11,0.769,35,0.19,36,0.161,37,0.012,38,0.012,39,1.642,41,2.2,43,0.529,44,0.95,49,0.557,56,0.758,60,0.736,63,0.907,69,2.617,115,2.639,117,2.402,595,4.068,611,4.593,612,5.288,613,4.593]],["title/entities/Organization.html",[118,1.808,614,1.729]],["body/entities/Organization.html",[3,0.116,4,0.116,5,0.09,7,0.242,8,0.015,16,2.793,35,0.116,36,0.098,37,0.008,38,0.008,43,0.323,49,0.706,52,1.391,53,1.564,54,1.269,56,0.894,70,1.815,100,0.874,111,1.097,118,2.129,119,2.745,120,1.787,122,1.95,125,1.694,132,2.594,148,1.187,149,4.052,150,2.745,159,2.148,170,5.026,173,4.463,335,4.791,336,4.07,337,3.672,338,3.672,343,4.07,614,2.397,615,2.803,616,5.517,617,3.664,618,3.228,619,4.278,620,2.148,621,3.228,622,4.686,623,3.228,624,4.686,625,3.228,626,3.228,627,2.803,628,3.228,629,3.228,630,2.315,631,4.07,632,2.803,633,2.803,634,2.315]],["title/classes/Organization-1.html",[36,0.101,160,2.213,614,1.444]],["body/classes/Organization-1.html",[3,0.174,4,0.174,5,0.136,7,0.194,8,0.014,35,0.174,36,0.148,37,0.011,38,0.011,43,0.486,49,0.511,53,1.133,56,0.792,59,2.689,70,1.315,103,1.588,111,1.651,122,2.577,125,3.77,149,3.995,150,3.629,568,4.219,614,3.121,630,3.484,634,3.484,635,4.219,636,4.858,637,4.858,638,4.219,639,4.219,640,4.443,641,4.219,642,4.858]],["title/controllers/OrganizationController.html",[65,1.353,643,2.855]],["body/controllers/OrganizationController.html",[3,0.15,4,0.15,5,0.117,7,0.271,8,0.015,11,0.607,35,0.15,36,0.127,37,0.01,38,0.01,43,0.418,44,0.816,49,0.591,51,1.42,52,0.904,53,0.974,54,1.131,56,0.821,60,0.782,61,1.815,62,1.667,63,0.962,65,1.907,67,1.42,69,2.394,70,1.52,71,3.107,72,2.946,76,3.508,77,1.898,80,3.107,125,2.946,643,4.026,644,3.629,645,5.613,646,5.613,647,4.178,648,4.178,649,3.508,650,2.997,651,3.267,652,4.178,653,4.178,654,4.178,655,4.178,656,3.629]],["title/entities/OrganizationMetadata.html",[118,1.808,619,2.649]],["body/entities/OrganizationMetadata.html",[3,0.09,4,0.09,5,0.07,7,0.231,8,0.014,16,2.854,35,0.09,36,0.076,37,0.007,38,0.007,43,0.251,49,0.669,52,1.319,53,1.682,54,1.444,56,0.783,70,1.722,100,0.679,111,0.852,118,1.761,119,2.271,120,1.388,122,1.613,132,3.52,148,1.425,149,3.725,150,2.271,159,1.669,173,4.232,188,3.572,238,4.171,348,3.368,349,4.117,350,4.117,351,3.368,353,3.551,354,4.374,355,3.368,356,3.368,357,5.01,358,2.781,359,2.781,368,5.01,614,2.929,617,1.961,619,2.581,620,2.581,627,4.117,631,3.368,657,5.705,658,2.178,659,4.741,660,4.741,661,4.741,662,4.741,663,2.508,664,5.335,665,4.633,666,5.335,667,2.508,668,2.178,669,2.508,670,2.508,671,2.508,672,3.877,673,3.877,674,3.877,675,2.508,676,2.508,677,2.178,678,2.508,679,2.508,680,4.741,681,3.368,682,2.178,683,2.508,684,3.877]],["title/modules/OrganizationModule.html",[0,0.71,685,2.855]],["body/modules/OrganizationModule.html",[0,1.082,2,1.255,3,0.138,4,0.138,5,0.107,7,0.291,8,0.014,11,0.558,13,1.948,35,0.138,36,0.117,37,0.009,38,0.009,67,1.8,84,1.47,85,1.668,86,1.668,87,1.531,88,2.524,89,1.531,93,3.083,94,3.224,95,2.302,96,1.668,97,1.597,100,1.039,399,2.39,427,4.528,614,1.668,619,3.526,632,3.334,643,4.351,649,3.928,650,2.754,685,5.636,686,3.334,687,3.334,688,3.334,689,3.839,690,3.839,691,3.8,692,3.839,693,2.754,694,3.839,695,3.839,696,3.839]],["title/classes/OrganizationResolver.html",[36,0.121,691,2.855]],["body/classes/OrganizationResolver.html",[3,0.146,4,0.146,5,0.114,7,0.25,8,0.015,16,2.397,35,0.146,36,0.124,37,0.01,38,0.01,43,0.407,44,0.802,46,2.138,49,0.659,51,1.384,52,1.354,53,0.95,54,1.103,56,0.726,60,0.768,61,1.77,62,1.625,63,0.946,70,1.494,103,1.332,105,3.52,106,3.054,109,3.463,110,2.896,111,1.384,112,2.255,132,3.054,249,2.506,614,2.397,633,5.824,649,3.999,650,2.922,691,3.957,693,2.922,697,3.538,698,3.538,699,4.073,700,4.073,701,5.517,702,4.073,703,4.073]],["title/injectables/OrganizationService.html",[39,1,649,2.203]],["body/injectables/OrganizationService.html",[3,0.139,4,0.139,5,0.108,7,0.275,8,0.015,11,0.562,35,0.139,36,0.118,37,0.009,38,0.009,39,1.338,41,1.608,43,0.387,44,0.774,46,2.794,49,0.69,51,1.809,52,1.152,53,1.242,54,1.441,56,0.618,60,0.848,62,1.542,63,1.044,69,2.318,115,1.929,117,1.756,148,1.421,170,3.022,249,2.418,268,2.772,439,2.406,614,2.313,649,2.946,693,2.772,704,3.357,705,6.56,706,5.323,707,3.865,708,5.56,709,3.865,710,3.865,711,5.323,712,6.56,713,3.865,714,3.865,715,3.022,716,3.865,717,3.865,718,3.865,719,3.357,720,3.865,721,3.865]],["title/controllers/PaymentController.html",[65,1.353,722,2.855]],["body/controllers/PaymentController.html",[3,0.169,4,0.169,5,0.132,7,0.284,8,0.014,11,0.686,35,0.169,36,0.144,37,0.011,38,0.011,43,0.472,44,0.884,49,0.496,56,0.706,60,0.657,61,2.049,62,1.881,63,0.809,65,2.065,67,1.603,69,2.51,70,1.277,71,2.611,72,2.476,76,3.365,77,2.143,80,2.611,100,1.277,722,4.36,723,4.097,724,4.717,725,4.188,726,4.097,727,3.688,728,4.717,729,4.717]],["title/modules/PaymentModule.html",[0,0.71,730,2.855]],["body/modules/PaymentModule.html",[0,1.144,2,1.397,3,0.153,4,0.153,5,0.119,7,0.285,8,0.014,11,0.621,13,2.095,35,0.153,36,0.13,37,0.01,38,0.01,67,1.936,84,1.636,85,1.856,86,1.856,87,1.704,88,2.667,89,1.704,93,3.182,94,3.328,95,2.475,96,1.856,97,1.778,100,1.157,722,4.597,725,4.561,726,3.711,730,5.573,731,3.711,732,3.711,733,4.273,734,4.273,735,4.273,736,4.086,737,4.273]],["title/classes/PaymentResolver.html",[36,0.121,736,2.855]],["body/classes/PaymentResolver.html",[3,0.181,4,0.181,5,0.14,7,0.201,8,0.014,35,0.181,36,0.153,37,0.011,38,0.011,43,0.503,44,0.921,49,0.529,52,1.37,56,0.805,60,0.7,63,0.862,70,1.362,103,1.644,105,3.819,106,2.784,109,3.505,110,3.324,111,1.709,112,2.784,736,4.542,738,4.369,739,6.333,740,5.03]],["title/injectables/PaymentService.html",[39,1,725,2.478]],["body/injectables/PaymentService.html",[3,0.19,4,0.19,5,0.148,7,0.211,8,0.014,11,0.769,35,0.19,36,0.161,37,0.012,38,0.012,39,1.642,41,2.2,43,0.529,44,0.95,49,0.557,56,0.758,60,0.736,63,0.907,69,2.617,115,2.639,117,2.402,725,4.068,741,4.593,742,5.288,743,4.593]],["title/controllers/PropertyController.html",[65,1.353,744,2.855]],["body/controllers/PropertyController.html",[3,0.169,4,0.169,5,0.132,7,0.284,8,0.014,11,0.686,35,0.169,36,0.144,37,0.011,38,0.011,43,0.472,44,0.884,49,0.496,56,0.706,60,0.657,61,2.049,62,1.881,63,0.809,65,2.065,67,1.603,69,2.51,70,1.277,71,2.611,72,2.476,76,3.365,77,2.143,80,2.611,100,1.277,744,4.36,745,4.097,746,4.717,747,4.188,748,4.097,749,3.688,750,4.717,751,4.717]],["title/modules/PropertyModule.html",[0,0.71,752,2.855]],["body/modules/PropertyModule.html",[0,1.144,2,1.397,3,0.153,4,0.153,5,0.119,7,0.285,8,0.014,11,0.621,13,2.095,35,0.153,36,0.13,37,0.01,38,0.01,67,1.936,84,1.636,85,1.856,86,1.856,87,1.704,88,2.667,89,1.704,93,3.182,94,3.328,95,2.475,96,1.856,97,1.778,100,1.157,744,4.597,747,4.561,748,3.711,752,5.573,753,3.711,754,4.273,755,3.711,756,4.273,757,4.273,758,4.086,759,4.273]],["title/classes/PropertyResolver.html",[36,0.121,758,2.855]],["body/classes/PropertyResolver.html",[3,0.181,4,0.181,5,0.14,7,0.201,8,0.014,35,0.181,36,0.153,37,0.011,38,0.011,43,0.503,44,0.921,49,0.529,52,1.37,56,0.805,60,0.7,63,0.862,70,1.362,103,1.644,105,3.819,106,2.784,109,3.505,110,3.324,111,1.709,112,2.784,758,4.542,760,4.369,761,6.333,762,5.03]],["title/injectables/PropertyService.html",[39,1,747,2.478]],["body/injectables/PropertyService.html",[3,0.19,4,0.19,5,0.148,7,0.211,8,0.014,11,0.769,35,0.19,36,0.161,37,0.012,38,0.012,39,1.642,41,2.2,43,0.529,44,0.95,49,0.557,56,0.758,60,0.736,63,0.907,69,2.617,115,2.639,117,2.402,747,4.068,763,4.593,764,5.288,765,4.593]],["title/entities/Role.html",[118,1.808,766,2.332]],["body/entities/Role.html",[3,0.159,4,0.159,5,0.124,7,0.234,8,0.014,16,2.838,35,0.159,36,0.135,37,0.01,38,0.01,43,0.444,49,0.615,52,1.502,53,1.363,56,0.86,70,1.582,111,1.509,118,2.655,119,3.423,120,2.458,122,2.431,132,3.616,148,1.632,149,3.826,150,3.423,159,2.955,173,3.89,380,4.685,620,2.955,668,3.856,766,3.423,767,3.856,768,4.44,769,4.44,770,4.44,771,5.844,772,3.184]],["title/modules/SeederModule.html",[0,0.71,773,2.649]],["body/modules/SeederModule.html",[0,1.181,2,1.492,3,0.164,4,0.164,5,0.127,7,0.28,8,0.014,11,0.664,13,1.678,35,0.164,36,0.139,37,0.011,38,0.011,84,1.747,85,1.983,86,1.983,87,1.821,88,2.755,89,2.641,95,2.585,96,1.983,97,1.899,437,3.965,439,2.842,766,2.674,773,5.058,774,3.965,775,3.965,776,3.965,777,5.303,778,4.565,779,4.565,780,3.569,781,4.565]],["title/injectables/SeederService.html",[39,1,777,2.649]],["body/injectables/SeederService.html",[3,0.134,4,0.134,5,0.104,7,0.271,8,0.015,11,0.542,35,0.134,36,0.114,37,0.009,38,0.009,39,1.304,41,1.55,43,0.373,44,0.754,46,2.724,49,0.628,51,1.266,52,1.292,53,0.869,54,1.009,60,0.723,100,1.009,148,1.37,169,3.134,212,3.345,224,2.98,268,4.632,306,2.48,439,2.32,708,5.049,715,2.913,766,3.04,772,4.283,777,3.454,780,2.913,782,3.236,783,6.458,784,6.458,785,3.726,786,3.726,787,5.189,788,3.726,789,3.726,790,3.726,791,3.726,792,3.726,793,3.726,794,3.726,795,3.726,796,6.458,797,5.189,798,3.726,799,3.726,800,3.726,801,3.726]],["title/classes/SubgraphsBuilder.html",[36,0.121,557,2.855]],["body/classes/SubgraphsBuilder.html",[3,0.152,4,0.152,5,0.118,7,0.227,8,0.015,35,0.152,36,0.129,37,0.01,38,0.01,43,0.424,44,0.824,49,0.446,51,1.441,52,1.226,53,0.989,54,1.148,56,0.741,59,2.347,60,0.591,63,0.972,100,1.148,103,1.386,166,3.352,169,3.578,212,3.038,217,3.32,224,2.117,225,3.042,233,2.64,235,2.64,249,2.575,557,4.066,802,4.924,803,3.683,804,6.386,805,4.241,806,4.241,807,5.669,808,4.241,809,4.241,810,4.241,811,5.669,812,4.241,813,5.669,814,4.241,815,4.241,816,4.241]],["title/entities/User.html",[118,1.808,817,1.894]],["body/entities/User.html",[3,0.104,4,0.104,5,0.081,7,0.246,8,0.015,16,2.672,35,0.104,36,0.088,37,0.008,38,0.008,43,0.29,49,0.723,52,1.121,53,1.668,54,1.556,56,0.89,70,1.861,100,0.785,111,0.985,118,1.966,119,2.535,120,1.604,122,1.801,125,1.521,132,3.571,148,1.065,149,4.025,150,2.535,159,1.929,173,4.574,304,3.225,331,3.384,337,3.448,338,3.448,359,3.104,389,4.5,390,4.5,391,3.759,614,2.904,617,4.493,620,2.881,630,2.079,634,2.079,677,2.517,681,3.759,766,4.025,817,2.059,818,2.517,819,4.5,820,2.898,821,2.898,822,2.898,823,2.898,824,2.898,825,2.898,826,2.898,827,2.898,828,2.898,829,4.328,830,2.898,831,2.898,832,2.266]],["title/classes/User-1.html",[36,0.101,160,2.213,817,1.582]],["body/classes/User-1.html",[3,0.138,4,0.138,5,0.107,7,0.212,8,0.014,16,2.307,35,0.138,36,0.117,37,0.009,38,0.009,43,0.385,49,0.64,53,1.418,54,1.774,56,0.825,70,1.645,103,1.259,111,1.309,117,1.75,118,1.75,122,2.21,125,3.439,132,3.626,149,3.837,150,3.111,614,3.162,620,4.045,630,2.763,634,2.763,638,3.346,639,3.346,640,2.763,641,3.346,682,3.346,817,3.269,819,6.17,833,3.346,834,3.852,835,3.852,836,3.852,837,3.852,838,3.852,839,3.852,840,3.852,841,3.852,842,3.852,843,3.852,844,3.852,845,3.852]],["title/controllers/UserController.html",[65,1.353,846,2.855]],["body/controllers/UserController.html",[3,0.169,4,0.169,5,0.132,7,0.284,8,0.014,11,0.686,35,0.169,36,0.144,37,0.011,38,0.011,43,0.472,44,0.884,49,0.496,56,0.706,60,0.657,61,2.049,62,1.881,63,0.809,65,2.065,67,1.603,69,2.51,70,1.277,71,2.611,72,2.476,76,3.365,77,2.143,80,2.611,100,1.277,846,4.36,847,4.097,848,4.717,849,3.94,850,3.688,851,3.688,852,4.717,853,4.717]],["title/modules/UserModule.html",[0,0.71,854,2.855]],["body/modules/UserModule.html",[0,1.042,2,1.168,3,0.128,4,0.128,5,0.1,7,0.291,8,0.014,11,0.519,13,1.853,35,0.128,36,0.109,37,0.009,38,0.009,67,1.712,84,1.368,85,1.552,86,1.552,87,1.425,88,2.429,89,1.425,93,3.014,94,3.151,95,2.189,96,1.552,97,1.487,100,0.967,243,4.45,399,2.225,427,4.438,766,2.952,773,4.617,780,2.794,817,1.7,846,4.187,849,4.064,850,2.794,854,5.69,855,3.103,856,3.103,857,3.103,858,3.573,859,3.573,860,2.794,861,3.137,862,3.573,863,2.794,864,3.573,865,3.573,866,3.573,867,3.573]],["title/classes/UserResolver.html",[36,0.121,861,2.478]],["body/classes/UserResolver.html",[3,0.149,4,0.149,5,0.116,7,0.253,8,0.014,35,0.149,36,0.127,37,0.01,38,0.01,43,0.416,44,0.814,46,2.185,49,0.666,51,1.415,52,1.369,53,0.971,54,1.127,56,0.734,60,0.78,61,1.809,62,1.661,63,0.96,70,1.516,103,1.361,105,3.551,106,3.099,109,3.502,110,2.185,111,1.415,112,2.304,249,2.543,817,2.663,832,5.29,849,4.259,850,3.255,861,3.486,863,3.255,868,3.616,869,4.163,870,4.163,871,5.599,872,4.163,873,4.163,874,4.163,875,4.163]],["title/classes/UserResolver-1.html",[36,0.101,160,2.213,861,2.07]],["body/classes/UserResolver-1.html",[3,0.146,4,0.146,5,0.113,7,0.268,8,0.014,16,2.391,35,0.146,36,0.124,37,0.01,38,0.01,43,0.406,44,0.8,46,2.13,49,0.579,51,1.87,52,1.191,53,1.284,54,1.49,60,0.565,61,1.763,62,1.619,63,0.944,70,1.099,103,1.327,110,2.889,111,1.379,125,2.13,132,3.047,192,2.701,212,2.971,249,2.5,614,2.909,649,3.995,650,2.911,656,3.525,693,2.911,698,3.525,817,3.511,861,3.427,876,3.525,877,4.059,878,4.059,879,4.059,880,4.059,881,4.059,882,5.504,883,4.059,884,4.059,885,5.504]],["title/injectables/UserService.html",[39,1,849,2.332]],["body/injectables/UserService.html",[3,0.144,4,0.144,5,0.112,7,0.287,8,0.014,11,0.582,35,0.144,36,0.122,37,0.01,38,0.01,39,1.37,41,1.665,43,0.4,44,0.792,46,2.861,49,0.653,51,1.36,52,0.866,53,0.933,54,1.083,56,0.633,60,0.759,62,2.174,63,0.935,69,2.352,77,1.818,100,1.083,115,1.997,117,1.818,148,1.471,249,2.476,268,3.91,439,2.491,708,5.75,715,3.129,719,3.475,817,2.593,849,3.193,860,3.129,863,3.129,886,3.475,887,6.657,888,4.002,889,6.657,890,4.002,891,5.451,892,4.002,893,4.002,894,4.002,895,4.002,896,4.002]],["title/coverage.html",[897,4.247]],["body/coverage.html",[5,0.043,8,0.014,36,0.22,37,0.005,38,0.005,39,1.597,40,1.117,42,1.353,53,0.363,65,1.938,66,1.117,68,1.353,74,0.97,78,1.218,87,2.421,101,1.117,104,1.353,113,1.353,118,2.046,119,1.543,121,2.289,144,1.037,148,1.481,151,1.218,152,1.218,156,1.117,184,5.518,210,1.218,211,1.353,217,0.912,222,1.037,262,1.037,266,1.353,267,1.353,290,1.037,314,1.218,315,1.353,316,1.353,329,1.117,373,1.218,374,1.353,375,1.353,382,1.218,383,1.353,384,1.353,395,1.353,396,1.353,399,0.97,403,4.072,452,1.353,457,6.355,489,1.117,490,1.353,492,0.97,500,1.353,503,1.117,504,1.353,506,0.97,508,1.218,517,1.117,519,1.353,522,1.353,530,1.037,531,1.218,542,1.353,557,1.117,570,1.117,571,1.353,573,0.97,575,1.218,584,1.117,586,1.353,589,1.353,592,1.117,593,1.353,595,0.97,597,1.218,606,1.117,608,1.353,611,1.353,614,1.488,615,2.289,619,1.754,635,1.353,643,1.117,644,1.353,649,0.862,651,1.218,657,2.289,658,2.289,691,1.117,697,1.353,704,1.353,722,1.117,723,1.353,725,0.97,727,1.218,736,1.117,738,1.353,741,1.353,744,1.117,745,1.353,747,0.97,749,1.218,758,1.117,760,1.353,763,1.353,766,1.543,767,2.289,777,1.037,782,1.353,802,1.353,803,1.353,817,1.629,818,2.289,833,1.353,846,1.117,847,1.353,849,0.912,851,1.218,861,1.641,868,1.353,876,1.353,886,1.353,897,1.218,898,1.353,899,1.558,900,1.558,901,7.289,902,1.353,903,7.722,904,1.353,905,1.353,906,1.353,907,4.524,908,7.152,909,4.505,910,1.353,911,1.353,912,1.353,913,1.353,914,1.353,915,5.476,916,2.635,917,2.635,918,1.353,919,1.558,920,1.353,921,1.353,922,1.353,923,1.353,924,1.353,925,1.558,926,1.353,927,1.353,928,1.353,929,1.353,930,1.353,931,1.353,932,1.353,933,1.353,934,1.353,935,1.353,936,1.353,937,1.353,938,1.353,939,2.678,940,2.678,941,1.353,942,3.499,943,1.353,944,1.353,945,1.353,946,1.558]],["title/dependencies.html",[84,1.833,947,2.888]],["body/dependencies.html",[8,0.015,10,3.328,11,0.674,12,4.03,37,0.011,38,0.011,77,2.107,84,1.776,111,1.576,148,1.706,219,3.628,402,4.03,439,2.888,554,3.628,556,4.03,948,6.014,949,4.64,950,4.64,951,4.64,952,6.014,953,6.674,954,4.64,955,4.64,956,4.64,957,4.64,958,4.64,959,4.64,960,4.64,961,4.64,962,4.03,963,4.64,964,4.64,965,4.64,966,4.64,967,4.64,968,4.64,969,4.64,970,4.64,971,4.64,972,4.64,973,4.64,974,4.64,975,4.64,976,4.64]],["title/miscellaneous/enumerations.html",[977,2.07,978,4.158]],["body/miscellaneous/enumerations.html",[8,0.014,37,0.011,38,0.011,43,0.47,117,2.754,190,4.686,772,4.348,860,4.74,977,2.924,978,4.08,979,4.697,980,6.063,981,4.697,982,4.697,983,6.063,984,6.063,985,6.063,986,6.063,987,6.063,988,6.063,989,6.063,990,6.063,991,4.697,992,6.063,993,6.063,994,5.265,995,6.063]],["title/miscellaneous/functions.html",[977,2.07,996,4.158]],["body/miscellaneous/functions.html",[8,0.012,37,0.01,38,0.01,43,0.413,51,1.893,52,1.205,53,1.299,54,1.508,60,0.575,87,3.302,151,4.356,152,4.356,174,3.589,188,2.421,190,3.263,238,5.274,457,3.231,902,3.589,904,3.589,905,3.589,910,3.589,911,3.589,913,3.589,918,3.589,921,3.589,923,3.589,926,3.589,927,3.589,939,3.231,940,4.928,977,2.573,996,3.589,997,7.722,998,4.133,999,4.839,1000,4.133,1001,4.133,1002,4.133,1003,5.571,1004,5.571]],["title/index.html",[43,0.332,1005,3.325,1006,3.325]],["body/index.html",[8,0.014,32,0.974,33,1.723,37,0.004,38,0.004,53,0.262,59,0.621,84,0.429,88,0.467,97,0.467,116,2.315,117,2.573,122,1.109,148,0.729,160,0.747,182,2.315,189,0.974,195,2.315,202,0.974,228,0.974,248,0.974,250,0.877,304,0.698,306,0.747,320,0.805,337,1.774,338,0.747,353,0.747,354,0.805,369,0.877,380,0.805,404,0.974,419,0.974,450,0.974,476,5.505,477,0.974,480,0.974,484,0.974,486,0.974,524,4.278,545,3.851,591,4.278,613,4.062,640,1.912,665,0.974,743,4.278,765,4.784,772,1.423,817,2.761,832,3.178,897,0.877,898,1.723,962,2.796,994,0.974,1007,6.249,1008,2.666,1009,3.22,1010,1.122,1011,1.983,1012,1.983,1013,3.678,1014,1.122,1015,4.278,1016,2.666,1017,1.983,1018,1.122,1019,1.983,1020,1.122,1021,1.122,1022,1.122,1023,4.925,1024,2.666,1025,1.122,1026,1.122,1027,1.122,1028,4.064,1029,1.122,1030,1.983,1031,1.122,1032,1.122,1033,1.122,1034,1.122,1035,1.122,1036,1.122,1037,1.122,1038,1.122,1039,1.983,1040,1.122,1041,1.122,1042,2.666,1043,1.122,1044,1.122,1045,1.122,1046,1.122,1047,2.315,1048,1.983,1049,2.666,1050,1.122,1051,1.122,1052,1.983,1053,1.122,1054,1.122,1055,1.122,1056,1.122,1057,1.122,1058,2.666,1059,1.983,1060,1.122,1061,0.974,1062,3.22,1063,3.678,1064,1.122,1065,4.393,1066,1.983,1067,1.122,1068,4.677,1069,4.064,1070,1.122,1071,1.122,1072,1.122,1073,1.983,1074,1.122,1075,1.122,1076,1.122,1077,1.983,1078,1.122,1079,1.122,1080,1.122,1081,1.122,1082,1.122,1083,1.122,1084,1.122,1085,3.22,1086,1.983,1087,1.122,1088,2.666,1089,1.983,1090,2.666,1091,1.122,1092,4.393,1093,4.064,1094,1.983,1095,1.983,1096,1.122,1097,1.122,1098,1.122,1099,3.22,1100,4.784,1101,1.122,1102,1.122,1103,1.983,1104,1.122,1105,1.983,1106,3.678,1107,1.122,1108,1.122,1109,1.122,1110,1.122,1111,3.22,1112,2.666,1113,1.983,1114,1.122,1115,1.122,1116,1.122,1117,1.122,1118,2.666,1119,1.122,1120,2.666,1121,4.677,1122,5.336,1123,1.122,1124,1.122,1125,1.983,1126,1.983,1127,1.983,1128,1.983,1129,1.122,1130,1.983,1131,1.122,1132,1.122,1133,1.122,1134,1.983,1135,1.122,1136,1.122,1137,1.122,1138,1.122,1139,1.122,1140,1.983,1141,1.122,1142,3.22,1143,1.983,1144,3.678,1145,2.666,1146,1.122,1147,1.122,1148,1.122,1149,1.983,1150,1.122,1151,1.122,1152,1.122,1153,5.509,1154,1.122,1155,1.122,1156,1.983,1157,1.122,1158,3.678,1159,3.22,1160,1.122,1161,3.22,1162,1.983,1163,3.678,1164,1.983,1165,1.122,1166,1.122,1167,1.122,1168,1.122,1169,1.122,1170,1.122,1171,1.122,1172,1.122,1173,1.983,1174,1.122,1175,1.983,1176,1.983,1177,1.122,1178,1.122,1179,1.983,1180,1.122,1181,1.983,1182,1.983,1183,1.122,1184,1.122,1185,1.983,1186,1.122,1187,1.122,1188,1.122,1189,1.983,1190,2.666,1191,1.983,1192,2.666,1193,2.666,1194,1.983,1195,1.983,1196,2.666,1197,1.122,1198,1.983,1199,1.122,1200,1.122,1201,1.122,1202,2.666,1203,1.122,1204,3.678,1205,1.122,1206,1.983,1207,2.666,1208,1.122,1209,1.122,1210,1.122,1211,1.983,1212,1.122,1213,1.122,1214,1.122,1215,1.122,1216,1.122,1217,1.122,1218,1.122,1219,1.122,1220,2.666,1221,1.122,1222,1.122,1223,1.122,1224,1.983,1225,1.122,1226,1.122,1227,1.983,1228,1.983,1229,1.122,1230,1.122,1231,1.983,1232,1.122,1233,1.122,1234,1.122,1235,1.122,1236,1.122,1237,1.122,1238,1.122,1239,2.666,1240,1.983,1241,1.122,1242,1.122,1243,1.983,1244,1.122,1245,1.122,1246,1.122,1247,1.122,1248,1.983,1249,1.122,1250,1.122,1251,1.122,1252,1.122,1253,1.983,1254,1.122,1255,2.315,1256,1.122,1257,1.122,1258,1.122,1259,1.122,1260,1.122,1261,1.122,1262,1.122,1263,1.122,1264,1.122,1265,1.122,1266,1.122,1267,1.983,1268,1.122,1269,1.983,1270,1.983,1271,1.122,1272,1.983,1273,1.122,1274,1.122,1275,1.122,1276,1.983,1277,1.122,1278,1.122,1279,1.122,1280,1.122,1281,1.122,1282,1.122,1283,2.666,1284,1.122,1285,1.122,1286,1.122,1287,1.122,1288,1.122,1289,1.983,1290,1.122,1291,4.064,1292,1.122,1293,1.122,1294,1.983,1295,1.122,1296,1.122,1297,1.122,1298,1.122,1299,1.122,1300,1.122,1301,1.122,1302,1.122,1303,1.122,1304,1.122,1305,1.122,1306,1.122,1307,1.122,1308,1.122,1309,1.122,1310,1.122,1311,1.122,1312,1.122,1313,1.122,1314,1.122,1315,1.122,1316,1.122,1317,1.983,1318,2.666,1319,1.122,1320,1.122,1321,1.122,1322,1.122,1323,1.122,1324,1.122,1325,1.122,1326,1.122,1327,1.122,1328,1.122,1329,1.122,1330,1.122,1331,1.122,1332,1.983,1333,1.122,1334,1.122,1335,1.122,1336,1.122,1337,1.122,1338,1.983,1339,1.122,1340,1.122]],["title/modules.html",[2,1.776]],["body/modules.html",[1,2.91,2,1.429,8,0.01,37,0.01,38,0.01,83,3.135,93,1.899,94,1.986,243,2.91,427,2.722,495,3.135,511,3.135,525,3.135,529,2.91,578,3.135,600,3.135,685,3.135,730,3.135,752,3.135,773,2.91,854,3.135,1255,6.876,1341,7.176,1342,7.176,1343,8.092,1344,7.917,1345,7.917]],["title/overview.html",[1346,4.718]],["body/overview.html",[0,0.45,1,3.169,2,0.825,8,0.014,37,0.007,38,0.007,41,1.05,67,0.858,74,2.964,83,4.722,84,0.966,85,1.097,86,1.097,87,1.007,88,1.05,89,1.007,90,2.192,91,2.192,92,2.192,93,3.231,94,3.135,95,1.693,96,1.097,97,1.05,103,0.825,120,1.397,243,3.169,258,2.192,259,2.192,260,2.192,261,2.192,262,4.243,354,1.81,427,3.807,492,2.964,495,3.84,496,2.192,497,2.192,506,2.964,511,4.722,512,2.192,514,2.192,525,4.722,526,2.192,527,2.192,528,2.192,529,3.169,530,3.169,573,2.964,578,4.722,579,2.192,581,2.192,595,2.964,600,4.722,601,2.192,602,2.192,649,2.635,685,5.113,686,2.192,687,2.192,688,2.192,725,2.964,730,4.722,731,2.192,732,2.192,747,2.964,752,4.722,753,2.192,755,2.192,773,4.07,774,2.192,775,2.192,776,2.192,777,4.243,849,2.788,854,5.335,855,2.192,856,2.192,857,2.192,1346,2.192,1347,2.524,1348,2.524,1349,2.524,1350,2.524]],["title/properties.html",[122,1.992,947,2.888]],["body/properties.html",[8,0.014,37,0.012,38,0.012,122,2.49,380,4.293,1351,5.985,1352,5.985,1353,5.985,1354,5.985,1355,5.985]],["title/miscellaneous/variables.html",[405,3.743,977,2.07]],["body/miscellaneous/variables.html",[5,0.054,8,0.014,16,1.361,19,2.721,21,2.721,23,2.721,24,2.721,25,2.721,26,2.721,27,2.721,28,2.721,37,0.006,38,0.006,43,0.192,52,0.415,53,1.599,54,0.848,56,0.693,58,1.5,78,2.45,148,2.104,188,4.398,190,4.352,290,2.644,399,1.951,403,5.36,405,1.5,460,2.721,508,2.45,531,1.5,533,2.721,534,2.721,535,2.721,536,2.721,537,2.721,538,2.721,539,2.721,540,2.721,575,2.45,597,2.45,614,1.361,640,2.849,651,2.45,727,2.45,749,2.45,817,1.491,851,2.45,906,1.666,907,6.033,912,1.666,914,1.666,920,1.666,922,1.666,924,1.666,928,1.666,929,1.666,930,1.666,931,1.666,932,1.666,933,1.666,934,1.666,935,1.666,936,1.666,937,1.666,938,1.666,939,1.5,940,2.45,941,2.721,942,4.39,943,3.45,944,3.45,945,2.721,977,1.194,999,1.666,1015,1.666,1047,2.721,1061,1.666,1100,1.666,1356,1.918,1357,1.918,1358,1.918,1359,1.918,1360,1.918,1361,1.918,1362,1.918,1363,1.918,1364,1.918,1365,5.722,1366,1.918,1367,1.918,1368,1.918,1369,1.918,1370,4.586,1371,1.918,1372,4.586,1373,3.133,1374,1.918,1375,1.918,1376,3.972,1377,1.918,1378,1.918,1379,1.918,1380,1.918,1381,1.918,1382,4.586,1383,1.918,1384,1.918,1385,1.918,1386,1.918,1387,1.918,1388,1.918,1389,1.918,1390,1.918,1391,1.918,1392,1.918,1393,1.918,1394,1.918,1395,1.918,1396,1.918,1397,1.918,1398,1.918,1399,3.133,1400,6.352,1401,3.133,1402,3.133,1403,3.133,1404,3.133,1405,3.133,1406,3.133,1407,3.133,1408,3.133,1409,3.133,1410,3.133,1411,3.133,1412,3.133,1413,3.133,1414,3.133,1415,1.918,1416,3.133,1417,3.133,1418,3.133,1419,3.133,1420,1.918,1421,1.918,1422,1.918,1423,1.918,1424,1.918,1425,1.918,1426,1.918,1427,3.133]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"entities/Role.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":457,"title":{},"body":{"classes/DatabaseUtil.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["0.0.1",{"_index":1352,"title":{},"body":{"properties.html":{}}}],["0.2.0",{"_index":971,"title":{},"body":{"dependencies.html":{}}}],["0.3.20",{"_index":974,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":903,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":901,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":909,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":915,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":919,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":917,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":916,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":925,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":160,"title":{"classes/Organization-1.html":{},"classes/User-1.html":{},"classes/UserResolver-1.html":{}},"body":{"entities/BaseEntity.html":{},"index.html":{}}}],["10",{"_index":461,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["10.0.0",{"_index":953,"title":{},"body":{"dependencies.html":{}}}],["10.4.15",{"_index":955,"title":{},"body":{"dependencies.html":{}}}],["11.0.0",{"_index":958,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":482,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["12.2.2",{"_index":952,"title":{},"body":{"dependencies.html":{}}}],["13",{"_index":1349,"title":{},"body":{"overview.html":{}}}],["16.10.0",{"_index":963,"title":{},"body":{"dependencies.html":{}}}],["16.4.7",{"_index":961,"title":{},"body":{"dependencies.html":{}}}],["17",{"_index":1347,"title":{},"body":{"overview.html":{}}}],["17.0.33",{"_index":960,"title":{},"body":{"dependencies.html":{}}}],["17.13.3",{"_index":966,"title":{},"body":{"dependencies.html":{}}}],["17.7.2",{"_index":976,"title":{},"body":{"dependencies.html":{}}}],["19",{"_index":488,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["2",{"_index":353,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/DatabaseUtil.html":{},"modules/GraphQLMicroserviceModule.html":{},"entities/OrganizationMetadata.html":{},"index.html":{}}}],["2.9.3",{"_index":948,"title":{},"body":{"dependencies.html":{}}}],["22",{"_index":1021,"title":{},"body":{"index.html":{}}}],["24",{"_index":1350,"title":{},"body":{"overview.html":{}}}],["3",{"_index":484,"title":{},"body":{"classes/DatabaseUtil.html":{},"index.html":{}}}],["3.3.0",{"_index":954,"title":{},"body":{"dependencies.html":{}}}],["3d",{"_index":1192,"title":{},"body":{"index.html":{}}}],["4",{"_index":1203,"title":{},"body":{"index.html":{}}}],["4.11.3",{"_index":950,"title":{},"body":{"dependencies.html":{}}}],["48",{"_index":458,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["5",{"_index":354,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"entities/OrganizationMetadata.html":{},"index.html":{},"overview.html":{}}}],["5.0",{"_index":684,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["5.4.2",{"_index":965,"title":{},"body":{"dependencies.html":{}}}],["5432",{"_index":415,"title":{},"body":{"classes/DataSource.html":{}}}],["6",{"_index":1266,"title":{},"body":{"index.html":{}}}],["7",{"_index":486,"title":{},"body":{"classes/DatabaseUtil.html":{},"index.html":{}}}],["7${randombytes.substring(1",{"_index":483,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["7.8.1",{"_index":973,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":480,"title":{},"body":{"classes/DatabaseUtil.html":{},"index.html":{}}}],["8.13.1",{"_index":968,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":1348,"title":{},"body":{"overview.html":{}}}],["9996",{"_index":191,"title":{},"body":{"entities/BaseEntity.html":{}}}],["__dirname",{"_index":1388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["abstract",{"_index":158,"title":{},"body":{"entities/BaseEntity.html":{}}}],["abuse",{"_index":1329,"title":{},"body":{"index.html":{}}}],["access",{"_index":1095,"title":{},"body":{"index.html":{}}}],["accessible",{"_index":1293,"title":{},"body":{"index.html":{}}}],["accessors",{"_index":273,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["accurate",{"_index":1167,"title":{},"body":{"index.html":{}}}],["action",{"_index":394,"title":{},"body":{"classes/CreateUserTable1741519705062.html":{}}}],["actions",{"_index":1128,"title":{},"body":{"index.html":{}}}],["add",{"_index":363,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["adding",{"_index":1260,"title":{},"body":{"index.html":{}}}],["additional",{"_index":1379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["addresses",{"_index":1133,"title":{},"body":{"index.html":{}}}],["admin",{"_index":994,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["against",{"_index":1114,"title":{},"body":{"index.html":{}}}],["alias",{"_index":1370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allow_interest_earning",{"_index":356,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"entities/OrganizationMetadata.html":{}}}],["allowing",{"_index":1145,"title":{},"body":{"index.html":{}}}],["allowinterestearning",{"_index":659,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["already",{"_index":1186,"title":{},"body":{"index.html":{}}}],["amounts",{"_index":1205,"title":{},"body":{"index.html":{}}}],["angular",{"_index":1087,"title":{},"body":{"index.html":{}}}],["api",{"_index":1069,"title":{},"body":{"index.html":{}}}],["apollo/gateway",{"_index":556,"title":{},"body":{"modules/GraphQLGatewayModule.html":{},"dependencies.html":{}}}],["apollo/gateway/src/config",{"_index":809,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["apollo/server",{"_index":949,"title":{},"body":{"dependencies.html":{}}}],["apollo/subgraph",{"_index":951,"title":{},"body":{"dependencies.html":{}}}],["apollofederationdriver",{"_index":564,"title":{},"body":{"modules/GraphQLMicroserviceModule.html":{}}}],["apollofederationdriverconfig",{"_index":565,"title":{},"body":{"modules/GraphQLMicroserviceModule.html":{}}}],["apollogatewaydriver",{"_index":552,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["apollogatewaydriverconfig",{"_index":553,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["app",{"_index":228,"title":{},"body":{"classes/Bootstrapper.html":{},"index.html":{}}}],["app.connectmicroservice",{"_index":230,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["app.listen(port",{"_index":240,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["app.startallmicroservices",{"_index":237,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["appconfigmodule",{"_index":1,"title":{"modules/AppConfigModule.html":{}},"body":{"modules/AppConfigModule.html":{},"modules/CommonModule.html":{},"modules.html":{},"overview.html":{}}}],["appconfigservice",{"_index":40,"title":{"injectables/AppConfigService.html":{}},"body":{"injectables/AppConfigService.html":{},"classes/ConfigHelper.html":{},"coverage.html":{}}}],["appconfigservice(configservice",{"_index":295,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["appcontext",{"_index":292,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["appcontext.get(configservice",{"_index":294,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["applying",{"_index":1330,"title":{},"body":{"index.html":{}}}],["appropriate",{"_index":1319,"title":{},"body":{"index.html":{}}}],["apps",{"_index":1061,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["apps/${microservice}/src/typeorm.data",{"_index":1389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/${schema}/**/**.entity{.ts,.js",{"_index":422,"title":{},"body":{"classes/DataSource.html":{}}}],["apps/${schema}/src/migrations/**/*{.ts,.js",{"_index":424,"title":{},"body":{"classes/DataSource.html":{}}}],["apps/${schema}/src/subscriber/**/*{.ts,.js",{"_index":426,"title":{},"body":{"classes/DataSource.html":{}}}],["apps/.../gateway.module.ts",{"_index":1366,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../main.ts",{"_index":997,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../seeder.ts",{"_index":998,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../typeorm.data",{"_index":1365,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/auth/src/auth.controller.ts",{"_index":68,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["apps/auth/src/auth.controller.ts:11",{"_index":73,"title":{},"body":{"controllers/AuthController.html":{}}}],["apps/auth/src/auth.module.ts",{"_index":98,"title":{},"body":{"modules/AuthModule.html":{}}}],["apps/auth/src/auth.service.ts",{"_index":113,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["apps/auth/src/auth.service.ts:5",{"_index":114,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/auth/src/main.ts",{"_index":902,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/auth/src/resolvers/auth.resolver.ts",{"_index":104,"title":{},"body":{"classes/AuthResolver.html":{},"coverage.html":{}}}],["apps/auth/src/resolvers/auth.resolver.ts:6",{"_index":108,"title":{},"body":{"classes/AuthResolver.html":{}}}],["apps/documentation/src/documentation.controller.ts",{"_index":490,"title":{},"body":{"controllers/DocumentationController.html":{},"coverage.html":{}}}],["apps/documentation/src/documentation.controller.ts:9",{"_index":491,"title":{},"body":{"controllers/DocumentationController.html":{}}}],["apps/documentation/src/documentation.module.ts",{"_index":498,"title":{},"body":{"modules/DocumentationModule.html":{}}}],["apps/documentation/src/documentation.service.ts",{"_index":500,"title":{},"body":{"injectables/DocumentationService.html":{},"coverage.html":{}}}],["apps/documentation/src/documentation.service.ts:5",{"_index":501,"title":{},"body":{"injectables/DocumentationService.html":{}}}],["apps/documentation/src/main.ts",{"_index":904,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/escrow/src/escrow.controller.ts",{"_index":504,"title":{},"body":{"controllers/EscrowController.html":{},"coverage.html":{}}}],["apps/escrow/src/escrow.controller.ts:11",{"_index":505,"title":{},"body":{"controllers/EscrowController.html":{}}}],["apps/escrow/src/escrow.module.ts",{"_index":515,"title":{},"body":{"modules/EscrowModule.html":{}}}],["apps/escrow/src/escrow.service.ts",{"_index":522,"title":{},"body":{"injectables/EscrowService.html":{},"coverage.html":{}}}],["apps/escrow/src/escrow.service.ts:5",{"_index":523,"title":{},"body":{"injectables/EscrowService.html":{}}}],["apps/escrow/src/main.ts",{"_index":905,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/escrow/src/resolvers/escrow.resolver.ts",{"_index":519,"title":{},"body":{"classes/EscrowResolver.html":{},"coverage.html":{}}}],["apps/escrow/src/resolvers/escrow.resolver.ts:6",{"_index":521,"title":{},"body":{"classes/EscrowResolver.html":{}}}],["apps/escrow/src/typeorm.data",{"_index":906,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/gateway/src/gateway.module.ts",{"_index":531,"title":{},"body":{"modules/GatewayModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/gateway/src/gateway.service.ts",{"_index":542,"title":{},"body":{"injectables/GatewayService.html":{},"coverage.html":{}}}],["apps/gateway/src/gateway.service.ts:4",{"_index":543,"title":{},"body":{"injectables/GatewayService.html":{}}}],["apps/gateway/src/gateway.service.ts:7",{"_index":544,"title":{},"body":{"injectables/GatewayService.html":{}}}],["apps/gateway/src/main.ts",{"_index":910,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/media/src/main.ts",{"_index":911,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/media/src/media.controller.ts",{"_index":571,"title":{},"body":{"controllers/MediaController.html":{},"coverage.html":{}}}],["apps/media/src/media.controller.ts:11",{"_index":572,"title":{},"body":{"controllers/MediaController.html":{}}}],["apps/media/src/media.module.ts",{"_index":582,"title":{},"body":{"modules/MediaModule.html":{}}}],["apps/media/src/media.service.ts",{"_index":589,"title":{},"body":{"injectables/MediaService.html":{},"coverage.html":{}}}],["apps/media/src/media.service.ts:5",{"_index":590,"title":{},"body":{"injectables/MediaService.html":{}}}],["apps/media/src/resolvers/media.resolver.ts",{"_index":586,"title":{},"body":{"classes/MediaResolver.html":{},"coverage.html":{}}}],["apps/media/src/resolvers/media.resolver.ts:6",{"_index":588,"title":{},"body":{"classes/MediaResolver.html":{}}}],["apps/media/src/typeorm.data",{"_index":912,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/notification/src/main.ts",{"_index":913,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/notification/src/notification.controller.ts",{"_index":593,"title":{},"body":{"controllers/NotificationController.html":{},"coverage.html":{}}}],["apps/notification/src/notification.controller.ts:11",{"_index":594,"title":{},"body":{"controllers/NotificationController.html":{}}}],["apps/notification/src/notification.module.ts",{"_index":604,"title":{},"body":{"modules/NotificationModule.html":{}}}],["apps/notification/src/notification.service.ts",{"_index":611,"title":{},"body":{"injectables/NotificationService.html":{},"coverage.html":{}}}],["apps/notification/src/notification.service.ts:5",{"_index":612,"title":{},"body":{"injectables/NotificationService.html":{}}}],["apps/notification/src/resolvers/notification.resolver.ts",{"_index":608,"title":{},"body":{"classes/NotificationResolver.html":{},"coverage.html":{}}}],["apps/notification/src/resolvers/notification.resolver.ts:6",{"_index":610,"title":{},"body":{"classes/NotificationResolver.html":{}}}],["apps/notification/src/typeorm.data",{"_index":914,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/organization/src/entities/external/user.entity.ts",{"_index":833,"title":{},"body":{"classes/User-1.html":{},"coverage.html":{}}}],["apps/organization/src/entities/external/user.entity.ts:13",{"_index":838,"title":{},"body":{"classes/User-1.html":{}}}],["apps/organization/src/entities/external/user.entity.ts:17",{"_index":836,"title":{},"body":{"classes/User-1.html":{}}}],["apps/organization/src/entities/external/user.entity.ts:9",{"_index":834,"title":{},"body":{"classes/User-1.html":{}}}],["apps/organization/src/entities/organization",{"_index":657,"title":{},"body":{"entities/OrganizationMetadata.html":{},"coverage.html":{}}}],["apps/organization/src/entities/organization.entity.ts",{"_index":615,"title":{},"body":{"entities/Organization.html":{},"coverage.html":{}}}],["apps/organization/src/entities/organization.entity.ts:12",{"_index":625,"title":{},"body":{"entities/Organization.html":{}}}],["apps/organization/src/entities/organization.entity.ts:16",{"_index":629,"title":{},"body":{"entities/Organization.html":{}}}],["apps/organization/src/entities/organization.entity.ts:20",{"_index":628,"title":{},"body":{"entities/Organization.html":{}}}],["apps/organization/src/entities/organization.entity.ts:24",{"_index":618,"title":{},"body":{"entities/Organization.html":{}}}],["apps/organization/src/entities/organization.entity.ts:28",{"_index":626,"title":{},"body":{"entities/Organization.html":{}}}],["apps/organization/src/entities/organization.entity.ts:32",{"_index":623,"title":{},"body":{"entities/Organization.html":{}}}],["apps/organization/src/main.ts",{"_index":918,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/organization/src/migrations/1741518145374",{"_index":315,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"coverage.html":{}}}],["apps/organization/src/organization.controller.ts",{"_index":644,"title":{},"body":{"controllers/OrganizationController.html":{},"coverage.html":{}}}],["apps/organization/src/organization.controller.ts:11",{"_index":648,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["apps/organization/src/organization.controller.ts:16",{"_index":647,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["apps/organization/src/organization.module.ts",{"_index":689,"title":{},"body":{"modules/OrganizationModule.html":{}}}],["apps/organization/src/organization.service.ts",{"_index":704,"title":{},"body":{"injectables/OrganizationService.html":{},"coverage.html":{}}}],["apps/organization/src/organization.service.ts:14",{"_index":714,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["apps/organization/src/organization.service.ts:18",{"_index":710,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["apps/organization/src/organization.service.ts:24",{"_index":713,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["apps/organization/src/organization.service.ts:8",{"_index":709,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["apps/organization/src/resolvers/external/user.resolver.ts",{"_index":876,"title":{},"body":{"classes/UserResolver-1.html":{},"coverage.html":{}}}],["apps/organization/src/resolvers/external/user.resolver.ts:11",{"_index":880,"title":{},"body":{"classes/UserResolver-1.html":{}}}],["apps/organization/src/resolvers/external/user.resolver.ts:7",{"_index":877,"title":{},"body":{"classes/UserResolver-1.html":{}}}],["apps/organization/src/resolvers/organization.resolver.ts",{"_index":697,"title":{},"body":{"classes/OrganizationResolver.html":{},"coverage.html":{}}}],["apps/organization/src/resolvers/organization.resolver.ts:10",{"_index":702,"title":{},"body":{"classes/OrganizationResolver.html":{}}}],["apps/organization/src/resolvers/organization.resolver.ts:15",{"_index":700,"title":{},"body":{"classes/OrganizationResolver.html":{}}}],["apps/organization/src/resolvers/organization.resolver.ts:6",{"_index":699,"title":{},"body":{"classes/OrganizationResolver.html":{}}}],["apps/organization/src/typeorm.data",{"_index":920,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/payment/src/main.ts",{"_index":921,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/payment/src/payment.controller.ts",{"_index":723,"title":{},"body":{"controllers/PaymentController.html":{},"coverage.html":{}}}],["apps/payment/src/payment.controller.ts:11",{"_index":724,"title":{},"body":{"controllers/PaymentController.html":{}}}],["apps/payment/src/payment.module.ts",{"_index":734,"title":{},"body":{"modules/PaymentModule.html":{}}}],["apps/payment/src/payment.service.ts",{"_index":741,"title":{},"body":{"injectables/PaymentService.html":{},"coverage.html":{}}}],["apps/payment/src/payment.service.ts:5",{"_index":742,"title":{},"body":{"injectables/PaymentService.html":{}}}],["apps/payment/src/resolvers/payment.resolver.ts",{"_index":738,"title":{},"body":{"classes/PaymentResolver.html":{},"coverage.html":{}}}],["apps/payment/src/resolvers/payment.resolver.ts:6",{"_index":740,"title":{},"body":{"classes/PaymentResolver.html":{}}}],["apps/payment/src/typeorm.data",{"_index":922,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/property/src/main.ts",{"_index":923,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/property/src/property.controller.ts",{"_index":745,"title":{},"body":{"controllers/PropertyController.html":{},"coverage.html":{}}}],["apps/property/src/property.controller.ts:11",{"_index":746,"title":{},"body":{"controllers/PropertyController.html":{}}}],["apps/property/src/property.module.ts",{"_index":756,"title":{},"body":{"modules/PropertyModule.html":{}}}],["apps/property/src/property.service.ts",{"_index":763,"title":{},"body":{"injectables/PropertyService.html":{},"coverage.html":{}}}],["apps/property/src/property.service.ts:5",{"_index":764,"title":{},"body":{"injectables/PropertyService.html":{}}}],["apps/property/src/resolvers/property.resolver.ts",{"_index":760,"title":{},"body":{"classes/PropertyResolver.html":{},"coverage.html":{}}}],["apps/property/src/resolvers/property.resolver.ts:6",{"_index":762,"title":{},"body":{"classes/PropertyResolver.html":{}}}],["apps/property/src/typeorm.data",{"_index":924,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/user/src/entities/external/organization.entity.ts",{"_index":635,"title":{},"body":{"classes/Organization-1.html":{},"coverage.html":{}}}],["apps/user/src/entities/external/organization.entity.ts:9",{"_index":637,"title":{},"body":{"classes/Organization-1.html":{}}}],["apps/user/src/entities/role.entity.ts",{"_index":767,"title":{},"body":{"entities/Role.html":{},"coverage.html":{}}}],["apps/user/src/entities/role.entity.ts:13",{"_index":768,"title":{},"body":{"entities/Role.html":{}}}],["apps/user/src/entities/role.entity.ts:9",{"_index":770,"title":{},"body":{"entities/Role.html":{}}}],["apps/user/src/entities/user.entity.ts",{"_index":818,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["apps/user/src/entities/user.entity.ts:13",{"_index":821,"title":{},"body":{"entities/User.html":{}}}],["apps/user/src/entities/user.entity.ts:17",{"_index":822,"title":{},"body":{"entities/User.html":{}}}],["apps/user/src/entities/user.entity.ts:21",{"_index":820,"title":{},"body":{"entities/User.html":{}}}],["apps/user/src/entities/user.entity.ts:24",{"_index":825,"title":{},"body":{"entities/User.html":{}}}],["apps/user/src/entities/user.entity.ts:28",{"_index":826,"title":{},"body":{"entities/User.html":{}}}],["apps/user/src/entities/user.entity.ts:33",{"_index":828,"title":{},"body":{"entities/User.html":{}}}],["apps/user/src/entities/user.entity.ts:37",{"_index":824,"title":{},"body":{"entities/User.html":{}}}],["apps/user/src/entities/user.entity.ts:40",{"_index":823,"title":{},"body":{"entities/User.html":{}}}],["apps/user/src/main.ts",{"_index":926,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/user/src/migrations/1741519642145",{"_index":374,"title":{},"body":{"classes/CreateRoleTable1741519642145.html":{},"coverage.html":{}}}],["apps/user/src/migrations/1741519705062",{"_index":383,"title":{},"body":{"classes/CreateUserTable1741519705062.html":{},"coverage.html":{}}}],["apps/user/src/resolvers/user.resolver.ts",{"_index":868,"title":{},"body":{"classes/UserResolver.html":{},"coverage.html":{}}}],["apps/user/src/resolvers/user.resolver.ts:10",{"_index":872,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/user/src/resolvers/user.resolver.ts:15",{"_index":873,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/user/src/resolvers/user.resolver.ts:6",{"_index":870,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/user/src/seeder/seeder.module.ts",{"_index":778,"title":{},"body":{"modules/SeederModule.html":{}}}],["apps/user/src/seeder/seeder.service.ts",{"_index":782,"title":{},"body":{"injectables/SeederService.html":{},"coverage.html":{}}}],["apps/user/src/seeder/seeder.service.ts:13",{"_index":788,"title":{},"body":{"injectables/SeederService.html":{}}}],["apps/user/src/seeder/seeder.service.ts:18",{"_index":789,"title":{},"body":{"injectables/SeederService.html":{}}}],["apps/user/src/seeder/seeder.service.ts:8",{"_index":786,"title":{},"body":{"injectables/SeederService.html":{}}}],["apps/user/src/seeder/seeder.ts",{"_index":927,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/user/src/typeorm.data",{"_index":928,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/user/src/user.controller.ts",{"_index":847,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["apps/user/src/user.controller.ts:11",{"_index":848,"title":{},"body":{"controllers/UserController.html":{}}}],["apps/user/src/user.module.ts",{"_index":858,"title":{},"body":{"modules/UserModule.html":{}}}],["apps/user/src/user.service.ts",{"_index":886,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["apps/user/src/user.service.ts:17",{"_index":893,"title":{},"body":{"injectables/UserService.html":{}}}],["apps/user/src/user.service.ts:21",{"_index":892,"title":{},"body":{"injectables/UserService.html":{}}}],["apps/user/src/user.service.ts:9",{"_index":890,"title":{},"body":{"injectables/UserService.html":{}}}],["architecture",{"_index":1085,"title":{},"body":{"index.html":{}}}],["args",{"_index":1399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arguments",{"_index":1380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["argv",{"_index":943,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["array.from(crypto.getrandomvalues(new",{"_index":465,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["ascending",{"_index":209,"title":{},"body":{"entities/BaseEntity.html":{}}}],["async",{"_index":212,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"modules/DatabaseModule.html":{},"modules/GraphQLGatewayModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"classes/UserResolver-1.html":{}}}],["attacks",{"_index":1117,"title":{},"body":{"index.html":{}}}],["auditable",{"_index":1209,"title":{},"body":{"index.html":{}}}],["auditing",{"_index":1208,"title":{},"body":{"index.html":{}}}],["auth",{"_index":116,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["auth.controller",{"_index":99,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":75,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth_client",{"_index":983,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth_host",{"_index":533,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["auth_port",{"_index":1402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authcommand",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authcommand.ping_auth",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{}}}],["authcontroller",{"_index":66,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticated",{"_index":1323,"title":{},"body":{"index.html":{}}}],["authentication",{"_index":1062,"title":{},"body":{"index.html":{}}}],["authmodule",{"_index":83,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1355,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":1091,"title":{},"body":{"index.html":{}}}],["authorized",{"_index":1324,"title":{},"body":{"index.html":{}}}],["authresolver",{"_index":101,"title":{"classes/AuthResolver.html":{}},"body":{"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"coverage.html":{}}}],["authservice",{"_index":74,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["autoloadentities",{"_index":447,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["automatically",{"_index":1302,"title":{},"body":{"index.html":{}}}],["autoschemafile",{"_index":567,"title":{},"body":{"modules/GraphQLMicroserviceModule.html":{}}}],["availability",{"_index":1181,"title":{},"body":{"index.html":{}}}],["available",{"_index":1342,"title":{},"body":{"modules.html":{}}}],["await",{"_index":224,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"modules/DatabaseModule.html":{},"modules/GraphQLGatewayModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{}}}],["b.tostring(16).padstart(2",{"_index":468,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["backend",{"_index":1008,"title":{},"body":{"index.html":{}}}],["balancing",{"_index":1325,"title":{},"body":{"index.html":{}}}],["base",{"_index":1265,"title":{},"body":{"index.html":{}}}],["based",{"_index":195,"title":{},"body":{"entities/BaseEntity.html":{},"index.html":{}}}],["baseentity",{"_index":119,"title":{"entities/BaseEntity.html":{}},"body":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"entities/Role.html":{},"entities/User.html":{},"coverage.html":{}}}],["baseentitytypeorm",{"_index":141,"title":{},"body":{"entities/BaseEntity.html":{}}}],["baseentitytypeorm.usedatasource.call(this",{"_index":168,"title":{},"body":{"entities/BaseEntity.html":{}}}],["before",{"_index":1171,"title":{},"body":{"index.html":{}}}],["beforeinsert",{"_index":142,"title":{},"body":{"entities/BaseEntity.html":{}}}],["being",{"_index":202,"title":{},"body":{"entities/BaseEntity.html":{},"index.html":{}}}],["bit",{"_index":459,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["blacklisting",{"_index":1110,"title":{},"body":{"index.html":{}}}],["booking",{"_index":1184,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":357,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"entities/OrganizationMetadata.html":{}}}],["bootstrap",{"_index":87,"title":{},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/SeederModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["bootstrapper",{"_index":210,"title":{"classes/Bootstrapper.html":{}},"body":{"classes/Bootstrapper.html":{},"coverage.html":{}}}],["both",{"_index":201,"title":{},"body":{"entities/BaseEntity.html":{}}}],["browse",{"_index":1343,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1344,"title":{},"body":{"modules.html":{}}}],["brute",{"_index":1115,"title":{},"body":{"index.html":{}}}],["build",{"_index":804,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["build(...graphnames",{"_index":805,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["builder.util.ts",{"_index":803,"title":{},"body":{"classes/SubgraphsBuilder.html":{},"coverage.html":{}}}],["builder.util.ts:5",{"_index":806,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["bytes",{"_index":463,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["c",{"_index":1375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["caching",{"_index":1338,"title":{},"body":{"index.html":{}}}],["captcha",{"_index":1119,"title":{},"body":{"index.html":{}}}],["cascade",{"_index":368,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"entities/OrganizationMetadata.html":{}}}],["cascade'})@joincolumn({name",{"_index":675,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["case",{"_index":1241,"title":{},"body":{"index.html":{}}}],["ccpa",{"_index":1139,"title":{},"body":{"index.html":{}}}],["changes",{"_index":1199,"title":{},"body":{"index.html":{}}}],["changing",{"_index":1147,"title":{},"body":{"index.html":{}}}],["channel",{"_index":1275,"title":{},"body":{"index.html":{}}}],["channels",{"_index":1277,"title":{},"body":{"index.html":{}}}],["character",{"_index":333,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["characters",{"_index":472,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["check",{"_index":176,"title":{},"body":{"entities/BaseEntity.html":{}}}],["class",{"_index":36,"title":{"classes/AuthResolver.html":{},"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"classes/DatabaseUtil.html":{},"classes/EscrowResolver.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"classes/Organization-1.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"classes/SubgraphsBuilder.html":{},"classes/User-1.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{}},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"entities/Role.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["classes",{"_index":103,"title":{},"body":{"classes/AuthResolver.html":{},"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"classes/DatabaseUtil.html":{},"classes/EscrowResolver.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"classes/Organization-1.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"classes/SubgraphsBuilder.html":{},"classes/User-1.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"overview.html":{}}}],["clear",{"_index":1159,"title":{},"body":{"index.html":{}}}],["cli",{"_index":1047,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["cli.ts",{"_index":942,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["client.enum.ts",{"_index":980,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["clientproxy",{"_index":889,"title":{},"body":{"injectables/UserService.html":{}}}],["clients",{"_index":255,"title":{},"body":{"modules/ClientsModule.html":{}}}],["clientsmodule",{"_index":243,"title":{"modules/ClientsModule.html":{}},"body":{"modules/ClientsModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["clientsmodule.register(microserviceclient.organization_client",{"_index":867,"title":{},"body":{"modules/UserModule.html":{}}}],["clientsmoduleoptions",{"_index":253,"title":{},"body":{"modules/ClientsModule.html":{}}}],["cluster_authmodule",{"_index":90,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":91,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":92,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_commonmodule",{"_index":258,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_exports",{"_index":259,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_imports",{"_index":260,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_providers",{"_index":261,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_documentationmodule",{"_index":496,"title":{},"body":{"modules/DocumentationModule.html":{},"overview.html":{}}}],["cluster_documentationmodule_providers",{"_index":497,"title":{},"body":{"modules/DocumentationModule.html":{},"overview.html":{}}}],["cluster_escrowmodule",{"_index":512,"title":{},"body":{"modules/EscrowModule.html":{},"overview.html":{}}}],["cluster_escrowmodule_imports",{"_index":513,"title":{},"body":{"modules/EscrowModule.html":{}}}],["cluster_escrowmodule_providers",{"_index":514,"title":{},"body":{"modules/EscrowModule.html":{},"overview.html":{}}}],["cluster_gatewaymodule",{"_index":526,"title":{},"body":{"modules/GatewayModule.html":{},"overview.html":{}}}],["cluster_gatewaymodule_imports",{"_index":527,"title":{},"body":{"modules/GatewayModule.html":{},"overview.html":{}}}],["cluster_gatewaymodule_providers",{"_index":528,"title":{},"body":{"modules/GatewayModule.html":{},"overview.html":{}}}],["cluster_mediamodule",{"_index":579,"title":{},"body":{"modules/MediaModule.html":{},"overview.html":{}}}],["cluster_mediamodule_imports",{"_index":580,"title":{},"body":{"modules/MediaModule.html":{}}}],["cluster_mediamodule_providers",{"_index":581,"title":{},"body":{"modules/MediaModule.html":{},"overview.html":{}}}],["cluster_notificationmodule",{"_index":601,"title":{},"body":{"modules/NotificationModule.html":{},"overview.html":{}}}],["cluster_notificationmodule_imports",{"_index":603,"title":{},"body":{"modules/NotificationModule.html":{}}}],["cluster_notificationmodule_providers",{"_index":602,"title":{},"body":{"modules/NotificationModule.html":{},"overview.html":{}}}],["cluster_organizationmodule",{"_index":686,"title":{},"body":{"modules/OrganizationModule.html":{},"overview.html":{}}}],["cluster_organizationmodule_imports",{"_index":688,"title":{},"body":{"modules/OrganizationModule.html":{},"overview.html":{}}}],["cluster_organizationmodule_providers",{"_index":687,"title":{},"body":{"modules/OrganizationModule.html":{},"overview.html":{}}}],["cluster_paymentmodule",{"_index":731,"title":{},"body":{"modules/PaymentModule.html":{},"overview.html":{}}}],["cluster_paymentmodule_imports",{"_index":733,"title":{},"body":{"modules/PaymentModule.html":{}}}],["cluster_paymentmodule_providers",{"_index":732,"title":{},"body":{"modules/PaymentModule.html":{},"overview.html":{}}}],["cluster_propertymodule",{"_index":753,"title":{},"body":{"modules/PropertyModule.html":{},"overview.html":{}}}],["cluster_propertymodule_imports",{"_index":754,"title":{},"body":{"modules/PropertyModule.html":{}}}],["cluster_propertymodule_providers",{"_index":755,"title":{},"body":{"modules/PropertyModule.html":{},"overview.html":{}}}],["cluster_seedermodule",{"_index":774,"title":{},"body":{"modules/SeederModule.html":{},"overview.html":{}}}],["cluster_seedermodule_exports",{"_index":775,"title":{},"body":{"modules/SeederModule.html":{},"overview.html":{}}}],["cluster_seedermodule_providers",{"_index":776,"title":{},"body":{"modules/SeederModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":855,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":856,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":857,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cmd",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{}}}],["collection",{"_index":1141,"title":{},"body":{"index.html":{}}}],["column",{"_index":173,"title":{},"body":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["column.propertyname",{"_index":186,"title":{},"body":{"entities/BaseEntity.html":{}}}],["column.target",{"_index":175,"title":{},"body":{"entities/BaseEntity.html":{}}}],["columnmetadata",{"_index":154,"title":{},"body":{"entities/BaseEntity.html":{}}}],["columnorder",{"_index":151,"title":{},"body":{"entities/BaseEntity.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["columnorder(9999",{"_index":162,"title":{},"body":{"entities/BaseEntity.html":{}}}],["columnorder(9999)@field(undefined",{"_index":131,"title":{},"body":{"entities/BaseEntity.html":{}}}],["columnorder(9999)@field(undefined)@createdatecolumn({name",{"_index":128,"title":{},"body":{"entities/BaseEntity.html":{}}}],["columnorder(undefined)@field(undefined)@primarygeneratedcolumn('uuid",{"_index":136,"title":{},"body":{"entities/BaseEntity.html":{}}}],["columnorder(value",{"_index":1000,"title":{},"body":{"miscellaneous/functions.html":{}}}],["columns",{"_index":194,"title":{},"body":{"entities/BaseEntity.html":{}}}],["command",{"_index":1376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["commands",{"_index":1051,"title":{},"body":{"index.html":{}}}],["common",{"_index":1077,"title":{},"body":{"index.html":{}}}],["common.service",{"_index":264,"title":{},"body":{"modules/CommonModule.html":{}}}],["commonmodule",{"_index":93,"title":{"modules/CommonModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["commonservice",{"_index":262,"title":{"injectables/CommonService.html":{}},"body":{"modules/CommonModule.html":{},"injectables/CommonService.html":{},"coverage.html":{},"overview.html":{}}}],["communication",{"_index":1120,"title":{},"body":{"index.html":{}}}],["compared",{"_index":203,"title":{},"body":{"entities/BaseEntity.html":{}}}],["compile",{"_index":1036,"title":{},"body":{"index.html":{}}}],["complete",{"_index":1168,"title":{},"body":{"index.html":{}}}],["completed",{"_index":794,"title":{},"body":{"injectables/SeederService.html":{}}}],["compliance",{"_index":1221,"title":{},"body":{"index.html":{}}}],["complicating",{"_index":1262,"title":{},"body":{"index.html":{}}}],["comply",{"_index":1222,"title":{},"body":{"index.html":{}}}],["complying",{"_index":1136,"title":{},"body":{"index.html":{}}}],["compressing",{"_index":1303,"title":{},"body":{"index.html":{}}}],["compression",{"_index":1300,"title":{},"body":{"index.html":{}}}],["concerns",{"_index":1089,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":1213,"title":{},"body":{"index.html":{}}}],["config.service",{"_index":289,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["confighelper",{"_index":217,"title":{"classes/ConfigHelper.html":{}},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"modules/DatabaseModule.html":{},"classes/SubgraphsBuilder.html":{},"coverage.html":{}}}],["confighelper.databaseconfig",{"_index":444,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["confighelper.getinstance",{"_index":225,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/DatabaseModule.html":{},"classes/SubgraphsBuilder.html":{}}}],["confighelper.getmicroservicehosts(key",{"_index":814,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["confighelper.getmoduleport(module.name",{"_index":239,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["confighelper.instance",{"_index":291,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["confighelper.instance.appconfigservice",{"_index":296,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["confighelper.redisconfig",{"_index":227,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{}}}],["configmodule",{"_index":9,"title":{},"body":{"modules/AppConfigModule.html":{},"classes/ConfigHelper.html":{}}}],["configmodule.forroot",{"_index":14,"title":{},"body":{"modules/AppConfigModule.html":{},"classes/ConfigHelper.html":{}}}],["configservice",{"_index":48,"title":{},"body":{"injectables/AppConfigService.html":{},"classes/ConfigHelper.html":{}}}],["confirmation",{"_index":1243,"title":{},"body":{"index.html":{}}}],["connection",{"_index":1083,"title":{},"body":{"index.html":{}}}],["consistency",{"_index":1197,"title":{},"body":{"index.html":{}}}],["consistent",{"_index":1200,"title":{},"body":{"index.html":{}}}],["console.log",{"_index":792,"title":{},"body":{"injectables/SeederService.html":{}}}],["console.log(`inserted",{"_index":801,"title":{},"body":{"injectables/SeederService.html":{}}}],["const",{"_index":169,"title":{},"body":{"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"modules/GatewayModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{}}}],["constraint",{"_index":341,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["construct",{"_index":474,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["constructor",{"_index":46,"title":{},"body":{"injectables/AppConfigService.html":{},"classes/ConfigHelper.html":{},"injectables/GatewayService.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"injectables/SeederService.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{}}}],["constructor(configservice",{"_index":47,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["constructor(organizationclient",{"_index":888,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(organizationservice",{"_index":698,"title":{},"body":{"classes/OrganizationResolver.html":{},"classes/UserResolver-1.html":{}}}],["constructor(private",{"_index":61,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"controllers/DocumentationController.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResolver.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{}}}],["constructor(repository",{"_index":707,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["constructor(rolerepository",{"_index":785,"title":{},"body":{"injectables/SeederService.html":{}}}],["constructor(userservice",{"_index":869,"title":{},"body":{"classes/UserResolver.html":{}}}],["consume",{"_index":1297,"title":{},"body":{"index.html":{}}}],["contact",{"_index":1148,"title":{},"body":{"index.html":{}}}],["containing",{"_index":1010,"title":{},"body":{"index.html":{}}}],["controller",{"_index":65,"title":{"controllers/AuthController.html":{},"controllers/DocumentationController.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AuthController.html":{},"controllers/DocumentationController.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controllers",{"_index":67,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["convert",{"_index":469,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["correct",{"_index":477,"title":{},"body":{"classes/DatabaseUtil.html":{},"index.html":{}}}],["coverage",{"_index":897,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["created_at",{"_index":129,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["createdat",{"_index":123,"title":{},"body":{"entities/BaseEntity.html":{}}}],["createdatecolumn",{"_index":143,"title":{},"body":{"entities/BaseEntity.html":{}}}],["createorganizationandmetatable.ts",{"_index":316,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"coverage.html":{}}}],["createorganizationandmetatable.ts:44",{"_index":325,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["createorganizationandmetatable.ts:6",{"_index":322,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["createorganizationandmetatable.ts:8",{"_index":327,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["createorganizationandmetatable1741518145374",{"_index":314,"title":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"coverage.html":{}}}],["createroletable.ts",{"_index":375,"title":{},"body":{"classes/CreateRoleTable1741519642145.html":{},"coverage.html":{}}}],["createroletable.ts:15",{"_index":377,"title":{},"body":{"classes/CreateRoleTable1741519642145.html":{}}}],["createroletable.ts:4",{"_index":376,"title":{},"body":{"classes/CreateRoleTable1741519642145.html":{}}}],["createroletable.ts:6",{"_index":378,"title":{},"body":{"classes/CreateRoleTable1741519642145.html":{}}}],["createroletable1741519642145",{"_index":373,"title":{"classes/CreateRoleTable1741519642145.html":{}},"body":{"classes/CreateRoleTable1741519642145.html":{},"coverage.html":{}}}],["createusertable.ts",{"_index":384,"title":{},"body":{"classes/CreateUserTable1741519705062.html":{},"coverage.html":{}}}],["createusertable.ts:26",{"_index":386,"title":{},"body":{"classes/CreateUserTable1741519705062.html":{}}}],["createusertable.ts:4",{"_index":385,"title":{},"body":{"classes/CreateUserTable1741519705062.html":{}}}],["createusertable.ts:6",{"_index":387,"title":{},"body":{"classes/CreateUserTable1741519705062.html":{}}}],["createusertable1741519705062",{"_index":382,"title":{"classes/CreateUserTable1741519705062.html":{}},"body":{"classes/CreateUserTable1741519705062.html":{},"coverage.html":{}}}],["currencies",{"_index":1261,"title":{},"body":{"index.html":{}}}],["currency",{"_index":1254,"title":{},"body":{"index.html":{}}}],["custom",{"_index":183,"title":{},"body":{"entities/BaseEntity.html":{}}}],["d",{"_index":1398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["damage",{"_index":1217,"title":{},"body":{"index.html":{}}}],["data",{"_index":1122,"title":{},"body":{"index.html":{}}}],["database",{"_index":306,"title":{},"body":{"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"injectables/SeederService.html":{},"index.html":{}}}],["database_host",{"_index":24,"title":{},"body":{"modules/AppConfigModule.html":{},"miscellaneous/variables.html":{}}}],["database_name",{"_index":28,"title":{},"body":{"modules/AppConfigModule.html":{},"miscellaneous/variables.html":{}}}],["database_password",{"_index":27,"title":{},"body":{"modules/AppConfigModule.html":{},"miscellaneous/variables.html":{}}}],["database_port",{"_index":25,"title":{},"body":{"modules/AppConfigModule.html":{},"miscellaneous/variables.html":{}}}],["database_type",{"_index":23,"title":{},"body":{"modules/AppConfigModule.html":{},"miscellaneous/variables.html":{}}}],["database_username",{"_index":26,"title":{},"body":{"modules/AppConfigModule.html":{},"miscellaneous/variables.html":{}}}],["databaseconfig",{"_index":274,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["databasemodule",{"_index":427,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/DatabaseModule.html":{},"modules/OrganizationModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["databasemodule.init(schema.organization",{"_index":695,"title":{},"body":{"modules/OrganizationModule.html":{}}}],["databasemodule.init(schema.user",{"_index":865,"title":{},"body":{"modules/UserModule.html":{}}}],["databasemodule.loadentities([organization",{"_index":696,"title":{},"body":{"modules/OrganizationModule.html":{}}}],["databasemodule.loadentities([user",{"_index":866,"title":{},"body":{"modules/UserModule.html":{}}}],["databaseutil",{"_index":156,"title":{"classes/DatabaseUtil.html":{}},"body":{"entities/BaseEntity.html":{},"classes/DatabaseUtil.html":{},"coverage.html":{}}}],["databaseutil.generateuuidv7",{"_index":165,"title":{},"body":{"entities/BaseEntity.html":{}}}],["datasource",{"_index":144,"title":{"classes/DataSource.html":{}},"body":{"entities/BaseEntity.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"coverage.html":{}}}],["datasource.entitymetadatasmap.get(this",{"_index":171,"title":{},"body":{"entities/BaseEntity.html":{}}}],["datasource.getinstance('escrow",{"_index":1420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource.getinstance('media",{"_index":1421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource.getinstance('notification",{"_index":1422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource.getinstance('organization",{"_index":1423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource.getinstance('payment",{"_index":1424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource.getinstance('property",{"_index":1425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource.getinstance('user",{"_index":1426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasourceoptions",{"_index":434,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["datasourcepath",{"_index":944,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["datasources",{"_index":1054,"title":{},"body":{"index.html":{}}}],["date",{"_index":127,"title":{},"body":{"entities/BaseEntity.html":{}}}],["date.now",{"_index":455,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["db",{"_index":419,"title":{},"body":{"classes/DataSource.html":{},"index.html":{}}}],["decimal",{"_index":666,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["declarations",{"_index":86,"title":{},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/SeederModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorator",{"_index":196,"title":{},"body":{"entities/BaseEntity.html":{}}}],["decorators",{"_index":70,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"entities/BaseEntity.html":{},"controllers/DocumentationController.html":{},"controllers/EscrowController.html":{},"classes/EscrowResolver.html":{},"controllers/MediaController.html":{},"classes/MediaResolver.html":{},"controllers/NotificationController.html":{},"classes/NotificationResolver.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"controllers/PaymentController.html":{},"classes/PaymentResolver.html":{},"controllers/PropertyController.html":{},"classes/PropertyResolver.html":{},"entities/Role.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{}}}],["default",{"_index":188,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"entities/OrganizationMetadata.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["default('development",{"_index":34,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["defaultval",{"_index":1004,"title":{},"body":{"miscellaneous/functions.html":{}}}],["defined",{"_index":49,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"controllers/MediaController.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"entities/Role.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":367,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["deleted_at",{"_index":134,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["deletedat",{"_index":124,"title":{},"body":{"entities/BaseEntity.html":{}}}],["deletedatecolumn",{"_index":145,"title":{},"body":{"entities/BaseEntity.html":{}}}],["deliveries",{"_index":1280,"title":{},"body":{"index.html":{}}}],["delivery",{"_index":1267,"title":{},"body":{"index.html":{}}}],["demandoption",{"_index":1373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dependencies",{"_index":84,"title":{"dependencies.html":{}},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/SeederModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["deposit",{"_index":1204,"title":{},"body":{"index.html":{}}}],["deposit_fee_percentage",{"_index":355,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"entities/OrganizationMetadata.html":{}}}],["depositfeepercentage",{"_index":660,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["deposits",{"_index":1064,"title":{},"body":{"index.html":{}}}],["describe",{"_index":1372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":380,"title":{},"body":{"classes/CreateRoleTable1741519642145.html":{},"entities/Role.html":{},"index.html":{},"properties.html":{}}}],["details",{"_index":1149,"title":{},"body":{"index.html":{}}}],["developers",{"_index":1337,"title":{},"body":{"index.html":{}}}],["development",{"_index":450,"title":{},"body":{"modules/DatabaseModule.html":{},"index.html":{}}}],["directive",{"_index":630,"title":{},"body":{"entities/Organization.html":{},"classes/Organization-1.html":{},"entities/User.html":{},"classes/User-1.html":{}}}],["directive('@extends",{"_index":638,"title":{},"body":{"classes/Organization-1.html":{},"classes/User-1.html":{}}}],["directive('@external",{"_index":641,"title":{},"body":{"classes/Organization-1.html":{},"classes/User-1.html":{}}}],["directive('@key(fields",{"_index":634,"title":{},"body":{"entities/Organization.html":{},"classes/Organization-1.html":{},"entities/User.html":{},"classes/User-1.html":{}}}],["directive('@requires(fields",{"_index":841,"title":{},"body":{"classes/User-1.html":{}}}],["dispute",{"_index":1216,"title":{},"body":{"index.html":{}}}],["disputes",{"_index":1088,"title":{},"body":{"index.html":{}}}],["distributed",{"_index":1326,"title":{},"body":{"index.html":{}}}],["docs",{"_index":1035,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":898,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["documentation.controller",{"_index":499,"title":{},"body":{"modules/DocumentationModule.html":{}}}],["documentation.service",{"_index":493,"title":{},"body":{"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{}}}],["documentationcontroller",{"_index":489,"title":{"controllers/DocumentationController.html":{}},"body":{"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"coverage.html":{}}}],["documentationmodule",{"_index":495,"title":{"modules/DocumentationModule.html":{}},"body":{"modules/DocumentationModule.html":{},"modules.html":{},"overview.html":{}}}],["documentationservice",{"_index":492,"title":{"injectables/DocumentationService.html":{}},"body":{"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"coverage.html":{},"overview.html":{}}}],["domain",{"_index":349,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"entities/OrganizationMetadata.html":{}}}],["dotenv",{"_index":402,"title":{},"body":{"classes/DataSource.html":{},"dependencies.html":{}}}],["dotenv.config",{"_index":407,"title":{},"body":{"classes/DataSource.html":{}}}],["double",{"_index":1183,"title":{},"body":{"index.html":{}}}],["down",{"_index":320,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"index.html":{}}}],["down(queryrunner",{"_index":323,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["downloads",{"_index":1296,"title":{},"body":{"index.html":{}}}],["driven",{"_index":1228,"title":{},"body":{"index.html":{}}}],["driver",{"_index":559,"title":{},"body":{"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{}}}],["drop",{"_index":370,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["dtos",{"_index":1075,"title":{},"body":{"index.html":{}}}],["dynamic",{"_index":1273,"title":{},"body":{"index.html":{}}}],["dynamically",{"_index":446,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["dynamicmodule",{"_index":251,"title":{},"body":{"modules/ClientsModule.html":{},"modules/DatabaseModule.html":{},"modules/GraphQLGatewayModule.html":{}}}],["e.g",{"_index":1100,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["e2e",{"_index":1044,"title":{},"body":{"index.html":{}}}],["each",{"_index":1090,"title":{},"body":{"index.html":{}}}],["easily",{"_index":1292,"title":{},"body":{"index.html":{}}}],["easy",{"_index":1313,"title":{},"body":{"index.html":{}}}],["effectively",{"_index":1155,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":1176,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":1195,"title":{},"body":{"index.html":{}}}],["email",{"_index":337,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{},"entities/Organization.html":{},"entities/User.html":{},"index.html":{}}}],["emails",{"_index":1132,"title":{},"body":{"index.html":{}}}],["enable",{"_index":449,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["encrypted",{"_index":1123,"title":{},"body":{"index.html":{}}}],["encryption",{"_index":1237,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":1320,"title":{},"body":{"index.html":{}}}],["endpoints",{"_index":1332,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":471,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["ensuring",{"_index":476,"title":{},"body":{"classes/DatabaseUtil.html":{},"index.html":{}}}],["entities",{"_index":120,"title":{},"body":{"entities/BaseEntity.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"entities/Role.html":{},"entities/User.html":{},"overview.html":{}}}],["entities/external/user.entity",{"_index":883,"title":{},"body":{"classes/UserResolver-1.html":{}}}],["entities/organization",{"_index":694,"title":{},"body":{"modules/OrganizationModule.html":{}}}],["entities/organization.entity",{"_index":693,"title":{},"body":{"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"classes/UserResolver-1.html":{}}}],["entities/role.entity",{"_index":780,"title":{},"body":{"modules/SeederModule.html":{},"injectables/SeederService.html":{},"modules/UserModule.html":{}}}],["entities/user.entity",{"_index":863,"title":{},"body":{"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["entity",{"_index":118,"title":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"entities/Role.html":{},"entities/User.html":{}},"body":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"entities/Role.html":{},"entities/User.html":{},"classes/User-1.html":{},"coverage.html":{}}}],["entityclassorschema",{"_index":433,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["enumerations",{"_index":978,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":406,"title":{},"body":{"classes/DataSource.html":{}}}],["environment",{"_index":290,"title":{},"body":{"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/GatewayModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":1152,"title":{},"body":{"index.html":{}}}],["errors",{"_index":1154,"title":{},"body":{"index.html":{}}}],["escrow",{"_index":524,"title":{},"body":{"injectables/EscrowService.html":{},"index.html":{}}}],["escrow.controller",{"_index":516,"title":{},"body":{"modules/EscrowModule.html":{}}}],["escrow.service",{"_index":507,"title":{},"body":{"controllers/EscrowController.html":{},"modules/EscrowModule.html":{}}}],["escrow_client",{"_index":984,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["escrow_host",{"_index":534,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["escrow_port",{"_index":1403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["escrowcommand",{"_index":508,"title":{},"body":{"controllers/EscrowController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["escrowcommand.ping_escrow",{"_index":509,"title":{},"body":{"controllers/EscrowController.html":{}}}],["escrowcontroller",{"_index":503,"title":{"controllers/EscrowController.html":{}},"body":{"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"coverage.html":{}}}],["escrowmodule",{"_index":511,"title":{"modules/EscrowModule.html":{}},"body":{"modules/EscrowModule.html":{},"modules.html":{},"overview.html":{}}}],["escrowresolver",{"_index":517,"title":{"classes/EscrowResolver.html":{}},"body":{"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"coverage.html":{}}}],["escrowservice",{"_index":506,"title":{"injectables/EscrowService.html":{}},"body":{"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"injectables/EscrowService.html":{},"coverage.html":{},"overview.html":{}}}],["especially",{"_index":1121,"title":{},"body":{"index.html":{}}}],["etc",{"_index":1013,"title":{},"body":{"index.html":{}}}],["evenly",{"_index":1327,"title":{},"body":{"index.html":{}}}],["event",{"_index":1227,"title":{},"body":{"index.html":{}}}],["example",{"_index":1028,"title":{},"body":{"index.html":{}}}],["exist",{"_index":178,"title":{},"body":{"entities/BaseEntity.html":{}}}],["expiration",{"_index":1107,"title":{},"body":{"index.html":{}}}],["expiry",{"_index":1104,"title":{},"body":{"index.html":{}}}],["export",{"_index":35,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"entities/Role.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":89,"title":{},"body":{"modules/AuthModule.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/GraphQLGatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/SeederModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":957,"title":{},"body":{"dependencies.html":{}}}],["extending",{"_index":639,"title":{},"body":{"classes/Organization-1.html":{},"classes/User-1.html":{}}}],["extends",{"_index":159,"title":{},"body":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["external",{"_index":1232,"title":{},"body":{"index.html":{}}}],["external/organization.entity",{"_index":831,"title":{},"body":{"entities/User.html":{}}}],["failed",{"_index":1279,"title":{},"body":{"index.html":{}}}],["failure",{"_index":1218,"title":{},"body":{"index.html":{}}}],["failures",{"_index":1239,"title":{},"body":{"index.html":{}}}],["fallback",{"_index":187,"title":{},"body":{"entities/BaseEntity.html":{}}}],["false",{"_index":358,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"entities/OrganizationMetadata.html":{}}}],["fast",{"_index":1175,"title":{},"body":{"index.html":{}}}],["faster",{"_index":1305,"title":{},"body":{"index.html":{}}}],["features",{"_index":1180,"title":{},"body":{"index.html":{}}}],["federated",{"_index":839,"title":{},"body":{"classes/User-1.html":{}}}],["federation",{"_index":568,"title":{},"body":{"modules/GraphQLMicroserviceModule.html":{},"classes/Organization-1.html":{}}}],["feedback",{"_index":1160,"title":{},"body":{"index.html":{}}}],["fetch",{"_index":844,"title":{},"body":{"classes/User-1.html":{}}}],["field",{"_index":149,"title":{},"body":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"entities/OrganizationMetadata.html":{},"entities/Role.html":{},"entities/User.html":{},"classes/User-1.html":{}}}],["field(undefined",{"_index":620,"title":{},"body":{"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"entities/Role.html":{},"entities/User.html":{},"classes/User-1.html":{}}}],["field(undefined)@column",{"_index":617,"title":{},"body":{"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"entities/User.html":{}}}],["field(undefined)@column({name",{"_index":627,"title":{},"body":{"entities/Organization.html":{},"entities/OrganizationMetadata.html":{}}}],["field(undefined)@column({unique",{"_index":624,"title":{},"body":{"entities/Organization.html":{}}}],["field(undefined)@directive('@external",{"_index":636,"title":{},"body":{"classes/Organization-1.html":{}}}],["field(undefined)@manytoone(undefined)@joincolumn({name",{"_index":827,"title":{},"body":{"entities/User.html":{}}}],["field(undefined)@primarycolumn",{"_index":769,"title":{},"body":{"entities/Role.html":{}}}],["file",{"_index":5,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"entities/Role.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["files",{"_index":1291,"title":{},"body":{"index.html":{}}}],["financial",{"_index":1224,"title":{},"body":{"index.html":{}}}],["find",{"_index":887,"title":{},"body":{"injectables/UserService.html":{}}}],["find_organization_by_id",{"_index":1417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["findall",{"_index":705,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["findone",{"_index":706,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["findone(where",{"_index":711,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["findonebyid",{"_index":645,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["findonebyid(id",{"_index":646,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["findoptionswhere",{"_index":712,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["firstname",{"_index":389,"title":{},"body":{"classes/CreateUserTable1741519705062.html":{},"entities/User.html":{}}}],["fk_a2cecd1a3531c0b041e29ba46e1",{"_index":393,"title":{},"body":{"classes/CreateUserTable1741519705062.html":{}}}],["fk_ad9c5b4a8fb0a54d63b84710190",{"_index":364,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["float",{"_index":680,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["follow",{"_index":1033,"title":{},"body":{"index.html":{}}}],["following",{"_index":1018,"title":{},"body":{"index.html":{}}}],["force",{"_index":1116,"title":{},"body":{"index.html":{}}}],["foreign",{"_index":365,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["format",{"_index":478,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["free",{"_index":1312,"title":{},"body":{"index.html":{}}}],["frequency",{"_index":1284,"title":{},"body":{"index.html":{}}}],["frontend",{"_index":1086,"title":{},"body":{"index.html":{}}}],["function",{"_index":184,"title":{},"body":{"entities/BaseEntity.html":{},"coverage.html":{}}}],["functionality",{"_index":1174,"title":{},"body":{"index.html":{}}}],["functions",{"_index":996,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gateway",{"_index":545,"title":{},"body":{"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"index.html":{}}}],["gateway.module.ts",{"_index":547,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["gateway.module.ts:10",{"_index":549,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["gateway.service",{"_index":532,"title":{},"body":{"modules/GatewayModule.html":{}}}],["gateway_host",{"_index":1411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gateway_port",{"_index":1404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gatewaymodule",{"_index":525,"title":{"modules/GatewayModule.html":{}},"body":{"modules/GatewayModule.html":{},"modules.html":{},"overview.html":{}}}],["gatewayservice",{"_index":530,"title":{"injectables/GatewayService.html":{}},"body":{"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"coverage.html":{},"overview.html":{}}}],["gdpr",{"_index":1138,"title":{},"body":{"index.html":{}}}],["generate",{"_index":460,"title":{},"body":{"classes/DatabaseUtil.html":{},"miscellaneous/variables.html":{}}}],["generateuuid",{"_index":163,"title":{},"body":{"entities/BaseEntity.html":{}}}],["generateuuidv7",{"_index":453,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["generating",{"_index":1246,"title":{},"body":{"index.html":{}}}],["getcolumnorder",{"_index":152,"title":{},"body":{"entities/BaseEntity.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getcolumnorder(target",{"_index":1002,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getcolumnorder(target.prototype",{"_index":185,"title":{},"body":{"entities/BaseEntity.html":{}}}],["getconfig",{"_index":45,"title":{},"body":{"injectables/AppConfigService.html":{},"classes/ConfigHelper.html":{}}}],["getconfig(key",{"_index":55,"title":{},"body":{"injectables/AppConfigService.html":{},"classes/ConfigHelper.html":{}}}],["getdatabaseconfig",{"_index":287,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["gethello",{"_index":69,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/DocumentationController.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"injectables/EscrowService.html":{},"controllers/MediaController.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"injectables/NotificationService.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"injectables/PropertyService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["getinstance",{"_index":270,"title":{},"body":{"classes/ConfigHelper.html":{},"classes/DataSource.html":{}}}],["getinstance(schema",{"_index":397,"title":{},"body":{"classes/DataSource.html":{}}}],["getmicroservicehosts",{"_index":271,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["getmicroservicehosts(microservicename",{"_index":279,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["getmoduleport",{"_index":272,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["getmoduleport(modulename",{"_index":282,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["getordersafely",{"_index":172,"title":{},"body":{"entities/BaseEntity.html":{}}}],["getordersafely(xcolumn",{"_index":205,"title":{},"body":{"entities/BaseEntity.html":{}}}],["getordersafely(ycolumn",{"_index":207,"title":{},"body":{"entities/BaseEntity.html":{}}}],["getredisconfig",{"_index":285,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["getting",{"_index":1005,"title":{"index.html":{}},"body":{}}],["global",{"_index":250,"title":{},"body":{"modules/ClientsModule.html":{},"modules/GraphQLGatewayModule.html":{},"index.html":{}}}],["graph",{"_index":1341,"title":{},"body":{"modules.html":{}}}],["graphname",{"_index":813,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["graphname?.split('_host')?.[0",{"_index":812,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["graphnames",{"_index":807,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["graphnames.map((graphname",{"_index":810,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["graphql",{"_index":962,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["graphqlgatewaymodule",{"_index":529,"title":{"modules/GraphQLGatewayModule.html":{}},"body":{"modules/GatewayModule.html":{},"modules/GraphQLGatewayModule.html":{},"modules.html":{},"overview.html":{}}}],["graphqlgatewaymodule.register",{"_index":541,"title":{},"body":{"modules/GatewayModule.html":{}}}],["graphqlmicroservicemodule",{"_index":94,"title":{"modules/GraphQLMicroserviceModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/EscrowModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["graphqlmodule",{"_index":551,"title":{},"body":{"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{}}}],["graphqlmodule.forroot",{"_index":566,"title":{},"body":{"modules/GraphQLMicroserviceModule.html":{}}}],["graphqlmodule.forrootasync",{"_index":558,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["growing",{"_index":1264,"title":{},"body":{"index.html":{}}}],["guards",{"_index":1080,"title":{},"body":{"index.html":{}}}],["handle",{"_index":1162,"title":{},"body":{"index.html":{}}}],["handling",{"_index":1153,"title":{},"body":{"index.html":{}}}],["hello",{"_index":115,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DocumentationService.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"injectables/MediaService.html":{},"injectables/NotificationService.html":{},"injectables/OrganizationService.html":{},"injectables/PaymentService.html":{},"injectables/PropertyService.html":{},"injectables/UserService.html":{}}}],["help().argv",{"_index":1386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["helper",{"_index":1048,"title":{},"body":{"index.html":{}}}],["here",{"_index":1059,"title":{},"body":{"index.html":{}}}],["hex",{"_index":470,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["high",{"_index":189,"title":{},"body":{"entities/BaseEntity.html":{},"index.html":{}}}],["host",{"_index":233,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/SubgraphsBuilder.html":{}}}],["host}:${port}/graphql",{"_index":816,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["https",{"_index":1124,"title":{},"body":{"index.html":{}}}],["id",{"_index":125,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/User.html":{},"classes/User-1.html":{},"classes/UserResolver-1.html":{}}}],["identifier",{"_index":899,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":1188,"title":{},"body":{"index.html":{}}}],["images",{"_index":1190,"title":{},"body":{"index.html":{}}}],["implement",{"_index":1109,"title":{},"body":{"index.html":{}}}],["implementing",{"_index":1118,"title":{},"body":{"index.html":{}}}],["implements",{"_index":317,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["import",{"_index":7,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"entities/Role.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":13,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/AuthModule.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/SeederModule.html":{},"modules/UserModule.html":{}}}],["improve",{"_index":1340,"title":{},"body":{"index.html":{}}}],["in/opt",{"_index":1286,"title":{},"body":{"index.html":{}}}],["includes",{"_index":1096,"title":{},"body":{"index.html":{}}}],["index",{"_index":43,"title":{"index.html":{}},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"controllers/MediaController.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"entities/Role.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"entities/Role.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{}}}],["information",{"_index":1131,"title":{},"body":{"index.html":{}}}],["init",{"_index":213,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/DatabaseModule.html":{}}}],["init(module",{"_index":214,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["init(schema",{"_index":429,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["initially",{"_index":1256,"title":{},"body":{"index.html":{}}}],["inject",{"_index":894,"title":{},"body":{"injectables/UserService.html":{}}}],["inject(microserviceclient.organization_client",{"_index":895,"title":{},"body":{"injectables/UserService.html":{}}}],["injectable",{"_index":39,"title":{"injectables/AppConfigService.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/DocumentationService.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"injectables/MediaService.html":{},"injectables/NotificationService.html":{},"injectables/OrganizationService.html":{},"injectables/PaymentService.html":{},"injectables/PropertyService.html":{},"injectables/SeederService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppConfigService.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/DocumentationService.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"injectables/MediaService.html":{},"injectables/NotificationService.html":{},"injectables/OrganizationService.html":{},"injectables/PaymentService.html":{},"injectables/PropertyService.html":{},"injectables/SeederService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":41,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/DocumentationService.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"injectables/MediaService.html":{},"injectables/NotificationService.html":{},"injectables/OrganizationService.html":{},"injectables/PaymentService.html":{},"injectables/PropertyService.html":{},"injectables/SeederService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectrepository",{"_index":715,"title":{},"body":{"injectables/OrganizationService.html":{},"injectables/SeederService.html":{},"injectables/UserService.html":{}}}],["injectrepository(organization",{"_index":718,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["injectrepository(role",{"_index":790,"title":{},"body":{"injectables/SeederService.html":{}}}],["injectrepository(user",{"_index":896,"title":{},"body":{"injectables/UserService.html":{}}}],["inr",{"_index":1257,"title":{},"body":{"index.html":{}}}],["install",{"_index":1030,"title":{},"body":{"index.html":{}}}],["installed",{"_index":1019,"title":{},"body":{"index.html":{}}}],["installinstall",{"_index":1032,"title":{},"body":{"index.html":{}}}],["instance",{"_index":269,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["instances",{"_index":1328,"title":{},"body":{"index.html":{}}}],["integrating",{"_index":1196,"title":{},"body":{"index.html":{}}}],["integration",{"_index":1231,"title":{},"body":{"index.html":{}}}],["integrity",{"_index":1151,"title":{},"body":{"index.html":{}}}],["interceptors",{"_index":1079,"title":{},"body":{"index.html":{}}}],["interfaces",{"_index":1076,"title":{},"body":{"index.html":{}}}],["introspectandcompose",{"_index":555,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["introspection",{"_index":1334,"title":{},"body":{"index.html":{}}}],["invalid",{"_index":1157,"title":{},"body":{"index.html":{}}}],["ioredis",{"_index":964,"title":{},"body":{"dependencies.html":{}}}],["isglobal",{"_index":15,"title":{},"body":{"modules/AppConfigModule.html":{},"classes/ConfigHelper.html":{}}}],["issues",{"_index":1185,"title":{},"body":{"index.html":{}}}],["joi",{"_index":12,"title":{},"body":{"modules/AppConfigModule.html":{},"dependencies.html":{}}}],["joi.number().required",{"_index":22,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["joi.object",{"_index":18,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["joi.string",{"_index":30,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["joi.string().required",{"_index":20,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["join",{"_index":473,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["joincolumn",{"_index":681,"title":{},"body":{"entities/OrganizationMetadata.html":{},"entities/User.html":{}}}],["jwt",{"_index":1101,"title":{},"body":{"index.html":{}}}],["key",{"_index":59,"title":{},"body":{"injectables/AppConfigService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/Organization-1.html":{},"classes/SubgraphsBuilder.html":{},"index.html":{}}}],["keypart",{"_index":811,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["landlord",{"_index":1127,"title":{},"body":{"index.html":{}}}],["landlords",{"_index":1165,"title":{},"body":{"index.html":{}}}],["large",{"_index":1163,"title":{},"body":{"index.html":{}}}],["lastname",{"_index":390,"title":{},"body":{"classes/CreateUserTable1741519705062.html":{},"entities/User.html":{}}}],["later",{"_index":1258,"title":{},"body":{"index.html":{}}}],["learn",{"_index":1057,"title":{},"body":{"index.html":{}}}],["legend",{"_index":85,"title":{},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/SeederModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["lets",{"_index":1050,"title":{},"body":{"index.html":{}}}],["libraries",{"_index":1074,"title":{},"body":{"index.html":{}}}],["libs",{"_index":1012,"title":{},"body":{"index.html":{}}}],["libs/.../auth.command.ts",{"_index":1356,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../column",{"_index":999,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/.../environment.constant.ts",{"_index":1357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../escrow.command.ts",{"_index":1358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../media.command.ts",{"_index":1359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../micro",{"_index":979,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../notification.command.ts",{"_index":1360,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../organization.command.ts",{"_index":1361,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../payment.command.ts",{"_index":1362,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../property.command.ts",{"_index":1363,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../roles.enum.ts",{"_index":981,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../schema.constant.ts",{"_index":1364,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../user.command.ts",{"_index":1367,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/common/src/clients/clients.module.ts",{"_index":244,"title":{},"body":{"modules/ClientsModule.html":{}}}],["libs/common/src/clients/clients.module.ts:12",{"_index":247,"title":{},"body":{"modules/ClientsModule.html":{}}}],["libs/common/src/common.module.ts",{"_index":263,"title":{},"body":{"modules/CommonModule.html":{}}}],["libs/common/src/common.service.ts",{"_index":266,"title":{},"body":{"injectables/CommonService.html":{},"coverage.html":{}}}],["libs/common/src/config/config.helper.ts",{"_index":267,"title":{},"body":{"classes/ConfigHelper.html":{},"coverage.html":{}}}],["libs/common/src/config/config.helper.ts:13",{"_index":278,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.helper.ts:31",{"_index":286,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.helper.ts:37",{"_index":288,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.helper.ts:47",{"_index":283,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.helper.ts:53",{"_index":280,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.helper.ts:63",{"_index":277,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.helper.ts:8",{"_index":276,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.helper.ts:9",{"_index":275,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.module.ts",{"_index":6,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["libs/common/src/config/config.service.ts",{"_index":42,"title":{},"body":{"injectables/AppConfigService.html":{},"coverage.html":{}}}],["libs/common/src/config/config.service.ts:5",{"_index":50,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["libs/common/src/config/config.service.ts:8",{"_index":57,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["libs/common/src/constants/commands/auth.command.ts",{"_index":929,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/commands/escrow.command.ts",{"_index":930,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/commands/media.command.ts",{"_index":931,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/commands/notification.command.ts",{"_index":932,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/commands/organization.command.ts",{"_index":933,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/commands/payment.command.ts",{"_index":934,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/commands/property.command.ts",{"_index":935,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/commands/user.command.ts",{"_index":936,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/environment.constant.ts",{"_index":937,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/schema.constant.ts",{"_index":938,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/database/database.module.ts",{"_index":428,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["libs/common/src/database/database.module.ts:38",{"_index":435,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["libs/common/src/database/database.module.ts:9",{"_index":430,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["libs/common/src/database/entities/base.entity.ts",{"_index":121,"title":{},"body":{"entities/BaseEntity.html":{},"coverage.html":{}}}],["libs/common/src/database/entities/base.entity.ts:22",{"_index":137,"title":{},"body":{"entities/BaseEntity.html":{}}}],["libs/common/src/database/entities/base.entity.ts:27",{"_index":130,"title":{},"body":{"entities/BaseEntity.html":{}}}],["libs/common/src/database/entities/base.entity.ts:32",{"_index":140,"title":{},"body":{"entities/BaseEntity.html":{}}}],["libs/common/src/database/entities/base.entity.ts:37",{"_index":135,"title":{},"body":{"entities/BaseEntity.html":{}}}],["libs/common/src/decorators/column",{"_index":939,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/enums/micro",{"_index":982,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/common/src/enums/roles.enum.ts",{"_index":991,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/common/src/graphql/graphql",{"_index":546,"title":{},"body":{"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{}}}],["libs/common/src/utils/bootstrapper.util.ts",{"_index":211,"title":{},"body":{"classes/Bootstrapper.html":{},"coverage.html":{}}}],["libs/common/src/utils/bootstrapper.util.ts:7",{"_index":215,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["libs/common/src/utils/data",{"_index":395,"title":{},"body":{"classes/DataSource.html":{},"coverage.html":{}}}],["libs/common/src/utils/database.util.ts",{"_index":452,"title":{},"body":{"classes/DatabaseUtil.html":{},"coverage.html":{}}}],["libs/common/src/utils/database.util.ts:2",{"_index":454,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["libs/common/src/utils/subgraphs",{"_index":802,"title":{},"body":{"classes/SubgraphsBuilder.html":{},"coverage.html":{}}}],["license",{"_index":1353,"title":{},"body":{"properties.html":{}}}],["limiting",{"_index":1112,"title":{},"body":{"index.html":{}}}],["limits",{"_index":1331,"title":{},"body":{"index.html":{}}}],["listed",{"_index":1172,"title":{},"body":{"index.html":{}}}],["listening",{"_index":242,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["listings",{"_index":1067,"title":{},"body":{"index.html":{}}}],["load",{"_index":404,"title":{},"body":{"classes/DataSource.html":{},"index.html":{}}}],["loadentities",{"_index":431,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["loadentities(entities",{"_index":432,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["loading",{"_index":1306,"title":{},"body":{"index.html":{}}}],["local",{"_index":1223,"title":{},"body":{"index.html":{}}}],["localhost",{"_index":413,"title":{},"body":{"classes/DataSource.html":{}}}],["location",{"_index":1178,"title":{},"body":{"index.html":{}}}],["logger",{"_index":216,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["logger(`${module.name}bootstrap",{"_index":223,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["logger.log(`microservice",{"_index":241,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["logo",{"_index":350,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"entities/OrganizationMetadata.html":{}}}],["lts",{"_index":1022,"title":{},"body":{"index.html":{}}}],["m",{"_index":1371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["machine",{"_index":1017,"title":{},"body":{"index.html":{}}}],["maintaining",{"_index":1150,"title":{},"body":{"index.html":{}}}],["make",{"_index":1026,"title":{},"body":{"index.html":{}}}],["manage",{"_index":1287,"title":{},"body":{"index.html":{}}}],["managed",{"_index":642,"title":{},"body":{"classes/Organization-1.html":{}}}],["management",{"_index":1063,"title":{},"body":{"index.html":{}}}],["managing",{"_index":1106,"title":{},"body":{"index.html":{}}}],["manytoone",{"_index":829,"title":{},"body":{"entities/User.html":{}}}],["map((b",{"_index":467,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["matching",{"_index":38,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"entities/Role.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["mechanisms",{"_index":1108,"title":{},"body":{"index.html":{}}}],["media",{"_index":591,"title":{},"body":{"injectables/MediaService.html":{},"index.html":{}}}],["media.controller",{"_index":583,"title":{},"body":{"modules/MediaModule.html":{}}}],["media.service",{"_index":574,"title":{},"body":{"controllers/MediaController.html":{},"modules/MediaModule.html":{}}}],["media_client",{"_index":985,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["media_host",{"_index":535,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["media_port",{"_index":1405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mediacommand",{"_index":575,"title":{},"body":{"controllers/MediaController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mediacommand.ping_media",{"_index":576,"title":{},"body":{"controllers/MediaController.html":{}}}],["mediacontroller",{"_index":570,"title":{"controllers/MediaController.html":{}},"body":{"controllers/MediaController.html":{},"modules/MediaModule.html":{},"coverage.html":{}}}],["mediamodule",{"_index":578,"title":{"modules/MediaModule.html":{}},"body":{"modules/MediaModule.html":{},"modules.html":{},"overview.html":{}}}],["mediaresolver",{"_index":584,"title":{"classes/MediaResolver.html":{}},"body":{"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"coverage.html":{}}}],["mediaservice",{"_index":573,"title":{"injectables/MediaService.html":{}},"body":{"controllers/MediaController.html":{},"modules/MediaModule.html":{},"injectables/MediaService.html":{},"coverage.html":{},"overview.html":{}}}],["member",{"_index":995,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["message",{"_index":1271,"title":{},"body":{"index.html":{}}}],["messagepattern",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{}}}],["messagepattern({cmd",{"_index":71,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{}}}],["meta",{"_index":170,"title":{},"body":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"injectables/OrganizationService.html":{}}}],["meta.columns",{"_index":197,"title":{},"body":{"entities/BaseEntity.html":{}}}],["meta.columns].sort((xcolumn",{"_index":198,"title":{},"body":{"entities/BaseEntity.html":{}}}],["meta.organization",{"_index":622,"title":{},"body":{"entities/Organization.html":{}}}],["metadata",{"_index":970,"title":{},"body":{"dependencies.html":{}}}],["metadata.entity",{"_index":632,"title":{},"body":{"entities/Organization.html":{},"modules/OrganizationModule.html":{}}}],["metadata.entity.ts",{"_index":658,"title":{},"body":{"entities/OrganizationMetadata.html":{},"coverage.html":{}}}],["metadata.entity.ts:16",{"_index":676,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["metadata.entity.ts:20",{"_index":678,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["metadata.entity.ts:24",{"_index":669,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["metadata.entity.ts:28",{"_index":670,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["metadata.entity.ts:38",{"_index":679,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["metadata.entity.ts:48",{"_index":667,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["metadata.entity.ts:52",{"_index":663,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["methods",{"_index":44,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"controllers/MediaController.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{}}}],["microservice",{"_index":640,"title":{},"body":{"classes/Organization-1.html":{},"classes/User-1.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["microservice.module.ts",{"_index":563,"title":{},"body":{"modules/GraphQLMicroserviceModule.html":{}}}],["microserviceclient",{"_index":860,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["microservicename",{"_index":281,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["microservicename}_host`.touppercase",{"_index":311,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["microservicename}_port`.touppercase",{"_index":312,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["microserviceoptions",{"_index":220,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["microservices",{"_index":1011,"title":{},"body":{"index.html":{}}}],["migration",{"_index":1383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migration:${command",{"_index":1396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migrationinterface",{"_index":318,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["migrations",{"_index":423,"title":{},"body":{"classes/DataSource.html":{}}}],["migrationstablename",{"_index":408,"title":{},"body":{"classes/DataSource.html":{}}}],["miscellaneous",{"_index":977,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mobile",{"_index":1278,"title":{},"body":{"index.html":{}}}],["mode",{"_index":1039,"title":{},"body":{"index.html":{}}}],["models",{"_index":1084,"title":{},"body":{"index.html":{}}}],["module",{"_index":0,"title":{"modules/AppConfigModule.html":{},"modules/AuthModule.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/SeederModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppConfigModule.html":{},"modules/AuthModule.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/SeederModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modulename",{"_index":284,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["modulename?.split('module')?.[0]?.touppercase",{"_index":308,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppConfigModule.html":{},"modules/AuthModule.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/SeederModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["money",{"_index":1206,"title":{},"body":{"index.html":{}}}],["monthly",{"_index":1250,"title":{},"body":{"index.html":{}}}],["multi",{"_index":1253,"title":{},"body":{"index.html":{}}}],["multiple",{"_index":1276,"title":{},"body":{"index.html":{}}}],["name",{"_index":52,"title":{},"body":{"injectables/AppConfigService.html":{},"classes/AuthResolver.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/EscrowResolver.html":{},"modules/GraphQLGatewayModule.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"entities/Organization.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"entities/Role.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["names",{"_index":248,"title":{},"body":{"modules/ClientsModule.html":{},"index.html":{}}}],["names.map((name",{"_index":256,"title":{},"body":{"modules/ClientsModule.html":{}}}],["needed",{"_index":1384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nestclientsmodule",{"_index":252,"title":{},"body":{"modules/ClientsModule.html":{}}}],["nestclientsmodule.register(clients",{"_index":257,"title":{},"body":{"modules/ClientsModule.html":{}}}],["nestfactory",{"_index":218,"title":{},"body":{"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{}}}],["nestfactory.create(module",{"_index":229,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["nestfactory.createapplicationcontext",{"_index":293,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["nestjs/apollo",{"_index":554,"title":{},"body":{"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":11,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"modules/DatabaseModule.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"injectables/PropertyService.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":10,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"classes/ConfigHelper.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":219,"title":{},"body":{"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{},"dependencies.html":{}}}],["nestjs/graphql",{"_index":111,"title":{},"body":{"classes/AuthResolver.html":{},"entities/BaseEntity.html":{},"classes/EscrowResolver.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"entities/Role.html":{},"entities/User.html":{},"classes/User-1.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":956,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":439,"title":{},"body":{"modules/DatabaseModule.html":{},"injectables/OrganizationService.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/typeorm/dist/interfaces/entity",{"_index":440,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["network",{"_index":1242,"title":{},"body":{"index.html":{}}}],["new",{"_index":222,"title":{},"body":{"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/GraphQLGatewayModule.html":{},"coverage.html":{}}}],["node",{"_index":1391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["node:process",{"_index":401,"title":{},"body":{"classes/DataSource.html":{}}}],["node_env",{"_index":29,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["node_modules/typeorm/cli.js",{"_index":1395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nodejs",{"_index":1020,"title":{},"body":{"index.html":{}}}],["notification",{"_index":613,"title":{},"body":{"injectables/NotificationService.html":{},"index.html":{}}}],["notification.controller",{"_index":605,"title":{},"body":{"modules/NotificationModule.html":{}}}],["notification.service",{"_index":596,"title":{},"body":{"controllers/NotificationController.html":{},"modules/NotificationModule.html":{}}}],["notification_client",{"_index":986,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["notification_host",{"_index":536,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["notification_port",{"_index":1406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notificationcommand",{"_index":597,"title":{},"body":{"controllers/NotificationController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["notificationcommand.ping_notification",{"_index":598,"title":{},"body":{"controllers/NotificationController.html":{}}}],["notificationcontroller",{"_index":592,"title":{"controllers/NotificationController.html":{}},"body":{"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"coverage.html":{}}}],["notificationmodule",{"_index":600,"title":{"modules/NotificationModule.html":{}},"body":{"modules/NotificationModule.html":{},"modules.html":{},"overview.html":{}}}],["notificationresolver",{"_index":606,"title":{"classes/NotificationResolver.html":{}},"body":{"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"coverage.html":{}}}],["notifications",{"_index":1068,"title":{},"body":{"index.html":{}}}],["notificationservice",{"_index":595,"title":{"injectables/NotificationService.html":{}},"body":{"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"coverage.html":{},"overview.html":{}}}],["notifying",{"_index":1229,"title":{},"body":{"index.html":{}}}],["now",{"_index":340,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DatabaseUtil.html":{}}}],["now.tostring(16).padstart(12",{"_index":456,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["npm",{"_index":1029,"title":{},"body":{"index.html":{}}}],["null",{"_index":192,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/UserResolver-1.html":{}}}],["nullable",{"_index":132,"title":{},"body":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"entities/Role.html":{},"entities/User.html":{},"classes/User-1.html":{},"classes/UserResolver-1.html":{}}}],["number",{"_index":238,"title":{},"body":{"classes/Bootstrapper.html":{},"entities/OrganizationMetadata.html":{},"miscellaneous/functions.html":{}}}],["numbers",{"_index":1134,"title":{},"body":{"index.html":{}}}],["numeric(5",{"_index":352,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["oauth",{"_index":1102,"title":{},"body":{"index.html":{}}}],["object",{"_index":1400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.values(roles",{"_index":795,"title":{},"body":{"injectables/SeederService.html":{}}}],["objecttype",{"_index":150,"title":{},"body":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"entities/OrganizationMetadata.html":{},"entities/Role.html":{},"entities/User.html":{},"classes/User-1.html":{}}}],["official",{"_index":1034,"title":{},"body":{"index.html":{}}}],["ondelete",{"_index":673,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["onetoone",{"_index":631,"title":{},"body":{"entities/Organization.html":{},"entities/OrganizationMetadata.html":{}}}],["onetoone(undefined",{"_index":671,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["onupdate",{"_index":674,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["opt",{"_index":1285,"title":{},"body":{"index.html":{}}}],["optimization",{"_index":1301,"title":{},"body":{"index.html":{}}}],["optimizing",{"_index":1304,"title":{},"body":{"index.html":{}}}],["option('args",{"_index":1378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["option('command",{"_index":1374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["option('microservice",{"_index":1369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["option('title",{"_index":1381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optional",{"_index":54,"title":{},"body":{"injectables/AppConfigService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"modules/GraphQLGatewayModule.html":{},"entities/Organization.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["options",{"_index":232,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/DatabaseModule.html":{}}}],["options/findoptionswhere",{"_index":717,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["order",{"_index":181,"title":{},"body":{"entities/BaseEntity.html":{}}}],["order.decorator.ts",{"_index":940,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["order_key",{"_index":941,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["orderxcolumn",{"_index":204,"title":{},"body":{"entities/BaseEntity.html":{}}}],["orderycolumn",{"_index":206,"title":{},"body":{"entities/BaseEntity.html":{}}}],["org",{"_index":845,"title":{},"body":{"classes/User-1.html":{}}}],["organization",{"_index":614,"title":{"entities/Organization.html":{},"classes/Organization-1.html":{}},"body":{"entities/Organization.html":{},"classes/Organization-1.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"entities/User.html":{},"classes/User-1.html":{},"classes/UserResolver-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["organization\".\"organizations",{"_index":330,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["organization\".\"organizations_metadata",{"_index":347,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["organization(@parent",{"_index":884,"title":{},"body":{"classes/UserResolver-1.html":{}}}],["organization(user",{"_index":878,"title":{},"body":{"classes/UserResolver-1.html":{}}}],["organization.controller",{"_index":690,"title":{},"body":{"modules/OrganizationModule.html":{}}}],["organization.entity",{"_index":682,"title":{},"body":{"entities/OrganizationMetadata.html":{},"classes/User-1.html":{}}}],["organization.meta",{"_index":672,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["organization.service",{"_index":650,"title":{},"body":{"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"classes/UserResolver-1.html":{}}}],["organization_client",{"_index":987,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["organization_host",{"_index":537,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["organization_id",{"_index":359,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{},"entities/OrganizationMetadata.html":{},"entities/User.html":{}}}],["organization_port",{"_index":1407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organizationclient",{"_index":891,"title":{},"body":{"injectables/UserService.html":{}}}],["organizationcommand",{"_index":651,"title":{},"body":{"controllers/OrganizationController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["organizationcommand.find_organization_by_id",{"_index":655,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["organizationcommand.ping_organization",{"_index":653,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["organizationcontroller",{"_index":643,"title":{"controllers/OrganizationController.html":{}},"body":{"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"coverage.html":{}}}],["organizationid",{"_index":819,"title":{},"body":{"entities/User.html":{},"classes/User-1.html":{}}}],["organizationmetadata",{"_index":619,"title":{"entities/OrganizationMetadata.html":{}},"body":{"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"coverage.html":{}}}],["organizationmodule",{"_index":685,"title":{"modules/OrganizationModule.html":{}},"body":{"modules/OrganizationModule.html":{},"modules.html":{},"overview.html":{}}}],["organizationresolver",{"_index":691,"title":{"classes/OrganizationResolver.html":{}},"body":{"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"coverage.html":{}}}],["organizations",{"_index":633,"title":{},"body":{"entities/Organization.html":{},"classes/OrganizationResolver.html":{}}}],["organizations_metadata",{"_index":683,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["organizationservice",{"_index":649,"title":{"injectables/OrganizationService.html":{}},"body":{"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"classes/UserResolver-1.html":{},"coverage.html":{},"overview.html":{}}}],["orgid",{"_index":843,"title":{},"body":{"classes/User-1.html":{}}}],["out",{"_index":97,"title":{},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/SeederModule.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":1346,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":993,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["package",{"_index":947,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameters",{"_index":51,"title":{},"body":{"injectables/AppConfigService.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"modules/GraphQLGatewayModule.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":881,"title":{},"body":{"classes/UserResolver-1.html":{}}}],["party",{"_index":1336,"title":{},"body":{"index.html":{}}}],["passing",{"_index":1321,"title":{},"body":{"index.html":{}}}],["password",{"_index":304,"title":{},"body":{"classes/ConfigHelper.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"entities/User.html":{},"index.html":{}}}],["path",{"_index":1055,"title":{},"body":{"index.html":{}}}],["path.join",{"_index":1387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paths/register",{"_index":1394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pay",{"_index":1219,"title":{},"body":{"index.html":{}}}],["payment",{"_index":743,"title":{},"body":{"injectables/PaymentService.html":{},"index.html":{}}}],["payment.controller",{"_index":735,"title":{},"body":{"modules/PaymentModule.html":{}}}],["payment.service",{"_index":726,"title":{},"body":{"controllers/PaymentController.html":{},"modules/PaymentModule.html":{}}}],["payment_client",{"_index":988,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["payment_host",{"_index":538,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["payment_port",{"_index":1408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paymentcommand",{"_index":727,"title":{},"body":{"controllers/PaymentController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["paymentcommand.ping_payment",{"_index":728,"title":{},"body":{"controllers/PaymentController.html":{}}}],["paymentcontroller",{"_index":722,"title":{"controllers/PaymentController.html":{}},"body":{"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"coverage.html":{}}}],["paymentmodule",{"_index":730,"title":{"modules/PaymentModule.html":{}},"body":{"modules/PaymentModule.html":{},"modules.html":{},"overview.html":{}}}],["paymentresolver",{"_index":736,"title":{"classes/PaymentResolver.html":{}},"body":{"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"coverage.html":{}}}],["payments",{"_index":1065,"title":{},"body":{"index.html":{}}}],["paymentservice",{"_index":725,"title":{"injectables/PaymentService.html":{}},"body":{"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"coverage.html":{},"overview.html":{}}}],["paytm",{"_index":1234,"title":{},"body":{"index.html":{}}}],["performance",{"_index":1294,"title":{},"body":{"index.html":{}}}],["permissions",{"_index":1125,"title":{},"body":{"index.html":{}}}],["personal",{"_index":1129,"title":{},"body":{"index.html":{}}}],["personalization",{"_index":1281,"title":{},"body":{"index.html":{}}}],["personalized",{"_index":1282,"title":{},"body":{"index.html":{}}}],["pg",{"_index":967,"title":{},"body":{"dependencies.html":{}}}],["phone",{"_index":338,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{},"entities/Organization.html":{},"entities/User.html":{},"index.html":{}}}],["pictures",{"_index":1315,"title":{},"body":{"index.html":{}}}],["ping",{"_index":105,"title":{},"body":{"classes/AuthResolver.html":{},"classes/EscrowResolver.html":{},"injectables/GatewayService.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"classes/UserResolver.html":{}}}],["ping_auth",{"_index":1401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ping_escrow",{"_index":1412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ping_media",{"_index":1413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ping_notification",{"_index":1414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ping_organization",{"_index":1416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ping_payment",{"_index":1418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ping_property",{"_index":1419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ping_user",{"_index":1427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pingauth",{"_index":107,"title":{},"body":{"classes/AuthResolver.html":{}}}],["pingescrow",{"_index":520,"title":{},"body":{"classes/EscrowResolver.html":{}}}],["pingmedia",{"_index":587,"title":{},"body":{"classes/MediaResolver.html":{}}}],["pingnotification",{"_index":609,"title":{},"body":{"classes/NotificationResolver.html":{}}}],["pingorganization",{"_index":701,"title":{},"body":{"classes/OrganizationResolver.html":{}}}],["pingpayment",{"_index":739,"title":{},"body":{"classes/PaymentResolver.html":{}}}],["pingproperty",{"_index":761,"title":{},"body":{"classes/PropertyResolver.html":{}}}],["pinguser",{"_index":871,"title":{},"body":{"classes/UserResolver.html":{}}}],["pk_63bbcee313cee9e95bfba3c7d2b",{"_index":361,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["pk_648e3f5447f725579d7d4ffdfb7",{"_index":381,"title":{},"body":{"classes/CreateRoleTable1741519642145.html":{}}}],["pk_6b031fcd0863e3f6b44230163f9",{"_index":345,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["pk_a3ffb1c0c8416b9fc6f907b7433",{"_index":392,"title":{},"body":{"classes/CreateUserTable1741519705062.html":{}}}],["pnpm",{"_index":1023,"title":{},"body":{"index.html":{}}}],["pnpminstall",{"_index":1031,"title":{},"body":{"index.html":{}}}],["policies",{"_index":1098,"title":{},"body":{"index.html":{}}}],["pong",{"_index":112,"title":{},"body":{"classes/AuthResolver.html":{},"classes/EscrowResolver.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"classes/UserResolver.html":{}}}],["port",{"_index":235,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/SubgraphsBuilder.html":{}}}],["possibly",{"_index":1259,"title":{},"body":{"index.html":{}}}],["postgres",{"_index":411,"title":{},"body":{"classes/DataSource.html":{}}}],["precision",{"_index":664,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["preferences",{"_index":1283,"title":{},"body":{"index.html":{}}}],["prerequisites",{"_index":1014,"title":{},"body":{"index.html":{}}}],["preventing",{"_index":1182,"title":{},"body":{"index.html":{}}}],["price",{"_index":1179,"title":{},"body":{"index.html":{}}}],["primary",{"_index":346,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["primary_color",{"_index":348,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"entities/OrganizationMetadata.html":{}}}],["primary_contact_name",{"_index":336,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"entities/Organization.html":{}}}],["primarycolor",{"_index":661,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["primarycolumn",{"_index":771,"title":{},"body":{"entities/Role.html":{}}}],["primarycontactname",{"_index":616,"title":{},"body":{"entities/Organization.html":{}}}],["primarygeneratedcolumn",{"_index":146,"title":{},"body":{"entities/BaseEntity.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":161,"title":{},"body":{"entities/BaseEntity.html":{}}}],["privacy",{"_index":1135,"title":{},"body":{"index.html":{}}}],["private",{"_index":268,"title":{},"body":{"classes/ConfigHelper.html":{},"injectables/OrganizationService.html":{},"injectables/SeederService.html":{},"injectables/UserService.html":{}}}],["process",{"_index":400,"title":{},"body":{"classes/DataSource.html":{}}}],["process.env.database_host",{"_index":412,"title":{},"body":{"classes/DataSource.html":{}}}],["process.env.database_name",{"_index":418,"title":{},"body":{"classes/DataSource.html":{}}}],["process.env.database_password",{"_index":417,"title":{},"body":{"classes/DataSource.html":{}}}],["process.env.database_port",{"_index":414,"title":{},"body":{"classes/DataSource.html":{}}}],["process.env.database_type",{"_index":410,"title":{},"body":{"classes/DataSource.html":{}}}],["process.env.database_username",{"_index":416,"title":{},"body":{"classes/DataSource.html":{}}}],["processed",{"_index":1251,"title":{},"body":{"index.html":{}}}],["processing",{"_index":1236,"title":{},"body":{"index.html":{}}}],["production",{"_index":32,"title":{},"body":{"modules/AppConfigModule.html":{},"index.html":{}}}],["profile",{"_index":1143,"title":{},"body":{"index.html":{}}}],["profiles",{"_index":1146,"title":{},"body":{"index.html":{}}}],["project",{"_index":1016,"title":{},"body":{"index.html":{}}}],["promise",{"_index":249,"title":{},"body":{"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"modules/GraphQLGatewayModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"classes/SubgraphsBuilder.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{}}}],["properly",{"_index":1169,"title":{},"body":{"index.html":{}}}],["properties",{"_index":122,"title":{"properties.html":{}},"body":{"entities/BaseEntity.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"entities/OrganizationMetadata.html":{},"entities/Role.html":{},"entities/User.html":{},"classes/User-1.html":{},"index.html":{},"properties.html":{}}}],["property",{"_index":765,"title":{},"body":{"injectables/PropertyService.html":{},"index.html":{}}}],["property.controller",{"_index":757,"title":{},"body":{"modules/PropertyModule.html":{}}}],["property.service",{"_index":748,"title":{},"body":{"controllers/PropertyController.html":{},"modules/PropertyModule.html":{}}}],["property_client",{"_index":989,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["property_host",{"_index":539,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["property_port",{"_index":1409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["propertycommand",{"_index":749,"title":{},"body":{"controllers/PropertyController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["propertycommand.ping_property",{"_index":750,"title":{},"body":{"controllers/PropertyController.html":{}}}],["propertycontroller",{"_index":744,"title":{"controllers/PropertyController.html":{}},"body":{"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"coverage.html":{}}}],["propertydecorator",{"_index":1001,"title":{},"body":{"miscellaneous/functions.html":{}}}],["propertykey",{"_index":1003,"title":{},"body":{"miscellaneous/functions.html":{}}}],["propertymodule",{"_index":752,"title":{"modules/PropertyModule.html":{}},"body":{"modules/PropertyModule.html":{},"modules.html":{},"overview.html":{}}}],["propertyresolver",{"_index":758,"title":{"classes/PropertyResolver.html":{}},"body":{"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"coverage.html":{}}}],["propertyservice",{"_index":747,"title":{"injectables/PropertyService.html":{}},"body":{"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"injectables/PropertyService.html":{},"coverage.html":{},"overview.html":{}}}],["protecting",{"_index":1113,"title":{},"body":{"index.html":{}}}],["protocols",{"_index":1238,"title":{},"body":{"index.html":{}}}],["prototype",{"_index":177,"title":{},"body":{"entities/BaseEntity.html":{}}}],["providers",{"_index":88,"title":{},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/SeederModule.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["providing",{"_index":1158,"title":{},"body":{"index.html":{}}}],["public",{"_index":319,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["push",{"_index":1270,"title":{},"body":{"index.html":{}}}],["query",{"_index":109,"title":{},"body":{"classes/AuthResolver.html":{},"classes/EscrowResolver.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"classes/UserResolver.html":{}}}],["query(undefined",{"_index":106,"title":{},"body":{"classes/AuthResolver.html":{},"classes/EscrowResolver.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"classes/UserResolver.html":{}}}],["queryrunner",{"_index":324,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["queryrunner.query",{"_index":371,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["queryrunner.query(`alter",{"_index":362,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["queryrunner.query(`create",{"_index":328,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["queryrunner.query(`drop",{"_index":372,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["qushah",{"_index":1007,"title":{},"body":{"index.html":{}}}],["qushah/common",{"_index":100,"title":{},"body":{"modules/AuthModule.html":{},"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{},"modules/DatabaseModule.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/GraphQLGatewayModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["qushah/common/config",{"_index":265,"title":{},"body":{"modules/CommonModule.html":{}}}],["qushah/common/config/config.helper",{"_index":254,"title":{},"body":{"modules/ClientsModule.html":{}}}],["qushah/common/constants/commands",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{}}}],["qushah/common/constants/commands/organization.command",{"_index":652,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["qushah/common/decorators",{"_index":153,"title":{},"body":{"entities/BaseEntity.html":{}}}],["qushah/common/utils",{"_index":157,"title":{},"body":{"entities/BaseEntity.html":{}}}],["r",{"_index":1392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["random",{"_index":462,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["randombytes",{"_index":464,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["randombytes.substring(3",{"_index":485,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["randombytes.substring(7",{"_index":487,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["rate",{"_index":1111,"title":{},"body":{"index.html":{}}}],["razorpay",{"_index":1235,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":62,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"controllers/DocumentationController.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{}}}],["receipts",{"_index":1247,"title":{},"body":{"index.html":{}}}],["recurring",{"_index":1248,"title":{},"body":{"index.html":{}}}],["redis",{"_index":1024,"title":{},"body":{"index.html":{}}}],["redis_host",{"_index":19,"title":{},"body":{"modules/AppConfigModule.html":{},"miscellaneous/variables.html":{}}}],["redis_port",{"_index":21,"title":{},"body":{"modules/AppConfigModule.html":{},"miscellaneous/variables.html":{}}}],["redisconfig",{"_index":226,"title":{},"body":{"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{}}}],["redisconfig.host",{"_index":234,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["redisconfig.port",{"_index":236,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["reduced",{"_index":1308,"title":{},"body":{"index.html":{}}}],["references",{"_index":366,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["reflect",{"_index":969,"title":{},"body":{"dependencies.html":{}}}],["reflected",{"_index":1201,"title":{},"body":{"index.html":{}}}],["refresh",{"_index":1105,"title":{},"body":{"index.html":{}}}],["regarding",{"_index":1140,"title":{},"body":{"index.html":{}}}],["register",{"_index":245,"title":{},"body":{"modules/ClientsModule.html":{},"modules/GraphQLGatewayModule.html":{}}}],["register(...names",{"_index":246,"title":{},"body":{"modules/ClientsModule.html":{}}}],["register(...subgraphnames",{"_index":548,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["regulations",{"_index":1137,"title":{},"body":{"index.html":{}}}],["regulatory",{"_index":1225,"title":{},"body":{"index.html":{}}}],["rejectunauthorized",{"_index":421,"title":{},"body":{"classes/DataSource.html":{},"modules/DatabaseModule.html":{}}}],["rel_ad9c5b4a8fb0a54d63b8471019",{"_index":360,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["relations",{"_index":720,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["release",{"_index":1211,"title":{},"body":{"index.html":{}}}],["released",{"_index":1215,"title":{},"body":{"index.html":{}}}],["releases",{"_index":1230,"title":{},"body":{"index.html":{}}}],["reminders",{"_index":1274,"title":{},"body":{"index.html":{}}}],["rent",{"_index":1220,"title":{},"body":{"index.html":{}}}],["rent_fee_percentage",{"_index":351,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"entities/OrganizationMetadata.html":{}}}],["rented",{"_index":1187,"title":{},"body":{"index.html":{}}}],["rentfeepercentage",{"_index":662,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["reorder",{"_index":193,"title":{},"body":{"entities/BaseEntity.html":{}}}],["repo",{"_index":1072,"title":{},"body":{"index.html":{}}}],["repository",{"_index":708,"title":{},"body":{"injectables/OrganizationService.html":{},"injectables/SeederService.html":{},"injectables/UserService.html":{}}}],["request",{"_index":1316,"title":{},"body":{"index.html":{}}}],["requests",{"_index":1318,"title":{},"body":{"index.html":{}}}],["required",{"_index":1103,"title":{},"body":{"index.html":{}}}],["requires",{"_index":842,"title":{},"body":{"classes/User-1.html":{}}}],["reset",{"_index":96,"title":{},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/SeederModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resolutions",{"_index":1056,"title":{},"body":{"index.html":{}}}],["resolvefield",{"_index":882,"title":{},"body":{"classes/UserResolver-1.html":{}}}],["resolvefield(undefined",{"_index":879,"title":{},"body":{"classes/UserResolver-1.html":{}}}],["resolver",{"_index":110,"title":{},"body":{"classes/AuthResolver.html":{},"classes/EscrowResolver.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{}}}],["resolver(user",{"_index":874,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolvers",{"_index":1082,"title":{},"body":{"index.html":{}}}],["resolvers/auth.resolver",{"_index":102,"title":{},"body":{"modules/AuthModule.html":{}}}],["resolvers/escrow.resolver",{"_index":518,"title":{},"body":{"modules/EscrowModule.html":{}}}],["resolvers/media.resolver",{"_index":585,"title":{},"body":{"modules/MediaModule.html":{}}}],["resolvers/notification.resolver",{"_index":607,"title":{},"body":{"modules/NotificationModule.html":{}}}],["resolvers/organization.resolver",{"_index":692,"title":{},"body":{"modules/OrganizationModule.html":{}}}],["resolvers/payment.resolver",{"_index":737,"title":{},"body":{"modules/PaymentModule.html":{}}}],["resolvers/property.resolver",{"_index":759,"title":{},"body":{"modules/PropertyModule.html":{}}}],["resolvers/user.resolver",{"_index":862,"title":{},"body":{"modules/UserModule.html":{}}}],["results",{"_index":37,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"entities/Role.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retries",{"_index":1240,"title":{},"body":{"index.html":{}}}],["retrieve",{"_index":180,"title":{},"body":{"entities/BaseEntity.html":{}}}],["return",{"_index":63,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"controllers/MediaController.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"classes/SubgraphsBuilder.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":60,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"controllers/MediaController.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["revert",{"_index":1377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["role",{"_index":766,"title":{"entities/Role.html":{}},"body":{"entities/Role.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"entities/User.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["role.entity",{"_index":830,"title":{},"body":{"entities/User.html":{}}}],["role_id",{"_index":391,"title":{},"body":{"classes/CreateUserTable1741519705062.html":{},"entities/User.html":{}}}],["roleexists",{"_index":797,"title":{},"body":{"injectables/SeederService.html":{}}}],["rolename",{"_index":796,"title":{},"body":{"injectables/SeederService.html":{}}}],["rolerepository",{"_index":787,"title":{},"body":{"injectables/SeederService.html":{}}}],["roles",{"_index":772,"title":{},"body":{"entities/Role.html":{},"injectables/SeederService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["routing",{"_index":1317,"title":{},"body":{"index.html":{}}}],["rules",{"_index":1214,"title":{},"body":{"index.html":{}}}],["run",{"_index":1015,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["running",{"_index":1385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rxjs",{"_index":972,"title":{},"body":{"dependencies.html":{}}}],["scalability",{"_index":1161,"title":{},"body":{"index.html":{}}}],["scale",{"_index":665,"title":{},"body":{"entities/OrganizationMetadata.html":{},"index.html":{}}}],["scans",{"_index":1193,"title":{},"body":{"index.html":{}}}],["schema",{"_index":399,"title":{},"body":{"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"modules/OrganizationModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["schema.type",{"_index":441,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["schemas",{"_index":1081,"title":{},"body":{"index.html":{}}}],["search",{"_index":1173,"title":{},"body":{"index.html":{}}}],["secure",{"_index":1093,"title":{},"body":{"index.html":{}}}],["securely",{"_index":1194,"title":{},"body":{"index.html":{}}}],["security",{"_index":1092,"title":{},"body":{"index.html":{}}}],["seed",{"_index":783,"title":{},"body":{"injectables/SeederService.html":{}}}],["seeder.service",{"_index":779,"title":{},"body":{"modules/SeederModule.html":{}}}],["seeder/seeder.module",{"_index":864,"title":{},"body":{"modules/UserModule.html":{}}}],["seedermodule",{"_index":773,"title":{"modules/SeederModule.html":{}},"body":{"modules/SeederModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["seederservice",{"_index":777,"title":{"injectables/SeederService.html":{}},"body":{"modules/SeederModule.html":{},"injectables/SeederService.html":{},"coverage.html":{},"overview.html":{}}}],["seeding",{"_index":793,"title":{},"body":{"injectables/SeederService.html":{}}}],["seedroles",{"_index":784,"title":{},"body":{"injectables/SeederService.html":{}}}],["sending",{"_index":1244,"title":{},"body":{"index.html":{}}}],["sensitive",{"_index":1130,"title":{},"body":{"index.html":{}}}],["separate",{"_index":1070,"title":{},"body":{"index.html":{}}}],["service",{"_index":117,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"injectables/MediaService.html":{},"injectables/NotificationService.html":{},"injectables/OrganizationService.html":{},"injectables/PaymentService.html":{},"injectables/PropertyService.html":{},"classes/User-1.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["serviceendpointdefinition",{"_index":808,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["services",{"_index":1202,"title":{},"body":{"index.html":{}}}],["set",{"_index":445,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["setup",{"_index":1025,"title":{},"body":{"index.html":{}}}],["shared",{"_index":1073,"title":{},"body":{"index.html":{}}}],["significant",{"_index":1298,"title":{},"body":{"index.html":{}}}],["slug",{"_index":335,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"entities/Organization.html":{}}}],["sms",{"_index":1269,"title":{},"body":{"index.html":{}}}],["sort",{"_index":208,"title":{},"body":{"entities/BaseEntity.html":{}}}],["sortschema",{"_index":569,"title":{},"body":{"modules/GraphQLMicroserviceModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"entities/Role.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{}}}],["source.ts",{"_index":907,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["source.util.ts",{"_index":396,"title":{},"body":{"classes/DataSource.html":{},"coverage.html":{}}}],["source.util.ts:9",{"_index":398,"title":{},"body":{"classes/DataSource.html":{}}}],["space",{"_index":1299,"title":{},"body":{"index.html":{}}}],["specific",{"_index":1289,"title":{},"body":{"index.html":{}}}],["src/migrations",{"_index":1397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ssl",{"_index":420,"title":{},"body":{"classes/DataSource.html":{},"modules/DatabaseModule.html":{}}}],["standards",{"_index":1226,"title":{},"body":{"index.html":{}}}],["start",{"_index":1037,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1040,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":1041,"title":{},"body":{"index.html":{}}}],["started",{"_index":1006,"title":{"index.html":{}},"body":{}}],["statements",{"_index":900,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":166,"title":{},"body":{"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"modules/GraphQLGatewayModule.html":{},"classes/SubgraphsBuilder.html":{}}}],["status",{"_index":1198,"title":{},"body":{"index.html":{}}}],["storage",{"_index":1142,"title":{},"body":{"index.html":{}}}],["stored",{"_index":840,"title":{},"body":{"classes/User-1.html":{}}}],["storing",{"_index":1189,"title":{},"body":{"index.html":{}}}],["string",{"_index":56,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"controllers/MediaController.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"entities/Role.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["strong",{"_index":1097,"title":{},"body":{"index.html":{}}}],["structure",{"_index":1060,"title":{},"body":{"index.html":{}}}],["subgraphnames",{"_index":550,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["subgraphs",{"_index":561,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["subgraphsbuilder",{"_index":557,"title":{"classes/SubgraphsBuilder.html":{}},"body":{"modules/GraphQLGatewayModule.html":{},"classes/SubgraphsBuilder.html":{},"coverage.html":{}}}],["subgraphsbuilder.build(...subgraphnames",{"_index":562,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["subscribers",{"_index":425,"title":{},"body":{"classes/DataSource.html":{}}}],["successful",{"_index":1245,"title":{},"body":{"index.html":{}}}],["such",{"_index":1156,"title":{},"body":{"index.html":{}}}],["super_admin",{"_index":992,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["supergraphsdl",{"_index":560,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["support",{"_index":1255,"title":{},"body":{"index.html":{},"modules.html":{}}}],["supporting",{"_index":1249,"title":{},"body":{"index.html":{}}}],["sure",{"_index":1027,"title":{},"body":{"index.html":{}}}],["svg",{"_index":1345,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1333,"title":{},"body":{"index.html":{}}}],["symbol.for('order_key",{"_index":1415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["synchronize",{"_index":448,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["system",{"_index":1009,"title":{},"body":{"index.html":{}}}],["t",{"_index":58,"title":{},"body":{"injectables/AppConfigService.html":{},"classes/ConfigHelper.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":329,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":946,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":174,"title":{},"body":{"entities/BaseEntity.html":{},"miscellaneous/functions.html":{}}}],["target.prototype",{"_index":179,"title":{},"body":{"entities/BaseEntity.html":{}}}],["templates",{"_index":1272,"title":{},"body":{"index.html":{}}}],["tenant",{"_index":1126,"title":{},"body":{"index.html":{}}}],["tenants",{"_index":1164,"title":{},"body":{"index.html":{}}}],["test",{"_index":33,"title":{},"body":{"modules/AppConfigModule.html":{},"index.html":{}}}],["test:covtypeorm",{"_index":1046,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1045,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1042,"title":{},"body":{"index.html":{}}}],["third",{"_index":1335,"title":{},"body":{"index.html":{}}}],["this.appconfigservice.getconfig(key",{"_index":313,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.authservice.gethello",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.configservice.get(key",{"_index":64,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.documentationservice.gethello",{"_index":494,"title":{},"body":{"controllers/DocumentationController.html":{}}}],["this.escrowservice.gethello",{"_index":510,"title":{},"body":{"controllers/EscrowController.html":{}}}],["this.getconfig",{"_index":310,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environment.database_host",{"_index":300,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environment.database_name",{"_index":307,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environment.database_password",{"_index":305,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environment.database_port",{"_index":301,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environment.database_type",{"_index":299,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environment.database_username",{"_index":303,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environment.redis_host",{"_index":297,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environment.redis_port",{"_index":298,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environment[`${key}_port",{"_index":309,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.id",{"_index":164,"title":{},"body":{"entities/BaseEntity.html":{}}}],["this.mediaservice.gethello",{"_index":577,"title":{},"body":{"controllers/MediaController.html":{}}}],["this.notificationservice.gethello",{"_index":599,"title":{},"body":{"controllers/NotificationController.html":{}}}],["this.organizationservice.findall",{"_index":703,"title":{},"body":{"classes/OrganizationResolver.html":{}}}],["this.organizationservice.findone",{"_index":656,"title":{},"body":{"controllers/OrganizationController.html":{},"classes/UserResolver-1.html":{}}}],["this.organizationservice.gethello",{"_index":654,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["this.paymentservice.gethello",{"_index":729,"title":{},"body":{"controllers/PaymentController.html":{}}}],["this.propertyservice.gethello",{"_index":751,"title":{},"body":{"controllers/PropertyController.html":{}}}],["this.repository.find",{"_index":719,"title":{},"body":{"injectables/OrganizationService.html":{},"injectables/UserService.html":{}}}],["this.repository.findone",{"_index":721,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["this.rolerepository.create",{"_index":800,"title":{},"body":{"injectables/SeederService.html":{}}}],["this.rolerepository.findone",{"_index":798,"title":{},"body":{"injectables/SeederService.html":{}}}],["this.rolerepository.save",{"_index":799,"title":{},"body":{"injectables/SeederService.html":{}}}],["this.seedroles",{"_index":791,"title":{},"body":{"injectables/SeederService.html":{}}}],["this.userservice.find",{"_index":875,"title":{},"body":{"classes/UserResolver.html":{}}}],["this.userservice.gethello",{"_index":853,"title":{},"body":{"controllers/UserController.html":{}}}],["through",{"_index":1322,"title":{},"body":{"index.html":{}}}],["time",{"_index":1252,"title":{},"body":{"index.html":{}}}],["timely",{"_index":1268,"title":{},"body":{"index.html":{}}}],["times",{"_index":1307,"title":{},"body":{"index.html":{}}}],["timestamp",{"_index":339,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DatabaseUtil.html":{}}}],["timestamp.substring(0",{"_index":479,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["timestamp.substring(8",{"_index":481,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["title",{"_index":1382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["token",{"_index":1099,"title":{},"body":{"index.html":{}}}],["tool",{"_index":1049,"title":{},"body":{"index.html":{}}}],["traffic",{"_index":1339,"title":{},"body":{"index.html":{}}}],["trail",{"_index":1210,"title":{},"body":{"index.html":{}}}],["transaction",{"_index":1207,"title":{},"body":{"index.html":{}}}],["transactions",{"_index":1066,"title":{},"body":{"index.html":{}}}],["transparency",{"_index":1212,"title":{},"body":{"index.html":{}}}],["transport",{"_index":221,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{}}}],["transport.redis",{"_index":231,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{}}}],["true",{"_index":16,"title":{},"body":{"modules/AppConfigModule.html":{},"entities/BaseEntity.html":{},"classes/ConfigHelper.html":{},"modules/DatabaseModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"entities/Role.html":{},"entities/User.html":{},"classes/User-1.html":{},"classes/UserResolver-1.html":{},"miscellaneous/variables.html":{}}}],["true})@column({name",{"_index":677,"title":{},"body":{"entities/OrganizationMetadata.html":{},"entities/User.html":{}}}],["true})@column({nullable",{"_index":668,"title":{},"body":{"entities/OrganizationMetadata.html":{},"entities/Role.html":{}}}],["true})@deletedatecolumn({name",{"_index":133,"title":{},"body":{"entities/BaseEntity.html":{}}}],["true})@directive('@external",{"_index":837,"title":{},"body":{"classes/User-1.html":{}}}],["true})@directive('@requires(fields",{"_index":835,"title":{},"body":{"classes/User-1.html":{}}}],["true})@onetoone(undefined",{"_index":621,"title":{},"body":{"entities/Organization.html":{}}}],["true})@updatedatecolumn({name",{"_index":138,"title":{},"body":{"entities/BaseEntity.html":{}}}],["ts",{"_index":1390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tsconfig",{"_index":1393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["type",{"_index":53,"title":{},"body":{"injectables/AppConfigService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"modules/GraphQLGatewayModule.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"entities/Role.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":148,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"injectables/OrganizationService.html":{},"entities/Role.html":{},"injectables/SeederService.html":{},"entities/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["typeorm/find",{"_index":716,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["typeorm/metadata/columnmetadata",{"_index":155,"title":{},"body":{"entities/BaseEntity.html":{}}}],["typeorm_migrations",{"_index":409,"title":{},"body":{"classes/DataSource.html":{}}}],["typeormcommand",{"_index":945,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeormdatasource",{"_index":403,"title":{},"body":{"classes/DataSource.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeormmodule",{"_index":437,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/SeederModule.html":{}}}],["typeormmodule.forfeature([role",{"_index":781,"title":{},"body":{"modules/SeederModule.html":{}}}],["typeormmodule.forfeature(entities",{"_index":451,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["typeormmodule.forrootasync",{"_index":442,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["typeormmoduleoptions",{"_index":438,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["types",{"_index":1290,"title":{},"body":{"index.html":{}}}],["types/yargs",{"_index":959,"title":{},"body":{"dependencies.html":{}}}],["uint8array(10",{"_index":466,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["unauthorized",{"_index":1094,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":72,"title":{},"body":{"controllers/AuthController.html":{},"entities/BaseEntity.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{}}}],["unique",{"_index":343,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"entities/Organization.html":{}}}],["unit",{"_index":1043,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":1354,"title":{},"body":{"properties.html":{}}}],["unsubscribing",{"_index":1288,"title":{},"body":{"index.html":{}}}],["up",{"_index":321,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["up(queryrunner",{"_index":326,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["update",{"_index":369,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{},"index.html":{}}}],["updated_at",{"_index":139,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["updatedat",{"_index":126,"title":{},"body":{"entities/BaseEntity.html":{}}}],["updatedatecolumn",{"_index":147,"title":{},"body":{"entities/BaseEntity.html":{}}}],["updates",{"_index":1144,"title":{},"body":{"index.html":{}}}],["upi",{"_index":1233,"title":{},"body":{"index.html":{}}}],["uploaded",{"_index":1310,"title":{},"body":{"index.html":{}}}],["uploading",{"_index":1314,"title":{},"body":{"index.html":{}}}],["uploads",{"_index":1295,"title":{},"body":{"index.html":{}}}],["uq_963693341bd612aa01ddf3a4b68",{"_index":344,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["uq_9b7ca6d30b94fef571cff876884",{"_index":342,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["url",{"_index":815,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["usage",{"_index":1309,"title":{},"body":{"index.html":{}}}],["use",{"_index":1058,"title":{},"body":{"index.html":{}}}],["usedatasource(datasource",{"_index":167,"title":{},"body":{"entities/BaseEntity.html":{}}}],["usefactory",{"_index":443,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/GraphQLGatewayModule.html":{}}}],["user",{"_index":817,"title":{"entities/User.html":{},"classes/User-1.html":{}},"body":{"entities/User.html":{},"classes/User-1.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["user\".\"roles",{"_index":379,"title":{},"body":{"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["user\".\"users",{"_index":388,"title":{},"body":{"classes/CreateUserTable1741519705062.html":{}}}],["user.controller",{"_index":859,"title":{},"body":{"modules/UserModule.html":{}}}],["user.organizationid",{"_index":885,"title":{},"body":{"classes/UserResolver-1.html":{}}}],["user.service",{"_index":850,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{}}}],["user_client",{"_index":990,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["user_host",{"_index":540,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["user_port",{"_index":1410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usercommand",{"_index":851,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usercommand.ping_user",{"_index":852,"title":{},"body":{"controllers/UserController.html":{}}}],["usercontroller",{"_index":846,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["usermodule",{"_index":854,"title":{"modules/UserModule.html":{}},"body":{"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":302,"title":{},"body":{"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{}}}],["userresolver",{"_index":861,"title":{"classes/UserResolver.html":{},"classes/UserResolver-1.html":{}},"body":{"modules/UserModule.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"coverage.html":{}}}],["users",{"_index":832,"title":{},"body":{"entities/User.html":{},"classes/UserResolver.html":{},"index.html":{}}}],["userservice",{"_index":849,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":182,"title":{},"body":{"entities/BaseEntity.html":{},"index.html":{}}}],["utilities",{"_index":1078,"title":{},"body":{"index.html":{}}}],["uuid",{"_index":331,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{},"entities/User.html":{}}}],["uuid_generate_v4",{"_index":332,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["uuidv7",{"_index":475,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["valid('development",{"_index":31,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["validated",{"_index":1170,"title":{},"body":{"index.html":{}}}],["validation",{"_index":1166,"title":{},"body":{"index.html":{}}}],["validationschema",{"_index":17,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["value",{"_index":190,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":200,"title":{},"body":{"entities/BaseEntity.html":{}}}],["variable",{"_index":908,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":405,"title":{"miscellaneous/variables.html":{}},"body":{"classes/DataSource.html":{},"miscellaneous/variables.html":{}}}],["varying",{"_index":334,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["version",{"_index":1351,"title":{},"body":{"properties.html":{}}}],["videos",{"_index":1191,"title":{},"body":{"index.html":{}}}],["virus",{"_index":1311,"title":{},"body":{"index.html":{}}}],["volumes",{"_index":1263,"title":{},"body":{"index.html":{}}}],["watch",{"_index":1038,"title":{},"body":{"index.html":{}}}],["way",{"_index":1177,"title":{},"body":{"index.html":{}}}],["within",{"_index":1071,"title":{},"body":{"index.html":{}}}],["without",{"_index":1052,"title":{},"body":{"index.html":{}}}],["world",{"_index":502,"title":{},"body":{"injectables/DocumentationService.html":{}}}],["worrying",{"_index":1053,"title":{},"body":{"index.html":{}}}],["yargs",{"_index":975,"title":{},"body":{"dependencies.html":{}}}],["yargs(process.argv.slice(2",{"_index":1368,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ycolumn",{"_index":199,"title":{},"body":{"entities/BaseEntity.html":{}}}],["yes",{"_index":436,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["zoom",{"_index":95,"title":{},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/SeederModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppConfigModule.html":{"url":"modules/AppConfigModule.html","title":"module - AppConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    AppConfigModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/config/config.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { ConfigModule } from '@nestjs/config';\nimport { Module } from '@nestjs/common';\nimport Joi from 'joi';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      validationSchema: Joi.object({\n        REDIS_HOST: Joi.string().required(),\n        REDIS_PORT: Joi.number().required(),\n        DATABASE_TYPE: Joi.string().required(),\n        DATABASE_HOST: Joi.string().required(),\n        DATABASE_PORT: Joi.string().required(),\n        DATABASE_USERNAME: Joi.string().required(),\n        DATABASE_PASSWORD: Joi.string().required(),\n        DATABASE_NAME: Joi.string().required(),\n        NODE_ENV: Joi.string()\n          .valid('development', 'production', 'test')\n          .default('development'),\n      }),\n    }),\n  ],\n})\nexport class AppConfigModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppConfigService.html":{"url":"injectables/AppConfigService.html","title":"injectable - AppConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/config/config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in libs/common/src/config/config.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getConfig\n                        \n                    \n                \n            \n            \n                \ngetConfig(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/config/config.service.ts:8\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class AppConfigService {\n  constructor(private readonly configService: ConfigService) {}\n\n  getConfig(key: string): T {\n    return this.configService.get(key);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/auth.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/auth/src/auth.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { AuthCommand } from '@qushah/common/constants/commands';\n\n@Controller()\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @MessagePattern({ cmd: AuthCommand.PING_AUTH })\n  getHello(): string {\n    return this.authService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nCommonModule->AuthModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nAuthModule -->\n\nGraphQLMicroserviceModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/auth/src/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { CommonModule, GraphQLMicroserviceModule } from '@qushah/common';\nimport { AuthResolver } from './resolvers/auth.resolver';\n\n@Module({\n  imports: [CommonModule, GraphQLMicroserviceModule],\n  controllers: [AuthController],\n  providers: [AuthService, AuthResolver],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthResolver.html":{"url":"classes/AuthResolver.html","title":"class - AuthResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/resolvers/auth.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingAuth'})\n                \n            \n\n                    \n                        \n                            Defined in apps/auth/src/resolvers/auth.resolver.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\n\n@Resolver()\nexport class AuthResolver {\n  @Query(() => String, { name: 'pingAuth' })\n  ping(): string {\n    return 'pong';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/auth/src/auth.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AuthService {\n  getHello(): string {\n    return 'Hello from Auth Service!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/BaseEntity.html":{"url":"entities/BaseEntity.html","title":"entity - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/database/entities/base.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ColumnOrder(9999)@Field(undefined)@CreateDateColumn({name: 'created_at'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/common/src/database/entities/base.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ColumnOrder(9999)@Field(undefined, {nullable: true})@DeleteDateColumn({name: 'deleted_at', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/common/src/database/entities/base.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ColumnOrder(undefined)@Field(undefined)@PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/common/src/database/entities/base.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ColumnOrder(9999)@Field(undefined, {nullable: true})@UpdateDateColumn({name: 'updated_at', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/common/src/database/entities/base.entity.ts:32\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  BaseEntity as BaseEntityTypeOrm,\n  BeforeInsert,\n  CreateDateColumn,\n  DataSource,\n  DeleteDateColumn,\n  Entity,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { Field, ObjectType } from '@nestjs/graphql';\nimport { ColumnOrder, getColumnOrder } from '@qushah/common/decorators';\nimport { ColumnMetadata } from 'typeorm/metadata/ColumnMetadata';\nimport { DatabaseUtil } from '@qushah/common/utils';\n\n@ObjectType()\n@Entity()\nexport abstract class BaseEntity extends BaseEntityTypeOrm {\n  @ColumnOrder(-1)\n  @Field(() => String)\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @ColumnOrder(9999)\n  @Field(() => Date)\n  @CreateDateColumn({ name: 'created_at' })\n  createdAt: Date;\n\n  @ColumnOrder(9999)\n  @Field(() => Date, { nullable: true })\n  @UpdateDateColumn({ name: 'updated_at', nullable: true })\n  updatedAt?: Date;\n\n  @ColumnOrder(9999)\n  @Field(() => Date, { nullable: true })\n  @DeleteDateColumn({ name: 'deleted_at', nullable: true })\n  deletedAt?: Date;\n\n  @BeforeInsert()\n  generateUUID() {\n    this.id = DatabaseUtil.generateUUIDv7();\n  }\n\n  static useDataSource(dataSource: DataSource) {\n    BaseEntityTypeOrm.useDataSource.call(this, dataSource);\n    const meta = dataSource.entityMetadatasMap.get(this);\n\n    const getOrderSafely = (column: ColumnMetadata) => {\n      const target = column.target as any;\n\n      // Check if the target and its prototype exist\n      if (target && target.prototype) {\n        // Retrieve the column order using the custom getColumnOrder function\n        return getColumnOrder(target.prototype, column.propertyName);\n      }\n\n      // Fallback to a default high order value if target is undefined\n      return 9996;\n    };\n\n    if (meta != null) {\n      // Reorder columns based on custom `@ColumnOrder` decorator\n      meta.columns = [...meta.columns].sort((xColumn, yColumn) => {\n        // Get the order values for both columns being compared\n        const orderXColumn = getOrderSafely(xColumn);\n        const orderYColumn = getOrderSafely(yColumn);\n\n        // Sort in ascending order\n        return orderXColumn - orderYColumn;\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Bootstrapper.html":{"url":"classes/Bootstrapper.html","title":"class - Bootstrapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Bootstrapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/utils/bootstrapper.util.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Async\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init(module: any)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/utils/bootstrapper.util.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                module\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Logger } from '@nestjs/common';\nimport { ConfigHelper } from '@qushah/common';\nimport { NestFactory } from '@nestjs/core';\nimport { MicroserviceOptions, Transport } from '@nestjs/microservices';\n\nexport class Bootstrapper {\n  static async init(module: any) {\n    const logger = new Logger(`${module.name}Bootstrap`);\n    const configHelper = await ConfigHelper.getInstance();\n    const redisConfig = configHelper.redisConfig;\n    const app = await NestFactory.create(module);\n    app.connectMicroservice({\n      transport: Transport.REDIS,\n      options: {\n        host: redisConfig.host,\n        port: redisConfig.port,\n      },\n    });\n    await app.startAllMicroservices();\n    const port: number = configHelper.getModulePort(module.name);\n    await app.listen(port);\n    logger.log(`Microservice listening on port ${port}...`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ClientsModule.html":{"url":"modules/ClientsModule.html","title":"module - ClientsModule","body":"\n                   \n\n\n\n\n    Modules\n    ClientsModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/clients/clients.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(...names: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/clients/clients.module.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                names\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, Global, DynamicModule } from '@nestjs/common';\nimport {\n  ClientsModule as NestClientsModule,\n  ClientsModuleOptions,\n  Transport,\n} from '@nestjs/microservices';\nimport { ConfigHelper } from '@qushah/common/config/config.helper';\n\n@Global()\n@Module({})\nexport class ClientsModule {\n  static async register(...names: string[]): Promise {\n    const configHelper = await ConfigHelper.getInstance();\n    const { host, port } = configHelper.redisConfig;\n    const clients: ClientsModuleOptions = names.map((name) => ({\n      name,\n      transport: Transport.REDIS,\n      options: {\n        host,\n        port,\n      },\n    }));\n    return {\n      module: ClientsModule,\n      imports: [NestClientsModule.register(clients)],\n      exports: [NestClientsModule],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CommonModule.html":{"url":"modules/CommonModule.html","title":"module - CommonModule","body":"\n                   \n\n\n\n\n    Modules\n    CommonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_exports\n\n\n\ncluster_CommonModule_imports\n\n\n\ncluster_CommonModule_providers\n\n\n\n\nAppConfigModule\n\nAppConfigModule\n\n\n\nCommonModule\n\nCommonModule\n\nCommonModule -->\n\nAppConfigModule->CommonModule\n\n\n\n\n\nCommonService \n\nCommonService \n\nCommonService  -->\n\nCommonModule->CommonService \n\n\n\n\n\nCommonService\n\nCommonService\n\nCommonModule -->\n\nCommonService->CommonModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/common.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CommonService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppConfigModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CommonService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CommonService } from './common.service';\nimport { AppConfigModule } from '@qushah/common/config';\n\n@Module({\n  imports: [AppConfigModule],\n  providers: [CommonService],\n  exports: [CommonService],\n})\nexport class CommonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CommonService.html":{"url":"injectables/CommonService.html","title":"injectable - CommonService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CommonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/common.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class CommonService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigHelper.html":{"url":"classes/ConfigHelper.html","title":"class - ConfigHelper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/config/config.helper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                appConfigService\n                            \n                            \n                                    Private\n                                    Static\n                                instance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getConfig\n                            \n                            \n                                    Static\n                                    Async\n                                getInstance\n                            \n                            \n                                getMicroServiceHosts\n                            \n                            \n                                getModulePort\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    redisConfig\n                                \n                                \n                                    databaseConfig\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Private\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in libs/common/src/config/config.helper.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        appConfigService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AppConfigService\n\n                    \n                \n                    \n                        \n                                Defined in libs/common/src/config/config.helper.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        instance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigHelper\n\n                    \n                \n                    \n                        \n                                Defined in libs/common/src/config/config.helper.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getConfig\n                        \n                    \n                \n            \n            \n                \ngetConfig(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/config/config.helper.ts:63\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        getInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    getInstance()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/config/config.helper.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMicroServiceHosts\n                        \n                    \n                \n            \n            \n                \ngetMicroServiceHosts(microserviceName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/config/config.helper.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                microserviceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { host: any; port: any; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getModulePort\n                        \n                    \n                \n            \n            \n                \ngetModulePort(moduleName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/config/config.helper.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                moduleName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        redisConfig\n                    \n                \n\n                \n                    \n                        getredisConfig()\n                    \n                \n                            \n                                \n                                    Defined in libs/common/src/config/config.helper.ts:31\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        databaseConfig\n                    \n                \n\n                \n                    \n                        getdatabaseConfig()\n                    \n                \n                            \n                                \n                                    Defined in libs/common/src/config/config.helper.ts:37\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ConfigService } from '@nestjs/config';\nimport { AppConfigService } from './config.service';\nimport { NestFactory } from '@nestjs/core';\nimport { ConfigModule } from '@nestjs/config';\nimport { ENVIRONMENT } from '@qushah/common';\n\nexport class ConfigHelper {\n  private static instance: ConfigHelper;\n  private appConfigService: AppConfigService;\n\n  private constructor() {}\n\n  static async getInstance(): Promise {\n    if (!ConfigHelper.instance) {\n      const appContext = await NestFactory.createApplicationContext(\n        ConfigModule.forRoot({\n          isGlobal: true,\n        }),\n      );\n\n      const configService = appContext.get(ConfigService);\n      const appConfigService = new AppConfigService(configService);\n\n      ConfigHelper.instance = new ConfigHelper();\n      ConfigHelper.instance.appConfigService = appConfigService;\n    }\n\n    return ConfigHelper.instance;\n  }\n\n  get redisConfig() {\n    const host = this.getConfig(ENVIRONMENT.REDIS_HOST);\n    const port = this.getConfig(ENVIRONMENT.REDIS_PORT);\n    return { host, port };\n  }\n\n  get databaseConfig() {\n    const type = this.getConfig(ENVIRONMENT.DATABASE_TYPE);\n    const host = this.getConfig(ENVIRONMENT.DATABASE_HOST);\n    const port = this.getConfig(ENVIRONMENT.DATABASE_PORT);\n    const username = this.getConfig(ENVIRONMENT.DATABASE_USERNAME);\n    const password = this.getConfig(ENVIRONMENT.DATABASE_PASSWORD);\n    const database = this.getConfig(ENVIRONMENT.DATABASE_NAME);\n    return { type, host, port, username, password, database };\n  }\n\n  getModulePort(moduleName: string) {\n    const key = moduleName?.split('Module')?.[0]?.toUpperCase();\n    if (!key) return;\n    return this.getConfig(ENVIRONMENT[`${key}_PORT`]);\n  }\n\n  getMicroServiceHosts(microserviceName: string) {\n    const host = this.getConfig(\n      `${microserviceName}_HOST`.toUpperCase(),\n    );\n    const port = this.getConfig(\n      `${microserviceName}_PORT`.toUpperCase(),\n    );\n    return { host, port };\n  }\n\n  getConfig(key: string) {\n    return this.appConfigService.getConfig(key);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrganizationAndMetaTable1741518145374.html":{"url":"classes/CreateOrganizationAndMetaTable1741518145374.html","title":"class - CreateOrganizationAndMetaTable1741518145374","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrganizationAndMetaTable1741518145374\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/organization/src/migrations/1741518145374-CreateOrganizationAndMetaTable.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'CreateOrganizationAndMetaTable1741518145374'\n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/migrations/1741518145374-CreateOrganizationAndMetaTable.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/organization/src/migrations/1741518145374-CreateOrganizationAndMetaTable.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/organization/src/migrations/1741518145374-CreateOrganizationAndMetaTable.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class CreateOrganizationAndMetaTable1741518145374\n  implements MigrationInterface\n{\n  name = 'CreateOrganizationAndMetaTable1741518145374';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`CREATE TABLE \"organization\".\"organizations\"\n                             (\n                                 \"id\"                   uuid              NOT NULL DEFAULT uuid_generate_v4(),\n                                 \"name\"                 character varying NOT NULL,\n                                 \"slug\"                 character varying NOT NULL,\n                                 \"primary_contact_name\" character varying NOT NULL,\n                                 \"email\"                character varying NOT NULL,\n                                 \"phone\"                character varying NOT NULL,\n                                 \"created_at\"           TIMESTAMP         NOT NULL DEFAULT now(),\n                                 \"updated_at\"           TIMESTAMP                  DEFAULT now(),\n                                 \"deleted_at\"           TIMESTAMP,\n                                 CONSTRAINT \"UQ_9b7ca6d30b94fef571cff876884\" UNIQUE (\"name\"),\n                                 CONSTRAINT \"UQ_963693341bd612aa01ddf3a4b68\" UNIQUE (\"slug\"),\n                                 CONSTRAINT \"PK_6b031fcd0863e3f6b44230163f9\" PRIMARY KEY (\"id\")\n                             )`);\n    await queryRunner.query(`CREATE TABLE \"organization\".\"organizations_metadata\"\n                             (\n                                 \"id\"                     uuid              NOT NULL DEFAULT uuid_generate_v4(),\n                                 \"primary_color\"          character varying,\n                                 \"domain\"                 character varying,\n                                 \"logo\"                   character varying NOT NULL,\n                                 \"rent_fee_percentage\"    numeric(5, 2)     NOT NULL DEFAULT '5',\n                                 \"deposit_fee_percentage\" numeric(5, 2)     NOT NULL DEFAULT '5',\n                                 \"allow_interest_earning\" boolean           NOT NULL DEFAULT false,\n                                 \"organization_id\"        uuid,\n                                 \"created_at\"             TIMESTAMP         NOT NULL DEFAULT now(),\n                                 \"updated_at\"             TIMESTAMP                  DEFAULT now(),\n                                 \"deleted_at\"             TIMESTAMP,\n                                 CONSTRAINT \"REL_ad9c5b4a8fb0a54d63b8471019\" UNIQUE (\"organization_id\"),\n                                 CONSTRAINT \"PK_63bbcee313cee9e95bfba3c7d2b\" PRIMARY KEY (\"id\")\n                             )`);\n    await queryRunner.query(`ALTER TABLE \"organization\".\"organizations_metadata\"\n        ADD CONSTRAINT \"FK_ad9c5b4a8fb0a54d63b84710190\" FOREIGN KEY (\"organization_id\") REFERENCES \"organization\".\"organizations\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE`);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"organization\".\"organizations_metadata\"\n        DROP CONSTRAINT \"FK_ad9c5b4a8fb0a54d63b84710190\"`);\n    await queryRunner.query(\n      `DROP TABLE \"organization\".\"organizations_metadata\"`,\n    );\n    await queryRunner.query(`DROP TABLE \"organization\".\"organizations\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRoleTable1741519642145.html":{"url":"classes/CreateRoleTable1741519642145.html","title":"class - CreateRoleTable1741519642145","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRoleTable1741519642145\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user/src/migrations/1741519642145-CreateRoleTable.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'CreateRoleTable1741519642145'\n                    \n                \n                    \n                        \n                                Defined in apps/user/src/migrations/1741519642145-CreateRoleTable.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/user/src/migrations/1741519642145-CreateRoleTable.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/user/src/migrations/1741519642145-CreateRoleTable.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class CreateRoleTable1741519642145 implements MigrationInterface {\n  name = 'CreateRoleTable1741519642145';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`CREATE TABLE \"user\".\"roles\"\n                             (\n                                 \"name\"        character varying NOT NULL,\n                                 \"description\" character varying,\n                                 CONSTRAINT \"PK_648e3f5447f725579d7d4ffdfb7\" PRIMARY KEY (\"name\")\n                             )`);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`DROP TABLE \"user\".\"roles\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserTable1741519705062.html":{"url":"classes/CreateUserTable1741519705062.html","title":"class - CreateUserTable1741519705062","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserTable1741519705062\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user/src/migrations/1741519705062-CreateUserTable.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'CreateUserTable1741519705062'\n                    \n                \n                    \n                        \n                                Defined in apps/user/src/migrations/1741519705062-CreateUserTable.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/user/src/migrations/1741519705062-CreateUserTable.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/user/src/migrations/1741519705062-CreateUserTable.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class CreateUserTable1741519705062 implements MigrationInterface {\n  name = 'CreateUserTable1741519705062';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`CREATE TABLE \"user\".\"users\"\n                             (\n                                 \"id\"              uuid              NOT NULL DEFAULT uuid_generate_v4(),\n                                 \"firstName\"       character varying NOT NULL,\n                                 \"lastName\"        character varying NOT NULL,\n                                 \"email\"           character varying NOT NULL,\n                                 \"password\"        character varying NOT NULL,\n                                 \"phone\"           character varying NOT NULL,\n                                 \"organization_id\" uuid,\n                                 \"role_id\"         character varying,\n                                 \"created_at\"      TIMESTAMP         NOT NULL DEFAULT now(),\n                                 \"updated_at\"      TIMESTAMP                  DEFAULT now(),\n                                 \"deleted_at\"      TIMESTAMP,\n                                 CONSTRAINT \"PK_a3ffb1c0c8416b9fc6f907b7433\" PRIMARY KEY (\"id\")\n                             )`);\n    await queryRunner.query(`ALTER TABLE \"user\".\"users\"\n        ADD CONSTRAINT \"FK_a2cecd1a3531c0b041e29ba46e1\" FOREIGN KEY (\"role_id\") REFERENCES \"user\".\"roles\" (\"name\") ON DELETE NO ACTION ON UPDATE NO ACTION`);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"user\".\"users\"\n        DROP CONSTRAINT \"FK_a2cecd1a3531c0b041e29ba46e1\"`);\n    await queryRunner.query(`DROP TABLE \"user\".\"users\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DataSource.html":{"url":"classes/DataSource.html","title":"class - DataSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/utils/data-source.util.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        getInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    getInstance(schema: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/utils/data-source.util.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                schema\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import process from 'node:process';\nimport * as dotenv from 'dotenv';\nimport { DataSource as TypeormDataSource } from 'typeorm';\n\n// Load environment variables from .env file\ndotenv.config();\n\nexport class DataSource {\n  static getInstance(schema: string) {\n    return new TypeormDataSource({\n      migrationsTableName: 'typeorm_migrations',\n      type: (process.env.DATABASE_TYPE as 'postgres') || 'postgres',\n      host: process.env.DATABASE_HOST || 'localhost',\n      port: +process.env.DATABASE_PORT || 5432,\n      username: process.env.DATABASE_USERNAME || 'postgres',\n      password: process.env.DATABASE_PASSWORD || 'postgres',\n      database: process.env.DATABASE_NAME || 'my-db',\n      ssl: { rejectUnauthorized: false },\n      schema,\n      entities: [`apps/${schema}/**/**.entity{.ts,.js}`],\n      migrations: [`apps/${schema}/src/migrations/**/*{.ts,.js}`],\n      subscribers: [`apps/${schema}/src/subscriber/**/*{.ts,.js}`],\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/database/database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init(schema: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/database/database.module.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                schema\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        loadEntities\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadEntities(entities?: EntityClassOrSchema[], dataSource?: DataSource | DataSourceOptions | string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/database/database.module.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        EntityClassOrSchema[]\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                dataSource\n                                            \n                                                            DataSource | DataSourceOptions | string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, DynamicModule } from '@nestjs/common';\nimport { TypeOrmModule, TypeOrmModuleOptions } from '@nestjs/typeorm';\nimport { ConfigHelper } from '@qushah/common';\nimport { EntityClassOrSchema } from '@nestjs/typeorm/dist/interfaces/entity-class-or-schema.type';\nimport { DataSource, DataSourceOptions } from 'typeorm';\n\n@Module({})\nexport class DatabaseModule {\n  static init(schema: string): DynamicModule {\n    return {\n      module: DatabaseModule,\n      imports: [\n        TypeOrmModule.forRootAsync({\n          useFactory: async () => {\n            const configHelper = await ConfigHelper.getInstance();\n            const { type, host, port, username, password, database } =\n              configHelper.databaseConfig;\n            const options: TypeOrmModuleOptions = {\n              type,\n              host,\n              port,\n              username,\n              password,\n              database,\n              schema: schema, // Set schema dynamically\n              autoLoadEntities: true,\n              // synchronize: true, // Enable only for development\n              ssl: { rejectUnauthorized: false },\n            };\n\n            return options;\n          },\n        }),\n      ],\n    };\n  }\n\n  static loadEntities(\n    entities?: EntityClassOrSchema[],\n    dataSource?: DataSource | DataSourceOptions | string,\n  ): DynamicModule {\n    return TypeOrmModule.forFeature(entities, dataSource);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DatabaseUtil.html":{"url":"classes/DatabaseUtil.html","title":"class - DatabaseUtil","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DatabaseUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/utils/database.util.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                generateUUIDv7\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        generateUUIDv7\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateUUIDv7()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/utils/database.util.ts:2\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class DatabaseUtil {\n  static generateUUIDv7(): string {\n    const now = Date.now();\n    const timestamp = now.toString(16).padStart(12, '0'); // 48-bit timestamp\n\n    // Generate 10 random bytes\n    const randomBytes = Array.from(crypto.getRandomValues(new Uint8Array(10)))\n      .map((b) => b.toString(16).padStart(2, '0')) // Convert to hex and ensure 2 characters\n      .join('');\n\n    // Construct UUIDv7 (ensuring the correct format)\n    return `${timestamp.substring(0, 8)}-${timestamp.substring(8, 12)}-7${randomBytes.substring(1, 3)}-${randomBytes.substring(3, 7)}-${randomBytes.substring(7, 19)}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DocumentationController.html":{"url":"controllers/DocumentationController.html","title":"controller - DocumentationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DocumentationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/documentation/src/documentation.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in apps/documentation/src/documentation.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { DocumentationService } from './documentation.service';\n\n@Controller()\nexport class DocumentationController {\n  constructor(private readonly documentationService: DocumentationService) {}\n\n  @Get()\n  getHello(): string {\n    return this.documentationService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DocumentationModule.html":{"url":"modules/DocumentationModule.html","title":"module - DocumentationModule","body":"\n                   \n\n\n\n\n    Modules\n    DocumentationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DocumentationModule\n\n\n\ncluster_DocumentationModule_providers\n\n\n\n\nDocumentationService\n\nDocumentationService\n\n\n\nDocumentationModule\n\nDocumentationModule\n\nDocumentationModule -->\n\nDocumentationService->DocumentationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/documentation/src/documentation.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DocumentationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DocumentationController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DocumentationController } from './documentation.controller';\nimport { DocumentationService } from './documentation.service';\n\n@Module({\n  imports: [],\n  controllers: [DocumentationController],\n  providers: [DocumentationService],\n})\nexport class DocumentationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DocumentationService.html":{"url":"injectables/DocumentationService.html","title":"injectable - DocumentationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DocumentationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/documentation/src/documentation.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/documentation/src/documentation.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class DocumentationService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/EscrowController.html":{"url":"controllers/EscrowController.html","title":"controller - EscrowController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  EscrowController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/escrow/src/escrow.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/escrow/src/escrow.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { EscrowService } from './escrow.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { EscrowCommand } from '@qushah/common';\n\n@Controller()\nexport class EscrowController {\n  constructor(private readonly escrowService: EscrowService) {}\n\n  @MessagePattern({ cmd: EscrowCommand.PING_ESCROW })\n  getHello(): string {\n    return this.escrowService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EscrowModule.html":{"url":"modules/EscrowModule.html","title":"module - EscrowModule","body":"\n                   \n\n\n\n\n    Modules\n    EscrowModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EscrowModule\n\n\n\ncluster_EscrowModule_imports\n\n\n\ncluster_EscrowModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nEscrowModule\n\nEscrowModule\n\nEscrowModule -->\n\nCommonModule->EscrowModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nEscrowModule -->\n\nGraphQLMicroserviceModule->EscrowModule\n\n\n\n\n\nEscrowService\n\nEscrowService\n\nEscrowModule -->\n\nEscrowService->EscrowModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/escrow/src/escrow.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            EscrowService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            EscrowController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { EscrowController } from './escrow.controller';\nimport { EscrowService } from './escrow.service';\nimport { CommonModule, GraphQLMicroserviceModule } from '@qushah/common';\nimport { EscrowResolver } from './resolvers/escrow.resolver';\n\n@Module({\n  imports: [CommonModule, GraphQLMicroserviceModule],\n  controllers: [EscrowController],\n  providers: [EscrowService, EscrowResolver],\n})\nexport class EscrowModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EscrowResolver.html":{"url":"classes/EscrowResolver.html","title":"class - EscrowResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EscrowResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/escrow/src/resolvers/escrow.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingEscrow'})\n                \n            \n\n                    \n                        \n                            Defined in apps/escrow/src/resolvers/escrow.resolver.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\n\n@Resolver()\nexport class EscrowResolver {\n  @Query(() => String, { name: 'pingEscrow' })\n  ping(): string {\n    return 'pong';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EscrowService.html":{"url":"injectables/EscrowService.html","title":"injectable - EscrowService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EscrowService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/escrow/src/escrow.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/escrow/src/escrow.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class EscrowService {\n  getHello(): string {\n    return 'Hello from Escrow Service!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GatewayModule.html":{"url":"modules/GatewayModule.html","title":"module - GatewayModule","body":"\n                   \n\n\n\n\n    Modules\n    GatewayModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GatewayModule\n\n\n\ncluster_GatewayModule_imports\n\n\n\ncluster_GatewayModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nGatewayModule\n\nGatewayModule\n\nGatewayModule -->\n\nCommonModule->GatewayModule\n\n\n\n\n\nGraphQLGatewayModule\n\nGraphQLGatewayModule\n\nGatewayModule -->\n\nGraphQLGatewayModule->GatewayModule\n\n\n\n\n\nGatewayService\n\nGatewayService\n\nGatewayModule -->\n\nGatewayService->GatewayModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/gateway/src/gateway.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GatewayService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            GraphQLGatewayModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { GatewayService } from './gateway.service';\nimport {\n  CommonModule,\n  ENVIRONMENT,\n  GraphQLGatewayModule,\n} from '@qushah/common';\n\nconst {\n  AUTH_HOST,\n  ESCROW_HOST,\n  MEDIA_HOST,\n  NOTIFICATION_HOST,\n  ORGANIZATION_HOST,\n  PAYMENT_HOST,\n  PROPERTY_HOST,\n  USER_HOST,\n} = ENVIRONMENT;\n\n@Module({\n  imports: [\n    CommonModule,\n    GraphQLGatewayModule.register(\n      AUTH_HOST,\n      ESCROW_HOST,\n      MEDIA_HOST,\n      NOTIFICATION_HOST,\n      ORGANIZATION_HOST,\n      PAYMENT_HOST,\n      PROPERTY_HOST,\n      USER_HOST,\n    ),\n  ],\n  providers: [GatewayService],\n})\nexport class GatewayModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GatewayService.html":{"url":"injectables/GatewayService.html","title":"injectable - GatewayService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GatewayService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gateway/src/gateway.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gateway/src/gateway.service.ts:4\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ping\n                        \n                    \n                \n            \n            \n                \nping()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gateway/src/gateway.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class GatewayService {\n  constructor() {}\n\n  ping(): string {\n    return 'Hello from Gateway Service!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GraphQLGatewayModule.html":{"url":"modules/GraphQLGatewayModule.html","title":"module - GraphQLGatewayModule","body":"\n                   \n\n\n\n\n    Modules\n    GraphQLGatewayModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/graphql/graphql-gateway.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(...subgraphNames: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/graphql/graphql-gateway.module.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                subgraphNames\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, Global, DynamicModule } from '@nestjs/common';\nimport { GraphQLModule } from '@nestjs/graphql';\nimport { ApolloGatewayDriver, ApolloGatewayDriverConfig } from '@nestjs/apollo';\nimport { IntrospectAndCompose } from '@apollo/gateway';\nimport { SubgraphsBuilder } from '@qushah/common';\n\n@Global()\n@Module({})\nexport class GraphQLGatewayModule {\n  static async register(...subgraphNames: string[]): Promise {\n    return {\n      module: GraphQLGatewayModule,\n      imports: [\n        GraphQLModule.forRootAsync({\n          driver: ApolloGatewayDriver,\n          useFactory: async () => {\n            return {\n              gateway: {\n                supergraphSdl: new IntrospectAndCompose({\n                  subgraphs: await SubgraphsBuilder.build(...subgraphNames),\n                }),\n              },\n            };\n          },\n        }),\n      ],\n      exports: [GraphQLModule],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GraphQLMicroserviceModule.html":{"url":"modules/GraphQLMicroserviceModule.html","title":"module - GraphQLMicroserviceModule","body":"\n                   \n\n\n\n\n    Modules\n    GraphQLMicroserviceModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/graphql/graphql-microservice.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { GraphQLModule } from '@nestjs/graphql';\nimport {\n  ApolloFederationDriver,\n  ApolloFederationDriverConfig,\n} from '@nestjs/apollo';\n\n@Module({\n  imports: [\n    GraphQLModule.forRoot({\n      driver: ApolloFederationDriver,\n      autoSchemaFile: {\n        federation: 2,\n      },\n      sortSchema: true,\n    }),\n  ],\n})\nexport class GraphQLMicroserviceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MediaController.html":{"url":"controllers/MediaController.html","title":"controller - MediaController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MediaController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/media/src/media.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/media/src/media.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { MediaService } from './media.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { MediaCommand } from '@qushah/common';\n\n@Controller()\nexport class MediaController {\n  constructor(private readonly mediaService: MediaService) {}\n\n  @MessagePattern({ cmd: MediaCommand.PING_MEDIA })\n  getHello(): string {\n    return this.mediaService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MediaModule.html":{"url":"modules/MediaModule.html","title":"module - MediaModule","body":"\n                   \n\n\n\n\n    Modules\n    MediaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MediaModule\n\n\n\ncluster_MediaModule_imports\n\n\n\ncluster_MediaModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nMediaModule\n\nMediaModule\n\nMediaModule -->\n\nCommonModule->MediaModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nMediaModule -->\n\nGraphQLMicroserviceModule->MediaModule\n\n\n\n\n\nMediaService\n\nMediaService\n\nMediaModule -->\n\nMediaService->MediaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/media/src/media.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MediaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MediaController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MediaController } from './media.controller';\nimport { MediaService } from './media.service';\nimport { CommonModule, GraphQLMicroserviceModule } from '@qushah/common';\nimport { MediaResolver } from './resolvers/media.resolver';\n\n@Module({\n  imports: [CommonModule, GraphQLMicroserviceModule],\n  controllers: [MediaController],\n  providers: [MediaService, MediaResolver],\n})\nexport class MediaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MediaResolver.html":{"url":"classes/MediaResolver.html","title":"class - MediaResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MediaResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/media/src/resolvers/media.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingMedia'})\n                \n            \n\n                    \n                        \n                            Defined in apps/media/src/resolvers/media.resolver.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\n\n@Resolver()\nexport class MediaResolver {\n  @Query(() => String, { name: 'pingMedia' })\n  ping(): string {\n    return 'pong';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MediaService.html":{"url":"injectables/MediaService.html","title":"injectable - MediaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MediaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/media/src/media.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/media/src/media.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class MediaService {\n  getHello(): string {\n    return 'Hello from Media Service!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/NotificationController.html":{"url":"controllers/NotificationController.html","title":"controller - NotificationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  NotificationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/notification/src/notification.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/notification/src/notification.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { NotificationService } from './notification.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { NotificationCommand } from '@qushah/common';\n\n@Controller()\nexport class NotificationController {\n  constructor(private readonly notificationService: NotificationService) {}\n\n  @MessagePattern({ cmd: NotificationCommand.PING_NOTIFICATION })\n  getHello(): string {\n    return this.notificationService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NotificationModule.html":{"url":"modules/NotificationModule.html","title":"module - NotificationModule","body":"\n                   \n\n\n\n\n    Modules\n    NotificationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NotificationModule\n\n\n\ncluster_NotificationModule_providers\n\n\n\ncluster_NotificationModule_imports\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nNotificationModule\n\nNotificationModule\n\nNotificationModule -->\n\nCommonModule->NotificationModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nNotificationModule -->\n\nGraphQLMicroserviceModule->NotificationModule\n\n\n\n\n\nNotificationService\n\nNotificationService\n\nNotificationModule -->\n\nNotificationService->NotificationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/notification/src/notification.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NotificationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            NotificationController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { NotificationController } from './notification.controller';\nimport { NotificationService } from './notification.service';\nimport { CommonModule, GraphQLMicroserviceModule } from '@qushah/common';\nimport { NotificationResolver } from './resolvers/notification.resolver';\n\n@Module({\n  imports: [CommonModule, GraphQLMicroserviceModule],\n  controllers: [NotificationController],\n  providers: [NotificationService, NotificationResolver],\n})\nexport class NotificationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotificationResolver.html":{"url":"classes/NotificationResolver.html","title":"class - NotificationResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotificationResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/notification/src/resolvers/notification.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingNotification'})\n                \n            \n\n                    \n                        \n                            Defined in apps/notification/src/resolvers/notification.resolver.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\n\n@Resolver()\nexport class NotificationResolver {\n  @Query(() => String, { name: 'pingNotification' })\n  ping(): string {\n    return 'pong';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationService.html":{"url":"injectables/NotificationService.html","title":"injectable - NotificationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NotificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/notification/src/notification.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/notification/src/notification.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class NotificationService {\n  getHello(): string {\n    return 'Hello from Notification Service!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Organization.html":{"url":"entities/Organization.html","title":"entity - Organization","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Organization\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/organization/src/entities/organization.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                meta\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                primaryContactName\n                            \n                            \n                                    \n                                    \n                                slug\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrganizationMetadata\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@OneToOne(undefined, meta => meta.organization)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        primaryContactName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column({name: 'primary_contact_name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization.entity.ts:16\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Directive, Field, ObjectType } from '@nestjs/graphql';\nimport { Column, Entity, OneToOne } from 'typeorm';\nimport { BaseEntity } from '@qushah/common';\nimport { OrganizationMetadata } from './organization-metadata.entity';\n\n@ObjectType()\n@Entity({ name: 'organizations' })\n// @Directive('@key(fields: \"id\")')\nexport class Organization extends BaseEntity {\n  @Field(() => String)\n  @Column({ unique: true })\n  name: string;\n\n  @Field(() => String)\n  @Column({ unique: true })\n  slug: string;\n\n  @Field(() => String)\n  @Column({ name: 'primary_contact_name' })\n  primaryContactName: string;\n\n  @Field(() => String)\n  @Column()\n  email: string;\n\n  @Field(() => String)\n  @Column()\n  phone: string;\n\n  @Field(() => OrganizationMetadata, { nullable: true })\n  @OneToOne(() => OrganizationMetadata, (meta) => meta.organization)\n  meta?: OrganizationMetadata;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Organization-1.html":{"url":"classes/Organization-1.html","title":"class - Organization-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Organization\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user/src/entities/external/organization.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Directive('@external')\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/entities/external/organization.entity.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive, Field, ObjectType } from '@nestjs/graphql';\n\n@ObjectType()\n// @Directive('@extends') // Extending from Organization Microservice\n// @Directive('@key(fields: \"id\")') // Federation key\nexport class Organization {\n  @Field(() => String)\n  @Directive('@external') // This field is managed by Organization Microservice\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrganizationController.html":{"url":"controllers/OrganizationController.html","title":"controller - OrganizationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrganizationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/organization/src/organization.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                findOneById\n                            \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/organization/src/organization.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/organization/src/organization.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { OrganizationService } from './organization.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { OrganizationCommand } from '@qushah/common/constants/commands/organization.command';\n\n@Controller()\nexport class OrganizationController {\n  constructor(private readonly organizationService: OrganizationService) {}\n\n  @MessagePattern({ cmd: OrganizationCommand.PING_ORGANIZATION })\n  getHello(): string {\n    return this.organizationService.getHello();\n  }\n\n  @MessagePattern({ cmd: OrganizationCommand.FIND_ORGANIZATION_BY_ID })\n  findOneById(id: string) {\n    return this.organizationService.findOne({ id });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/OrganizationMetadata.html":{"url":"entities/OrganizationMetadata.html","title":"entity - OrganizationMetadata","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  OrganizationMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/organization/src/entities/organization-metadata.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                allowInterestEarning\n                            \n                            \n                                    \n                                    \n                                depositFeePercentage\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                domain\n                            \n                            \n                                    \n                                    \n                                logo\n                            \n                            \n                                    \n                                    \n                                organization\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                primaryColor\n                            \n                            \n                                    \n                                    \n                                rentFeePercentage\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        allowInterestEarning\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column({name: 'allow_interest_earning', type: 'boolean', default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization-metadata.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        depositFeePercentage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column({name: 'deposit_fee_percentage', default: 5, precision: 5, scale: 2, type: 'decimal'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization-metadata.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        domain\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization-metadata.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization-metadata.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        organization\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Organization\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, organization => organization.meta, {cascade: true, onDelete: 'CASCADE', onUpdate: 'CASCADE'})@JoinColumn({name: 'organization_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization-metadata.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        primaryColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Column({name: 'primary_color', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization-metadata.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        rentFeePercentage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column({name: 'rent_fee_percentage', default: 5, precision: 5, scale: 2, type: 'decimal'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization-metadata.entity.ts:38\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, OneToOne } from 'typeorm';\nimport { Field, Float, ObjectType } from '@nestjs/graphql';\nimport { BaseEntity } from '@qushah/common';\nimport { JoinColumn } from 'typeorm';\nimport { Organization } from './organization.entity';\n\n@ObjectType()\n@Entity({ name: 'organizations_metadata' })\nexport class OrganizationMetadata extends BaseEntity {\n  @OneToOne(() => Organization, (organization) => organization.meta, {\n    cascade: true,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n  })\n  @JoinColumn({ name: 'organization_id' })\n  organization: Organization;\n\n  @Field(() => String, { nullable: true })\n  @Column({ name: 'primary_color', nullable: true })\n  primaryColor?: string;\n\n  @Field(() => String, { nullable: true })\n  @Column({ nullable: true })\n  domain?: string;\n\n  @Field(() => String)\n  @Column()\n  logo: string;\n\n  @Field(() => Float)\n  @Column({\n    name: 'rent_fee_percentage',\n    default: 5.0,\n    precision: 5,\n    scale: 2,\n    type: 'decimal',\n  })\n  rentFeePercentage: number;\n\n  @Field(() => Float)\n  @Column({\n    name: 'deposit_fee_percentage',\n    default: 5.0,\n    precision: 5,\n    scale: 2,\n    type: 'decimal',\n  })\n  depositFeePercentage: number;\n\n  @Field(() => Boolean)\n  @Column({ name: 'allow_interest_earning', type: 'boolean', default: false })\n  allowInterestEarning: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrganizationModule.html":{"url":"modules/OrganizationModule.html","title":"module - OrganizationModule","body":"\n                   \n\n\n\n\n    Modules\n    OrganizationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OrganizationModule\n\n\n\ncluster_OrganizationModule_providers\n\n\n\ncluster_OrganizationModule_imports\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nOrganizationModule\n\nOrganizationModule\n\nOrganizationModule -->\n\nCommonModule->OrganizationModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nOrganizationModule -->\n\nDatabaseModule->OrganizationModule\n\n\n\nOrganizationModule -->\n\nDatabaseModule->OrganizationModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nOrganizationModule -->\n\nGraphQLMicroserviceModule->OrganizationModule\n\n\n\n\n\nOrganizationService\n\nOrganizationService\n\nOrganizationModule -->\n\nOrganizationService->OrganizationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/organization/src/organization.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrganizationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrganizationController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { OrganizationController } from './organization.controller';\nimport { OrganizationService } from './organization.service';\nimport {\n  CommonModule,\n  DatabaseModule,\n  GraphQLMicroserviceModule,\n  SCHEMA,\n} from '@qushah/common';\nimport { OrganizationResolver } from './resolvers/organization.resolver';\nimport { Organization } from './entities/organization.entity';\nimport { OrganizationMetadata } from './entities/organization-metadata.entity';\n\n@Module({\n  imports: [\n    DatabaseModule.init(SCHEMA.ORGANIZATION),\n    DatabaseModule.loadEntities([Organization, OrganizationMetadata]),\n    CommonModule,\n    GraphQLMicroserviceModule,\n  ],\n  controllers: [OrganizationController],\n  providers: [OrganizationService, OrganizationResolver],\n})\nexport class OrganizationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrganizationResolver.html":{"url":"classes/OrganizationResolver.html","title":"class - OrganizationResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrganizationResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/organization/src/resolvers/organization.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                organizations\n                            \n                            \n                                    \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(organizationService: OrganizationService)\n                    \n                \n                        \n                            \n                                Defined in apps/organization/src/resolvers/organization.resolver.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationService\n                                                  \n                                                        \n                                                                        OrganizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        organizations\n                        \n                    \n                \n            \n            \n                \n                        \n                    organizations()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: true})\n                \n            \n\n                    \n                        \n                            Defined in apps/organization/src/resolvers/organization.resolver.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingOrganization'})\n                \n            \n\n                    \n                        \n                            Defined in apps/organization/src/resolvers/organization.resolver.ts:10\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\nimport { Organization } from '../entities/organization.entity';\nimport { OrganizationService } from '../organization.service';\n\n@Resolver()\nexport class OrganizationResolver {\n  constructor(private readonly organizationService: OrganizationService) {}\n\n  @Query(() => String, { name: 'pingOrganization' })\n  ping(): string {\n    return 'pong';\n  }\n\n  @Query(() => [Organization], { nullable: true })\n  organizations(): Promise {\n    return this.organizationService.findAll();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrganizationService.html":{"url":"injectables/OrganizationService.html","title":"injectable - OrganizationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrganizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/organization/src/organization.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: Repository)\n                    \n                \n                        \n                            \n                                Defined in apps/organization/src/organization.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/organization/src/organization.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(where: FindOptionsWhere)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/organization/src/organization.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                where\n                                            \n                                                            FindOptionsWhere\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/organization/src/organization.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { Organization } from './entities/organization.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { FindOptionsWhere } from 'typeorm/find-options/FindOptionsWhere';\n\n@Injectable()\nexport class OrganizationService {\n  constructor(\n    @InjectRepository(Organization)\n    private readonly repository: Repository,\n  ) {}\n\n  getHello(): string {\n    return 'Hello from Organization Service!';\n  }\n\n  findAll(): Promise {\n    return this.repository.find({\n      relations: ['meta'],\n    });\n  }\n\n  findOne(where: FindOptionsWhere) {\n    return this.repository.findOne({ where });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PaymentController.html":{"url":"controllers/PaymentController.html","title":"controller - PaymentController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PaymentController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/payment/src/payment.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/payment/src/payment.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { PaymentService } from './payment.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { PaymentCommand } from '@qushah/common';\n\n@Controller()\nexport class PaymentController {\n  constructor(private readonly paymentService: PaymentService) {}\n\n  @MessagePattern({ cmd: PaymentCommand.PING_PAYMENT })\n  getHello(): string {\n    return this.paymentService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PaymentModule.html":{"url":"modules/PaymentModule.html","title":"module - PaymentModule","body":"\n                   \n\n\n\n\n    Modules\n    PaymentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PaymentModule\n\n\n\ncluster_PaymentModule_providers\n\n\n\ncluster_PaymentModule_imports\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nPaymentModule\n\nPaymentModule\n\nPaymentModule -->\n\nCommonModule->PaymentModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nPaymentModule -->\n\nGraphQLMicroserviceModule->PaymentModule\n\n\n\n\n\nPaymentService\n\nPaymentService\n\nPaymentModule -->\n\nPaymentService->PaymentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/payment/src/payment.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PaymentService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PaymentController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PaymentController } from './payment.controller';\nimport { PaymentService } from './payment.service';\nimport { CommonModule, GraphQLMicroserviceModule } from '@qushah/common';\nimport { PaymentResolver } from './resolvers/payment.resolver';\n\n@Module({\n  imports: [CommonModule, GraphQLMicroserviceModule],\n  controllers: [PaymentController],\n  providers: [PaymentService, PaymentResolver],\n})\nexport class PaymentModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaymentResolver.html":{"url":"classes/PaymentResolver.html","title":"class - PaymentResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaymentResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/payment/src/resolvers/payment.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingPayment'})\n                \n            \n\n                    \n                        \n                            Defined in apps/payment/src/resolvers/payment.resolver.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\n\n@Resolver()\nexport class PaymentResolver {\n  @Query(() => String, { name: 'pingPayment' })\n  ping(): string {\n    return 'pong';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PaymentService.html":{"url":"injectables/PaymentService.html","title":"injectable - PaymentService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PaymentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/payment/src/payment.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/payment/src/payment.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class PaymentService {\n  getHello(): string {\n    return 'Hello from Payment Service!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PropertyController.html":{"url":"controllers/PropertyController.html","title":"controller - PropertyController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PropertyController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/property/src/property.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/property/src/property.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { PropertyService } from './property.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { PropertyCommand } from '@qushah/common';\n\n@Controller()\nexport class PropertyController {\n  constructor(private readonly propertyService: PropertyService) {}\n\n  @MessagePattern({ cmd: PropertyCommand.PING_PROPERTY })\n  getHello(): string {\n    return this.propertyService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PropertyModule.html":{"url":"modules/PropertyModule.html","title":"module - PropertyModule","body":"\n                   \n\n\n\n\n    Modules\n    PropertyModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PropertyModule\n\n\n\ncluster_PropertyModule_imports\n\n\n\ncluster_PropertyModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nPropertyModule\n\nPropertyModule\n\nPropertyModule -->\n\nCommonModule->PropertyModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nPropertyModule -->\n\nGraphQLMicroserviceModule->PropertyModule\n\n\n\n\n\nPropertyService\n\nPropertyService\n\nPropertyModule -->\n\nPropertyService->PropertyModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/property/src/property.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PropertyService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PropertyController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PropertyController } from './property.controller';\nimport { PropertyService } from './property.service';\nimport { CommonModule, GraphQLMicroserviceModule } from '@qushah/common';\nimport { PropertyResolver } from './resolvers/property.resolver';\n\n@Module({\n  imports: [CommonModule, GraphQLMicroserviceModule],\n  controllers: [PropertyController],\n  providers: [PropertyService, PropertyResolver],\n})\nexport class PropertyModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PropertyResolver.html":{"url":"classes/PropertyResolver.html","title":"class - PropertyResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PropertyResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/property/src/resolvers/property.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingProperty'})\n                \n            \n\n                    \n                        \n                            Defined in apps/property/src/resolvers/property.resolver.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\n\n@Resolver()\nexport class PropertyResolver {\n  @Query(() => String, { name: 'pingProperty' })\n  ping(): string {\n    return 'pong';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PropertyService.html":{"url":"injectables/PropertyService.html","title":"injectable - PropertyService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PropertyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/property/src/property.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/property/src/property.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class PropertyService {\n  getHello(): string {\n    return 'Hello from Property Service!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Role.html":{"url":"entities/Role.html","title":"entity - Role","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user/src/entities/role.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/entities/role.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@PrimaryColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/entities/role.entity.ts:9\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql';\nimport { BaseEntity, Column, Entity, PrimaryColumn } from 'typeorm';\n\n@ObjectType()\n@Entity({ name: 'roles' })\nexport class Role extends BaseEntity {\n  @Field(() => String)\n  @PrimaryColumn()\n  name: string;\n\n  @Field(() => String, { nullable: true })\n  @Column({ nullable: true })\n  description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SeederModule.html":{"url":"modules/SeederModule.html","title":"module - SeederModule","body":"\n                   \n\n\n\n\n    Modules\n    SeederModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SeederModule\n\n\n\ncluster_SeederModule_exports\n\n\n\ncluster_SeederModule_providers\n\n\n\n\nSeederService \n\nSeederService \n\n\n\nSeederModule\n\nSeederModule\n\nSeederService  -->\n\nSeederModule->SeederService \n\n\n\n\n\nSeederService\n\nSeederService\n\nSeederModule -->\n\nSeederService->SeederModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/user/src/seeder/seeder.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SeederService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SeederService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { SeederService } from './seeder.service';\nimport { Role } from '../entities/role.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Role])],\n  providers: [SeederService],\n  exports: [SeederService],\n})\nexport class SeederModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SeederService.html":{"url":"injectables/SeederService.html","title":"injectable - SeederService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SeederService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user/src/seeder/seeder.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                seed\n                            \n                            \n                                    Private\n                                    Async\n                                seedRoles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in apps/user/src/seeder/seeder.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        seed\n                        \n                    \n                \n            \n            \n                \n                        \n                    seed()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/user/src/seeder/seeder.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        seedRoles\n                        \n                    \n                \n            \n            \n                \n                        \n                    seedRoles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/user/src/seeder/seeder.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Role } from '../entities/role.entity';\nimport { Roles } from '@qushah/common';\n\n@Injectable()\nexport class SeederService {\n  constructor(\n    @InjectRepository(Role) private roleRepository: Repository,\n  ) {}\n\n  async seed() {\n    await this.seedRoles();\n    console.log('✅ Database seeding completed.');\n  }\n\n  private async seedRoles() {\n    const roles = Object.values(Roles);\n    for (const roleName of roles) {\n      const roleExists = await this.roleRepository.findOne({\n        where: { name: roleName },\n      });\n      if (!roleExists) {\n        await this.roleRepository.save(\n          this.roleRepository.create({ name: roleName }),\n        );\n        console.log(`Inserted Role: ${roleName}`);\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SubgraphsBuilder.html":{"url":"classes/SubgraphsBuilder.html","title":"class - SubgraphsBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SubgraphsBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/utils/subgraphs-builder.util.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Async\n                                build\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        build\n                        \n                    \n                \n            \n            \n                \n                        \n                    build(...graphNames: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/utils/subgraphs-builder.util.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                graphNames\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ServiceEndpointDefinition } from '@apollo/gateway/src/config';\nimport { ConfigHelper } from '@qushah/common';\n\nexport class SubgraphsBuilder {\n  static async build(\n    ...graphNames: string[]\n  ): Promise {\n    const configHelper = await ConfigHelper.getInstance();\n\n    return graphNames.map((graphName) => {\n      const keyPart = graphName?.split('_HOST')?.[0];\n      const key = keyPart || graphName;\n      const { host, port } = configHelper.getMicroServiceHosts(key);\n      return {\n        name: graphName,\n        url: `${host}:${port}/graphql`,\n      };\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user/src/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                    \n                                lastName\n                            \n                            \n                                    \n                                    Optional\n                                organization\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                organizationId\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/entities/user.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/entities/user.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/entities/user.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        organization\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Organization\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/entities/user.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        organizationId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Column({name: 'organization_id', type: 'uuid', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/entities/user.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/entities/user.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/entities/user.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@ManyToOne(undefined)@JoinColumn({name: 'role_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/entities/user.entity.ts:33\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Directive, Field, ObjectType } from '@nestjs/graphql';\nimport { Column, Entity, JoinColumn, ManyToOne } from 'typeorm';\nimport { BaseEntity } from '@qushah/common';\nimport { Role } from './role.entity';\nimport { Organization } from './external/organization.entity';\n\n@ObjectType()\n// @Directive('@key(fields: \"id\")')\n@Entity({ name: 'users' })\nexport class User extends BaseEntity {\n  @Field(() => String)\n  @Column()\n  firstName: string;\n\n  @Field(() => String)\n  @Column()\n  lastName: string;\n\n  @Field(() => String)\n  @Column()\n  email: string;\n\n  @Column()\n  password: string;\n\n  @Field(() => String)\n  @Column()\n  phone: string;\n\n  @Field(() => Role)\n  @ManyToOne(() => Role)\n  @JoinColumn({ name: 'role_id' })\n  role: Role;\n\n  @Field(() => String, { nullable: true })\n  @Column({ name: 'organization_id', type: 'uuid', nullable: true })\n  organizationId?: string;\n\n  @Field(() => [Organization], { nullable: true })\n  organization?: Organization;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User-1.html":{"url":"classes/User-1.html","title":"class - User-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/organization/src/entities/external/user.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                organization\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                organizationId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/external/user.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        organization\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Organization\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Directive('@requires(fields: \"organizationId\")')\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/external/user.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        organizationId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Directive('@external')\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/external/user.entity.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive, Field, ObjectType } from '@nestjs/graphql';\nimport { Organization } from '../organization.entity';\n\n@ObjectType()\n// @Directive('@extends') // 🚀 Extending User from User microservice\n// @Directive('@key(fields: \"id\")') // Federated entity\nexport class User {\n  @Field(() => String)\n  id: string;\n\n  @Field(() => String, { nullable: true })\n  @Directive('@external') // organizationId is stored in User service\n  organizationId?: string;\n\n  @Field(() => Organization, { nullable: true })\n  @Directive('@requires(fields: \"organizationId\")') // Requires orgId to fetch org\n  organization?: Organization;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user/src/user.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/user/src/user.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { UserCommand } from '@qushah/common';\n\n@Controller()\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @MessagePattern({ cmd: UserCommand.PING_USER })\n  getHello(): string {\n    return this.userService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nClientsModule\n\nClientsModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nClientsModule->UserModule\n\n\n\n\n\nCommonModule\n\nCommonModule\n\nUserModule -->\n\nCommonModule->UserModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nUserModule -->\n\nDatabaseModule->UserModule\n\n\n\nUserModule -->\n\nDatabaseModule->UserModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nUserModule -->\n\nGraphQLMicroserviceModule->UserModule\n\n\n\n\n\nSeederModule\n\nSeederModule\n\nUserModule -->\n\nSeederModule->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/user/src/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ClientsModule\n                        \n                        \n                            CommonModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                        \n                            SeederModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserController } from './user.controller';\nimport { UserService } from './user.service';\nimport {\n  ClientsModule,\n  CommonModule,\n  DatabaseModule,\n  GraphQLMicroserviceModule,\n  MicroServiceClient,\n  SCHEMA,\n} from '@qushah/common';\nimport { UserResolver } from './resolvers/user.resolver';\nimport { User } from './entities/user.entity';\nimport { Role } from './entities/role.entity';\nimport { SeederModule } from './seeder/seeder.module';\n\n@Module({\n  imports: [\n    CommonModule,\n    GraphQLMicroserviceModule,\n    DatabaseModule.init(SCHEMA.USER),\n    DatabaseModule.loadEntities([User, Role]),\n    ClientsModule.register(MicroServiceClient.ORGANIZATION_CLIENT),\n    SeederModule,\n  ],\n  controllers: [UserController],\n  providers: [UserService, UserResolver],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserResolver.html":{"url":"classes/UserResolver.html","title":"class - UserResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user/src/resolvers/user.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ping\n                            \n                            \n                                    \n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in apps/user/src/resolvers/user.resolver.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingUser'})\n                \n            \n\n                    \n                        \n                            Defined in apps/user/src/resolvers/user.resolver.ts:10\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        users\n                        \n                    \n                \n            \n            \n                \n                        \n                    users()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined)\n                \n            \n\n                    \n                        \n                            Defined in apps/user/src/resolvers/user.resolver.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\nimport { User } from '../entities/user.entity';\nimport { UserService } from '../user.service';\n\n@Resolver(User)\nexport class UserResolver {\n  constructor(private readonly userService: UserService) {}\n\n  @Query(() => String, { name: 'pingUser' })\n  ping(): string {\n    return 'pong';\n  }\n\n  @Query(() => [User])\n  users(): Promise {\n    return this.userService.find();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserResolver-1.html":{"url":"classes/UserResolver-1.html","title":"class - UserResolver-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/organization/src/resolvers/external/user.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                organization\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(organizationService: OrganizationService)\n                    \n                \n                        \n                            \n                                Defined in apps/organization/src/resolvers/external/user.resolver.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationService\n                                                  \n                                                        \n                                                                        OrganizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        organization\n                        \n                    \n                \n            \n            \n                \n                        \n                    organization(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResolveField(undefined, {nullable: true})\n                \n            \n\n                    \n                        \n                            Defined in apps/organization/src/resolvers/external/user.resolver.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Parent, ResolveField, Resolver } from '@nestjs/graphql';\nimport { User } from '../../entities/external/user.entity';\nimport { Organization } from '../../entities/organization.entity';\nimport { OrganizationService } from '../../organization.service';\n\n@Resolver(() => User)\nexport class UserResolver {\n  constructor(private readonly organizationService: OrganizationService) {}\n\n  @ResolveField(() => Organization, { nullable: true })\n  async organization(@Parent() user: User): Promise {\n    if (!user.organizationId) return null;\n    return this.organizationService.findOne({ id: user.organizationId });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user/src/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                find\n                            \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(organizationClient: ClientProxy, repository: Repository)\n                    \n                \n                        \n                            \n                                Defined in apps/user/src/user.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationClient\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \nfind()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/user/src/user.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/user/src/user.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { User } from './entities/user.entity';\nimport { MicroServiceClient } from '@qushah/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\n@Injectable()\nexport class UserService {\n  constructor(\n    @Inject(MicroServiceClient.ORGANIZATION_CLIENT)\n    private readonly organizationClient: ClientProxy,\n    @InjectRepository(User)\n    private readonly repository: Repository,\n  ) {}\n\n  getHello(): string {\n    return 'Hello from User Service!';\n  }\n\n  find(): Promise {\n    return this.repository.find();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/auth/src/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/auth/src/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/auth/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/auth/src/resolvers/auth.resolver.ts\n            \n            class\n            AuthResolver\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/documentation/src/documentation.controller.ts\n            \n            controller\n            DocumentationController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/documentation/src/documentation.service.ts\n            \n            injectable\n            DocumentationService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/documentation/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/escrow/src/escrow.controller.ts\n            \n            controller\n            EscrowController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/escrow/src/escrow.service.ts\n            \n            injectable\n            EscrowService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/escrow/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/escrow/src/resolvers/escrow.resolver.ts\n            \n            class\n            EscrowResolver\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/escrow/src/typeorm.data-source.ts\n            \n            variable\n            TypeormDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/gateway/src/gateway.module.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/gateway/src/gateway.service.ts\n            \n            injectable\n            GatewayService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        apps/gateway/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/media/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/media/src/media.controller.ts\n            \n            controller\n            MediaController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/media/src/media.service.ts\n            \n            injectable\n            MediaService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/media/src/resolvers/media.resolver.ts\n            \n            class\n            MediaResolver\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/media/src/typeorm.data-source.ts\n            \n            variable\n            TypeormDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/notification/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/notification/src/notification.controller.ts\n            \n            controller\n            NotificationController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/notification/src/notification.service.ts\n            \n            injectable\n            NotificationService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/notification/src/resolvers/notification.resolver.ts\n            \n            class\n            NotificationResolver\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/notification/src/typeorm.data-source.ts\n            \n            variable\n            TypeormDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/organization/src/entities/external/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/organization/src/entities/organization-metadata.entity.ts\n            \n            entity\n            OrganizationMetadata\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/organization/src/entities/organization-metadata.entity.ts\n            \n            class\n            OrganizationMetadata\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/organization/src/entities/organization.entity.ts\n            \n            entity\n            Organization\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/organization/src/entities/organization.entity.ts\n            \n            class\n            Organization\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        apps/organization/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/organization/src/migrations/1741518145374-CreateOrganizationAndMetaTable.ts\n            \n            class\n            CreateOrganizationAndMetaTable1741518145374\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/organization/src/organization.controller.ts\n            \n            controller\n            OrganizationController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/organization/src/organization.service.ts\n            \n            injectable\n            OrganizationService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/organization/src/resolvers/external/user.resolver.ts\n            \n            class\n            UserResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/organization/src/resolvers/organization.resolver.ts\n            \n            class\n            OrganizationResolver\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        apps/organization/src/typeorm.data-source.ts\n            \n            variable\n            TypeormDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/payment/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/payment/src/payment.controller.ts\n            \n            controller\n            PaymentController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/payment/src/payment.service.ts\n            \n            injectable\n            PaymentService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/payment/src/resolvers/payment.resolver.ts\n            \n            class\n            PaymentResolver\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/payment/src/typeorm.data-source.ts\n            \n            variable\n            TypeormDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/property/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/property/src/property.controller.ts\n            \n            controller\n            PropertyController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/property/src/property.service.ts\n            \n            injectable\n            PropertyService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/property/src/resolvers/property.resolver.ts\n            \n            class\n            PropertyResolver\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/property/src/typeorm.data-source.ts\n            \n            variable\n            TypeormDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/user/src/entities/external/organization.entity.ts\n            \n            class\n            Organization\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/user/src/entities/role.entity.ts\n            \n            entity\n            Role\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/user/src/entities/role.entity.ts\n            \n            class\n            Role\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/user/src/entities/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/user/src/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                        apps/user/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/user/src/migrations/1741519642145-CreateRoleTable.ts\n            \n            class\n            CreateRoleTable1741519642145\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/user/src/migrations/1741519705062-CreateUserTable.ts\n            \n            class\n            CreateUserTable1741519705062\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/user/src/resolvers/user.resolver.ts\n            \n            class\n            UserResolver\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/user/src/seeder/seeder.service.ts\n            \n            injectable\n            SeederService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        apps/user/src/seeder/seeder.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/user/src/typeorm.data-source.ts\n            \n            variable\n            TypeormDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/user/src/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/user/src/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/common/src/common.service.ts\n            \n            injectable\n            CommonService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/config/config.helper.ts\n            \n            class\n            ConfigHelper\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                libs/common/src/config/config.service.ts\n            \n            injectable\n            AppConfigService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/auth.command.ts\n            \n            variable\n            AuthCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/escrow.command.ts\n            \n            variable\n            EscrowCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/media.command.ts\n            \n            variable\n            MediaCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/notification.command.ts\n            \n            variable\n            NotificationCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/organization.command.ts\n            \n            variable\n            OrganizationCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/payment.command.ts\n            \n            variable\n            PaymentCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/property.command.ts\n            \n            variable\n            PropertyCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/user.command.ts\n            \n            variable\n            UserCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/environment.constant.ts\n            \n            variable\n            ENVIRONMENT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/schema.constant.ts\n            \n            variable\n            SCHEMA\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/database/entities/base.entity.ts\n            \n            entity\n            BaseEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/database/entities/base.entity.ts\n            \n            class\n            BaseEntity\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        libs/common/src/decorators/column-order.decorator.ts\n            \n            function\n            ColumnOrder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/decorators/column-order.decorator.ts\n            \n            function\n            getColumnOrder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/decorators/column-order.decorator.ts\n            \n            variable\n            ORDER_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/utils/bootstrapper.util.ts\n            \n            class\n            Bootstrapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/common/src/utils/data-source.util.ts\n            \n            class\n            DataSource\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/common/src/utils/database.util.ts\n            \n            class\n            DatabaseUtil\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/common/src/utils/subgraphs-builder.util.ts\n            \n            class\n            SubgraphsBuilder\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        typeorm-cli.ts\n            \n            variable\n            argv\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        typeorm-cli.ts\n            \n            variable\n            dataSourcePath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        typeorm-cli.ts\n            \n            variable\n            typeormCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        typeorm-cli.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @apollo/gateway : ^2.9.3\n        \n            @apollo/server : ^4.11.3\n        \n            @apollo/subgraph : ^2.9.3\n        \n            @nestjs/apollo : ^12.2.2\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.3.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/graphql : ^12.2.2\n        \n            @nestjs/microservices : ^10.4.15\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/typeorm : ^11.0.0\n        \n            @types/yargs : ^17.0.33\n        \n            dotenv : ^16.4.7\n        \n            graphql : ^16.10.0\n        \n            ioredis : ^5.4.2\n        \n            joi : ^17.13.3\n        \n            pg : ^8.13.1\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.20\n        \n            yargs : ^17.7.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            MicroServiceClient   (libs/.../micro-service-client.enum.ts)\n                        \n                        \n                            Roles   (libs/.../roles.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/common/src/enums/micro-service-client.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        MicroServiceClient\n                    \n                \n                        \n                            \n                                 AUTH_CLIENT\n                            \n                        \n                        \n                            \n                                Value : AUTH_CLIENT\n                            \n                        \n                        \n                            \n                                 ESCROW_CLIENT\n                            \n                        \n                        \n                            \n                                Value : ESCROW_CLIENT\n                            \n                        \n                        \n                            \n                                 MEDIA_CLIENT\n                            \n                        \n                        \n                            \n                                Value : MEDIA_CLIENT\n                            \n                        \n                        \n                            \n                                 NOTIFICATION_CLIENT\n                            \n                        \n                        \n                            \n                                Value : NOTIFICATION_CLIENT\n                            \n                        \n                        \n                            \n                                 ORGANIZATION_CLIENT\n                            \n                        \n                        \n                            \n                                Value : ORGANIZATION_CLIENT\n                            \n                        \n                        \n                            \n                                 PAYMENT_CLIENT\n                            \n                        \n                        \n                            \n                                Value : PAYMENT_CLIENT\n                            \n                        \n                        \n                            \n                                 PROPERTY_CLIENT\n                            \n                        \n                        \n                            \n                                Value : PROPERTY_CLIENT\n                            \n                        \n                        \n                            \n                                 USER_CLIENT\n                            \n                        \n                        \n                            \n                                Value : USER_CLIENT\n                            \n                        \n            \n        \n\n    libs/common/src/enums/roles.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Roles\n                    \n                \n                        \n                            \n                                 SUPER_ADMIN\n                            \n                        \n                        \n                            \n                                Value : SUPER_ADMIN\n                            \n                        \n                        \n                            \n                                 OWNER\n                            \n                        \n                        \n                            \n                                Value : OWNER\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : ADMIN\n                            \n                        \n                        \n                            \n                                 MEMBER\n                            \n                        \n                        \n                            \n                                Value : MEMBER\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../seeder.ts)\n                        \n                        \n                            ColumnOrder   (libs/.../column-order.decorator.ts)\n                        \n                        \n                            getColumnOrder   (libs/.../column-order.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/auth/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/documentation/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/escrow/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/gateway/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/media/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/notification/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/organization/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/payment/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/property/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/user/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/user/src/seeder/seeder.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    libs/common/src/decorators/column-order.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ColumnOrder\n                        \n                    \n                \n            \n            \n                \nColumnOrder(value: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     PropertyDecorator\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getColumnOrder\n                        \n                    \n                \n            \n            \n                \ngetColumnOrder(target, propertyKey, defaultVal: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                propertyKey\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                defaultVal\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nQushah Backend\nDescription\nQushah Escrow System backend containing microservices, gateway, libs, etc.\nPrerequisites\nTo be able to run this project on machine, the following must be installed:\n\nNodeJS 22 LTS\npnpm\nRedis\n\nProject setup\nMake sure pnpm is installed\nExample :$ npm install --global pnpmInstall dependencies\nExample :$ pnpm installInstall Redis\nFollow the official docs to install Redis on your machine.\nCompile and run the project\nExample :# development\n$ pnpm run start\n\n# watch mode\n$ pnpm run start:dev\n\n# production mode\n$ pnpm run start:prodRun tests\nExample :# unit tests\n$ pnpm run test\n\n# e2e tests\n$ pnpm run test:e2e\n\n# test coverage\n$ pnpm run test:covTypeorm CLI Helper Tool\nThe Typeorm CLI Helper tool lets you run typeorm CLI commands without worrying\nabout DataSources and path resolutions.\nLearn how to use the tool here.\nStructure\nExample :qushah-backend/\n│\n├── apps/\n│   ├── qushah-auth/        # Authentication Service\n│   ├── qushah-user/       # User Management Service\n│   ├── qushah-escrow/      # Escrow and Deposits Service\n│   ├── qushah-payment/    # Payments and Transactions Service\n│   ├── qushah-property/  # Property Listings Service\n│   ├── qushah-notification/      # Notifications Service\n│   └── qushah-gateway/     # API Gateway (separate app within the repo)\n│\n└── libs/                   # Shared Libraries (for DTOs, Interfaces, etc.)\n    ├── common/             # Common utilities, interceptors, and guards\n    ├── graphql/            # Shared GraphQL schemas and resolvers\n    └── db/                 # Database connection and models\nArchitecture\nExample :            [Frontend (Angular)]\n                     │\n              [GraphQL Gateway]\n                     │\n     ┌──────────┬────────────┬──────────────┬───────────┐\n     │          │            │              │           │\n [Auth]     [User]     [Property]     [Escrow]    [Payment]\n     │                                      │\n [Notification]                                [Disputes]\nConcerns\nHere are the key concerns for each microservice in this architecture:\n1. qushah-auth (Authentication and Authorization)\n\nSecurity: Ensuring the system is secure from unauthorized access. This includes strong password policies, token-based authentication (e.g., JWT), and OAuth if required.\nToken Expiry and Refresh: Managing token expiration and refresh mechanisms. Implement token blacklisting for security.\nRate Limiting: Protecting against brute-force attacks by implementing rate limiting or CAPTCHA.\nSecure API Communication: Ensuring all communication (especially authentication data) is encrypted with HTTPS.\nUser Roles and Permissions: Managing user roles and ensuring each user (tenant, landlord, admin) has the correct permissions for their actions.\n\n2. qushah-user (User Management)\n\nUser Data Management: Ensuring that personal data is secure, especially sensitive information like emails, addresses, and phone numbers.\nData Privacy: Complying with regulations like GDPR or CCPA, especially regarding the collection and storage of user data.\nUser Profile Updates: Allowing users to update their profiles (e.g., changing names, contact details) while maintaining data integrity.\nError Handling: Handling errors effectively, such as invalid user data, and providing clear feedback to users.\nScalability: Ensuring the system can handle large numbers of users (tenants, landlords).\n\n3. qushah-property (Property Management)\n\nProperty Data Validation: Ensuring that property details are accurate, complete, and properly validated before being listed.\nSearch Functionality: Providing a fast and efficient way for tenants to search for properties (by location, price, features, etc.).\nProperty Availability: Managing the availability of properties and preventing double-booking or issues with properties already rented.\nImage and Media Handling: Handling and storing images, videos, and 3D scans securely and efficiently. Integrating with media service when required.\nData Consistency: Ensuring that any updates to the property data (e.g., status changes, price updates) are consistent and reflected across all services.\n\n4. qushah-escrow (Escrow Service)\n\nDeposit Security: Ensuring that the deposit is secure, especially when handling large amounts of money.\nTransaction Auditing: Providing an auditable trail of deposit and release actions for transparency and security.\nEscrow Release Conditions: Implementing clear rules on when the deposit should be released to either the tenant or landlord.\nDispute Management: Handling any disputes regarding the deposit, such as property damage or failure to pay rent.\nCompliance: Ensuring that escrow services comply with local financial and regulatory standards (especially for handling money).\nEvent-Driven Updates: Integrating with other services (e.g., notifying users about escrow releases or disputes) using event-driven architecture.\n\n5. qushah-payment (Payment Service)\n\nPayment Gateway Integration: Integrating with external payment providers (e.g., UPI, Paytm, Razorpay) for processing payments.\nTransaction Security: Ensuring secure handling of payments and sensitive financial data. Use of encryption and secure protocols.\nTransaction Failures: Handling payment failures and retries in case of network or gateway issues.\nPayment Confirmation: Sending clear confirmation of successful payments and generating receipts.\nRecurring Payments: Supporting recurring rent payments (e.g., monthly payments) and ensuring they are processed on time.\nMulti-currency Support: Initially handling INR and later possibly adding other currencies, without complicating the architecture.\nScalability: Ensuring the service can handle large volumes of transactions, especially for a growing user base.\n\n6. qushah-notification (Notification Service)\n\nNotification Delivery: Ensuring timely delivery of notifications (SMS, email, push notifications) to users.\nMessage Templates: Using dynamic templates for notifications (e.g., rent payment reminders, property status updates).\nMulti-channel Support: Ensuring support for multiple communication channels (SMS, email, mobile push notifications, etc.).\nHandling Failures: Managing failed notification deliveries and retries, e.g., if an email service is down.\nPersonalization: Allowing notifications to be personalized based on user preferences (e.g., notification frequency, type of notifications).\nOpt-in/Opt-out Preferences: Allowing users to manage their notification preferences (e.g., unsubscribing from specific types of notifications).\n\n7. qushah-media (Media Handling)\n\nStorage: Securely storing large media files (images, videos, 3D scans) and ensuring they are easily accessible.\nPerformance: Ensuring that media uploads and downloads are fast and efficient, especially for large files.\nScalability: Managing storage at scale as media files (especially 3D scans) can consume significant space.\nCompression and Optimization: Automatically compressing and optimizing media files for faster loading times and reduced storage usage.\nSecurity: Protecting media files from unauthorized access and ensuring that the uploaded files are virus-free.\nIntegration: Providing an easy API for other microservices to use (e.g., for uploading profile pictures, property images, etc.).\n\n8. qushah-gateway (API Gateway)\n\nRequest Routing: Efficiently routing requests to the appropriate microservice based on the endpoint and service.\nSecurity: Ensuring that requests passing through the gateway are authenticated and authorized.\nLoad Balancing: Ensuring requests are distributed evenly across multiple instances of each microservice for scalability.\nRate Limiting: Preventing abuse of the system by applying rate limits on specific endpoints.\nAPI Documentation: Providing clear API documentation (e.g., using Swagger or GraphQL introspection) for the frontend and third-party developers.\nCaching: Implementing caching for high-traffic endpoints to improve performance.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppConfigModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ClientsModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CommonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DocumentationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EscrowModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GatewayModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GraphQLGatewayModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GraphQLMicroserviceModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MediaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NotificationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrganizationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PaymentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PropertyModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SeederModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_imports\n\n\n\ncluster_CommonModule_exports\n\n\n\ncluster_CommonModule_providers\n\n\n\ncluster_DocumentationModule\n\n\n\ncluster_DocumentationModule_providers\n\n\n\ncluster_EscrowModule\n\n\n\ncluster_EscrowModule_providers\n\n\n\ncluster_GatewayModule\n\n\n\ncluster_GatewayModule_imports\n\n\n\ncluster_GatewayModule_providers\n\n\n\ncluster_MediaModule\n\n\n\ncluster_MediaModule_providers\n\n\n\ncluster_NotificationModule\n\n\n\ncluster_NotificationModule_providers\n\n\n\ncluster_OrganizationModule\n\n\n\ncluster_OrganizationModule_imports\n\n\n\ncluster_OrganizationModule_providers\n\n\n\ncluster_PaymentModule\n\n\n\ncluster_PaymentModule_providers\n\n\n\ncluster_PropertyModule\n\n\n\ncluster_PropertyModule_providers\n\n\n\ncluster_SeederModule\n\n\n\ncluster_SeederModule_exports\n\n\n\ncluster_SeederModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nCommonModule->AuthModule\n\n\n\n\n\nCommonService \n\nCommonService \n\nCommonService  -->\n\nCommonModule->CommonService \n\n\n\n\n\nEscrowModule\n\nEscrowModule\n\nEscrowModule -->\n\nCommonModule->EscrowModule\n\n\n\n\n\nGatewayModule\n\nGatewayModule\n\nGatewayModule -->\n\nCommonModule->GatewayModule\n\n\n\n\n\nMediaModule\n\nMediaModule\n\nMediaModule -->\n\nCommonModule->MediaModule\n\n\n\n\n\nNotificationModule\n\nNotificationModule\n\nNotificationModule -->\n\nCommonModule->NotificationModule\n\n\n\n\n\nOrganizationModule\n\nOrganizationModule\n\nOrganizationModule -->\n\nCommonModule->OrganizationModule\n\n\n\n\n\nPaymentModule\n\nPaymentModule\n\nPaymentModule -->\n\nCommonModule->PaymentModule\n\n\n\n\n\nPropertyModule\n\nPropertyModule\n\nPropertyModule -->\n\nCommonModule->PropertyModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nCommonModule->UserModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nAuthModule -->\n\nGraphQLMicroserviceModule->AuthModule\n\n\n\nEscrowModule -->\n\nGraphQLMicroserviceModule->EscrowModule\n\n\n\nMediaModule -->\n\nGraphQLMicroserviceModule->MediaModule\n\n\n\nNotificationModule -->\n\nGraphQLMicroserviceModule->NotificationModule\n\n\n\nOrganizationModule -->\n\nGraphQLMicroserviceModule->OrganizationModule\n\n\n\nPaymentModule -->\n\nGraphQLMicroserviceModule->PaymentModule\n\n\n\nPropertyModule -->\n\nGraphQLMicroserviceModule->PropertyModule\n\n\n\nUserModule -->\n\nGraphQLMicroserviceModule->UserModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nAppConfigModule\n\nAppConfigModule\n\nCommonModule -->\n\nAppConfigModule->CommonModule\n\n\n\n\n\nCommonService\n\nCommonService\n\nCommonModule -->\n\nCommonService->CommonModule\n\n\n\n\n\nDocumentationService\n\nDocumentationService\n\n\n\nDocumentationModule\n\nDocumentationModule\n\nDocumentationModule -->\n\nDocumentationService->DocumentationModule\n\n\n\n\n\nEscrowService\n\nEscrowService\n\nEscrowModule -->\n\nEscrowService->EscrowModule\n\n\n\n\n\nGraphQLGatewayModule\n\nGraphQLGatewayModule\n\nGatewayModule -->\n\nGraphQLGatewayModule->GatewayModule\n\n\n\n\n\nGatewayService\n\nGatewayService\n\nGatewayModule -->\n\nGatewayService->GatewayModule\n\n\n\n\n\nMediaService\n\nMediaService\n\nMediaModule -->\n\nMediaService->MediaModule\n\n\n\n\n\nNotificationService\n\nNotificationService\n\nNotificationModule -->\n\nNotificationService->NotificationModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nOrganizationModule -->\n\nDatabaseModule->OrganizationModule\n\n\n\nOrganizationModule -->\n\nDatabaseModule->OrganizationModule\n\n\n\nUserModule -->\n\nDatabaseModule->UserModule\n\n\n\nUserModule -->\n\nDatabaseModule->UserModule\n\n\n\n\n\nOrganizationService\n\nOrganizationService\n\nOrganizationModule -->\n\nOrganizationService->OrganizationModule\n\n\n\n\n\nPaymentService\n\nPaymentService\n\nPaymentModule -->\n\nPaymentService->PaymentModule\n\n\n\n\n\nPropertyService\n\nPropertyService\n\nPropertyModule -->\n\nPropertyService->PropertyModule\n\n\n\n\n\nSeederService \n\nSeederService \n\n\n\nSeederModule\n\nSeederModule\n\nSeederService  -->\n\nSeederModule->SeederService \n\n\n\nUserModule -->\n\nSeederModule->UserModule\n\n\n\n\n\nSeederService\n\nSeederService\n\nSeederModule -->\n\nSeederService->SeederModule\n\n\n\n\n\nClientsModule\n\nClientsModule\n\nUserModule -->\n\nClientsModule->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        17 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    5 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    13 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    24 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            argv   (typeorm-cli.ts)\n                        \n                        \n                            AuthCommand   (libs/.../auth.command.ts)\n                        \n                        \n                            dataSourcePath   (typeorm-cli.ts)\n                        \n                        \n                            ENVIRONMENT   (libs/.../environment.constant.ts)\n                        \n                        \n                            EscrowCommand   (libs/.../escrow.command.ts)\n                        \n                        \n                            MediaCommand   (libs/.../media.command.ts)\n                        \n                        \n                            NotificationCommand   (libs/.../notification.command.ts)\n                        \n                        \n                            ORDER_KEY   (libs/.../column-order.decorator.ts)\n                        \n                        \n                            OrganizationCommand   (libs/.../organization.command.ts)\n                        \n                        \n                            PaymentCommand   (libs/.../payment.command.ts)\n                        \n                        \n                            PropertyCommand   (libs/.../property.command.ts)\n                        \n                        \n                            SCHEMA   (libs/.../schema.constant.ts)\n                        \n                        \n                            typeormCommand   (typeorm-cli.ts)\n                        \n                        \n                            TypeormDataSource   (apps/.../typeorm.data-source.ts)\n                        \n                        \n                            TypeormDataSource   (apps/.../typeorm.data-source.ts)\n                        \n                        \n                            TypeormDataSource   (apps/.../typeorm.data-source.ts)\n                        \n                        \n                            TypeormDataSource   (apps/.../typeorm.data-source.ts)\n                        \n                        \n                            TypeormDataSource   (apps/.../typeorm.data-source.ts)\n                        \n                        \n                            TypeormDataSource   (apps/.../typeorm.data-source.ts)\n                        \n                        \n                            TypeormDataSource   (apps/.../typeorm.data-source.ts)\n                        \n                        \n                               (typeorm-cli.ts)\n                        \n                        \n                               (apps/.../gateway.module.ts)\n                        \n                        \n                            UserCommand   (libs/.../user.command.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    typeorm-cli.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        argv\n                        \n                    \n                \n            \n                \n                    \n                        Default value : yargs(process.argv.slice(2))\n  .option('microservice', {\n    alias: 'm',\n    type: 'string',\n    describe: 'The name of the microservice',\n    demandOption: true,\n  })\n  .option('command', {\n    alias: 'c',\n    type: 'string',\n    describe: 'TypeORM CLI command (e.g., generate, run, revert)',\n    demandOption: true,\n  })\n  .option('args', {\n    alias: 'a',\n    type: 'string',\n    describe: 'Additional arguments for the TypeORM CLI command (optional)',\n    default: '',\n  })\n  .option('title', {\n    alias: 't',\n    type: 'string',\n    describe:\n      'Title for migration file. Needed while running generate (optional)',\n    default: '',\n  })\n  .help().argv\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSourcePath\n                        \n                    \n                \n            \n                \n                    \n                        Default value : path.join(\n  __dirname,\n  `./apps/${microservice}/src/typeorm.data-source.ts`,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        typeormCommand\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli.js migration:${command} ${title ? './apps/' + microservice + '/src/migrations/' + title : ''} -d ${dataSourcePath} ${args || ''}`\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : argv as {\n  microservice: string;\n  command: string;\n  args?: string;\n  title?: string;\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/auth.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AuthCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_AUTH: 'PING_AUTH',\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/environment.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ENVIRONMENT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  REDIS_HOST: 'REDIS_HOST',\n  REDIS_PORT: 'REDIS_PORT',\n  AUTH_PORT: 'AUTH_PORT',\n  ESCROW_PORT: 'ESCROW_PORT',\n  GATEWAY_PORT: 'GATEWAY_PORT',\n  MEDIA_PORT: 'MEDIA_PORT',\n  NOTIFICATION_PORT: 'NOTIFICATION_PORT',\n  ORGANIZATION_PORT: 'ORGANIZATION_PORT',\n  PAYMENT_PORT: 'PAYMENT_PORT',\n  PROPERTY_PORT: 'PROPERTY_PORT',\n  USER_PORT: 'USER_PORT',\n  AUTH_HOST: 'AUTH_HOST',\n  ESCROW_HOST: 'ESCROW_HOST',\n  GATEWAY_HOST: 'GATEWAY_HOST',\n  MEDIA_HOST: 'MEDIA_HOST',\n  NOTIFICATION_HOST: 'NOTIFICATION_HOST',\n  ORGANIZATION_HOST: 'ORGANIZATION_HOST',\n  PAYMENT_HOST: 'PAYMENT_HOST',\n  PROPERTY_HOST: 'PROPERTY_HOST',\n  USER_HOST: 'USER_HOST',\n  DATABASE_TYPE: 'DATABASE_TYPE',\n  DATABASE_HOST: 'DATABASE_HOST',\n  DATABASE_PORT: 'DATABASE_PORT',\n  DATABASE_USERNAME: 'DATABASE_USERNAME',\n  DATABASE_PASSWORD: 'DATABASE_PASSWORD',\n  DATABASE_NAME: 'DATABASE_NAME',\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/escrow.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EscrowCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_ESCROW: 'PING_ESCROW',\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/media.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MediaCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_MEDIA: 'PING_MEDIA',\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/notification.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NotificationCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_NOTIFICATION: 'PING_NOTIFICATION',\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/decorators/column-order.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ORDER_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol.for('order_key')\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/organization.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        OrganizationCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_ORGANIZATION: 'PING_ORGANIZATION',\n  FIND_ORGANIZATION_BY_ID: 'FIND_ORGANIZATION_BY_ID',\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/payment.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PaymentCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_PAYMENT: 'PING_PAYMENT',\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/property.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PropertyCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_PROPERTY: 'PING_PROPERTY',\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/schema.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SCHEMA\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  ORGANIZATION: 'organization',\n  USER: 'user',\n}\n                    \n                \n\n\n        \n    \n\n    apps/escrow/src/typeorm.data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TypeormDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DataSource.getInstance('escrow')\n                    \n                \n\n\n        \n    \n\n    apps/media/src/typeorm.data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TypeormDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DataSource.getInstance('media')\n                    \n                \n\n\n        \n    \n\n    apps/notification/src/typeorm.data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TypeormDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DataSource.getInstance('notification')\n                    \n                \n\n\n        \n    \n\n    apps/organization/src/typeorm.data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TypeormDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DataSource.getInstance('organization')\n                    \n                \n\n\n        \n    \n\n    apps/payment/src/typeorm.data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TypeormDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DataSource.getInstance('payment')\n                    \n                \n\n\n        \n    \n\n    apps/property/src/typeorm.data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TypeormDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DataSource.getInstance('property')\n                    \n                \n\n\n        \n    \n\n    apps/user/src/typeorm.data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TypeormDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DataSource.getInstance('user')\n                    \n                \n\n\n        \n    \n\n    apps/gateway/src/gateway.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : ENVIRONMENT\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/user.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_USER: 'PING_USER',\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
