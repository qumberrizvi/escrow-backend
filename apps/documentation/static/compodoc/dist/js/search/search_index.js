var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppConfigModule.html",[0,0.733,1,2.752]],["body/modules/AppConfigModule.html",[0,1.138,1,4.275,2,1.7,3,0.203,4,0.203,5,0.129,6,5.026,7,0.309,8,0.013,9,4.376,10,3.628,11,0.803,12,5.546,13,1.901,14,4.376,15,4.376,16,2.055,17,5.026,18,5.026,19,4.376,20,7.872,21,4.376,22,5.026,23,4.376,24,4.376,25,4.376,26,4.376,27,4.376,28,4.376,29,5.026,30,5.026,31,5.026,32,4.376,33,4.376,34,5.026,35,0.203,36,0.154,37,0.01,38,0.01]],["title/injectables/AppConfigService.html",[39,1.082,40,2.96]],["body/injectables/AppConfigService.html",[3,0.194,4,0.194,5,0.123,7,0.273,8,0.013,10,3.465,11,0.766,35,0.194,36,0.147,37,0.01,38,0.01,39,1.632,40,4.465,41,2.044,42,4.178,43,0.481,44,0.914,45,5.384,46,2.557,47,4.799,48,6.667,49,0.62,50,4.799,51,2.077,52,1.188,53,1.516,54,1.419,55,5.384,56,0.753,57,4.799,58,4.592,59,2.557,60,0.682,61,2.13,62,1.963,63,0.858,64,4.799]],["title/controllers/AuthController.html",[65,1.439,66,2.96]],["body/controllers/AuthController.html",[3,0.199,4,0.199,5,0.126,7,0.323,8,0.014,11,0.787,35,0.199,36,0.151,37,0.01,38,0.01,43,0.494,44,0.93,49,0.494,56,0.692,60,0.7,61,2.188,62,2.016,63,0.881,65,2.207,66,4.542,67,1.729,68,4.292,69,2.658,70,1.3,71,2.765,72,2.501,73,4.929,74,4.358,75,4.292,76,3.529,77,2.388,78,3.872,79,4.929,80,2.765,81,4.929,82,4.929]],["title/modules/AuthModule.html",[0,0.733,83,2.96]],["body/modules/AuthModule.html",[0,1.184,2,1.52,3,0.181,4,0.181,5,0.115,7,0.324,8,0.013,11,0.718,13,2.241,35,0.181,36,0.137,37,0.01,38,0.01,66,4.786,67,2.079,74,4.73,75,3.913,83,5.74,84,1.7,85,2.083,86,2.083,87,1.838,88,2.823,89,1.838,90,3.913,91,3.913,92,3.913,93,3.339,94,3.485,95,2.746,96,2.083,97,1.995,98,4.494,99,4.494,100,1.186,101,4.278,102,4.494]],["title/classes/AuthResolver.html",[36,0.125,101,2.96]],["body/classes/AuthResolver.html",[3,0.211,4,0.211,5,0.134,7,0.231,8,0.013,35,0.211,36,0.16,37,0.011,38,0.011,43,0.524,44,0.965,49,0.524,52,1.255,56,0.784,60,0.743,63,0.935,70,1.38,101,4.716,103,1.646,104,4.556,105,3.975,106,2.935,107,6.532,108,5.232,109,3.665,110,3.481,111,1.706,112,2.935]],["title/injectables/AuthService.html",[39,1.082,74,2.579]],["body/injectables/AuthService.html",[3,0.221,4,0.221,5,0.14,7,0.242,8,0.013,11,0.875,35,0.221,36,0.168,37,0.011,38,0.011,39,1.774,41,2.333,43,0.549,44,0.993,49,0.549,56,0.74,60,0.778,63,0.979,69,2.761,74,4.227,113,4.771,114,5.48,115,2.781,116,3.956,117,2.432]],["title/entities/BaseEntity.html",[118,1.612,119,2.3]],["body/entities/BaseEntity.html",[3,0.112,4,0.112,5,0.071,7,0.27,8,0.014,16,2.627,35,0.112,36,0.085,37,0.007,38,0.007,43,0.279,49,0.569,52,0.979,53,1.259,54,1.304,56,0.56,63,0.91,70,1.499,72,1.414,111,0.908,118,1.659,119,2.857,120,1.291,121,2.425,122,1.596,123,5.093,124,5.093,125,2.714,126,5.093,127,5.526,128,2.786,129,3.314,130,2.786,131,4.219,132,3.487,133,2.786,134,3.314,135,2.786,136,2.786,137,2.786,138,2.786,139,3.314,140,2.786,141,4.219,142,4.219,143,4.219,144,3.018,145,4.219,146,2.786,147,4.219,148,0.908,149,3.252,150,2.367,151,4.001,152,3.314,153,2.786,154,4.219,155,2.786,156,2.011,157,2.786,158,2.786,159,1.752,160,1.484,161,2.786,162,5.093,163,2.786,164,2.786,165,2.786,166,1.414,167,2.786,168,2.786,169,2.957,170,3.314,171,2.786,172,2.786,173,2.653,174,4.101,175,2.786,176,2.786,177,2.786,178,2.786,179,2.786,180,2.786,181,5.681,182,2.011,183,4.219,184,2.425,185,2.786,186,2.786,187,2.786,188,1.563,189,2.786,190,1.563,191,2.786,192,1.752,193,2.786,194,4.219,195,2.011,196,2.786,197,2.786,198,2.786,199,2.786,200,2.786,201,2.786,202,2.425,203,2.786,204,4.219,205,2.786,206,4.219,207,2.786,208,2.786,209,2.786]],["title/classes/Bootstrapper.html",[36,0.125,210,3.221]],["body/classes/Bootstrapper.html",[0,0.76,3,0.172,4,0.172,5,0.109,7,0.305,8,0.014,11,0.679,35,0.172,36,0.13,37,0.009,38,0.009,43,0.426,44,0.844,49,0.426,51,1.292,52,0.818,53,0.943,54,0.976,60,0.604,77,2.061,100,1.122,103,1.339,166,3.273,169,3.485,210,4.488,211,3.704,212,2.747,213,4.488,214,5.713,215,4.254,216,5.713,217,5.713,218,3.386,219,3.342,220,3.071,221,4.254,222,4.974,223,2.521,224,4.254,225,3.061,226,3.071,227,3.704,228,3.704,229,3.342,230,4.254,231,4.254,232,3.704,233,3.342,234,2.676,235,4.254,236,4.336,237,4.254,238,4.254,239,3.342,240,4.254,241,4.254,242,4.254,243,4.254,244,4.254]],["title/modules/ClientsModule.html",[0,0.733,245,3.221]],["body/modules/ClientsModule.html",[0,1.168,2,1.478,3,0.176,4,0.176,5,0.112,7,0.289,8,0.014,11,0.698,13,1.653,35,0.176,36,0.134,37,0.009,38,0.009,44,0.646,49,0.438,51,1.327,52,1.118,53,0.968,54,1.003,56,0.719,60,0.621,63,0.781,77,2.118,89,1.788,166,2.952,169,3.168,212,2.477,218,3.448,222,5.065,225,1.94,226,3.156,228,3.806,232,3.806,233,3.434,234,3.658,236,3.658,245,5.475,246,4.371,247,3.806,248,5.817,249,4.371,250,3.806,251,2.582,252,4.57,253,3.156,254,5.817,255,5.817,256,4.371,257,4.371,258,4.371,259,4.371]],["title/modules/CommonModule.html",[0,0.733,93,1.82]],["body/modules/CommonModule.html",[0,1.212,1,5.114,2,1.593,3,0.19,4,0.19,5,0.121,7,0.3,8,0.013,11,0.752,13,2.311,35,0.19,36,0.144,37,0.01,38,0.01,84,1.782,85,2.183,86,2.183,87,1.926,88,2.888,89,2.773,93,3.527,95,2.831,96,2.183,97,2.091,260,4.101,261,4.101,262,4.101,263,4.101,264,5.45,265,4.71,266,4.71,267,4.71]],["title/injectables/CommonService.html",[39,1.082,264,2.752]],["body/injectables/CommonService.html",[3,0.242,4,0.242,5,0.153,7,0.265,8,0.013,11,0.957,35,0.242,36,0.183,37,0.012,38,0.012,39,1.872,41,2.553,264,4.763,268,5.22]],["title/classes/ConfigHelper.html",[36,0.125,218,2.43]],["body/classes/ConfigHelper.html",[3,0.108,4,0.108,5,0.068,7,0.265,8,0.014,9,2.324,10,2.948,14,2.324,15,2.324,16,1.091,35,0.108,36,0.082,37,0.007,38,0.007,40,4.895,43,0.267,44,0.604,45,3.556,46,2.643,48,3.556,49,0.696,51,1.687,52,0.953,53,1.502,54,1.138,55,3.556,56,0.765,58,1.791,59,2.643,60,0.789,63,1.175,100,0.704,103,0.84,122,1.545,166,3.206,169,3.627,212,2.112,218,3.55,219,2.097,220,1.927,223,2.42,225,1.185,227,4.319,234,4.134,236,4.134,251,1.813,269,2.324,270,4.55,271,4.961,272,4.839,273,4.084,274,4.084,275,4.084,276,4.961,277,4.084,278,2.669,279,2.669,280,2.669,281,4.084,282,2.669,283,2.669,284,4.084,285,2.669,286,2.669,287,2.669,288,2.669,289,2.669,290,2.669,291,2.669,292,1.791,293,4.961,294,2.669,295,2.669,296,2.669,297,2.669,298,2.669,299,2.669,300,2.669,301,2.669,302,2.669,303,2.669,304,3.208,305,2.669,306,2.291,307,2.669,308,2.568,309,2.669,310,2.669,311,2.669,312,4.084,313,2.669,314,2.669,315,2.669]],["title/classes/CreateOrganizationAndMetaTable1741518145374.html",[36,0.125,316,3.221]],["body/classes/CreateOrganizationAndMetaTable1741518145374.html",[3,0.116,4,0.116,5,0.074,7,0.127,8,0.013,35,0.116,36,0.088,37,0.007,38,0.007,43,0.288,44,0.638,49,0.52,51,1.311,52,1.296,53,1.15,54,0.991,56,0.316,59,2.765,60,0.613,103,0.904,122,1.634,125,3.297,129,3.393,134,3.393,139,3.393,148,0.937,188,4.055,190,1.612,192,4.73,212,2.768,225,2.885,251,2.562,316,4.533,317,5.025,318,2.502,319,3.118,320,3.747,321,4.692,322,3.118,323,2.716,324,2.873,325,3.118,326,5.123,327,2.873,328,3.118,329,2.873,330,3.118,331,4.362,332,5.19,333,4.077,334,3.761,335,5.008,336,5.008,337,3.761,338,2.502,339,1.807,340,1.807,341,5.105,342,4.533,343,4.868,344,2.873,345,4.519,346,2.873,347,2.873,348,3.118,349,5.771,350,2.502,351,2.502,352,2.502,353,2.502,354,4.319,355,2.56,356,2.899,357,2.502,358,2.502,359,2.502,360,2.075,361,3.747,362,2.873,363,2.873,364,3.393,365,2.257,366,4.319,367,2.257,368,2.257,369,2.257,370,3.393,371,2.075,372,3.393,373,2.502,374,2.075]],["title/classes/CreatePermissionTables1741966377333.html",[36,0.125,375,3.221]],["body/classes/CreatePermissionTables1741966377333.html",[3,0.108,4,0.108,5,0.069,7,0.119,8,0.013,35,0.108,36,0.082,37,0.007,38,0.007,43,0.602,44,0.606,49,0.499,51,1.246,52,1.388,53,1.103,54,0.942,56,0.296,59,3.374,60,0.583,103,0.845,122,1.552,148,0.876,188,1.507,190,1.507,192,3.132,212,2.696,225,3.386,251,2.475,319,2.963,320,3.595,321,4.572,322,2.963,323,2.581,325,2.963,326,5.027,328,2.963,330,2.963,331,4.918,335,4.025,336,4.025,343,5.129,348,2.963,364,4.38,365,4.38,367,4.38,368,4.38,369,4.38,370,3.224,371,4.025,372,4.974,373,5.915,374,2.963,375,4.38,376,4.855,377,2.339,378,2.686,379,2.686,380,2.686,381,5.575,382,4.855,383,3.573,384,4.98,385,1.689,386,2.686,387,6.793,388,2.934,389,3.304,390,2.686,391,3.573,392,2.686,393,2.686,394,4.104,395,3.912,396,5.514,397,4.104,398,4.104,399,2.686,400,2.686]],["title/classes/CreateRoleTable1741519642145.html",[36,0.125,401,3.221]],["body/classes/CreateRoleTable1741519642145.html",[3,0.163,4,0.163,5,0.103,7,0.178,8,0.013,35,0.163,36,0.123,37,0.009,38,0.009,43,0.403,44,0.813,49,0.628,51,1.671,52,1.433,53,1.389,54,1.263,56,0.443,59,2.145,60,0.782,103,1.267,122,2.082,148,1.313,188,2.259,190,2.259,192,2.532,212,3.102,225,2.443,251,2.992,319,3.973,320,4.527,321,5.26,322,3.973,323,3.461,325,3.973,326,5.56,328,3.973,330,2.907,331,3.694,335,3.973,336,3.973,343,2.907,348,2.907,374,2.907,385,2.532,395,4.323,401,5.294,402,5.868,403,3.505,404,4.026,405,4.026,406,4.026,407,4.026]],["title/classes/CreateUserInput.html",[36,0.125,408,2.752]],["body/classes/CreateUserInput.html",[3,0.12,4,0.12,5,0.076,7,0.234,8,0.014,35,0.12,36,0.135,37,0.007,38,0.007,43,0.297,49,0.701,53,1.551,56,0.876,70,1.847,100,0.781,103,0.931,111,0.965,122,1.67,149,3.812,160,3.628,306,2.964,339,3.322,340,3.322,388,2.448,408,2.964,409,6.229,410,2.578,411,4.15,412,4.15,413,4.15,414,5.283,415,2.96,416,2.96,417,4.416,418,2.96,419,2.96,420,2.96,421,2.96,422,2.96,423,3.469,424,4.416,425,4.416,426,4.416,427,4.416,428,2.96,429,2.96,430,2.96,431,2.96,432,4.416,433,5.283,434,2.96,435,2.96,436,2.96,437,2.96,438,4.601,439,2.96,440,2.96,441,4.416,442,4.416,443,2.96,444,2.96,445,6.999,446,4.416,447,4.416,448,5.857,449,4.416,450,4.416,451,4.416,452,2.578,453,2.96,454,2.96,455,2.96,456,2.96,457,2.96,458,2.96,459,4.416,460,2.96,461,2.96,462,2.96,463,2.325,464,2.137,465,2.96,466,2.96]],["title/classes/CreateUserTable1741519705062.html",[36,0.125,467,3.221]],["body/classes/CreateUserTable1741519705062.html",[3,0.137,4,0.137,5,0.087,7,0.15,8,0.013,35,0.137,36,0.104,37,0.008,38,0.008,43,0.341,44,0.723,49,0.574,51,1.485,52,1.327,53,1.269,54,1.122,56,0.374,59,2.606,60,0.695,103,1.071,122,1.85,125,2.606,129,2.673,134,2.673,139,2.673,148,1.11,188,3.512,190,1.909,192,4.473,212,2.94,225,2.779,251,2.779,306,1.909,319,3.531,320,4.134,321,4.984,322,3.531,323,3.076,325,3.531,326,5.351,328,3.531,330,2.457,331,4.201,333,3.842,334,2.963,335,4.984,336,4.984,339,2.14,340,2.14,341,4.498,342,3.842,343,4.134,348,2.457,361,2.457,364,3.842,365,2.673,367,2.673,368,2.673,369,2.673,371,2.457,372,2.673,374,2.457,382,5.45,383,4.259,388,2.266,395,2.673,396,4.259,411,2.673,412,2.673,467,4.917,468,5.45,469,2.963,470,3.403,471,3.403,472,3.403,473,3.403]],["title/classes/DataSource.html",[36,0.125,144,2.43]],["body/classes/DataSource.html",[3,0.173,4,0.173,5,0.147,7,0.286,8,0.013,35,0.173,36,0.131,37,0.009,38,0.009,43,0.429,44,0.848,49,0.429,51,1.3,52,0.823,53,1.271,54,0.983,56,0.712,60,0.608,63,0.765,103,1.348,120,1.985,144,3.836,148,1.397,166,3.284,223,2.538,234,2.694,236,2.694,272,4.997,292,2.875,304,3.365,306,2.403,308,2.694,360,3.092,474,4.997,475,3.729,476,5.739,477,4.283,478,3.219,479,4.283,480,4.283,481,4.997,482,4.508,483,4.283,484,3.365,485,3.365,486,4.283,487,4.283,488,4.283,489,4.283,490,6.913,491,4.283,492,4.283,493,4.283,494,4.283,495,4.283,496,4.283,497,4.283,498,4.283,499,3.729,500,3.729,501,4.283,502,3.092,503,4.283,504,4.283,505,4.283]],["title/modules/DatabaseModule.html",[0,0.733,506,2.43]],["body/modules/DatabaseModule.html",[0,1.034,2,1.173,3,0.14,4,0.14,5,0.089,7,0.295,8,0.014,11,0.554,13,1.312,16,1.418,35,0.14,36,0.152,37,0.008,38,0.008,44,0.512,49,0.497,51,1.505,52,0.953,53,1.399,54,1.138,56,0.764,60,0.704,63,1.034,100,0.915,120,2.297,144,4.335,148,1.131,166,3.204,169,2.803,212,1.477,213,2.724,218,2.938,225,1.539,226,2.503,233,3.894,234,3.118,236,3.118,253,4.822,304,3.894,306,2.781,308,3.118,360,2.503,478,3.542,499,3.019,500,3.019,506,3.429,507,3.467,508,4.957,509,3.467,510,4.957,511,3.467,512,5.498,513,6.314,514,3.467,515,4.957,516,3.467,517,4.957,518,2.327,519,3.019,520,3.019,521,3.467,522,3.019,523,3.467,524,2.724,525,3.467,526,3.467,527,3.467]],["title/classes/DatabaseUtil.html",[36,0.125,156,2.96]],["body/classes/DatabaseUtil.html",[3,0.186,4,0.186,5,0.118,8,0.013,35,0.186,36,0.141,37,0.01,38,0.01,43,0.462,44,0.89,49,0.462,56,0.663,60,0.655,63,0.823,103,1.45,156,4.348,166,3.405,169,3.251,341,4.732,342,3.62,355,2.731,423,3.62,528,4.012,529,7.116,530,4.608,531,4.608,532,4.608,533,4.732,534,4.608,535,4.608,536,3.327,537,4.608,538,4.608,539,4.608,540,4.608,541,4.608,542,4.608,543,4.608,544,4.608,545,4.608,546,4.608,547,3.62,548,4.608,549,4.608,550,4.608,551,4.608,552,4.012,553,3.327,554,4.608,555,4.608,556,4.608,557,4.608,558,4.608,559,3.327,560,4.608,561,4.012,562,4.608,563,4.608]],["title/controllers/DocumentationController.html",[65,1.439,564,2.96]],["body/controllers/DocumentationController.html",[3,0.212,4,0.212,5,0.134,7,0.289,8,0.013,11,0.839,35,0.212,36,0.161,37,0.011,38,0.011,43,0.526,44,0.968,49,0.526,56,0.721,60,0.746,61,2.332,62,2.149,63,0.939,65,2.298,67,1.843,69,2.72,70,1.386,564,4.728,565,4.575,566,5.254,567,4.488,568,4.575,569,5.254]],["title/modules/DocumentationModule.html",[0,0.733,570,2.96]],["body/modules/DocumentationModule.html",[0,1.247,2,1.693,3,0.202,4,0.202,5,0.128,7,0.309,8,0.013,11,0.799,13,1.894,35,0.202,36,0.153,37,0.01,38,0.01,67,2.229,84,1.894,85,2.32,86,2.32,87,2.047,88,2.972,89,2.047,95,2.944,96,2.32,97,2.222,564,5.039,567,4.869,568,4.359,570,5.59,571,4.359,572,4.359,573,5.006,574,5.006]],["title/injectables/DocumentationService.html",[39,1.082,567,2.579]],["body/injectables/DocumentationService.html",[3,0.222,4,0.222,5,0.141,7,0.243,8,0.013,11,0.879,35,0.222,36,0.168,37,0.011,38,0.011,39,1.778,41,2.343,43,0.551,44,0.996,49,0.551,56,0.742,60,0.782,63,0.983,69,2.765,115,2.793,567,4.239,575,4.792,576,5.503,577,5.503]],["title/controllers/EscrowController.html",[65,1.439,578,2.96]],["body/controllers/EscrowController.html",[3,0.199,4,0.199,5,0.126,7,0.323,8,0.014,11,0.787,35,0.199,36,0.151,37,0.01,38,0.01,43,0.494,44,0.93,49,0.494,56,0.692,60,0.7,61,2.188,62,2.016,63,0.881,65,2.207,67,1.729,69,2.658,70,1.3,71,2.765,72,2.501,76,3.529,77,2.388,80,2.765,100,1.3,578,4.542,579,4.292,580,4.929,581,4.358,582,4.292,583,3.872,584,4.929,585,4.929]],["title/modules/EscrowModule.html",[0,0.733,586,2.96]],["body/modules/EscrowModule.html",[0,1.184,2,1.52,3,0.181,4,0.181,5,0.115,7,0.324,8,0.013,11,0.718,13,2.241,35,0.181,36,0.137,37,0.01,38,0.01,67,2.079,84,1.7,85,2.083,86,2.083,87,1.838,88,2.823,89,1.838,93,3.339,94,3.485,95,2.746,96,2.083,97,1.995,100,1.186,578,4.786,581,4.73,582,3.913,586,5.74,587,3.913,588,3.913,589,4.494,590,4.494,591,4.494,592,4.278,593,4.494]],["title/classes/EscrowResolver.html",[36,0.125,592,2.96]],["body/classes/EscrowResolver.html",[3,0.211,4,0.211,5,0.134,7,0.231,8,0.013,35,0.211,36,0.16,37,0.011,38,0.011,43,0.524,44,0.965,49,0.524,52,1.255,56,0.784,60,0.743,63,0.935,70,1.38,103,1.646,105,3.975,106,2.935,109,3.665,110,3.481,111,1.706,112,2.935,592,4.716,594,4.556,595,6.532,596,5.232]],["title/injectables/EscrowService.html",[39,1.082,581,2.579]],["body/injectables/EscrowService.html",[3,0.221,4,0.221,5,0.14,7,0.242,8,0.013,11,0.875,35,0.221,36,0.168,37,0.011,38,0.011,39,1.774,41,2.333,43,0.549,44,0.993,49,0.549,56,0.74,60,0.778,63,0.979,69,2.761,115,2.781,117,2.432,581,4.227,597,4.771,598,5.48,599,3.678]],["title/modules/GatewayModule.html",[0,0.733,600,2.96]],["body/modules/GatewayModule.html",[0,1.164,2,1.468,3,0.175,4,0.175,5,0.111,7,0.288,8,0.013,11,0.693,13,2.19,35,0.175,36,0.133,37,0.009,38,0.009,84,1.642,85,2.012,86,2.012,87,1.775,88,2.775,89,1.775,93,3.306,95,2.683,96,2.012,97,1.927,100,1.145,169,2.103,292,3.887,600,5.704,601,3.78,602,3.78,603,3.78,604,4.86,605,4.999,606,3.41,607,4.341,608,5.042,609,5.042,610,5.042,611,5.042,612,5.042,613,5.042,614,5.042,615,5.042,616,4.341]],["title/injectables/GatewayService.html",[39,1.082,605,2.752]],["body/injectables/GatewayService.html",[3,0.216,4,0.216,5,0.137,7,0.236,8,0.013,11,0.853,35,0.216,36,0.163,37,0.011,38,0.011,39,1.746,41,2.275,43,0.535,44,0.978,46,3.831,49,0.663,56,0.728,60,0.759,63,0.955,105,4.004,115,2.711,117,2.371,605,4.441,617,4.651,618,5.342,619,5.342,620,4.196]],["title/modules/GraphQLGatewayModule.html",[0,0.733,604,2.752]],["body/modules/GraphQLGatewayModule.html",[0,1.156,2,1.448,3,0.173,4,0.173,5,0.11,7,0.319,8,0.014,11,0.684,13,1.62,35,0.173,36,0.131,37,0.009,38,0.009,44,0.633,49,0.429,51,1.3,52,0.823,53,0.949,54,0.983,56,0.712,60,0.608,63,1.025,89,1.752,100,1.13,111,1.397,166,2.912,212,2.756,223,2.538,225,1.901,247,3.729,251,2.547,252,4.508,253,3.092,522,3.729,604,4.344,620,3.365,621,4.997,622,4.283,623,5.739,624,4.283,625,4.283,626,4.997,627,5.739,628,4.283,629,3.365,630,5.739,631,3.729,632,3.092,633,4.283,634,3.729,635,4.283,636,4.283,637,4.283]],["title/modules/GraphQLMicroserviceModule.html",[0,0.733,94,1.9]],["body/modules/GraphQLMicroserviceModule.html",[0,1.179,2,1.799,3,0.215,4,0.215,5,0.136,7,0.317,8,0.014,11,0.85,13,2.012,16,2.175,35,0.215,36,0.163,37,0.011,38,0.011,94,3.058,111,1.735,355,3.153,621,4.632,626,4.632,629,4.179,634,4.632,638,5.32,639,6.6,640,5.32,641,5.32,642,5.32,643,3.57,644,5.32]],["title/controllers/MediaController.html",[65,1.439,645,2.96]],["body/controllers/MediaController.html",[3,0.199,4,0.199,5,0.126,7,0.323,8,0.014,11,0.787,35,0.199,36,0.151,37,0.01,38,0.01,43,0.494,44,0.93,49,0.494,56,0.692,60,0.7,61,2.188,62,2.016,63,0.881,65,2.207,67,1.729,69,2.658,70,1.3,71,2.765,72,2.501,76,3.529,77,2.388,80,2.765,100,1.3,645,4.542,646,4.292,647,4.929,648,4.358,649,4.292,650,3.872,651,4.929,652,4.929]],["title/modules/MediaModule.html",[0,0.733,653,2.96]],["body/modules/MediaModule.html",[0,1.184,2,1.52,3,0.181,4,0.181,5,0.115,7,0.324,8,0.013,11,0.718,13,2.241,35,0.181,36,0.137,37,0.01,38,0.01,67,2.079,84,1.7,85,2.083,86,2.083,87,1.838,88,2.823,89,1.838,93,3.339,94,3.485,95,2.746,96,2.083,97,1.995,100,1.186,645,4.786,648,4.73,649,3.913,653,5.74,654,3.913,655,3.913,656,4.494,657,4.494,658,4.494,659,4.278,660,4.494]],["title/classes/MediaResolver.html",[36,0.125,659,2.96]],["body/classes/MediaResolver.html",[3,0.211,4,0.211,5,0.134,7,0.231,8,0.013,35,0.211,36,0.16,37,0.011,38,0.011,43,0.524,44,0.965,49,0.524,52,1.255,56,0.784,60,0.743,63,0.935,70,1.38,103,1.646,105,3.975,106,2.935,109,3.665,110,3.481,111,1.706,112,2.935,659,4.716,661,4.556,662,6.532,663,5.232]],["title/injectables/MediaService.html",[39,1.082,648,2.579]],["body/injectables/MediaService.html",[3,0.221,4,0.221,5,0.14,7,0.242,8,0.013,11,0.875,35,0.221,36,0.168,37,0.011,38,0.011,39,1.774,41,2.333,43,0.549,44,0.993,49,0.549,56,0.74,60,0.778,63,0.979,69,2.761,115,2.781,117,2.432,648,4.227,664,4.771,665,5.48,666,4.771]],["title/controllers/NotificationController.html",[65,1.439,667,2.96]],["body/controllers/NotificationController.html",[3,0.199,4,0.199,5,0.126,7,0.323,8,0.014,11,0.787,35,0.199,36,0.151,37,0.01,38,0.01,43,0.494,44,0.93,49,0.494,56,0.692,60,0.7,61,2.188,62,2.016,63,0.881,65,2.207,67,1.729,69,2.658,70,1.3,71,2.765,72,2.501,76,3.529,77,2.388,80,2.765,100,1.3,667,4.542,668,4.292,669,4.929,670,4.358,671,4.292,672,3.872,673,4.929,674,4.929]],["title/modules/NotificationModule.html",[0,0.733,675,2.96]],["body/modules/NotificationModule.html",[0,1.184,2,1.52,3,0.181,4,0.181,5,0.115,7,0.324,8,0.013,11,0.718,13,2.241,35,0.181,36,0.137,37,0.01,38,0.01,67,2.079,84,1.7,85,2.083,86,2.083,87,1.838,88,2.823,89,1.838,93,3.339,94,3.485,95,2.746,96,2.083,97,1.995,100,1.186,667,4.786,670,4.73,671,3.913,675,5.74,676,3.913,677,3.913,678,4.494,679,4.494,680,4.494,681,4.278,682,4.494]],["title/classes/NotificationResolver.html",[36,0.125,681,2.96]],["body/classes/NotificationResolver.html",[3,0.211,4,0.211,5,0.134,7,0.231,8,0.013,35,0.211,36,0.16,37,0.011,38,0.011,43,0.524,44,0.965,49,0.524,52,1.255,56,0.784,60,0.743,63,0.935,70,1.38,103,1.646,105,3.975,106,2.935,109,3.665,110,3.481,111,1.706,112,2.935,681,4.716,683,4.556,684,6.532,685,5.232]],["title/injectables/NotificationService.html",[39,1.082,670,2.579]],["body/injectables/NotificationService.html",[3,0.221,4,0.221,5,0.14,7,0.242,8,0.013,11,0.875,35,0.221,36,0.168,37,0.011,38,0.011,39,1.774,41,2.333,43,0.549,44,0.993,49,0.549,56,0.74,60,0.778,63,0.979,69,2.761,115,2.781,117,2.432,670,4.227,686,4.771,687,5.48,688,4.771]],["title/entities/Organization.html",[118,1.612,689,1.612]],["body/entities/Organization.html",[3,0.14,4,0.14,5,0.088,7,0.279,8,0.014,16,2.729,35,0.14,36,0.106,37,0.008,38,0.008,43,0.346,49,0.696,52,1.282,53,1.538,54,1.135,56,0.869,70,1.831,100,0.912,111,1.128,118,1.945,119,2.776,120,1.602,122,1.871,125,1.843,132,2.511,148,1.128,149,3.808,150,2.776,159,2.175,170,5.242,173,4.365,337,5.031,338,4.308,339,3.633,340,3.633,345,4.308,689,2.271,690,3.011,691,5.777,692,3.887,693,3.458,694,4.478,695,2.175,696,3.458,697,4.948,698,3.458,699,4.948,700,3.458,701,3.458,702,3.011,703,3.458,704,3.458,705,4.308,706,2.175,707,3.011,708,2.717,709,2.497]],["title/classes/Organization-1.html",[36,0.105,160,1.831,689,1.351]],["body/classes/Organization-1.html",[3,0.202,4,0.202,5,0.128,7,0.281,8,0.013,35,0.202,36,0.153,37,0.01,38,0.01,43,0.502,49,0.502,53,1.109,56,0.768,59,2.668,70,1.321,100,1.321,103,1.575,111,1.633,122,2.403,125,3.912,149,3.719,150,3.564,643,3.36,689,2.886,706,3.148,709,3.614,710,4.359,711,5.006,712,5.006,713,3.933,714,4.359,715,4.359,716,3.996,717,4.359,718,5.006]],["title/controllers/OrganizationController.html",[65,1.439,719,2.96]],["body/controllers/OrganizationController.html",[3,0.178,4,0.178,5,0.113,7,0.309,8,0.014,11,0.703,35,0.178,36,0.135,37,0.01,38,0.01,43,0.441,44,0.864,49,0.586,51,1.336,52,0.846,53,0.975,54,1.01,56,0.8,60,0.83,61,1.954,62,1.8,63,1.044,65,2.05,67,1.544,69,2.545,70,1.542,71,3.278,72,2.966,76,3.68,77,2.132,80,3.278,125,3.114,719,4.219,720,3.832,721,5.844,722,5.844,723,4.401,724,4.401,725,3.68,726,3.178,727,3.457,728,4.401,729,4.401,730,4.401,731,4.401,732,3.832]],["title/entities/OrganizationMetadata.html",[118,1.612,694,2.752]],["body/entities/OrganizationMetadata.html",[3,0.109,4,0.109,5,0.069,7,0.266,8,0.014,16,2.786,35,0.109,36,0.083,37,0.007,38,0.007,43,0.271,49,0.662,52,1.221,53,1.646,54,1.285,56,0.768,70,1.743,100,0.715,111,0.883,118,1.624,119,2.317,120,1.255,122,1.562,132,3.353,148,1.347,149,3.521,150,2.317,159,1.703,173,4.155,188,3.564,239,4.399,350,3.596,351,4.359,352,4.359,353,3.596,355,3.319,356,4.264,357,3.596,358,3.596,359,5.249,360,2.982,361,2.982,370,4.736,689,2.744,692,2.128,694,2.772,695,2.597,702,4.359,705,3.596,733,5.931,734,2.358,735,5.006,736,5.006,737,5.006,738,5.006,739,2.709,740,5.6,741,5.6,742,5.6,743,2.709,744,2.128,745,2.709,746,2.709,747,2.709,748,4.13,749,4.13,750,4.13,751,2.709,752,2.709,753,2.358,754,2.709,755,2.709,756,5.006,757,3.245,758,2.358,759,2.709,760,4.13]],["title/modules/OrganizationModule.html",[0,0.733,761,2.96]],["body/modules/OrganizationModule.html",[0,1.126,2,1.375,3,0.164,4,0.164,5,0.104,7,0.33,8,0.014,11,0.649,13,2.095,35,0.164,36,0.124,37,0.009,38,0.009,67,1.943,84,1.537,85,1.883,86,1.883,87,1.662,88,2.683,89,1.662,93,3.243,94,3.386,95,2.567,96,1.883,97,1.804,100,1.072,478,2.28,506,4.431,689,1.598,694,3.718,707,3.539,719,4.549,725,4.099,726,2.934,761,5.804,762,3.539,763,3.539,764,3.539,765,4.064,766,4.064,767,3.999,768,4.064,769,2.934,770,4.064,771,4.064,772,4.064]],["title/classes/OrganizationResolver.html",[36,0.125,767,2.96]],["body/classes/OrganizationResolver.html",[3,0.173,4,0.173,5,0.11,7,0.287,8,0.014,16,2.352,35,0.173,36,0.131,37,0.009,38,0.009,43,0.431,44,0.85,46,2.29,49,0.65,51,1.305,52,1.246,53,0.952,54,0.986,56,0.713,60,0.817,61,1.908,62,1.757,63,1.028,70,1.518,103,1.352,105,3.689,106,3.227,109,3.637,110,3.065,111,1.402,112,2.411,132,2.919,251,2.553,689,2.261,708,5.438,725,4.166,726,3.103,767,4.152,769,3.103,773,3.742,774,3.742,775,4.297,776,4.297,777,5.751,778,4.297,779,4.297]],["title/injectables/OrganizationService.html",[39,1.082,725,2.3]],["body/injectables/OrganizationService.html",[3,0.165,4,0.165,5,0.105,7,0.314,8,0.014,11,0.653,35,0.165,36,0.125,37,0.009,38,0.009,39,1.468,41,1.742,43,0.41,44,0.822,46,2.964,49,0.68,51,1.689,52,1.069,53,1.233,54,1.277,56,0.612,60,0.898,62,1.673,63,1.13,69,2.471,115,2.076,117,1.816,148,1.334,170,3.213,251,2.47,270,2.745,518,2.745,689,2.187,725,3.121,769,2.953,780,3.562,781,6.784,782,5.563,783,3.562,784,5.75,785,4.091,786,4.091,787,5.563,788,6.784,789,4.091,790,4.091,791,3.213,792,4.091,793,4.091,794,4.091,795,3.562,796,4.091,797,4.091]],["title/controllers/PaymentController.html",[65,1.439,798,2.96]],["body/controllers/PaymentController.html",[3,0.199,4,0.199,5,0.126,7,0.323,8,0.014,11,0.787,35,0.199,36,0.151,37,0.01,38,0.01,43,0.494,44,0.93,49,0.494,56,0.692,60,0.7,61,2.188,62,2.016,63,0.881,65,2.207,67,1.729,69,2.658,70,1.3,71,2.765,72,2.501,76,3.529,77,2.388,80,2.765,100,1.3,798,4.542,799,4.292,800,4.929,801,4.358,802,4.292,803,3.872,804,4.929,805,4.929]],["title/modules/PaymentModule.html",[0,0.733,806,2.96]],["body/modules/PaymentModule.html",[0,1.184,2,1.52,3,0.181,4,0.181,5,0.115,7,0.324,8,0.013,11,0.718,13,2.241,35,0.181,36,0.137,37,0.01,38,0.01,67,2.079,84,1.7,85,2.083,86,2.083,87,1.838,88,2.823,89,1.838,93,3.339,94,3.485,95,2.746,96,2.083,97,1.995,100,1.186,798,4.786,801,4.73,802,3.913,806,5.74,807,3.913,808,4.494,809,3.913,810,4.494,811,4.494,812,4.278,813,4.494]],["title/classes/PaymentResolver.html",[36,0.125,812,2.96]],["body/classes/PaymentResolver.html",[3,0.211,4,0.211,5,0.134,7,0.231,8,0.013,35,0.211,36,0.16,37,0.011,38,0.011,43,0.524,44,0.965,49,0.524,52,1.255,56,0.784,60,0.743,63,0.935,70,1.38,103,1.646,105,3.975,106,2.935,109,3.665,110,3.481,111,1.706,112,2.935,812,4.716,814,4.556,815,6.532,816,5.232]],["title/injectables/PaymentService.html",[39,1.082,801,2.579]],["body/injectables/PaymentService.html",[3,0.221,4,0.221,5,0.14,7,0.242,8,0.013,11,0.875,35,0.221,36,0.168,37,0.011,38,0.011,39,1.774,41,2.333,43,0.549,44,0.993,49,0.549,56,0.74,60,0.778,63,0.979,69,2.761,115,2.781,117,2.432,801,4.227,817,4.771,818,5.48,819,4.771]],["title/entities/Permission.html",[118,1.612,389,2.43]],["body/entities/Permission.html",[3,0.17,4,0.17,5,0.108,7,0.284,8,0.014,16,2.624,35,0.17,36,0.129,37,0.009,38,0.009,43,0.422,49,0.643,52,1.32,53,1.422,54,1.302,56,0.812,70,1.693,111,1.374,118,2.231,119,3.183,120,1.952,122,2.146,132,3.257,148,1.374,149,3.419,150,3.183,159,2.649,173,3.569,385,4.036,388,3.422,389,3.363,695,2.649,744,3.309,820,3.668,821,4.633,822,4.212,823,3.668,824,4.212,825,4.212,826,5.675,827,4.212,828,4.941,829,4.941,830,3.668,831,3.041]],["title/controllers/PropertyController.html",[65,1.439,832,2.96]],["body/controllers/PropertyController.html",[3,0.199,4,0.199,5,0.126,7,0.323,8,0.014,11,0.787,35,0.199,36,0.151,37,0.01,38,0.01,43,0.494,44,0.93,49,0.494,56,0.692,60,0.7,61,2.188,62,2.016,63,0.881,65,2.207,67,1.729,69,2.658,70,1.3,71,2.765,72,2.501,76,3.529,77,2.388,80,2.765,100,1.3,832,4.542,833,4.292,834,4.929,835,4.358,836,4.292,837,3.872,838,4.929,839,4.929]],["title/modules/PropertyModule.html",[0,0.733,840,2.96]],["body/modules/PropertyModule.html",[0,1.184,2,1.52,3,0.181,4,0.181,5,0.115,7,0.324,8,0.013,11,0.718,13,2.241,35,0.181,36,0.137,37,0.01,38,0.01,67,2.079,84,1.7,85,2.083,86,2.083,87,1.838,88,2.823,89,1.838,93,3.339,94,3.485,95,2.746,96,2.083,97,1.995,100,1.186,832,4.786,835,4.73,836,3.913,840,5.74,841,3.913,842,3.913,843,4.494,844,4.494,845,4.494,846,4.278,847,4.494]],["title/classes/PropertyResolver.html",[36,0.125,846,2.96]],["body/classes/PropertyResolver.html",[3,0.211,4,0.211,5,0.134,7,0.231,8,0.013,35,0.211,36,0.16,37,0.011,38,0.011,43,0.524,44,0.965,49,0.524,52,1.255,56,0.784,60,0.743,63,0.935,70,1.38,103,1.646,105,3.975,106,2.935,109,3.665,110,3.481,111,1.706,112,2.935,846,4.716,848,4.556,849,6.532,850,5.232]],["title/injectables/PropertyService.html",[39,1.082,835,2.579]],["body/injectables/PropertyService.html",[3,0.221,4,0.221,5,0.14,7,0.242,8,0.013,11,0.875,35,0.221,36,0.168,37,0.011,38,0.011,39,1.774,41,2.333,43,0.549,44,0.993,49,0.549,56,0.74,60,0.778,63,0.979,69,2.761,115,2.781,117,2.432,835,4.227,851,4.771,852,5.48,853,3.678]],["title/entities/Role.html",[118,1.612,388,1.9]],["body/entities/Role.html",[3,0.153,4,0.153,5,0.097,7,0.269,8,0.014,16,2.689,35,0.153,36,0.116,37,0.009,38,0.009,43,0.381,49,0.609,52,1.461,53,1.347,54,1.213,56,0.787,70,1.604,72,2.683,111,1.239,118,2.078,119,2.966,120,1.76,122,2,132,3.086,148,1.239,149,3.503,150,2.966,159,2.389,173,3.325,385,3.824,388,2.818,389,4.437,695,2.389,744,2.984,757,4.153,821,2.742,823,3.307,828,4.603,829,4.603,831,4.39,854,3.307,855,3.798,856,3.798,857,3.798,858,5.286,859,5.286,860,3.798,861,5.286,862,5.286,863,3.798,864,5.286,865,3.798,866,5.286]],["title/modules/SeederModule.html",[0,0.733,867,2.752]],["body/modules/SeederModule.html",[0,1.335,2,1.189,3,0.142,4,0.142,5,0.09,7,0.309,8,0.014,11,0.561,13,1.33,35,0.142,36,0.153,37,0.008,38,0.008,44,0.52,49,0.584,51,1.77,52,1.121,53,1.679,54,1.338,60,0.828,63,0.628,87,1.438,88,1.497,89,1.438,117,2.222,120,2.702,166,3.542,169,2.425,212,2.132,213,3.933,219,2.761,220,2.538,225,2.588,229,2.761,253,4.209,270,3.36,308,2.211,506,2.083,512,5.532,519,3.061,520,3.061,867,3.913,868,3.515,869,5.006,870,3.515,871,3.515,872,6.353,873,3.515,874,5.532,875,2.359,876,5.006,877,3.515,878,3.515,879,2.359,880,3.515,881,3.515,882,3.515,883,3.515,884,3.515,885,2.761,886,3.515,887,3.515,888,3.515,889,3.515,890,3.515,891,3.515,892,3.515,893,3.515,894,3.515,895,3.515,896,3.515,897,3.515]],["title/injectables/SeederService.html",[39,1.082,879,2.752]],["body/injectables/SeederService.html",[3,0.134,4,0.134,5,0.085,7,0.303,8,0.014,11,0.532,35,0.134,36,0.102,37,0.008,38,0.008,39,1.271,41,1.419,43,0.334,44,0.712,46,2.567,49,0.621,51,1.012,52,1.264,53,0.738,54,0.765,60,0.804,100,0.879,148,1.087,169,3.321,212,3.14,225,3.043,270,4.857,388,2.232,389,2.855,438,2.617,518,2.236,784,5.552,791,2.617,821,3.478,831,3.478,875,4.161,879,3.233,898,2.901,899,6.199,900,6.199,901,3.332,902,5.658,903,3.332,904,4.817,905,3.332,906,3.332,907,3.332,908,2.901,909,2.901,910,2.901,911,3.332,912,3.332,913,3.332,914,3.332,915,3.332,916,6.199,917,4.817,918,4.817,919,3.332,920,3.332,921,4.817,922,3.332,923,6.199,924,4.817,925,3.332,926,3.332]],["title/classes/SubgraphsBuilder.html",[36,0.125,632,2.96]],["body/classes/SubgraphsBuilder.html",[3,0.18,4,0.18,5,0.114,7,0.261,8,0.014,35,0.18,36,0.137,37,0.01,38,0.01,43,0.447,44,0.872,49,0.447,51,1.355,52,1.134,53,0.989,54,1.024,56,0.727,59,2.378,60,0.634,63,1.054,100,1.178,103,1.404,166,3.353,169,3.405,212,2.813,218,3.495,225,1.981,226,3.222,234,2.807,236,2.807,251,2.618,632,4.258,927,5.135,928,3.886,929,6.606,930,4.463,931,4.463,932,5.898,933,4.463,934,4.463,935,4.463,936,5.898,937,4.463,938,5.898,939,4.463,940,4.463,941,4.463]],["title/entities/User.html",[118,1.612,942,1.82]],["body/entities/User.html",[3,0.126,4,0.126,5,0.08,7,0.283,8,0.014,16,2.619,35,0.126,36,0.095,37,0.007,38,0.007,43,0.313,49,0.712,52,1.047,53,1.634,54,1.379,56,0.865,70,1.875,100,0.823,111,1.017,118,1.805,119,2.576,120,1.446,122,1.737,125,1.662,132,3.4,148,1.017,149,3.786,150,2.576,159,1.962,173,4.469,306,3.056,333,3.607,339,3.426,340,3.426,361,3.315,388,3.418,411,4.28,412,4.28,413,4.28,689,2.723,692,4.72,695,2.888,706,1.962,709,2.252,753,2.716,757,3.607,830,2.716,942,2.038,943,2.716,944,3.12,945,3.12,946,3.12,947,3.12,948,3.12,949,3.12,950,3.12,951,3.12,952,3.12,953,4.591,954,3.12,955,2.451]],["title/classes/User-1.html",[36,0.105,160,1.831,942,1.525]],["body/classes/User-1.html",[3,0.163,4,0.163,5,0.103,7,0.278,8,0.014,16,2.255,35,0.163,36,0.124,37,0.009,38,0.009,43,0.405,49,0.629,53,1.392,54,1.549,56,0.802,70,1.657,100,1.066,103,1.271,111,1.317,117,1.793,118,1.588,122,2.086,125,3.596,132,3.425,149,3.596,150,3.094,413,5.728,689,2.934,695,3.95,706,2.54,709,2.916,713,3.173,714,3.517,715,3.517,716,2.54,717,3.517,758,3.517,942,3.136,956,3.517,957,4.039,958,4.039,959,4.039,960,4.039,961,4.039,962,4.039,963,4.039,964,4.039,965,4.039,966,4.039,967,4.039,968,4.039]],["title/controllers/UserController.html",[65,1.439,969,2.96]],["body/controllers/UserController.html",[3,0.199,4,0.199,5,0.126,7,0.323,8,0.014,11,0.787,35,0.199,36,0.151,37,0.01,38,0.01,43,0.494,44,0.93,49,0.494,56,0.692,60,0.7,61,2.188,62,2.016,63,0.881,65,2.207,67,1.729,69,2.658,70,1.3,71,2.765,72,2.501,76,3.529,77,2.388,80,2.765,100,1.3,969,4.542,970,4.292,971,4.929,972,4.107,973,3.872,974,3.872,975,4.929,976,4.929]],["title/modules/UserModule.html",[0,0.733,977,2.96]],["body/modules/UserModule.html",[0,1.088,2,1.288,3,0.154,4,0.154,5,0.097,7,0.336,8,0.014,11,0.608,13,2.004,35,0.154,36,0.117,37,0.009,38,0.009,67,1.859,84,1.441,85,1.765,86,1.765,87,1.558,88,2.593,89,1.558,93,3.18,94,3.319,95,2.455,96,1.765,97,1.691,100,1.005,388,2.822,389,3.61,478,2.137,506,4.355,867,4.644,879,2.557,908,3.317,910,3.317,942,1.691,969,4.397,972,4.245,973,2.993,977,5.81,978,3.317,979,3.317,980,3.317,981,3.809,982,3.809,983,3.331,984,3.809,985,2.993,986,3.809,987,3.809,988,3.809,989,3.809]],["title/classes/UserResolver.html",[36,0.125,983,2.579]],["body/classes/UserResolver.html",[3,0.154,4,0.154,5,0.097,7,0.291,8,0.014,16,2.166,35,0.154,36,0.117,37,0.009,38,0.009,43,0.382,44,0.783,46,2.03,49,0.66,51,1.608,52,1.265,53,1.174,54,1.216,56,0.67,60,0.865,61,1.691,62,1.558,63,1.088,70,1.607,103,1.199,105,3.508,106,2.972,109,3.417,110,2.03,111,1.242,112,2.137,132,2.689,251,2.922,408,4.418,942,2.704,955,5.171,972,4.245,973,2.993,983,3.331,985,2.993,990,3.317,991,5.297,992,3.809,993,3.809,994,3.809,995,3.809,996,3.809,997,4.613,998,5.297,999,3.809,1000,3.809,1001,2.75,1002,5.297,1003,3.317,1004,3.317,1005,3.809,1006,3.809,1007,3.809,1008,3.809]],["title/classes/UserResolver-1.html",[36,0.105,160,1.831,983,2.161]],["body/classes/UserResolver-1.html",[3,0.173,4,0.173,5,0.11,7,0.306,8,0.014,16,2.347,35,0.173,36,0.131,37,0.009,38,0.009,43,0.429,44,0.848,46,2.282,49,0.575,51,1.742,52,1.103,53,1.271,54,1.317,60,0.608,61,1.901,62,1.752,63,1.025,70,1.13,103,1.348,110,3.058,111,1.397,125,2.282,132,2.912,192,2.694,212,2.756,251,2.547,689,2.718,725,4.162,726,3.092,732,3.729,769,3.092,774,3.729,942,3.364,983,3.609,1009,3.729,1010,4.283,1011,4.283,1012,4.283,1013,4.283,1014,4.283,1015,5.739,1016,4.283,1017,4.283,1018,5.739]],["title/injectables/UserService.html",[39,1.082,972,2.43]],["body/injectables/UserService.html",[3,0.152,4,0.152,5,0.096,7,0.315,8,0.014,11,0.601,35,0.152,36,0.115,37,0.009,38,0.009,39,1.386,41,1.603,43,0.377,44,0.776,46,2.799,49,0.656,51,1.595,52,1.163,53,1.164,54,1.206,56,0.578,60,0.86,62,1.539,63,1.081,69,2.385,115,1.911,117,1.671,148,1.228,169,2.545,212,2.577,225,2.332,251,2.907,270,2.527,306,2.947,388,1.744,391,4.574,408,4.396,518,2.527,783,3.278,784,5.606,791,2.957,795,3.278,942,2.332,972,3.114,985,2.957,997,4.574,1003,3.278,1004,3.278,1019,3.278,1020,5.145,1021,3.764,1022,5.254,1023,3.764,1024,3.764,1025,3.764,1026,5.254,1027,3.764,1028,3.278,1029,3.764,1030,5.254,1031,3.764,1032,3.764,1033,3.764]],["title/coverage.html",[1034,4.377]],["body/coverage.html",[5,0.041,8,0.014,36,0.229,37,0.004,38,0.004,39,1.715,40,1.166,42,1.406,53,0.358,65,2.051,66,1.166,68,1.406,74,1.015,78,1.268,87,2.471,101,1.166,104,1.406,113,1.406,118,1.975,119,1.528,121,2.371,144,0.957,148,1.353,151,1.268,152,1.268,156,1.166,184,5.66,210,1.268,211,1.406,218,0.957,223,0.957,264,1.084,268,1.406,269,1.406,292,1.084,316,1.268,317,1.406,318,1.406,331,1.084,375,1.268,376,1.406,377,1.406,388,1.262,389,1.614,401,1.268,402,1.406,403,1.406,408,1.084,409,1.406,410,1.406,467,1.268,468,1.406,469,1.406,474,1.406,475,1.406,478,0.906,482,4.199,528,1.406,533,6.521,564,1.166,565,1.406,567,1.015,575,1.406,578,1.166,579,1.406,581,1.015,583,1.268,592,1.166,594,1.406,597,1.406,605,1.084,606,1.268,617,1.406,632,1.166,643,1.828,645,1.166,646,1.406,648,1.015,650,1.268,659,1.166,661,1.406,664,1.406,667,1.166,668,1.406,670,1.015,672,1.268,681,1.166,683,1.406,686,1.406,689,1.388,690,2.371,694,1.828,706,1.015,710,1.406,719,1.166,720,1.406,725,0.906,727,1.268,733,2.371,734,2.371,767,1.166,773,1.406,780,1.406,798,1.166,799,1.406,801,1.015,803,1.268,812,1.166,814,1.406,817,1.406,820,2.371,832,1.166,833,1.406,835,1.015,837,1.268,846,1.166,848,1.406,851,1.406,854,2.371,879,1.828,898,1.406,927,1.406,928,1.406,942,1.568,943,2.371,956,1.406,969,1.166,970,1.406,972,0.957,974,1.268,983,1.713,990,1.406,1009,1.406,1019,1.406,1034,1.268,1035,1.614,1036,1.614,1037,1.614,1038,7.478,1039,1.406,1040,7.905,1041,1.406,1042,1.406,1043,1.406,1044,4.654,1045,7.35,1046,4.147,1047,1.406,1048,1.406,1049,1.406,1050,1.406,1051,1.406,1052,5.615,1053,2.723,1054,2.723,1055,1.406,1056,4.147,1057,1.406,1058,1.406,1059,1.406,1060,1.406,1061,1.406,1062,2.723,1063,1.406,1064,1.406,1065,1.406,1066,1.406,1067,1.406,1068,1.406,1069,1.406,1070,1.406,1071,1.406,1072,1.406,1073,1.406,1074,1.406,1075,1.614,1076,1.614,1077,1.406,1078,2.774,1079,2.774,1080,1.406,1081,2.139,1082,2.139,1083,1.406,1084,3.611,1085,1.406,1086,1.406,1087,1.406,1088,1.614]],["title/dependencies.html",[84,1.863,1089,2.991]],["body/dependencies.html",[8,0.014,10,3.363,11,0.744,12,4.056,36,0.186,37,0.01,38,0.01,77,2.257,84,1.762,111,1.519,148,1.519,220,3.363,452,4.056,481,4.056,518,3.127,629,3.66,631,4.056,1028,4.056,1090,6.066,1091,4.659,1092,4.659,1093,4.659,1094,6.066,1095,6.746,1096,4.659,1097,4.659,1098,4.659,1099,4.659,1100,4.659,1101,4.659,1102,4.659,1103,4.659,1104,4.659,1105,4.659,1106,4.659,1107,4.659,1108,4.056,1109,4.659,1110,4.659,1111,4.659,1112,4.659,1113,4.659,1114,4.659,1115,4.659,1116,4.659,1117,4.659,1118,4.659,1119,4.659,1120,4.659,1121,4.659,1122,4.659]],["title/miscellaneous/enumerations.html",[1123,2.161,1124,4.288]],["body/miscellaneous/enumerations.html",[8,0.013,37,0.01,38,0.01,43,0.463,117,2.68,190,4.606,438,4.743,909,5.257,1123,2.908,1124,4.027,1125,6.037,1126,4.625,1127,6.037,1128,4.625,1129,4.625,1130,4.625,1131,6.037,1132,6.037,1133,6.037,1134,6.037,1135,6.037,1136,6.037,1137,6.037,1138,6.037,1139,4.625,1140,6.037,1141,6.037,1142,6.037,1143,4.625,1144,6.037,1145,6.037,1146,5.257,1147,6.037]],["title/miscellaneous/functions.html",[1123,2.161,1148,4.288]],["body/miscellaneous/functions.html",[8,0.012,37,0.009,38,0.009,43,0.415,51,1.932,52,1.223,53,1.41,54,1.46,56,0.617,60,0.797,87,3.429,151,4.409,152,4.409,174,2.992,188,2.325,190,3.148,239,5.358,533,3.255,643,3.767,706,3.529,713,3.255,1039,3.608,1041,3.608,1042,3.608,1047,3.608,1048,3.608,1050,3.608,1055,3.608,1058,3.608,1060,3.608,1063,3.608,1078,3.255,1079,4.999,1081,3.255,1082,4.409,1123,2.606,1148,3.608,1149,7.833,1150,4.887,1151,3.608,1152,4.144,1153,4.144,1154,4.144,1155,5.612,1156,5.612,1157,4.144,1158,4.144]],["title/index.html",[43,0.344,1159,3.436,1160,3.436]],["body/index.html",[8,0.013,32,1.3,33,2.219,37,0.004,38,0.004,59,0.796,84,0.565,88,0.636,97,0.663,116,2.407,117,2.753,122,1.261,148,0.831,160,0.796,182,1.078,195,2.407,202,1.3,229,1.173,250,1.3,252,1.173,306,0.838,339,0.939,340,0.939,355,0.885,356,1.002,371,1.078,385,0.939,388,0.692,423,1.173,464,1.078,552,5.728,553,1.078,559,1.078,561,1.3,599,3.799,620,4.447,666,2.219,688,4.197,689,2.024,708,3.097,716,1.603,819,4.723,821,1.84,831,1.84,853,3.937,874,2.903,942,2.753,955,3.786,1034,1.173,1108,1.3,1146,1.3,1161,3.334,1162,3.334,1163,3.334,1164,1.493,1165,1.173,1166,2.549,1167,2.619,1168,1.173,1169,4.087,1170,2.619,1171,2.549,1172,1.493,1173,2.002,1174,1.493,1175,1.493,1176,1.493,1177,4.447,1178,3.334,1179,1.173,1180,1.493,1181,1.493,1182,3.786,1183,1.493,1184,2.002,1185,1.493,1186,1.493,1187,1.493,1188,1.493,1189,1.493,1190,1.493,1191,1.493,1192,1.493,1193,1.493,1194,2.002,1195,1.493,1196,1.493,1197,3.334,1198,1.493,1199,1.493,1200,1.493,1201,1.493,1202,2.407,1203,2.549,1204,2.903,1205,1.493,1206,1.173,1207,1.493,1208,1.493,1209,1.493,1210,1.493,1211,1.493,1212,1.493,1213,2.219,1214,2.549,1215,1.493,1216,1.3,1217,3.942,1218,3.716,1219,1.493,1220,5.424,1221,2.549,1222,1.3,1223,3.334,1224,3.334,1225,1.493,1226,2.549,1227,1.493,1228,1.493,1229,1.493,1230,1.493,1231,1.493,1232,2.549,1233,1.493,1234,1.493,1235,1.493,1236,3.334,1237,1.493,1238,1.493,1239,3.334,1240,2.549,1241,2.549,1242,1.493,1243,4.82,1244,4.82,1245,1.493,1246,3.334,1247,1.493,1248,1.493,1249,1.493,1250,3.942,1251,3.48,1252,1.493,1253,1.493,1254,2.549,1255,1.493,1256,2.549,1257,4.426,1258,1.493,1259,1.493,1260,1.493,1261,1.493,1262,2.549,1263,2.549,1264,1.493,1265,1.493,1266,1.493,1267,1.493,1268,1.493,1269,3.334,1270,1.493,1271,2.549,1272,4.426,1273,4.748,1274,1.493,1275,1.493,1276,2.903,1277,2.549,1278,2.549,1279,1.493,1280,2.549,1281,1.493,1282,1.493,1283,1.493,1284,2.549,1285,1.493,1286,1.493,1287,1.493,1288,1.493,1289,1.493,1290,2.549,1291,1.493,1292,1.493,1293,1.493,1294,3.942,1295,3.334,1296,1.493,1297,1.493,1298,1.493,1299,2.549,1300,1.493,1301,1.493,1302,4.447,1303,1.493,1304,1.493,1305,2.549,1306,1.493,1307,3.334,1308,3.334,1309,1.493,1310,1.493,1311,1.493,1312,2.549,1313,2.549,1314,1.493,1315,1.493,1316,1.493,1317,1.493,1318,1.173,1319,1.493,1320,2.549,1321,1.493,1322,2.549,1323,1.493,1324,1.493,1325,1.173,1326,1.173,1327,1.493,1328,2.549,1329,1.493,1330,2.549,1331,1.493,1332,1.493,1333,1.493,1334,2.549,1335,1.493,1336,1.493,1337,1.493,1338,1.493,1339,1.493,1340,1.493,1341,1.493,1342,1.493,1343,1.493,1344,2.549,1345,3.334,1346,1.493,1347,1.173,1348,1.173,1349,1.493,1350,1.493,1351,1.173,1352,3.853,1353,1.493,1354,2.549,1355,3.334,1356,1.493,1357,1.493,1358,1.493,1359,2.002,1360,1.493,1361,1.493,1362,1.493,1363,1.493,1364,1.3,1365,1.493,1366,1.493,1367,1.493,1368,2.549,1369,1.493,1370,1.493,1371,1.493,1372,2.549,1373,1.493,1374,1.493,1375,2.549,1376,2.549,1377,1.493,1378,1.493,1379,1.078,1380,1.078,1381,1.493,1382,1.493,1383,1.493,1384,1.493,1385,1.493,1386,2.549,1387,2.549,1388,1.493,1389,1.493,1390,1.493,1391,1.493,1392,1.3,1393,1.173,1394,1.493,1395,1.493,1396,1.493,1397,1.493,1398,1.493,1399,1.493,1400,1.493,1401,2.549,1402,1.493,1403,1.493,1404,1.493,1405,2.549,1406,1.493,1407,1.493,1408,1.173,1409,1.493,1410,2.549,1411,1.493,1412,1.493,1413,1.493,1414,1.493,1415,2.549,1416,1.493,1417,1.493,1418,1.493,1419,1.493,1420,1.493,1421,2.549,1422,1.173,1423,1.493,1424,2.549,1425,2.549,1426,1.493,1427,1.493,1428,1.493,1429,1.493,1430,1.493,1431,1.493]],["title/modules.html",[2,1.884]],["body/modules.html",[1,3.093,2,1.558,8,0.01,37,0.01,38,0.01,83,3.327,93,2.046,94,2.135,245,3.62,506,2.731,570,3.327,586,3.327,600,3.327,604,3.093,653,3.327,675,3.327,761,3.327,806,3.327,840,3.327,867,3.093,977,3.327,1380,5.808,1432,7.574,1433,5.95,1434,8.262,1435,8.044,1436,8.044]],["title/overview.html",[1437,4.852]],["body/overview.html",[0,0.508,1,3.46,2,0.961,8,0.013,37,0.007,38,0.007,41,1.21,67,0.997,74,3.242,83,4.991,84,1.075,85,1.317,86,1.317,87,1.162,88,1.21,89,1.162,90,2.474,91,2.474,92,2.474,93,3.419,94,3.34,95,1.985,96,1.317,97,1.261,103,0.894,120,1.317,160,1.514,260,2.474,261,2.474,262,2.474,263,2.474,264,4.508,506,3.836,567,3.242,570,4.143,571,2.474,572,2.474,581,3.242,586,4.991,587,2.474,588,2.474,600,4.991,601,2.474,602,2.474,603,2.474,604,3.46,605,3.46,648,3.242,653,4.991,654,2.474,655,2.474,670,3.242,675,4.991,676,2.474,677,2.474,725,2.892,761,5.357,762,2.474,763,2.474,764,2.474,801,3.242,806,4.991,807,2.474,809,2.474,835,3.242,840,4.991,841,2.474,842,2.474,867,3.46,972,3.055,977,5.471,978,2.474,979,2.474,980,2.474,1077,2.474,1392,2.474,1437,2.474,1438,2.841,1439,2.841,1440,2.841,1441,2.841]],["title/properties.html",[122,1.863,1089,2.991]],["body/properties.html",[8,0.013,37,0.011,38,0.011,122,2.185,385,3.633,599,3.878,853,3.878,1218,4.171,1222,5.031,1276,5.031,1352,5.031,1364,5.031,1379,4.171,1442,5.778,1443,5.778,1444,5.778,1445,5.778,1446,5.778,1447,5.778,1448,5.778,1449,5.778,1450,5.778,1451,5.778]],["title/miscellaneous/variables.html",[484,3.869,1123,2.161]],["body/miscellaneous/variables.html",[5,0.052,8,0.014,16,1.7,19,2.871,21,2.871,23,2.871,24,2.871,25,2.871,26,2.871,27,2.871,28,2.871,37,0.005,38,0.005,43,0.204,52,0.391,53,1.561,54,0.757,56,0.679,58,1.365,78,2.59,148,1.932,188,4.331,190,4.291,292,2.79,478,1.85,482,5.535,484,1.598,536,2.38,583,2.59,606,1.598,608,2.871,609,2.871,610,2.871,611,2.871,612,2.871,613,2.871,614,2.871,615,2.871,643,2.213,650,2.59,672,2.59,689,1.296,716,2.614,727,2.59,803,2.59,837,2.59,875,1.365,942,1.464,974,2.59,1001,2.38,1043,1.771,1044,6.213,1049,1.771,1051,1.771,1057,1.771,1059,1.771,1061,1.771,1064,1.771,1065,1.771,1066,1.771,1067,1.771,1068,1.771,1069,1.771,1070,1.771,1071,1.771,1072,1.771,1073,1.771,1074,1.771,1078,1.598,1079,2.59,1080,2.871,1081,1.598,1082,2.59,1083,2.871,1084,4.574,1085,3.62,1086,3.62,1087,2.871,1123,1.279,1150,1.771,1151,1.771,1169,1.469,1202,2.38,1216,1.771,1251,1.469,1452,2.034,1453,2.034,1454,2.034,1455,2.034,1456,2.034,1457,2.034,1458,2.034,1459,2.034,1460,2.034,1461,5.923,1462,2.034,1463,2.034,1464,2.034,1465,2.034,1466,4.781,1467,1.598,1468,4.781,1469,3.297,1470,2.034,1471,1.598,1472,3.266,1473,1.598,1474,2.034,1475,1.365,1476,1.598,1477,2.034,1478,3.756,1479,1.469,1480,1.598,1481,1.469,1482,2.034,1483,2.034,1484,2.034,1485,2.034,1486,1.598,1487,1.598,1488,2.034,1489,2.034,1490,2.034,1491,2.034,1492,2.034,1493,2.034,1494,2.034,1495,6.549,1496,3.297,1497,3.297,1498,3.297,1499,3.297,1500,3.297,1501,3.297,1502,3.297,1503,3.297,1504,3.297,1505,3.297,1506,3.297,1507,2.034,1508,2.034,1509,3.297,1510,2.034,1511,3.297,1512,3.297,1513,2.034,1514,3.297,1515,3.297,1516,3.297,1517,3.297,1518,2.034,1519,2.034,1520,2.034,1521,2.034,1522,2.034,1523,2.034,1524,2.034,1525,3.297]],["title/additional-documentation/running-migrations-and-seeders.html",[502,1.873,1475,1.741,1481,1.873,1526,2.259,1527,2.038]],["body/additional-documentation/running-migrations-and-seeders.html",[0,0.42,5,0.16,8,0.012,37,0.006,38,0.006,51,0.713,52,0.711,54,0.849,58,3.071,84,1.399,116,1.696,118,0.924,120,1.089,127,1.845,144,2.192,148,1.955,160,1.252,174,1.696,182,1.696,195,2.67,223,1.392,308,3.945,323,2.326,355,1.392,356,1.577,463,1.845,464,3.747,478,1.318,485,1.845,502,4.529,524,1.845,536,4.075,547,4.434,553,1.696,559,1.696,599,3.483,689,1.799,716,4.389,853,3.071,875,3.788,885,2.906,942,2.785,1001,1.696,1020,1.845,1165,2.906,1167,2.906,1168,1.845,1169,4.529,1170,2.906,1173,3.594,1177,5.105,1179,1.845,1182,4.709,1184,1.845,1194,1.845,1202,4.529,1206,2.906,1218,1.696,1251,2.67,1273,1.845,1302,1.845,1318,2.906,1325,1.845,1326,1.845,1347,1.845,1348,3.594,1351,1.845,1359,1.845,1379,1.696,1380,1.696,1393,1.845,1408,1.845,1422,1.845,1433,1.845,1467,5.654,1471,5.654,1472,3.594,1473,4.077,1475,1.577,1476,1.845,1478,2.906,1479,5.616,1480,1.845,1481,1.696,1486,1.845,1487,1.845,1527,1.845,1528,2.046,1529,2.046,1530,2.046,1531,2.046,1532,2.046,1533,2.046,1534,2.046,1535,2.046,1536,2.046,1537,3.983,1538,2.046,1539,2.046,1540,2.046,1541,3.221,1542,3.983,1543,2.046,1544,2.046,1545,3.983,1546,3.221,1547,2.046,1548,3.221,1549,3.221,1550,2.046,1551,3.983,1552,3.221,1553,3.983,1554,2.046,1555,2.046,1556,2.046,1557,2.046,1558,3.221,1559,3.221,1560,3.221,1561,2.046,1562,2.046,1563,2.046,1564,2.046,1565,3.221,1566,2.046,1567,2.046,1568,2.046,1569,2.046,1570,2.046,1571,2.046,1572,2.046,1573,3.221,1574,2.046,1575,2.046,1576,2.046,1577,2.046,1578,2.046,1579,2.046,1580,2.046,1581,2.046,1582,2.046,1583,2.046,1584,2.046,1585,2.046,1586,2.046,1587,2.046,1588,2.046,1589,2.046,1590,2.046,1591,2.046,1592,2.046,1593,2.046,1594,2.046,1595,2.046,1596,2.046,1597,2.046]],["title/additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html",[1204,2.259,1213,2.259,1475,1.741,1479,1.873,1526,2.259]],["body/additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html",[0,0.42,5,0.16,8,0.012,37,0.006,38,0.006,51,0.713,52,0.711,54,0.849,58,3.071,84,1.399,116,1.696,118,0.924,120,1.089,127,1.845,144,2.192,148,1.955,160,1.252,174,1.696,182,1.696,195,2.67,223,1.392,308,3.945,323,2.326,355,1.392,356,1.577,463,1.845,464,3.747,478,1.318,485,1.845,502,4.529,524,1.845,536,4.075,547,4.434,553,1.696,559,1.696,599,3.483,689,1.799,716,4.389,853,3.071,875,3.788,885,2.906,942,2.785,1001,1.696,1020,1.845,1165,2.906,1167,2.906,1168,1.845,1169,4.529,1170,2.906,1173,3.594,1177,5.105,1179,1.845,1182,4.709,1184,1.845,1194,1.845,1202,4.529,1206,2.906,1218,1.696,1251,2.67,1273,1.845,1302,1.845,1318,2.906,1325,1.845,1326,1.845,1347,1.845,1348,3.594,1351,1.845,1359,1.845,1379,1.696,1380,1.696,1393,1.845,1408,1.845,1422,1.845,1433,1.845,1467,5.654,1471,5.654,1472,3.594,1473,4.077,1475,1.577,1476,1.845,1478,2.906,1479,5.616,1480,1.845,1481,1.696,1486,1.845,1487,1.845,1527,1.845,1528,2.046,1529,2.046,1530,2.046,1531,2.046,1532,2.046,1533,2.046,1534,2.046,1535,2.046,1536,2.046,1537,3.983,1538,2.046,1539,2.046,1540,2.046,1541,3.221,1542,3.983,1543,2.046,1544,2.046,1545,3.983,1546,3.221,1547,2.046,1548,3.221,1549,3.221,1550,2.046,1551,3.983,1552,3.221,1553,3.983,1554,2.046,1555,2.046,1556,2.046,1557,2.046,1558,3.221,1559,3.221,1560,3.221,1561,2.046,1562,2.046,1563,2.046,1564,2.046,1565,3.221,1566,2.046,1567,2.046,1568,2.046,1569,2.046,1570,2.046,1571,2.046,1572,2.046,1573,3.221,1574,2.046,1575,2.046,1576,2.046,1577,2.046,1578,2.046,1579,2.046,1580,2.046,1581,2.046,1582,2.046,1583,2.046,1584,2.046,1585,2.046,1586,2.046,1587,2.046,1588,2.046,1589,2.046,1590,2.046,1591,2.046,1592,2.046,1593,2.046,1594,2.046,1595,2.046,1596,2.046,1597,2.046]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreatePermissionTables1741966377333.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"entities/Permission.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"entities/Role.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["0",{"_index":533,"title":{},"body":{"classes/DatabaseUtil.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["0.0.1",{"_index":1443,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":1106,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":1117,"title":{},"body":{"dependencies.html":{}}}],["0.3.20",{"_index":1120,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1105,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1040,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1038,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1046,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1052,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1056,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1054,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1053,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1062,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":160,"title":{"classes/Organization-1.html":{},"classes/User-1.html":{},"classes/UserResolver-1.html":{}},"body":{"entities/BaseEntity.html":{},"classes/CreateUserInput.html":{},"index.html":{},"overview.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["10",{"_index":537,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["10.0.0",{"_index":1095,"title":{},"body":{"dependencies.html":{}}}],["10.4.15",{"_index":1097,"title":{},"body":{"dependencies.html":{}}}],["11.0.0",{"_index":1100,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":557,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["12.2.2",{"_index":1094,"title":{},"body":{"dependencies.html":{}}}],["13",{"_index":1440,"title":{},"body":{"overview.html":{}}}],["16.10.0",{"_index":1109,"title":{},"body":{"dependencies.html":{}}}],["16.4.7",{"_index":1107,"title":{},"body":{"dependencies.html":{}}}],["17",{"_index":1438,"title":{},"body":{"overview.html":{}}}],["17.0.33",{"_index":1102,"title":{},"body":{"dependencies.html":{}}}],["17.13.3",{"_index":1112,"title":{},"body":{"dependencies.html":{}}}],["17.7.2",{"_index":1122,"title":{},"body":{"dependencies.html":{}}}],["19",{"_index":563,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["1})@field(undefined",{"_index":428,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["2",{"_index":355,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/DatabaseUtil.html":{},"modules/GraphQLMicroserviceModule.html":{},"entities/OrganizationMetadata.html":{},"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["2.9.3",{"_index":1090,"title":{},"body":{"dependencies.html":{}}}],["22",{"_index":1175,"title":{},"body":{"index.html":{}}}],["27",{"_index":1441,"title":{},"body":{"overview.html":{}}}],["3",{"_index":559,"title":{},"body":{"classes/DatabaseUtil.html":{},"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["3.3.0",{"_index":1096,"title":{},"body":{"dependencies.html":{}}}],["3d",{"_index":1341,"title":{},"body":{"index.html":{}}}],["4",{"_index":1351,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["4.11.3",{"_index":1092,"title":{},"body":{"dependencies.html":{}}}],["48",{"_index":534,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["5",{"_index":356,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"entities/OrganizationMetadata.html":{},"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["5.0",{"_index":760,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["5.1.1",{"_index":1103,"title":{},"body":{"dependencies.html":{}}}],["5.4.2",{"_index":1111,"title":{},"body":{"dependencies.html":{}}}],["5432",{"_index":494,"title":{},"body":{"classes/DataSource.html":{}}}],["6",{"_index":1392,"title":{},"body":{"index.html":{},"overview.html":{}}}],["7",{"_index":561,"title":{},"body":{"classes/DatabaseUtil.html":{},"index.html":{}}}],["7${randombytes.substring(1",{"_index":558,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["7.8.1",{"_index":1119,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":423,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/DatabaseUtil.html":{},"index.html":{}}}],["8.13.1",{"_index":1114,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":1439,"title":{},"body":{"overview.html":{}}}],["9996",{"_index":191,"title":{},"body":{"entities/BaseEntity.html":{}}}],["__dirname",{"_index":1484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["abstract",{"_index":158,"title":{},"body":{"entities/BaseEntity.html":{}}}],["access",{"_index":1246,"title":{},"body":{"index.html":{}}}],["accessors",{"_index":275,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["accurate",{"_index":1316,"title":{},"body":{"index.html":{}}}],["action",{"_index":396,"title":{},"body":{"classes/CreatePermissionTables1741966377333.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["actions",{"_index":1278,"title":{},"body":{"index.html":{}}}],["add",{"_index":365,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreatePermissionTables1741966377333.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["additional",{"_index":1475,"title":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}},"body":{"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["addresses",{"_index":1283,"title":{},"body":{"index.html":{}}}],["admin",{"_index":1146,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["against",{"_index":1265,"title":{},"body":{"index.html":{}}}],["alias",{"_index":1466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allow_interest_earning",{"_index":358,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"entities/OrganizationMetadata.html":{}}}],["allowing",{"_index":1295,"title":{},"body":{"index.html":{}}}],["allowinterestearning",{"_index":735,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["already",{"_index":1335,"title":{},"body":{"index.html":{}}}],["alter",{"_index":381,"title":{},"body":{"classes/CreatePermissionTables1741966377333.html":{}}}],["always",{"_index":462,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["amounts",{"_index":1353,"title":{},"body":{"index.html":{}}}],["angular",{"_index":1238,"title":{},"body":{"index.html":{}}}],["api",{"_index":1224,"title":{},"body":{"index.html":{}}}],["apollo/gateway",{"_index":631,"title":{},"body":{"modules/GraphQLGatewayModule.html":{},"dependencies.html":{}}}],["apollo/gateway/src/config",{"_index":934,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["apollo/server",{"_index":1091,"title":{},"body":{"dependencies.html":{}}}],["apollo/subgraph",{"_index":1093,"title":{},"body":{"dependencies.html":{}}}],["apollofederationdriver",{"_index":639,"title":{},"body":{"modules/GraphQLMicroserviceModule.html":{}}}],["apollofederationdriverconfig",{"_index":640,"title":{},"body":{"modules/GraphQLMicroserviceModule.html":{}}}],["apollogatewaydriver",{"_index":627,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["apollogatewaydriverconfig",{"_index":628,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["app",{"_index":229,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/SeederModule.html":{},"index.html":{}}}],["app.close",{"_index":888,"title":{},"body":{"modules/SeederModule.html":{}}}],["app.connectmicroservice",{"_index":231,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["app.get(service",{"_index":886,"title":{},"body":{"modules/SeederModule.html":{}}}],["app.listen(port",{"_index":242,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["app.startallmicroservices",{"_index":238,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["app.useglobalpipes(new",{"_index":241,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["appconfigmodule",{"_index":1,"title":{"modules/AppConfigModule.html":{}},"body":{"modules/AppConfigModule.html":{},"modules/CommonModule.html":{},"modules.html":{},"overview.html":{}}}],["appconfigservice",{"_index":40,"title":{"injectables/AppConfigService.html":{}},"body":{"injectables/AppConfigService.html":{},"classes/ConfigHelper.html":{},"coverage.html":{}}}],["appconfigservice(configservice",{"_index":297,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["appcontext",{"_index":294,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["appcontext.get(configservice",{"_index":296,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["applied",{"_index":1555,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["applies",{"_index":1544,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["appropriate",{"_index":1426,"title":{},"body":{"index.html":{}}}],["apps",{"_index":1216,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["apps/${microservice}/src/typeorm.data",{"_index":1485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/${schema}/**/**.entity{.ts,.js",{"_index":501,"title":{},"body":{"classes/DataSource.html":{}}}],["apps/${schema}/src/migrations/**/*{.ts,.js",{"_index":503,"title":{},"body":{"classes/DataSource.html":{}}}],["apps/${schema}/src/subscriber/**/*{.ts,.js",{"_index":505,"title":{},"body":{"classes/DataSource.html":{}}}],["apps/.../gateway.module.ts",{"_index":1462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../main.ts",{"_index":1149,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../typeorm.data",{"_index":1461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps//src/seeder/seeder.ts",{"_index":1560,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["apps/auth/src/auth.controller.ts",{"_index":68,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["apps/auth/src/auth.controller.ts:11",{"_index":73,"title":{},"body":{"controllers/AuthController.html":{}}}],["apps/auth/src/auth.module.ts",{"_index":98,"title":{},"body":{"modules/AuthModule.html":{}}}],["apps/auth/src/auth.service.ts",{"_index":113,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["apps/auth/src/auth.service.ts:5",{"_index":114,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/auth/src/main.ts",{"_index":1039,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/auth/src/resolvers/auth.resolver.ts",{"_index":104,"title":{},"body":{"classes/AuthResolver.html":{},"coverage.html":{}}}],["apps/auth/src/resolvers/auth.resolver.ts:6",{"_index":108,"title":{},"body":{"classes/AuthResolver.html":{}}}],["apps/documentation/src/documentation.controller.ts",{"_index":565,"title":{},"body":{"controllers/DocumentationController.html":{},"coverage.html":{}}}],["apps/documentation/src/documentation.controller.ts:9",{"_index":566,"title":{},"body":{"controllers/DocumentationController.html":{}}}],["apps/documentation/src/documentation.module.ts",{"_index":573,"title":{},"body":{"modules/DocumentationModule.html":{}}}],["apps/documentation/src/documentation.service.ts",{"_index":575,"title":{},"body":{"injectables/DocumentationService.html":{},"coverage.html":{}}}],["apps/documentation/src/documentation.service.ts:5",{"_index":576,"title":{},"body":{"injectables/DocumentationService.html":{}}}],["apps/documentation/src/main.ts",{"_index":1041,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/escrow/src/escrow.controller.ts",{"_index":579,"title":{},"body":{"controllers/EscrowController.html":{},"coverage.html":{}}}],["apps/escrow/src/escrow.controller.ts:11",{"_index":580,"title":{},"body":{"controllers/EscrowController.html":{}}}],["apps/escrow/src/escrow.module.ts",{"_index":590,"title":{},"body":{"modules/EscrowModule.html":{}}}],["apps/escrow/src/escrow.service.ts",{"_index":597,"title":{},"body":{"injectables/EscrowService.html":{},"coverage.html":{}}}],["apps/escrow/src/escrow.service.ts:5",{"_index":598,"title":{},"body":{"injectables/EscrowService.html":{}}}],["apps/escrow/src/main.ts",{"_index":1042,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/escrow/src/resolvers/escrow.resolver.ts",{"_index":594,"title":{},"body":{"classes/EscrowResolver.html":{},"coverage.html":{}}}],["apps/escrow/src/resolvers/escrow.resolver.ts:6",{"_index":596,"title":{},"body":{"classes/EscrowResolver.html":{}}}],["apps/escrow/src/typeorm.data",{"_index":1043,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/gateway/src/gateway.module.ts",{"_index":606,"title":{},"body":{"modules/GatewayModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/gateway/src/gateway.service.ts",{"_index":617,"title":{},"body":{"injectables/GatewayService.html":{},"coverage.html":{}}}],["apps/gateway/src/gateway.service.ts:4",{"_index":618,"title":{},"body":{"injectables/GatewayService.html":{}}}],["apps/gateway/src/gateway.service.ts:7",{"_index":619,"title":{},"body":{"injectables/GatewayService.html":{}}}],["apps/gateway/src/main.ts",{"_index":1047,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/media/src/main.ts",{"_index":1048,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/media/src/media.controller.ts",{"_index":646,"title":{},"body":{"controllers/MediaController.html":{},"coverage.html":{}}}],["apps/media/src/media.controller.ts:11",{"_index":647,"title":{},"body":{"controllers/MediaController.html":{}}}],["apps/media/src/media.module.ts",{"_index":657,"title":{},"body":{"modules/MediaModule.html":{}}}],["apps/media/src/media.service.ts",{"_index":664,"title":{},"body":{"injectables/MediaService.html":{},"coverage.html":{}}}],["apps/media/src/media.service.ts:5",{"_index":665,"title":{},"body":{"injectables/MediaService.html":{}}}],["apps/media/src/resolvers/media.resolver.ts",{"_index":661,"title":{},"body":{"classes/MediaResolver.html":{},"coverage.html":{}}}],["apps/media/src/resolvers/media.resolver.ts:6",{"_index":663,"title":{},"body":{"classes/MediaResolver.html":{}}}],["apps/media/src/typeorm.data",{"_index":1049,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/notification/src/main.ts",{"_index":1050,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/notification/src/notification.controller.ts",{"_index":668,"title":{},"body":{"controllers/NotificationController.html":{},"coverage.html":{}}}],["apps/notification/src/notification.controller.ts:11",{"_index":669,"title":{},"body":{"controllers/NotificationController.html":{}}}],["apps/notification/src/notification.module.ts",{"_index":679,"title":{},"body":{"modules/NotificationModule.html":{}}}],["apps/notification/src/notification.service.ts",{"_index":686,"title":{},"body":{"injectables/NotificationService.html":{},"coverage.html":{}}}],["apps/notification/src/notification.service.ts:5",{"_index":687,"title":{},"body":{"injectables/NotificationService.html":{}}}],["apps/notification/src/resolvers/notification.resolver.ts",{"_index":683,"title":{},"body":{"classes/NotificationResolver.html":{},"coverage.html":{}}}],["apps/notification/src/resolvers/notification.resolver.ts:6",{"_index":685,"title":{},"body":{"classes/NotificationResolver.html":{}}}],["apps/notification/src/typeorm.data",{"_index":1051,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/organization/src/entities/external/user.entity.ts",{"_index":956,"title":{},"body":{"classes/User-1.html":{},"coverage.html":{}}}],["apps/organization/src/entities/external/user.entity.ts:10",{"_index":957,"title":{},"body":{"classes/User-1.html":{}}}],["apps/organization/src/entities/external/user.entity.ts:14",{"_index":961,"title":{},"body":{"classes/User-1.html":{}}}],["apps/organization/src/entities/external/user.entity.ts:18",{"_index":959,"title":{},"body":{"classes/User-1.html":{}}}],["apps/organization/src/entities/organization",{"_index":733,"title":{},"body":{"entities/OrganizationMetadata.html":{},"coverage.html":{}}}],["apps/organization/src/entities/organization.entity.ts",{"_index":690,"title":{},"body":{"entities/Organization.html":{},"coverage.html":{}}}],["apps/organization/src/entities/organization.entity.ts:12",{"_index":700,"title":{},"body":{"entities/Organization.html":{}}}],["apps/organization/src/entities/organization.entity.ts:16",{"_index":704,"title":{},"body":{"entities/Organization.html":{}}}],["apps/organization/src/entities/organization.entity.ts:20",{"_index":703,"title":{},"body":{"entities/Organization.html":{}}}],["apps/organization/src/entities/organization.entity.ts:24",{"_index":693,"title":{},"body":{"entities/Organization.html":{}}}],["apps/organization/src/entities/organization.entity.ts:28",{"_index":701,"title":{},"body":{"entities/Organization.html":{}}}],["apps/organization/src/entities/organization.entity.ts:32",{"_index":698,"title":{},"body":{"entities/Organization.html":{}}}],["apps/organization/src/main.ts",{"_index":1055,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/organization/src/migrations/1741518145374",{"_index":317,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"coverage.html":{}}}],["apps/organization/src/organization.controller.ts",{"_index":720,"title":{},"body":{"controllers/OrganizationController.html":{},"coverage.html":{}}}],["apps/organization/src/organization.controller.ts:11",{"_index":724,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["apps/organization/src/organization.controller.ts:16",{"_index":723,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["apps/organization/src/organization.module.ts",{"_index":765,"title":{},"body":{"modules/OrganizationModule.html":{}}}],["apps/organization/src/organization.service.ts",{"_index":780,"title":{},"body":{"injectables/OrganizationService.html":{},"coverage.html":{}}}],["apps/organization/src/organization.service.ts:14",{"_index":790,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["apps/organization/src/organization.service.ts:18",{"_index":786,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["apps/organization/src/organization.service.ts:24",{"_index":789,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["apps/organization/src/organization.service.ts:8",{"_index":785,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["apps/organization/src/resolvers/external/user.resolver.ts",{"_index":1009,"title":{},"body":{"classes/UserResolver-1.html":{},"coverage.html":{}}}],["apps/organization/src/resolvers/external/user.resolver.ts:11",{"_index":1013,"title":{},"body":{"classes/UserResolver-1.html":{}}}],["apps/organization/src/resolvers/external/user.resolver.ts:7",{"_index":1010,"title":{},"body":{"classes/UserResolver-1.html":{}}}],["apps/organization/src/resolvers/organization.resolver.ts",{"_index":773,"title":{},"body":{"classes/OrganizationResolver.html":{},"coverage.html":{}}}],["apps/organization/src/resolvers/organization.resolver.ts:10",{"_index":778,"title":{},"body":{"classes/OrganizationResolver.html":{}}}],["apps/organization/src/resolvers/organization.resolver.ts:15",{"_index":776,"title":{},"body":{"classes/OrganizationResolver.html":{}}}],["apps/organization/src/resolvers/organization.resolver.ts:6",{"_index":775,"title":{},"body":{"classes/OrganizationResolver.html":{}}}],["apps/organization/src/typeorm.data",{"_index":1057,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/payment/src/main.ts",{"_index":1058,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/payment/src/payment.controller.ts",{"_index":799,"title":{},"body":{"controllers/PaymentController.html":{},"coverage.html":{}}}],["apps/payment/src/payment.controller.ts:11",{"_index":800,"title":{},"body":{"controllers/PaymentController.html":{}}}],["apps/payment/src/payment.module.ts",{"_index":810,"title":{},"body":{"modules/PaymentModule.html":{}}}],["apps/payment/src/payment.service.ts",{"_index":817,"title":{},"body":{"injectables/PaymentService.html":{},"coverage.html":{}}}],["apps/payment/src/payment.service.ts:5",{"_index":818,"title":{},"body":{"injectables/PaymentService.html":{}}}],["apps/payment/src/resolvers/payment.resolver.ts",{"_index":814,"title":{},"body":{"classes/PaymentResolver.html":{},"coverage.html":{}}}],["apps/payment/src/resolvers/payment.resolver.ts:6",{"_index":816,"title":{},"body":{"classes/PaymentResolver.html":{}}}],["apps/payment/src/typeorm.data",{"_index":1059,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/property/src/main.ts",{"_index":1060,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/property/src/property.controller.ts",{"_index":833,"title":{},"body":{"controllers/PropertyController.html":{},"coverage.html":{}}}],["apps/property/src/property.controller.ts:11",{"_index":834,"title":{},"body":{"controllers/PropertyController.html":{}}}],["apps/property/src/property.module.ts",{"_index":844,"title":{},"body":{"modules/PropertyModule.html":{}}}],["apps/property/src/property.service.ts",{"_index":851,"title":{},"body":{"injectables/PropertyService.html":{},"coverage.html":{}}}],["apps/property/src/property.service.ts:5",{"_index":852,"title":{},"body":{"injectables/PropertyService.html":{}}}],["apps/property/src/resolvers/property.resolver.ts",{"_index":848,"title":{},"body":{"classes/PropertyResolver.html":{},"coverage.html":{}}}],["apps/property/src/resolvers/property.resolver.ts:6",{"_index":850,"title":{},"body":{"classes/PropertyResolver.html":{}}}],["apps/property/src/typeorm.data",{"_index":1061,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/user/src/dtos/create",{"_index":409,"title":{},"body":{"classes/CreateUserInput.html":{},"coverage.html":{}}}],["apps/user/src/entities/external/organization.entity.ts",{"_index":710,"title":{},"body":{"classes/Organization-1.html":{},"coverage.html":{}}}],["apps/user/src/entities/external/organization.entity.ts:10",{"_index":712,"title":{},"body":{"classes/Organization-1.html":{}}}],["apps/user/src/entities/permission.entity.ts",{"_index":820,"title":{},"body":{"entities/Permission.html":{},"coverage.html":{}}}],["apps/user/src/entities/permission.entity.ts:10",{"_index":824,"title":{},"body":{"entities/Permission.html":{}}}],["apps/user/src/entities/permission.entity.ts:14",{"_index":822,"title":{},"body":{"entities/Permission.html":{}}}],["apps/user/src/entities/permission.entity.ts:17",{"_index":827,"title":{},"body":{"entities/Permission.html":{}}}],["apps/user/src/entities/role.entity.ts",{"_index":854,"title":{},"body":{"entities/Role.html":{},"coverage.html":{}}}],["apps/user/src/entities/role.entity.ts:17",{"_index":856,"title":{},"body":{"entities/Role.html":{}}}],["apps/user/src/entities/role.entity.ts:21",{"_index":855,"title":{},"body":{"entities/Role.html":{}}}],["apps/user/src/entities/role.entity.ts:32",{"_index":863,"title":{},"body":{"entities/Role.html":{}}}],["apps/user/src/entities/user.entity.ts",{"_index":943,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["apps/user/src/entities/user.entity.ts:13",{"_index":945,"title":{},"body":{"entities/User.html":{}}}],["apps/user/src/entities/user.entity.ts:17",{"_index":946,"title":{},"body":{"entities/User.html":{}}}],["apps/user/src/entities/user.entity.ts:21",{"_index":944,"title":{},"body":{"entities/User.html":{}}}],["apps/user/src/entities/user.entity.ts:24",{"_index":949,"title":{},"body":{"entities/User.html":{}}}],["apps/user/src/entities/user.entity.ts:28",{"_index":950,"title":{},"body":{"entities/User.html":{}}}],["apps/user/src/entities/user.entity.ts:33",{"_index":952,"title":{},"body":{"entities/User.html":{}}}],["apps/user/src/entities/user.entity.ts:37",{"_index":948,"title":{},"body":{"entities/User.html":{}}}],["apps/user/src/entities/user.entity.ts:40",{"_index":947,"title":{},"body":{"entities/User.html":{}}}],["apps/user/src/main.ts",{"_index":1063,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/user/src/migrations/1741519642145",{"_index":402,"title":{},"body":{"classes/CreateRoleTable1741519642145.html":{},"coverage.html":{}}}],["apps/user/src/migrations/1741519705062",{"_index":468,"title":{},"body":{"classes/CreateUserTable1741519705062.html":{},"coverage.html":{}}}],["apps/user/src/migrations/1741966377333",{"_index":376,"title":{},"body":{"classes/CreatePermissionTables1741966377333.html":{},"coverage.html":{}}}],["apps/user/src/resolvers/user.resolver.ts",{"_index":990,"title":{},"body":{"classes/UserResolver.html":{},"coverage.html":{}}}],["apps/user/src/resolvers/user.resolver.ts:11",{"_index":999,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/user/src/resolvers/user.resolver.ts:16",{"_index":1000,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/user/src/resolvers/user.resolver.ts:21",{"_index":996,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/user/src/resolvers/user.resolver.ts:7",{"_index":993,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/user/src/seeder/seeder.service.ts",{"_index":898,"title":{},"body":{"injectables/SeederService.html":{},"coverage.html":{}}}],["apps/user/src/seeder/seeder.service.ts:16",{"_index":905,"title":{},"body":{"injectables/SeederService.html":{}}}],["apps/user/src/seeder/seeder.service.ts:21",{"_index":907,"title":{},"body":{"injectables/SeederService.html":{}}}],["apps/user/src/seeder/seeder.service.ts:36",{"_index":906,"title":{},"body":{"injectables/SeederService.html":{}}}],["apps/user/src/seeder/seeder.service.ts:9",{"_index":903,"title":{},"body":{"injectables/SeederService.html":{}}}],["apps/user/src/typeorm.data",{"_index":1064,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/user/src/user.controller.ts",{"_index":970,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["apps/user/src/user.controller.ts:11",{"_index":971,"title":{},"body":{"controllers/UserController.html":{}}}],["apps/user/src/user.module.ts",{"_index":981,"title":{},"body":{"modules/UserModule.html":{}}}],["apps/user/src/user.service.ts",{"_index":1019,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["apps/user/src/user.service.ts:15",{"_index":1025,"title":{},"body":{"injectables/UserService.html":{}}}],["apps/user/src/user.service.ts:19",{"_index":1024,"title":{},"body":{"injectables/UserService.html":{}}}],["apps/user/src/user.service.ts:23",{"_index":1023,"title":{},"body":{"injectables/UserService.html":{}}}],["apps/user/src/user.service.ts:9",{"_index":1021,"title":{},"body":{"injectables/UserService.html":{}}}],["architecture",{"_index":1236,"title":{},"body":{"index.html":{}}}],["args",{"_index":1001,"title":{},"body":{"classes/UserResolver.html":{},"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["arguments",{"_index":1476,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["argv",{"_index":1085,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["array.from(crypto.getrandomvalues(new",{"_index":541,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["ascending",{"_index":209,"title":{},"body":{"entities/BaseEntity.html":{}}}],["async",{"_index":212,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreatePermissionTables1741966377333.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"modules/DatabaseModule.html":{},"modules/GraphQLGatewayModule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{}}}],["attacks",{"_index":1268,"title":{},"body":{"index.html":{}}}],["auditable",{"_index":1357,"title":{},"body":{"index.html":{}}}],["auditing",{"_index":1356,"title":{},"body":{"index.html":{}}}],["auth",{"_index":116,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["auth.controller",{"_index":99,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":75,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth_client",{"_index":1131,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth_host",{"_index":608,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["auth_port",{"_index":1497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authcommand",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authcommand.ping_auth",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{}}}],["authcontroller",{"_index":66,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticated",{"_index":1430,"title":{},"body":{"index.html":{}}}],["authentication",{"_index":1217,"title":{},"body":{"index.html":{}}}],["authmodule",{"_index":83,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1449,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":1242,"title":{},"body":{"index.html":{}}}],["authorized",{"_index":1431,"title":{},"body":{"index.html":{}}}],["authresolver",{"_index":101,"title":{"classes/AuthResolver.html":{}},"body":{"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"coverage.html":{}}}],["authservice",{"_index":74,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["autoloadentities",{"_index":526,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["automate",{"_index":1588,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["automatically",{"_index":1567,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["autoschemafile",{"_index":642,"title":{},"body":{"modules/GraphQLMicroserviceModule.html":{}}}],["availability",{"_index":1330,"title":{},"body":{"index.html":{}}}],["available",{"_index":1433,"title":{},"body":{"modules.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["await",{"_index":225,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreatePermissionTables1741966377333.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"modules/DatabaseModule.html":{},"modules/GraphQLGatewayModule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"injectables/UserService.html":{}}}],["b.tostring(16).padstart(2",{"_index":544,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["back",{"_index":1549,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["backend",{"_index":1162,"title":{},"body":{"index.html":{}}}],["based",{"_index":195,"title":{},"body":{"entities/BaseEntity.html":{},"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["baseentity",{"_index":119,"title":{"entities/BaseEntity.html":{}},"body":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{},"coverage.html":{}}}],["baseentitytypeorm",{"_index":141,"title":{},"body":{"entities/BaseEntity.html":{}}}],["baseentitytypeorm.usedatasource.call(this",{"_index":168,"title":{},"body":{"entities/BaseEntity.html":{}}}],["bcrypt",{"_index":1028,"title":{},"body":{"injectables/UserService.html":{},"dependencies.html":{}}}],["before",{"_index":1320,"title":{},"body":{"index.html":{}}}],["beforeinsert",{"_index":142,"title":{},"body":{"entities/BaseEntity.html":{}}}],["being",{"_index":202,"title":{},"body":{"entities/BaseEntity.html":{},"index.html":{}}}],["between",{"_index":1384,"title":{},"body":{"index.html":{}}}],["billing",{"_index":1387,"title":{},"body":{"index.html":{}}}],["bit",{"_index":535,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["blacklisting",{"_index":1261,"title":{},"body":{"index.html":{}}}],["booking",{"_index":1333,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":359,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"entities/OrganizationMetadata.html":{}}}],["bootstrap",{"_index":87,"title":{},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/SeederModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["bootstrap(service",{"_index":869,"title":{},"body":{"modules/SeederModule.html":{}}}],["bootstrapper",{"_index":210,"title":{"classes/Bootstrapper.html":{}},"body":{"classes/Bootstrapper.html":{},"coverage.html":{}}}],["both",{"_index":201,"title":{},"body":{"entities/BaseEntity.html":{}}}],["browse",{"_index":1434,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1435,"title":{},"body":{"modules.html":{}}}],["brute",{"_index":1266,"title":{},"body":{"index.html":{}}}],["build",{"_index":929,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["build(...graphnames",{"_index":930,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["builder.util.ts",{"_index":928,"title":{},"body":{"classes/SubgraphsBuilder.html":{},"coverage.html":{}}}],["builder.util.ts:5",{"_index":931,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["bytes",{"_index":539,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["c",{"_index":1471,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["captcha",{"_index":1270,"title":{},"body":{"index.html":{}}}],["cascade",{"_index":370,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreatePermissionTables1741966377333.html":{},"entities/OrganizationMetadata.html":{}}}],["cascade'})@joincolumn({name",{"_index":751,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["case",{"_index":1403,"title":{},"body":{"index.html":{}}}],["ccpa",{"_index":1289,"title":{},"body":{"index.html":{}}}],["changes",{"_index":1348,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["changing",{"_index":1297,"title":{},"body":{"index.html":{}}}],["character",{"_index":335,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreatePermissionTables1741966377333.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["characters",{"_index":548,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["check",{"_index":176,"title":{},"body":{"entities/BaseEntity.html":{}}}],["class",{"_index":36,"title":{"classes/AuthResolver.html":{},"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreatePermissionTables1741966377333.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"classes/DatabaseUtil.html":{},"classes/EscrowResolver.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"classes/Organization-1.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"classes/SubgraphsBuilder.html":{},"classes/User-1.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{}},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreatePermissionTables1741966377333.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"entities/Permission.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"entities/Role.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classdecorator",{"_index":1158,"title":{},"body":{"miscellaneous/functions.html":{}}}],["classes",{"_index":103,"title":{},"body":{"classes/AuthResolver.html":{},"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreatePermissionTables1741966377333.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"classes/DatabaseUtil.html":{},"classes/EscrowResolver.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"classes/Organization-1.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"classes/SubgraphsBuilder.html":{},"classes/User-1.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"overview.html":{}}}],["clear",{"_index":1308,"title":{},"body":{"index.html":{}}}],["cli",{"_index":1202,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["cli.ts",{"_index":1084,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["client.enum.ts",{"_index":1127,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["clients",{"_index":257,"title":{},"body":{"modules/ClientsModule.html":{}}}],["clientsmodule",{"_index":245,"title":{"modules/ClientsModule.html":{}},"body":{"modules/ClientsModule.html":{},"modules.html":{}}}],["clientsmoduleoptions",{"_index":255,"title":{},"body":{"modules/ClientsModule.html":{}}}],["cluster_authmodule",{"_index":90,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":91,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":92,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_commonmodule",{"_index":260,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_exports",{"_index":261,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_imports",{"_index":262,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_providers",{"_index":263,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_documentationmodule",{"_index":571,"title":{},"body":{"modules/DocumentationModule.html":{},"overview.html":{}}}],["cluster_documentationmodule_providers",{"_index":572,"title":{},"body":{"modules/DocumentationModule.html":{},"overview.html":{}}}],["cluster_escrowmodule",{"_index":587,"title":{},"body":{"modules/EscrowModule.html":{},"overview.html":{}}}],["cluster_escrowmodule_imports",{"_index":589,"title":{},"body":{"modules/EscrowModule.html":{}}}],["cluster_escrowmodule_providers",{"_index":588,"title":{},"body":{"modules/EscrowModule.html":{},"overview.html":{}}}],["cluster_gatewaymodule",{"_index":601,"title":{},"body":{"modules/GatewayModule.html":{},"overview.html":{}}}],["cluster_gatewaymodule_imports",{"_index":603,"title":{},"body":{"modules/GatewayModule.html":{},"overview.html":{}}}],["cluster_gatewaymodule_providers",{"_index":602,"title":{},"body":{"modules/GatewayModule.html":{},"overview.html":{}}}],["cluster_mediamodule",{"_index":654,"title":{},"body":{"modules/MediaModule.html":{},"overview.html":{}}}],["cluster_mediamodule_imports",{"_index":656,"title":{},"body":{"modules/MediaModule.html":{}}}],["cluster_mediamodule_providers",{"_index":655,"title":{},"body":{"modules/MediaModule.html":{},"overview.html":{}}}],["cluster_notificationmodule",{"_index":676,"title":{},"body":{"modules/NotificationModule.html":{},"overview.html":{}}}],["cluster_notificationmodule_imports",{"_index":678,"title":{},"body":{"modules/NotificationModule.html":{}}}],["cluster_notificationmodule_providers",{"_index":677,"title":{},"body":{"modules/NotificationModule.html":{},"overview.html":{}}}],["cluster_organizationmodule",{"_index":762,"title":{},"body":{"modules/OrganizationModule.html":{},"overview.html":{}}}],["cluster_organizationmodule_imports",{"_index":763,"title":{},"body":{"modules/OrganizationModule.html":{},"overview.html":{}}}],["cluster_organizationmodule_providers",{"_index":764,"title":{},"body":{"modules/OrganizationModule.html":{},"overview.html":{}}}],["cluster_paymentmodule",{"_index":807,"title":{},"body":{"modules/PaymentModule.html":{},"overview.html":{}}}],["cluster_paymentmodule_imports",{"_index":808,"title":{},"body":{"modules/PaymentModule.html":{}}}],["cluster_paymentmodule_providers",{"_index":809,"title":{},"body":{"modules/PaymentModule.html":{},"overview.html":{}}}],["cluster_propertymodule",{"_index":841,"title":{},"body":{"modules/PropertyModule.html":{},"overview.html":{}}}],["cluster_propertymodule_imports",{"_index":843,"title":{},"body":{"modules/PropertyModule.html":{}}}],["cluster_propertymodule_providers",{"_index":842,"title":{},"body":{"modules/PropertyModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":978,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":979,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":980,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cmd",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{}}}],["collection",{"_index":1291,"title":{},"body":{"index.html":{}}}],["column",{"_index":173,"title":{},"body":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["column.propertyname",{"_index":186,"title":{},"body":{"entities/BaseEntity.html":{}}}],["column.target",{"_index":175,"title":{},"body":{"entities/BaseEntity.html":{}}}],["columnmetadata",{"_index":154,"title":{},"body":{"entities/BaseEntity.html":{}}}],["columnorder",{"_index":151,"title":{},"body":{"entities/BaseEntity.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["columnorder(9999",{"_index":162,"title":{},"body":{"entities/BaseEntity.html":{}}}],["columnorder(9999)@field(undefined",{"_index":131,"title":{},"body":{"entities/BaseEntity.html":{}}}],["columnorder(9999)@field(undefined)@createdatecolumn({name",{"_index":128,"title":{},"body":{"entities/BaseEntity.html":{}}}],["columnorder(undefined)@field(undefined)@primarygeneratedcolumn('uuid",{"_index":136,"title":{},"body":{"entities/BaseEntity.html":{}}}],["columnorder(value",{"_index":1152,"title":{},"body":{"miscellaneous/functions.html":{}}}],["columns",{"_index":194,"title":{},"body":{"entities/BaseEntity.html":{}}}],["command",{"_index":1472,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["commands",{"_index":1206,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["common",{"_index":1232,"title":{},"body":{"index.html":{}}}],["common.service",{"_index":266,"title":{},"body":{"modules/CommonModule.html":{}}}],["commonmodule",{"_index":93,"title":{"modules/CommonModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["commonservice",{"_index":264,"title":{"injectables/CommonService.html":{}},"body":{"modules/CommonModule.html":{},"injectables/CommonService.html":{},"coverage.html":{},"overview.html":{}}}],["communication",{"_index":1271,"title":{},"body":{"index.html":{}}}],["compared",{"_index":203,"title":{},"body":{"entities/BaseEntity.html":{}}}],["compile",{"_index":1190,"title":{},"body":{"index.html":{}}}],["complete",{"_index":1317,"title":{},"body":{"index.html":{}}}],["completed",{"_index":891,"title":{},"body":{"modules/SeederModule.html":{}}}],["compliance",{"_index":1369,"title":{},"body":{"index.html":{}}}],["comply",{"_index":1370,"title":{},"body":{"index.html":{}}}],["complying",{"_index":1286,"title":{},"body":{"index.html":{}}}],["concerns",{"_index":1240,"title":{},"body":{"index.html":{}}}],["condition",{"_index":461,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["conditions",{"_index":1361,"title":{},"body":{"index.html":{}}}],["config.service",{"_index":291,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["confighelper",{"_index":218,"title":{"classes/ConfigHelper.html":{}},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"modules/DatabaseModule.html":{},"classes/SubgraphsBuilder.html":{},"coverage.html":{}}}],["confighelper.databaseconfig",{"_index":523,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["confighelper.getinstance",{"_index":226,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/DatabaseModule.html":{},"classes/SubgraphsBuilder.html":{}}}],["confighelper.getmicroservicehosts(key",{"_index":939,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["confighelper.getmoduleport(module.name",{"_index":240,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["confighelper.instance",{"_index":293,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["confighelper.instance.appconfigservice",{"_index":298,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["confighelper.redisconfig",{"_index":228,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{}}}],["configmodule",{"_index":9,"title":{},"body":{"modules/AppConfigModule.html":{},"classes/ConfigHelper.html":{}}}],["configmodule.forroot",{"_index":14,"title":{},"body":{"modules/AppConfigModule.html":{},"classes/ConfigHelper.html":{}}}],["configservice",{"_index":48,"title":{},"body":{"injectables/AppConfigService.html":{},"classes/ConfigHelper.html":{}}}],["configured",{"_index":1582,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["confirmation",{"_index":1405,"title":{},"body":{"index.html":{}}}],["connections",{"_index":1533,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["consistency",{"_index":1346,"title":{},"body":{"index.html":{}}}],["consistent",{"_index":1349,"title":{},"body":{"index.html":{}}}],["console.error('seeding",{"_index":894,"title":{},"body":{"modules/SeederModule.html":{}}}],["console.log",{"_index":889,"title":{},"body":{"modules/SeederModule.html":{}}}],["console.log(`inserted",{"_index":921,"title":{},"body":{"injectables/SeederService.html":{}}}],["const",{"_index":169,"title":{},"body":{"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"modules/GatewayModule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"injectables/UserService.html":{}}}],["constraint",{"_index":343,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreatePermissionTables1741966377333.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["construct",{"_index":550,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["constructor",{"_index":46,"title":{},"body":{"injectables/AppConfigService.html":{},"classes/ConfigHelper.html":{},"injectables/GatewayService.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"injectables/SeederService.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{}}}],["constructor(configservice",{"_index":47,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["constructor(organizationservice",{"_index":774,"title":{},"body":{"classes/OrganizationResolver.html":{},"classes/UserResolver-1.html":{}}}],["constructor(private",{"_index":61,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"controllers/DocumentationController.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResolver.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{}}}],["constructor(repository",{"_index":783,"title":{},"body":{"injectables/OrganizationService.html":{},"injectables/UserService.html":{}}}],["constructor(rolerepository",{"_index":901,"title":{},"body":{"injectables/SeederService.html":{}}}],["constructor(userservice",{"_index":992,"title":{},"body":{"classes/UserResolver.html":{}}}],["contact",{"_index":1298,"title":{},"body":{"index.html":{}}}],["containing",{"_index":1164,"title":{},"body":{"index.html":{}}}],["control",{"_index":1386,"title":{},"body":{"index.html":{}}}],["controller",{"_index":65,"title":{"controllers/AuthController.html":{},"controllers/DocumentationController.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AuthController.html":{},"controllers/DocumentationController.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controllers",{"_index":67,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["convert",{"_index":545,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["correct",{"_index":553,"title":{},"body":{"classes/DatabaseUtil.html":{},"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["correctly",{"_index":1585,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["corresponding",{"_index":1575,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["coverage",{"_index":1034,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":391,"title":{},"body":{"classes/CreatePermissionTables1741966377333.html":{},"injectables/UserService.html":{}}}],["create(input",{"_index":1022,"title":{},"body":{"injectables/UserService.html":{}}}],["create_user",{"_index":1140,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["created_at",{"_index":129,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["createdat",{"_index":123,"title":{},"body":{"entities/BaseEntity.html":{}}}],["createdatecolumn",{"_index":143,"title":{},"body":{"entities/BaseEntity.html":{}}}],["createorganization",{"_index":1541,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["createorganizationandmetatable.ts",{"_index":318,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"coverage.html":{}}}],["createorganizationandmetatable.ts:44",{"_index":327,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["createorganizationandmetatable.ts:6",{"_index":324,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["createorganizationandmetatable.ts:8",{"_index":329,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["createorganizationandmetatable1741518145374",{"_index":316,"title":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"coverage.html":{}}}],["createpermissiontables.ts",{"_index":377,"title":{},"body":{"classes/CreatePermissionTables1741966377333.html":{},"coverage.html":{}}}],["createpermissiontables.ts:36",{"_index":379,"title":{},"body":{"classes/CreatePermissionTables1741966377333.html":{}}}],["createpermissiontables.ts:4",{"_index":378,"title":{},"body":{"classes/CreatePermissionTables1741966377333.html":{}}}],["createpermissiontables.ts:6",{"_index":380,"title":{},"body":{"classes/CreatePermissionTables1741966377333.html":{}}}],["createpermissiontables1741966377333",{"_index":375,"title":{"classes/CreatePermissionTables1741966377333.html":{}},"body":{"classes/CreatePermissionTables1741966377333.html":{},"coverage.html":{}}}],["createroletable.ts",{"_index":403,"title":{},"body":{"classes/CreateRoleTable1741519642145.html":{},"coverage.html":{}}}],["createroletable.ts:15",{"_index":405,"title":{},"body":{"classes/CreateRoleTable1741519642145.html":{}}}],["createroletable.ts:4",{"_index":404,"title":{},"body":{"classes/CreateRoleTable1741519642145.html":{}}}],["createroletable.ts:6",{"_index":406,"title":{},"body":{"classes/CreateRoleTable1741519642145.html":{}}}],["createroletable1741519642145",{"_index":401,"title":{"classes/CreateRoleTable1741519642145.html":{}},"body":{"classes/CreateRoleTable1741519642145.html":{},"coverage.html":{}}}],["creates",{"_index":1539,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["createuser",{"_index":991,"title":{},"body":{"classes/UserResolver.html":{}}}],["createuser(@args('input",{"_index":1007,"title":{},"body":{"classes/UserResolver.html":{}}}],["createuser(input",{"_index":994,"title":{},"body":{"classes/UserResolver.html":{}}}],["createuserinput",{"_index":408,"title":{"classes/CreateUserInput.html":{}},"body":{"classes/CreateUserInput.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["createusertable.ts",{"_index":469,"title":{},"body":{"classes/CreateUserTable1741519705062.html":{},"coverage.html":{}}}],["createusertable.ts:26",{"_index":471,"title":{},"body":{"classes/CreateUserTable1741519705062.html":{}}}],["createusertable.ts:4",{"_index":470,"title":{},"body":{"classes/CreateUserTable1741519705062.html":{}}}],["createusertable.ts:6",{"_index":472,"title":{},"body":{"classes/CreateUserTable1741519705062.html":{}}}],["createusertable1741519705062",{"_index":467,"title":{"classes/CreateUserTable1741519705062.html":{}},"body":{"classes/CreateUserTable1741519705062.html":{},"coverage.html":{}}}],["custom",{"_index":183,"title":{},"body":{"entities/BaseEntity.html":{}}}],["d",{"_index":1494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["damage",{"_index":1365,"title":{},"body":{"index.html":{}}}],["data",{"_index":1273,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["database",{"_index":308,"title":{},"body":{"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"modules/SeederModule.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["database_host",{"_index":24,"title":{},"body":{"modules/AppConfigModule.html":{},"miscellaneous/variables.html":{}}}],["database_name",{"_index":28,"title":{},"body":{"modules/AppConfigModule.html":{},"miscellaneous/variables.html":{}}}],["database_password",{"_index":27,"title":{},"body":{"modules/AppConfigModule.html":{},"miscellaneous/variables.html":{}}}],["database_port",{"_index":25,"title":{},"body":{"modules/AppConfigModule.html":{},"miscellaneous/variables.html":{}}}],["database_type",{"_index":23,"title":{},"body":{"modules/AppConfigModule.html":{},"miscellaneous/variables.html":{}}}],["database_username",{"_index":26,"title":{},"body":{"modules/AppConfigModule.html":{},"miscellaneous/variables.html":{}}}],["databaseconfig",{"_index":276,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["databasemodule",{"_index":506,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/DatabaseModule.html":{},"modules/OrganizationModule.html":{},"modules/SeederModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["databasemodule.init(schema.organization",{"_index":771,"title":{},"body":{"modules/OrganizationModule.html":{}}}],["databasemodule.init(schema.user",{"_index":987,"title":{},"body":{"modules/UserModule.html":{}}}],["databasemodule.loadentities([organization",{"_index":772,"title":{},"body":{"modules/OrganizationModule.html":{}}}],["databasemodule.loadentities([user",{"_index":988,"title":{},"body":{"modules/UserModule.html":{}}}],["databasemodule.loadentities(entities",{"_index":883,"title":{},"body":{"modules/SeederModule.html":{}}}],["databaseutil",{"_index":156,"title":{"classes/DatabaseUtil.html":{}},"body":{"entities/BaseEntity.html":{},"classes/DatabaseUtil.html":{},"coverage.html":{}}}],["databaseutil.generateuuidv7",{"_index":165,"title":{},"body":{"entities/BaseEntity.html":{}}}],["datasource",{"_index":144,"title":{"classes/DataSource.html":{}},"body":{"entities/BaseEntity.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"coverage.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["datasource.entitymetadatasmap.get(this",{"_index":171,"title":{},"body":{"entities/BaseEntity.html":{}}}],["datasource.getinstance('escrow",{"_index":1518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource.getinstance('media",{"_index":1519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource.getinstance('notification",{"_index":1520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource.getinstance('organization",{"_index":1521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource.getinstance('payment",{"_index":1522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource.getinstance('property",{"_index":1523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource.getinstance('user",{"_index":1524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasourceoptions",{"_index":513,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["datasourcepath",{"_index":1086,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["datasources",{"_index":1209,"title":{},"body":{"index.html":{}}}],["date",{"_index":127,"title":{},"body":{"entities/BaseEntity.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["date.now",{"_index":531,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["db",{"_index":498,"title":{},"body":{"classes/DataSource.html":{}}}],["decimal",{"_index":742,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["declarations",{"_index":86,"title":{},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorator",{"_index":196,"title":{},"body":{"entities/BaseEntity.html":{}}}],["decorators",{"_index":70,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"entities/BaseEntity.html":{},"classes/CreateUserInput.html":{},"controllers/DocumentationController.html":{},"controllers/EscrowController.html":{},"classes/EscrowResolver.html":{},"controllers/MediaController.html":{},"classes/MediaResolver.html":{},"controllers/NotificationController.html":{},"classes/NotificationResolver.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"controllers/PaymentController.html":{},"classes/PaymentResolver.html":{},"entities/Permission.html":{},"controllers/PropertyController.html":{},"classes/PropertyResolver.html":{},"entities/Role.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{}}}],["default",{"_index":188,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreatePermissionTables1741966377333.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"entities/OrganizationMetadata.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["default('development",{"_index":34,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["defaultval",{"_index":1156,"title":{},"body":{"miscellaneous/functions.html":{}}}],["defined",{"_index":49,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreatePermissionTables1741966377333.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"controllers/MediaController.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"entities/Permission.html":{},"controllers/PropertyController.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"entities/Role.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{}}}],["definitions",{"_index":1540,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["delete",{"_index":369,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreatePermissionTables1741966377333.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["delete_user",{"_index":1142,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["deleted_at",{"_index":134,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["deletedat",{"_index":124,"title":{},"body":{"entities/BaseEntity.html":{}}}],["deletedatecolumn",{"_index":145,"title":{},"body":{"entities/BaseEntity.html":{}}}],["delivery",{"_index":1415,"title":{},"body":{"index.html":{}}}],["demandoption",{"_index":1469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dependencies",{"_index":84,"title":{"dependencies.html":{}},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["deposit",{"_index":1352,"title":{},"body":{"index.html":{},"properties.html":{}}}],["deposit_fee_percentage",{"_index":357,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"entities/OrganizationMetadata.html":{}}}],["depositfeepercentage",{"_index":736,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["deposits",{"_index":1219,"title":{},"body":{"index.html":{}}}],["describe",{"_index":1468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":385,"title":{},"body":{"classes/CreatePermissionTables1741966377333.html":{},"classes/CreateRoleTable1741519642145.html":{},"entities/Permission.html":{},"entities/Role.html":{},"index.html":{},"properties.html":{}}}],["designed",{"_index":1529,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["details",{"_index":1299,"title":{},"body":{"index.html":{}}}],["detected",{"_index":1569,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["development",{"_index":1191,"title":{},"body":{"index.html":{}}}],["different",{"_index":1385,"title":{},"body":{"index.html":{}}}],["directive",{"_index":713,"title":{},"body":{"classes/Organization-1.html":{},"classes/User-1.html":{},"miscellaneous/functions.html":{}}}],["directive('@external",{"_index":717,"title":{},"body":{"classes/Organization-1.html":{},"classes/User-1.html":{}}}],["directive('@requires(fields",{"_index":964,"title":{},"body":{"classes/User-1.html":{}}}],["directive.decorator.ts",{"_index":1082,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["displays",{"_index":1556,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["dispute",{"_index":1364,"title":{},"body":{"index.html":{},"properties.html":{}}}],["disputes",{"_index":1239,"title":{},"body":{"index.html":{}}}],["docs",{"_index":1189,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1035,"title":{},"body":{"coverage.html":{}}}],["documentation.controller",{"_index":574,"title":{},"body":{"modules/DocumentationModule.html":{}}}],["documentation.service",{"_index":568,"title":{},"body":{"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{}}}],["documentationcontroller",{"_index":564,"title":{"controllers/DocumentationController.html":{}},"body":{"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"coverage.html":{}}}],["documentationmodule",{"_index":570,"title":{"modules/DocumentationModule.html":{}},"body":{"modules/DocumentationModule.html":{},"modules.html":{},"overview.html":{}}}],["documentationservice",{"_index":567,"title":{"injectables/DocumentationService.html":{}},"body":{"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"coverage.html":{},"overview.html":{}}}],["domain",{"_index":351,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"entities/OrganizationMetadata.html":{}}}],["don't",{"_index":458,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["dotenv",{"_index":481,"title":{},"body":{"classes/DataSource.html":{},"dependencies.html":{}}}],["dotenv.config",{"_index":486,"title":{},"body":{"classes/DataSource.html":{}}}],["double",{"_index":1332,"title":{},"body":{"index.html":{}}}],["down",{"_index":322,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreatePermissionTables1741966377333.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["down(queryrunner",{"_index":325,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreatePermissionTables1741966377333.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["driven",{"_index":1376,"title":{},"body":{"index.html":{}}}],["driver",{"_index":634,"title":{},"body":{"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{}}}],["drop",{"_index":372,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreatePermissionTables1741966377333.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["dtos",{"_index":1230,"title":{},"body":{"index.html":{}}}],["dtos/create",{"_index":1003,"title":{},"body":{"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["dynamically",{"_index":525,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["dynamicmodule",{"_index":253,"title":{},"body":{"modules/ClientsModule.html":{},"modules/DatabaseModule.html":{},"modules/GraphQLGatewayModule.html":{},"modules/SeederModule.html":{}}}],["e.g",{"_index":1251,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["e2e",{"_index":1199,"title":{},"body":{"index.html":{}}}],["each",{"_index":1241,"title":{},"body":{"index.html":{}}}],["eager",{"_index":859,"title":{},"body":{"entities/Role.html":{}}}],["effectively",{"_index":1304,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":1325,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["efficiently",{"_index":1344,"title":{},"body":{"index.html":{}}}],["email",{"_index":339,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"entities/Organization.html":{},"entities/User.html":{},"index.html":{}}}],["emails",{"_index":1282,"title":{},"body":{"index.html":{}}}],["encrypted",{"_index":1274,"title":{},"body":{"index.html":{}}}],["encryption",{"_index":1399,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":1427,"title":{},"body":{"index.html":{}}}],["enhance",{"_index":1593,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["enhancements",{"_index":1587,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["ensure",{"_index":547,"title":{},"body":{"classes/DatabaseUtil.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["ensuring",{"_index":552,"title":{},"body":{"classes/DatabaseUtil.html":{},"index.html":{}}}],["entities",{"_index":120,"title":{},"body":{"entities/BaseEntity.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"entities/Permission.html":{},"entities/Role.html":{},"modules/SeederModule.html":{},"entities/User.html":{},"overview.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["entities/external/user.entity",{"_index":1016,"title":{},"body":{"classes/UserResolver-1.html":{}}}],["entities/organization",{"_index":770,"title":{},"body":{"modules/OrganizationModule.html":{}}}],["entities/organization.entity",{"_index":769,"title":{},"body":{"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"classes/UserResolver-1.html":{}}}],["entities/permission.entity",{"_index":910,"title":{},"body":{"injectables/SeederService.html":{},"modules/UserModule.html":{}}}],["entities/role.entity",{"_index":908,"title":{},"body":{"injectables/SeederService.html":{},"modules/UserModule.html":{}}}],["entities/user.entity",{"_index":985,"title":{},"body":{"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["entity",{"_index":118,"title":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{}},"body":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{},"classes/User-1.html":{},"coverage.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["entityclassorschema",{"_index":512,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/SeederModule.html":{}}}],["enumerations",{"_index":1124,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":485,"title":{},"body":{"classes/DataSource.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["environment",{"_index":292,"title":{},"body":{"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/GatewayModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.is_doc_env",{"_index":1510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["err",{"_index":896,"title":{},"body":{"modules/SeederModule.html":{}}}],["error",{"_index":464,"title":{},"body":{"classes/CreateUserInput.html":{},"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["errors",{"_index":1303,"title":{},"body":{"index.html":{}}}],["escrow",{"_index":599,"title":{},"body":{"injectables/EscrowService.html":{},"index.html":{},"properties.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["escrow.controller",{"_index":591,"title":{},"body":{"modules/EscrowModule.html":{}}}],["escrow.service",{"_index":582,"title":{},"body":{"controllers/EscrowController.html":{},"modules/EscrowModule.html":{}}}],["escrow_client",{"_index":1132,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["escrow_host",{"_index":609,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["escrow_port",{"_index":1498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["escrowcommand",{"_index":583,"title":{},"body":{"controllers/EscrowController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["escrowcommand.ping_escrow",{"_index":584,"title":{},"body":{"controllers/EscrowController.html":{}}}],["escrowcontroller",{"_index":578,"title":{"controllers/EscrowController.html":{}},"body":{"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"coverage.html":{}}}],["escrowmodule",{"_index":586,"title":{"modules/EscrowModule.html":{}},"body":{"modules/EscrowModule.html":{},"modules.html":{},"overview.html":{}}}],["escrowresolver",{"_index":592,"title":{"classes/EscrowResolver.html":{}},"body":{"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"coverage.html":{}}}],["escrowservice",{"_index":581,"title":{"injectables/EscrowService.html":{}},"body":{"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"injectables/EscrowService.html":{},"coverage.html":{},"overview.html":{}}}],["especially",{"_index":1272,"title":{},"body":{"index.html":{}}}],["etc",{"_index":1167,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["event",{"_index":1375,"title":{},"body":{"index.html":{}}}],["example",{"_index":1182,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["execute",{"_index":1574,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["executed",{"_index":1566,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["executes",{"_index":1546,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["exist",{"_index":178,"title":{},"body":{"entities/BaseEntity.html":{}}}],["expiration",{"_index":1258,"title":{},"body":{"index.html":{}}}],["expiry",{"_index":1255,"title":{},"body":{"index.html":{}}}],["export",{"_index":35,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreatePermissionTables1741966377333.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"entities/Permission.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"entities/Role.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":89,"title":{},"body":{"modules/AuthModule.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/GraphQLGatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/SeederModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":1099,"title":{},"body":{"dependencies.html":{}}}],["extending",{"_index":715,"title":{},"body":{"classes/Organization-1.html":{},"classes/User-1.html":{}}}],["extends",{"_index":159,"title":{},"body":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["external",{"_index":1394,"title":{},"body":{"index.html":{}}}],["external/organization.entity",{"_index":954,"title":{},"body":{"entities/User.html":{}}}],["failed",{"_index":895,"title":{},"body":{"modules/SeederModule.html":{}}}],["fails",{"_index":465,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["failure",{"_index":1366,"title":{},"body":{"index.html":{}}}],["failures",{"_index":1401,"title":{},"body":{"index.html":{}}}],["fallback",{"_index":187,"title":{},"body":{"entities/BaseEntity.html":{}}}],["false",{"_index":360,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"entities/OrganizationMetadata.html":{}}}],["fast",{"_index":1324,"title":{},"body":{"index.html":{}}}],["features",{"_index":1329,"title":{},"body":{"index.html":{}}}],["federated",{"_index":962,"title":{},"body":{"classes/User-1.html":{}}}],["federation",{"_index":643,"title":{},"body":{"modules/GraphQLMicroserviceModule.html":{},"classes/Organization-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["feedback",{"_index":1309,"title":{},"body":{"index.html":{}}}],["fetch",{"_index":967,"title":{},"body":{"classes/User-1.html":{}}}],["field",{"_index":149,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateUserInput.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"entities/OrganizationMetadata.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{},"classes/User-1.html":{}}}],["field(undefined",{"_index":695,"title":{},"body":{"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{},"classes/User-1.html":{}}}],["field(undefined)@column",{"_index":692,"title":{},"body":{"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"entities/User.html":{}}}],["field(undefined)@column({name",{"_index":702,"title":{},"body":{"entities/Organization.html":{},"entities/OrganizationMetadata.html":{}}}],["field(undefined)@column({unique",{"_index":699,"title":{},"body":{"entities/Organization.html":{}}}],["field(undefined)@directive('@external",{"_index":711,"title":{},"body":{"classes/Organization-1.html":{}}}],["field(undefined)@manytomany(undefined",{"_index":857,"title":{},"body":{"entities/Role.html":{}}}],["field(undefined)@manytoone(undefined)@joincolumn({name",{"_index":951,"title":{},"body":{"entities/User.html":{}}}],["field(undefined)@primarycolumn",{"_index":823,"title":{},"body":{"entities/Permission.html":{},"entities/Role.html":{}}}],["file",{"_index":5,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreatePermissionTables1741966377333.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"entities/Permission.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"entities/Role.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["financial",{"_index":1372,"title":{},"body":{"index.html":{}}}],["find",{"_index":1020,"title":{},"body":{"injectables/UserService.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["find_organization_by_id",{"_index":1515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["findall",{"_index":781,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["findone",{"_index":782,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["findone(where",{"_index":787,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["findonebyid",{"_index":721,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["findonebyid(id",{"_index":722,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["findoptionswhere",{"_index":788,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["firstname",{"_index":411,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"entities/User.html":{}}}],["fk_0ab5175ebb91e7a07f850acf42e",{"_index":398,"title":{},"body":{"classes/CreatePermissionTables1741966377333.html":{}}}],["fk_5d5086bd299f773d403574cf1c8",{"_index":397,"title":{},"body":{"classes/CreatePermissionTables1741966377333.html":{}}}],["fk_a2cecd1a3531c0b041e29ba46e1",{"_index":383,"title":{},"body":{"classes/CreatePermissionTables1741966377333.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["fk_ace513fa30d485cfd25c11a9e4a",{"_index":394,"title":{},"body":{"classes/CreatePermissionTables1741966377333.html":{}}}],["fk_ad9c5b4a8fb0a54d63b84710190",{"_index":366,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["flag",{"_index":1562,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["float",{"_index":756,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["follow",{"_index":1187,"title":{},"body":{"index.html":{}}}],["following",{"_index":1172,"title":{},"body":{"index.html":{}}}],["force",{"_index":1267,"title":{},"body":{"index.html":{}}}],["foreign",{"_index":367,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreatePermissionTables1741966377333.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["format",{"_index":554,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["found",{"_index":1581,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["frontend",{"_index":1237,"title":{},"body":{"index.html":{}}}],["function",{"_index":184,"title":{},"body":{"entities/BaseEntity.html":{},"coverage.html":{}}}],["functionality",{"_index":1323,"title":{},"body":{"index.html":{}}}],["functions",{"_index":1148,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["future",{"_index":1586,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["gateway",{"_index":620,"title":{},"body":{"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"index.html":{}}}],["gateway.module.ts",{"_index":622,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["gateway.module.ts:10",{"_index":624,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["gateway.service",{"_index":607,"title":{},"body":{"modules/GatewayModule.html":{}}}],["gateway_host",{"_index":1506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gateway_port",{"_index":1499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gatewaymodule",{"_index":600,"title":{"modules/GatewayModule.html":{}},"body":{"modules/GatewayModule.html":{},"modules.html":{},"overview.html":{}}}],["gatewayservice",{"_index":605,"title":{"injectables/GatewayService.html":{}},"body":{"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"coverage.html":{},"overview.html":{}}}],["gdpr",{"_index":1288,"title":{},"body":{"index.html":{}}}],["general",{"_index":1535,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["generate",{"_index":536,"title":{},"body":{"classes/DatabaseUtil.html":{},"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["generates",{"_index":1543,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["generateuuid",{"_index":163,"title":{},"body":{"entities/BaseEntity.html":{}}}],["generateuuidv7",{"_index":529,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["generating",{"_index":1408,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["gensalt",{"_index":1026,"title":{},"body":{"injectables/UserService.html":{}}}],["getcolumnorder",{"_index":152,"title":{},"body":{"entities/BaseEntity.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getcolumnorder(target",{"_index":1154,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getcolumnorder(target.prototype",{"_index":185,"title":{},"body":{"entities/BaseEntity.html":{}}}],["getconfig",{"_index":45,"title":{},"body":{"injectables/AppConfigService.html":{},"classes/ConfigHelper.html":{}}}],["getconfig(key",{"_index":55,"title":{},"body":{"injectables/AppConfigService.html":{},"classes/ConfigHelper.html":{}}}],["getdatabaseconfig",{"_index":289,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["gethello",{"_index":69,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/DocumentationController.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"injectables/EscrowService.html":{},"controllers/MediaController.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"injectables/NotificationService.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"injectables/PropertyService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["getinstance",{"_index":272,"title":{},"body":{"classes/ConfigHelper.html":{},"classes/DataSource.html":{}}}],["getinstance(schema",{"_index":476,"title":{},"body":{"classes/DataSource.html":{}}}],["getmicroservicehosts",{"_index":273,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["getmicroservicehosts(microservicename",{"_index":281,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["getmoduleport",{"_index":274,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["getmoduleport(modulename",{"_index":284,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["getordersafely",{"_index":172,"title":{},"body":{"entities/BaseEntity.html":{}}}],["getordersafely(xcolumn",{"_index":205,"title":{},"body":{"entities/BaseEntity.html":{}}}],["getordersafely(ycolumn",{"_index":207,"title":{},"body":{"entities/BaseEntity.html":{}}}],["getredisconfig",{"_index":287,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["getting",{"_index":1159,"title":{"index.html":{}},"body":{}}],["global",{"_index":252,"title":{},"body":{"modules/ClientsModule.html":{},"modules/GraphQLGatewayModule.html":{},"index.html":{}}}],["globally",{"_index":1532,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["graph",{"_index":1432,"title":{},"body":{"modules.html":{}}}],["graphname",{"_index":938,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["graphname?.split('_host')?.[0",{"_index":937,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["graphnames",{"_index":932,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["graphnames.map((graphname",{"_index":935,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["graphql",{"_index":1108,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["graphqlfederationdirective",{"_index":706,"title":{},"body":{"entities/Organization.html":{},"classes/Organization-1.html":{},"entities/User.html":{},"classes/User-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["graphqlfederationdirective('@extends",{"_index":714,"title":{},"body":{"classes/Organization-1.html":{},"classes/User-1.html":{}}}],["graphqlfederationdirective('@key(fields",{"_index":709,"title":{},"body":{"entities/Organization.html":{},"classes/Organization-1.html":{},"entities/User.html":{},"classes/User-1.html":{}}}],["graphqlfederationdirective(directive",{"_index":1157,"title":{},"body":{"miscellaneous/functions.html":{}}}],["graphqlgatewaymodule",{"_index":604,"title":{"modules/GraphQLGatewayModule.html":{}},"body":{"modules/GatewayModule.html":{},"modules/GraphQLGatewayModule.html":{},"modules.html":{},"overview.html":{}}}],["graphqlgatewaymodule.register",{"_index":616,"title":{},"body":{"modules/GatewayModule.html":{}}}],["graphqlmicroservicemodule",{"_index":94,"title":{"modules/GraphQLMicroserviceModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/EscrowModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["graphqlmodule",{"_index":626,"title":{},"body":{"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{}}}],["graphqlmodule.forroot",{"_index":641,"title":{},"body":{"modules/GraphQLMicroserviceModule.html":{}}}],["graphqlmodule.forrootasync",{"_index":633,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["guards",{"_index":1235,"title":{},"body":{"index.html":{}}}],["handle",{"_index":1311,"title":{},"body":{"index.html":{}}}],["handling",{"_index":1302,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["hash",{"_index":1027,"title":{},"body":{"injectables/UserService.html":{}}}],["hash(input.password",{"_index":1031,"title":{},"body":{"injectables/UserService.html":{}}}],["hello",{"_index":115,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DocumentationService.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"injectables/MediaService.html":{},"injectables/NotificationService.html":{},"injectables/OrganizationService.html":{},"injectables/PaymentService.html":{},"injectables/PropertyService.html":{},"injectables/UserService.html":{}}}],["help().argv",{"_index":1482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["helper",{"_index":1203,"title":{},"body":{"index.html":{}}}],["here",{"_index":1214,"title":{},"body":{"index.html":{}}}],["hex",{"_index":546,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["high",{"_index":189,"title":{},"body":{"entities/BaseEntity.html":{}}}],["history",{"_index":1557,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["host",{"_index":234,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/SubgraphsBuilder.html":{}}}],["host}:${port}/graphql",{"_index":941,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["https",{"_index":1275,"title":{},"body":{"index.html":{}}}],["id",{"_index":125,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/User.html":{},"classes/User-1.html":{},"classes/UserResolver-1.html":{}}}],["identifier",{"_index":1036,"title":{},"body":{"coverage.html":{}}}],["idx_0ab5175ebb91e7a07f850acf42",{"_index":393,"title":{},"body":{"classes/CreatePermissionTables1741966377333.html":{}}}],["idx_5d5086bd299f773d403574cf1c",{"_index":392,"title":{},"body":{"classes/CreatePermissionTables1741966377333.html":{}}}],["image",{"_index":1337,"title":{},"body":{"index.html":{}}}],["images",{"_index":1339,"title":{},"body":{"index.html":{}}}],["implement",{"_index":1260,"title":{},"body":{"index.html":{}}}],["implementing",{"_index":1269,"title":{},"body":{"index.html":{}}}],["implements",{"_index":319,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreatePermissionTables1741966377333.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["import",{"_index":7,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreatePermissionTables1741966377333.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"entities/Permission.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"entities/Role.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":13,"title":{},"body":{"modules/AppConfigModule.html":{},"modules/AuthModule.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/SeederModule.html":{},"modules/UserModule.html":{}}}],["in/opt",{"_index":1420,"title":{},"body":{"index.html":{}}}],["includes",{"_index":1247,"title":{},"body":{"index.html":{}}}],["index",{"_index":43,"title":{"index.html":{}},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreatePermissionTables1741966377333.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"controllers/MediaController.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"entities/Permission.html":{},"controllers/PropertyController.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"entities/Role.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreatePermissionTables1741966377333.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"entities/Permission.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"entities/Role.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{}}}],["information",{"_index":1281,"title":{},"body":{"index.html":{}}}],["init",{"_index":213,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/DatabaseModule.html":{},"modules/SeederModule.html":{}}}],["init(module",{"_index":214,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["init(schema",{"_index":508,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["init(services",{"_index":871,"title":{},"body":{"modules/SeederModule.html":{}}}],["initial",{"_index":1579,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["injectable",{"_index":39,"title":{"injectables/AppConfigService.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/DocumentationService.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"injectables/MediaService.html":{},"injectables/NotificationService.html":{},"injectables/OrganizationService.html":{},"injectables/PaymentService.html":{},"injectables/PropertyService.html":{},"injectables/SeederService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppConfigService.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/DocumentationService.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"injectables/MediaService.html":{},"injectables/NotificationService.html":{},"injectables/OrganizationService.html":{},"injectables/PaymentService.html":{},"injectables/PropertyService.html":{},"injectables/SeederService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":41,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/DocumentationService.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"injectables/MediaService.html":{},"injectables/NotificationService.html":{},"injectables/OrganizationService.html":{},"injectables/PaymentService.html":{},"injectables/PropertyService.html":{},"injectables/SeederService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectrepository",{"_index":791,"title":{},"body":{"injectables/OrganizationService.html":{},"injectables/SeederService.html":{},"injectables/UserService.html":{}}}],["injectrepository(organization",{"_index":794,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["injectrepository(permission",{"_index":912,"title":{},"body":{"injectables/SeederService.html":{}}}],["injectrepository(role",{"_index":911,"title":{},"body":{"injectables/SeederService.html":{}}}],["injectrepository(user",{"_index":1029,"title":{},"body":{"injectables/UserService.html":{}}}],["input",{"_index":997,"title":{},"body":{"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["input.role",{"_index":1033,"title":{},"body":{"injectables/UserService.html":{}}}],["inputtype",{"_index":441,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["install",{"_index":1184,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["installed",{"_index":1173,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["installinstall",{"_index":1186,"title":{},"body":{"index.html":{}}}],["instance",{"_index":271,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["instead",{"_index":1572,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["integrating",{"_index":1345,"title":{},"body":{"index.html":{}}}],["integration",{"_index":1393,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["integrity",{"_index":1301,"title":{},"body":{"index.html":{}}}],["interactive",{"_index":1591,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["interceptors",{"_index":1234,"title":{},"body":{"index.html":{}}}],["interface",{"_index":1077,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":1231,"title":{},"body":{"index.html":{}}}],["introspectandcompose",{"_index":630,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["invalid",{"_index":1306,"title":{},"body":{"index.html":{}}}],["inversejoincolumn",{"_index":862,"title":{},"body":{"entities/Role.html":{}}}],["ioredis",{"_index":1110,"title":{},"body":{"dependencies.html":{}}}],["is_doc_env",{"_index":1507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isdocenv",{"_index":1083,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isemail",{"_index":442,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["isemail()@isnotempty()@field(undefined",{"_index":415,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["isenum",{"_index":443,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["isenum(userrole",{"_index":466,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["isglobal",{"_index":15,"title":{},"body":{"modules/AppConfigModule.html":{},"classes/ConfigHelper.html":{}}}],["isin",{"_index":444,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["isin(['undefined",{"_index":431,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["isin([math.random",{"_index":460,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["isnotempty",{"_index":445,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["isnotempty()@isenum(userrole)@field(undefined",{"_index":439,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["isnotempty()@isphonenumber()@field(undefined",{"_index":436,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["isnotempty()@isstrongpassword({minlength",{"_index":422,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["isolation",{"_index":1383,"title":{},"body":{"index.html":{}}}],["isoptional",{"_index":446,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["isoptional()@isuuid()@field(undefined",{"_index":420,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["isphonenumber",{"_index":447,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["isstring",{"_index":448,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["isstring()@isnotempty()@field(undefined",{"_index":417,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["isstring()@isnotempty()@validateif(o",{"_index":430,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["isstrongpassword",{"_index":449,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["issues",{"_index":1334,"title":{},"body":{"index.html":{}}}],["isuuid",{"_index":450,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["joi",{"_index":12,"title":{},"body":{"modules/AppConfigModule.html":{},"dependencies.html":{}}}],["joi.number().required",{"_index":22,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["joi.object",{"_index":18,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["joi.string",{"_index":30,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["joi.string().required",{"_index":20,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["join",{"_index":549,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["joincolumn",{"_index":757,"title":{},"body":{"entities/OrganizationMetadata.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["jointable",{"_index":864,"title":{},"body":{"entities/Role.html":{}}}],["jwt",{"_index":1252,"title":{},"body":{"index.html":{}}}],["key",{"_index":59,"title":{},"body":{"injectables/AppConfigService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreatePermissionTables1741966377333.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/Organization-1.html":{},"classes/SubgraphsBuilder.html":{},"index.html":{}}}],["keypart",{"_index":936,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["landlord",{"_index":1277,"title":{},"body":{"index.html":{}}}],["landlords",{"_index":1314,"title":{},"body":{"index.html":{}}}],["large",{"_index":1312,"title":{},"body":{"index.html":{}}}],["last",{"_index":1547,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["lastname",{"_index":412,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"entities/User.html":{}}}],["latest",{"_index":1552,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["learn",{"_index":1212,"title":{},"body":{"index.html":{}}}],["legend",{"_index":85,"title":{},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["lets",{"_index":1205,"title":{},"body":{"index.html":{}}}],["level",{"_index":1389,"title":{},"body":{"index.html":{}}}],["libraries",{"_index":1229,"title":{},"body":{"index.html":{}}}],["libs",{"_index":1166,"title":{},"body":{"index.html":{}}}],["libs/.../auth.command.ts",{"_index":1452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../column",{"_index":1150,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/.../environment.constant.ts",{"_index":1453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../escrow.command.ts",{"_index":1454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../graphql",{"_index":1151,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/.../media.command.ts",{"_index":1455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../micro",{"_index":1126,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../notification.command.ts",{"_index":1456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../organization.command.ts",{"_index":1457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../payment.command.ts",{"_index":1458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../permission.enum.ts",{"_index":1128,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../property.command.ts",{"_index":1459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../role.enum.ts",{"_index":1129,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../schema.constant.ts",{"_index":1460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../user.command.ts",{"_index":1463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/common/src/clients/clients.module.ts",{"_index":246,"title":{},"body":{"modules/ClientsModule.html":{}}}],["libs/common/src/clients/clients.module.ts:12",{"_index":249,"title":{},"body":{"modules/ClientsModule.html":{}}}],["libs/common/src/common.module.ts",{"_index":265,"title":{},"body":{"modules/CommonModule.html":{}}}],["libs/common/src/common.service.ts",{"_index":268,"title":{},"body":{"injectables/CommonService.html":{},"coverage.html":{}}}],["libs/common/src/config/config.helper.ts",{"_index":269,"title":{},"body":{"classes/ConfigHelper.html":{},"coverage.html":{}}}],["libs/common/src/config/config.helper.ts:13",{"_index":280,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.helper.ts:31",{"_index":288,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.helper.ts:37",{"_index":290,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.helper.ts:47",{"_index":285,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.helper.ts:53",{"_index":282,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.helper.ts:63",{"_index":279,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.helper.ts:8",{"_index":278,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.helper.ts:9",{"_index":277,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.module.ts",{"_index":6,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["libs/common/src/config/config.service.ts",{"_index":42,"title":{},"body":{"injectables/AppConfigService.html":{},"coverage.html":{}}}],["libs/common/src/config/config.service.ts:5",{"_index":50,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["libs/common/src/config/config.service.ts:8",{"_index":57,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["libs/common/src/constants/commands/auth.command.ts",{"_index":1065,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/commands/escrow.command.ts",{"_index":1066,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/commands/media.command.ts",{"_index":1067,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/commands/notification.command.ts",{"_index":1068,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/commands/organization.command.ts",{"_index":1069,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/commands/payment.command.ts",{"_index":1070,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/commands/property.command.ts",{"_index":1071,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/commands/user.command.ts",{"_index":1072,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/environment.constant.ts",{"_index":1073,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/schema.constant.ts",{"_index":1074,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/database/database.module.ts",{"_index":507,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["libs/common/src/database/database.module.ts:37",{"_index":514,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["libs/common/src/database/database.module.ts:9",{"_index":509,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["libs/common/src/database/entities/base.entity.ts",{"_index":121,"title":{},"body":{"entities/BaseEntity.html":{},"coverage.html":{}}}],["libs/common/src/database/entities/base.entity.ts:22",{"_index":137,"title":{},"body":{"entities/BaseEntity.html":{}}}],["libs/common/src/database/entities/base.entity.ts:27",{"_index":130,"title":{},"body":{"entities/BaseEntity.html":{}}}],["libs/common/src/database/entities/base.entity.ts:32",{"_index":140,"title":{},"body":{"entities/BaseEntity.html":{}}}],["libs/common/src/database/entities/base.entity.ts:37",{"_index":135,"title":{},"body":{"entities/BaseEntity.html":{}}}],["libs/common/src/database/seeder/seeder",{"_index":1075,"title":{},"body":{"coverage.html":{}}}],["libs/common/src/database/seeder/seeder.module.ts",{"_index":868,"title":{},"body":{"modules/SeederModule.html":{}}}],["libs/common/src/database/seeder/seeder.module.ts:10",{"_index":873,"title":{},"body":{"modules/SeederModule.html":{}}}],["libs/common/src/database/seeder/seeder.module.ts:22",{"_index":870,"title":{},"body":{"modules/SeederModule.html":{}}}],["libs/common/src/database/seeder/seeder.module.ts:30",{"_index":877,"title":{},"body":{"modules/SeederModule.html":{}}}],["libs/common/src/decorators/column",{"_index":1078,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/decorators/graphql",{"_index":1081,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/enums/micro",{"_index":1130,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/common/src/enums/permission.enum.ts",{"_index":1139,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/common/src/enums/role.enum.ts",{"_index":1143,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/common/src/graphql/graphql",{"_index":621,"title":{},"body":{"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{}}}],["libs/common/src/utils/bootstrapper.util.ts",{"_index":211,"title":{},"body":{"classes/Bootstrapper.html":{},"coverage.html":{}}}],["libs/common/src/utils/bootstrapper.util.ts:7",{"_index":215,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["libs/common/src/utils/data",{"_index":474,"title":{},"body":{"classes/DataSource.html":{},"coverage.html":{}}}],["libs/common/src/utils/database.util.ts",{"_index":528,"title":{},"body":{"classes/DatabaseUtil.html":{},"coverage.html":{}}}],["libs/common/src/utils/database.util.ts:2",{"_index":530,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["libs/common/src/utils/subgraphs",{"_index":927,"title":{},"body":{"classes/SubgraphsBuilder.html":{},"coverage.html":{}}}],["license",{"_index":1447,"title":{},"body":{"properties.html":{}}}],["limiting",{"_index":1263,"title":{},"body":{"index.html":{}}}],["listed",{"_index":1321,"title":{},"body":{"index.html":{}}}],["listening",{"_index":244,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["listings",{"_index":1222,"title":{},"body":{"index.html":{},"properties.html":{}}}],["lists",{"_index":1554,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["load",{"_index":483,"title":{},"body":{"classes/DataSource.html":{}}}],["loadentities",{"_index":510,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["loadentities(entities",{"_index":511,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["local",{"_index":1371,"title":{},"body":{"index.html":{}}}],["localhost",{"_index":492,"title":{},"body":{"classes/DataSource.html":{}}}],["located",{"_index":1559,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["location",{"_index":1327,"title":{},"body":{"index.html":{}}}],["log",{"_index":1570,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["logger",{"_index":216,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["logger(`${module.name}bootstrap",{"_index":224,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["logger.log(`microservice",{"_index":243,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["logging",{"_index":1594,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["logo",{"_index":352,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"entities/OrganizationMetadata.html":{}}}],["lts",{"_index":1176,"title":{},"body":{"index.html":{}}}],["m",{"_index":1467,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["machine",{"_index":1171,"title":{},"body":{"index.html":{}}}],["maintaining",{"_index":1300,"title":{},"body":{"index.html":{}}}],["make",{"_index":1180,"title":{},"body":{"index.html":{}}}],["manage",{"_index":1422,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["managed",{"_index":718,"title":{},"body":{"classes/Organization-1.html":{}}}],["management",{"_index":1218,"title":{},"body":{"index.html":{},"properties.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["managing",{"_index":1257,"title":{},"body":{"index.html":{}}}],["mandatory",{"_index":1563,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["manual",{"_index":1528,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["manytomany",{"_index":828,"title":{},"body":{"entities/Permission.html":{},"entities/Role.html":{}}}],["manytomany(undefined",{"_index":825,"title":{},"body":{"entities/Permission.html":{}}}],["manytoone",{"_index":953,"title":{},"body":{"entities/User.html":{}}}],["map((b",{"_index":543,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["match",{"_index":459,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["match'})@field(undefined",{"_index":434,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["matching",{"_index":38,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreatePermissionTables1741966377333.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"entities/Permission.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"entities/Role.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["mechanisms",{"_index":1259,"title":{},"body":{"index.html":{}}}],["media",{"_index":666,"title":{},"body":{"injectables/MediaService.html":{},"index.html":{}}}],["media.controller",{"_index":658,"title":{},"body":{"modules/MediaModule.html":{}}}],["media.service",{"_index":649,"title":{},"body":{"controllers/MediaController.html":{},"modules/MediaModule.html":{}}}],["media_client",{"_index":1133,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["media_host",{"_index":610,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["media_port",{"_index":1500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mediacommand",{"_index":650,"title":{},"body":{"controllers/MediaController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mediacommand.ping_media",{"_index":651,"title":{},"body":{"controllers/MediaController.html":{}}}],["mediacontroller",{"_index":645,"title":{"controllers/MediaController.html":{}},"body":{"controllers/MediaController.html":{},"modules/MediaModule.html":{},"coverage.html":{}}}],["mediamodule",{"_index":653,"title":{"modules/MediaModule.html":{}},"body":{"modules/MediaModule.html":{},"modules.html":{},"overview.html":{}}}],["mediaresolver",{"_index":659,"title":{"classes/MediaResolver.html":{}},"body":{"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"coverage.html":{}}}],["mediaservice",{"_index":648,"title":{"injectables/MediaService.html":{}},"body":{"controllers/MediaController.html":{},"modules/MediaModule.html":{},"injectables/MediaService.html":{},"coverage.html":{},"overview.html":{}}}],["member",{"_index":1147,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["members",{"_index":1381,"title":{},"body":{"index.html":{}}}],["message",{"_index":432,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["messagepattern",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{}}}],["messagepattern({cmd",{"_index":71,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{}}}],["meta",{"_index":170,"title":{},"body":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"injectables/OrganizationService.html":{}}}],["meta.columns",{"_index":197,"title":{},"body":{"entities/BaseEntity.html":{}}}],["meta.columns].sort((xcolumn",{"_index":198,"title":{},"body":{"entities/BaseEntity.html":{}}}],["meta.organization",{"_index":697,"title":{},"body":{"entities/Organization.html":{}}}],["metadata",{"_index":1116,"title":{},"body":{"dependencies.html":{}}}],["metadata.entity",{"_index":707,"title":{},"body":{"entities/Organization.html":{},"modules/OrganizationModule.html":{}}}],["metadata.entity.ts",{"_index":734,"title":{},"body":{"entities/OrganizationMetadata.html":{},"coverage.html":{}}}],["metadata.entity.ts:16",{"_index":752,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["metadata.entity.ts:20",{"_index":754,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["metadata.entity.ts:24",{"_index":745,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["metadata.entity.ts:28",{"_index":746,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["metadata.entity.ts:38",{"_index":755,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["metadata.entity.ts:48",{"_index":743,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["metadata.entity.ts:52",{"_index":739,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["methods",{"_index":44,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreatePermissionTables1741966377333.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"controllers/MediaController.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{}}}],["microservice",{"_index":716,"title":{},"body":{"classes/Organization-1.html":{},"classes/User-1.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["microservice's",{"_index":1565,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["microservice.module.ts",{"_index":638,"title":{},"body":{"modules/GraphQLMicroserviceModule.html":{}}}],["microserviceclient",{"_index":1125,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["microservicename",{"_index":283,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["microservicename}_host`.touppercase",{"_index":313,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["microservicename}_port`.touppercase",{"_index":314,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["microserviceoptions",{"_index":221,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["microservices",{"_index":1165,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["migration",{"_index":1479,"title":{"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}},"body":{"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["migration:${command",{"_index":1492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migrationinterface",{"_index":320,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreatePermissionTables1741966377333.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["migrations",{"_index":502,"title":{"additional-documentation/running-migrations-and-seeders.html":{}},"body":{"classes/DataSource.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["migrationstablename",{"_index":487,"title":{},"body":{"classes/DataSource.html":{}}}],["minlength",{"_index":453,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["minlowercase",{"_index":424,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["minnumbers",{"_index":425,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["minsymbols",{"_index":426,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["minuppercase",{"_index":427,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["miscellaneous",{"_index":1123,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":1194,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["module",{"_index":0,"title":{"modules/AppConfigModule.html":{},"modules/AuthModule.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/SeederModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppConfigModule.html":{},"modules/AuthModule.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/SeederModule.html":{},"modules/UserModule.html":{},"overview.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["module).catch((err",{"_index":893,"title":{},"body":{"modules/SeederModule.html":{}}}],["modulename",{"_index":286,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["modulename?.split('module')?.[0]?.touppercase",{"_index":310,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppConfigModule.html":{},"modules/AuthModule.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/SeederModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["money",{"_index":1354,"title":{},"body":{"index.html":{}}}],["monorepo",{"_index":1597,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["monthly",{"_index":1412,"title":{},"body":{"index.html":{}}}],["multi",{"_index":1379,"title":{},"body":{"index.html":{},"properties.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["multiple",{"_index":1596,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["mutation",{"_index":1002,"title":{},"body":{"classes/UserResolver.html":{}}}],["mutation(undefined",{"_index":995,"title":{},"body":{"classes/UserResolver.html":{}}}],["name",{"_index":52,"title":{},"body":{"injectables/AppConfigService.html":{},"classes/AuthResolver.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreatePermissionTables1741966377333.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/EscrowResolver.html":{},"modules/GraphQLGatewayModule.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"entities/Organization.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"classes/PaymentResolver.html":{},"entities/Permission.html":{},"classes/PropertyResolver.html":{},"entities/Role.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["names",{"_index":250,"title":{},"body":{"modules/ClientsModule.html":{},"index.html":{}}}],["names.map((name",{"_index":258,"title":{},"body":{"modules/ClientsModule.html":{}}}],["needed",{"_index":1480,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["nestclientsmodule",{"_index":254,"title":{},"body":{"modules/ClientsModule.html":{}}}],["nestclientsmodule.register(clients",{"_index":259,"title":{},"body":{"modules/ClientsModule.html":{}}}],["nestfactory",{"_index":219,"title":{},"body":{"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{},"modules/SeederModule.html":{}}}],["nestfactory.create(module",{"_index":230,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["nestfactory.createapplicationcontext",{"_index":295,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["nestfactory.createapplicationcontext(module",{"_index":884,"title":{},"body":{"modules/SeederModule.html":{}}}],["nestjs",{"_index":1531,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["nestjs/apollo",{"_index":629,"title":{},"body":{"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":11,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"modules/DatabaseModule.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"injectables/PropertyService.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/common/interfaces/type.interface",{"_index":882,"title":{},"body":{"modules/SeederModule.html":{}}}],["nestjs/config",{"_index":10,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"classes/ConfigHelper.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":220,"title":{},"body":{"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{},"modules/SeederModule.html":{},"dependencies.html":{}}}],["nestjs/graphql",{"_index":111,"title":{},"body":{"classes/AuthResolver.html":{},"entities/BaseEntity.html":{},"classes/CreateUserInput.html":{},"classes/EscrowResolver.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"entities/Permission.html":{},"classes/PropertyResolver.html":{},"entities/Role.html":{},"entities/User.html":{},"classes/User-1.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1098,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":518,"title":{},"body":{"modules/DatabaseModule.html":{},"injectables/OrganizationService.html":{},"injectables/SeederService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/typeorm/dist/interfaces/entity",{"_index":519,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/SeederModule.html":{}}}],["network",{"_index":1404,"title":{},"body":{"index.html":{}}}],["new",{"_index":223,"title":{},"body":{"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/GraphQLGatewayModule.html":{},"coverage.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["node",{"_index":1487,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["node:process",{"_index":480,"title":{},"body":{"classes/DataSource.html":{}}}],["node_env",{"_index":29,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["node_modules/typeorm/cli.js",{"_index":1491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nodejs",{"_index":1174,"title":{},"body":{"index.html":{}}}],["notes",{"_index":1561,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["notification",{"_index":688,"title":{},"body":{"injectables/NotificationService.html":{},"index.html":{}}}],["notification.controller",{"_index":680,"title":{},"body":{"modules/NotificationModule.html":{}}}],["notification.service",{"_index":671,"title":{},"body":{"controllers/NotificationController.html":{},"modules/NotificationModule.html":{}}}],["notification_client",{"_index":1134,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["notification_host",{"_index":611,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["notification_port",{"_index":1501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notificationcommand",{"_index":672,"title":{},"body":{"controllers/NotificationController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["notificationcommand.ping_notification",{"_index":673,"title":{},"body":{"controllers/NotificationController.html":{}}}],["notificationcontroller",{"_index":667,"title":{"controllers/NotificationController.html":{}},"body":{"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"coverage.html":{}}}],["notificationmodule",{"_index":675,"title":{"modules/NotificationModule.html":{}},"body":{"modules/NotificationModule.html":{},"modules.html":{},"overview.html":{}}}],["notificationresolver",{"_index":681,"title":{"classes/NotificationResolver.html":{}},"body":{"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"coverage.html":{}}}],["notifications",{"_index":1223,"title":{},"body":{"index.html":{}}}],["notificationservice",{"_index":670,"title":{"injectables/NotificationService.html":{}},"body":{"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"coverage.html":{},"overview.html":{}}}],["notifying",{"_index":1377,"title":{},"body":{"index.html":{}}}],["now",{"_index":342,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DatabaseUtil.html":{}}}],["now.tostring(16).padstart(12",{"_index":532,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["npm",{"_index":1183,"title":{},"body":{"index.html":{}}}],["null",{"_index":192,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreatePermissionTables1741966377333.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/UserResolver-1.html":{}}}],["nullable",{"_index":132,"title":{},"body":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{},"classes/User-1.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{}}}],["number",{"_index":239,"title":{},"body":{"classes/Bootstrapper.html":{},"entities/OrganizationMetadata.html":{},"miscellaneous/functions.html":{}}}],["numbers",{"_index":1284,"title":{},"body":{"index.html":{}}}],["numeric(5",{"_index":354,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["o.password",{"_index":455,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["o.passwordconfirmation",{"_index":456,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["oauth",{"_index":1253,"title":{},"body":{"index.html":{}}}],["object",{"_index":1495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.values(userpermission",{"_index":922,"title":{},"body":{"injectables/SeederService.html":{}}}],["object.values(userrole",{"_index":915,"title":{},"body":{"injectables/SeederService.html":{}}}],["objecttype",{"_index":150,"title":{},"body":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"entities/OrganizationMetadata.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{},"classes/User-1.html":{}}}],["official",{"_index":1188,"title":{},"body":{"index.html":{}}}],["ondelete",{"_index":749,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["onetoone",{"_index":705,"title":{},"body":{"entities/Organization.html":{},"entities/OrganizationMetadata.html":{}}}],["onetoone(undefined",{"_index":747,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["onupdate",{"_index":750,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["opt",{"_index":1419,"title":{},"body":{"index.html":{}}}],["option('args",{"_index":1474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["option('command",{"_index":1470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["option('microservice",{"_index":1465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["option('title",{"_index":1477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optional",{"_index":54,"title":{},"body":{"injectables/AppConfigService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreatePermissionTables1741966377333.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"modules/GraphQLGatewayModule.html":{},"entities/Organization.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"entities/Permission.html":{},"entities/Role.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["options",{"_index":233,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/DatabaseModule.html":{}}}],["options/findoptionswhere",{"_index":793,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["order",{"_index":181,"title":{},"body":{"entities/BaseEntity.html":{}}}],["order.decorator.ts",{"_index":1079,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["order_key",{"_index":1080,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["orderxcolumn",{"_index":204,"title":{},"body":{"entities/BaseEntity.html":{}}}],["orderycolumn",{"_index":206,"title":{},"body":{"entities/BaseEntity.html":{}}}],["org",{"_index":968,"title":{},"body":{"classes/User-1.html":{}}}],["organization",{"_index":689,"title":{"entities/Organization.html":{},"classes/Organization-1.html":{}},"body":{"entities/Organization.html":{},"classes/Organization-1.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"entities/User.html":{},"classes/User-1.html":{},"classes/UserResolver-1.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["organization\".\"organizations",{"_index":332,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["organization\".\"organizations_metadata",{"_index":349,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["organization(@parent",{"_index":1017,"title":{},"body":{"classes/UserResolver-1.html":{}}}],["organization(user",{"_index":1011,"title":{},"body":{"classes/UserResolver-1.html":{}}}],["organization.controller",{"_index":766,"title":{},"body":{"modules/OrganizationModule.html":{}}}],["organization.entity",{"_index":758,"title":{},"body":{"entities/OrganizationMetadata.html":{},"classes/User-1.html":{}}}],["organization.meta",{"_index":748,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["organization.service",{"_index":726,"title":{},"body":{"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"classes/UserResolver-1.html":{}}}],["organization_client",{"_index":1135,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["organization_host",{"_index":612,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["organization_id",{"_index":361,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{},"entities/OrganizationMetadata.html":{},"entities/User.html":{}}}],["organization_port",{"_index":1502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organizationcommand",{"_index":727,"title":{},"body":{"controllers/OrganizationController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["organizationcommand.find_organization_by_id",{"_index":731,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["organizationcommand.ping_organization",{"_index":729,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["organizationcontroller",{"_index":719,"title":{"controllers/OrganizationController.html":{}},"body":{"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"coverage.html":{}}}],["organizationid",{"_index":413,"title":{},"body":{"classes/CreateUserInput.html":{},"entities/User.html":{},"classes/User-1.html":{}}}],["organizationmetadata",{"_index":694,"title":{"entities/OrganizationMetadata.html":{}},"body":{"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"coverage.html":{}}}],["organizationmodule",{"_index":761,"title":{"modules/OrganizationModule.html":{}},"body":{"modules/OrganizationModule.html":{},"modules.html":{},"overview.html":{}}}],["organizationresolver",{"_index":767,"title":{"classes/OrganizationResolver.html":{}},"body":{"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"coverage.html":{}}}],["organizations",{"_index":708,"title":{},"body":{"entities/Organization.html":{},"classes/OrganizationResolver.html":{},"index.html":{}}}],["organizations_metadata",{"_index":759,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["organizationservice",{"_index":725,"title":{"injectables/OrganizationService.html":{}},"body":{"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"classes/UserResolver-1.html":{},"coverage.html":{},"overview.html":{}}}],["orgid",{"_index":966,"title":{},"body":{"classes/User-1.html":{}}}],["out",{"_index":97,"title":{},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":1437,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":1145,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["package",{"_index":1089,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":1526,"title":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}},"body":{}}],["parameters",{"_index":51,"title":{},"body":{"injectables/AppConfigService.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreatePermissionTables1741966377333.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"modules/GraphQLGatewayModule.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["parent",{"_index":1014,"title":{},"body":{"classes/UserResolver-1.html":{}}}],["passed",{"_index":1538,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["passing",{"_index":1428,"title":{},"body":{"index.html":{}}}],["password",{"_index":306,"title":{},"body":{"classes/ConfigHelper.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"entities/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["passwordconfirmation",{"_index":414,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["passwords",{"_index":433,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["path",{"_index":1210,"title":{},"body":{"index.html":{}}}],["path.join",{"_index":1483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paths/register",{"_index":1490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pay",{"_index":1367,"title":{},"body":{"index.html":{}}}],["payment",{"_index":819,"title":{},"body":{"injectables/PaymentService.html":{},"index.html":{}}}],["payment.controller",{"_index":811,"title":{},"body":{"modules/PaymentModule.html":{}}}],["payment.service",{"_index":802,"title":{},"body":{"controllers/PaymentController.html":{},"modules/PaymentModule.html":{}}}],["payment_client",{"_index":1136,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["payment_host",{"_index":613,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["payment_port",{"_index":1503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paymentcommand",{"_index":803,"title":{},"body":{"controllers/PaymentController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["paymentcommand.ping_payment",{"_index":804,"title":{},"body":{"controllers/PaymentController.html":{}}}],["paymentcontroller",{"_index":798,"title":{"controllers/PaymentController.html":{}},"body":{"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"coverage.html":{}}}],["paymentmodule",{"_index":806,"title":{"modules/PaymentModule.html":{}},"body":{"modules/PaymentModule.html":{},"modules.html":{},"overview.html":{}}}],["paymentresolver",{"_index":812,"title":{"classes/PaymentResolver.html":{}},"body":{"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"coverage.html":{}}}],["payments",{"_index":1220,"title":{},"body":{"index.html":{}}}],["paymentservice",{"_index":801,"title":{"injectables/PaymentService.html":{}},"body":{"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"coverage.html":{},"overview.html":{}}}],["paytm",{"_index":1396,"title":{},"body":{"index.html":{}}}],["pending",{"_index":1545,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["permission",{"_index":389,"title":{"entities/Permission.html":{}},"body":{"classes/CreatePermissionTables1741966377333.html":{},"entities/Permission.html":{},"entities/Role.html":{},"injectables/SeederService.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["permission.entity",{"_index":865,"title":{},"body":{"entities/Role.html":{}}}],["permission.roles",{"_index":858,"title":{},"body":{"entities/Role.html":{}}}],["permissionexists",{"_index":924,"title":{},"body":{"injectables/SeederService.html":{}}}],["permissionname",{"_index":923,"title":{},"body":{"injectables/SeederService.html":{}}}],["permissionrepository",{"_index":902,"title":{},"body":{"injectables/SeederService.html":{}}}],["permissions",{"_index":831,"title":{},"body":{"entities/Permission.html":{},"entities/Role.html":{},"injectables/SeederService.html":{},"index.html":{}}}],["personal",{"_index":1279,"title":{},"body":{"index.html":{}}}],["pg",{"_index":1113,"title":{},"body":{"dependencies.html":{}}}],["phone",{"_index":340,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"entities/Organization.html":{},"entities/User.html":{},"index.html":{}}}],["ping",{"_index":105,"title":{},"body":{"classes/AuthResolver.html":{},"classes/EscrowResolver.html":{},"injectables/GatewayService.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"classes/UserResolver.html":{}}}],["ping_auth",{"_index":1496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ping_escrow",{"_index":1509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ping_media",{"_index":1511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ping_notification",{"_index":1512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ping_organization",{"_index":1514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ping_payment",{"_index":1516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ping_property",{"_index":1517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ping_user",{"_index":1525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pingauth",{"_index":107,"title":{},"body":{"classes/AuthResolver.html":{}}}],["pingescrow",{"_index":595,"title":{},"body":{"classes/EscrowResolver.html":{}}}],["pingmedia",{"_index":662,"title":{},"body":{"classes/MediaResolver.html":{}}}],["pingnotification",{"_index":684,"title":{},"body":{"classes/NotificationResolver.html":{}}}],["pingorganization",{"_index":777,"title":{},"body":{"classes/OrganizationResolver.html":{}}}],["pingpayment",{"_index":815,"title":{},"body":{"classes/PaymentResolver.html":{}}}],["pingproperty",{"_index":849,"title":{},"body":{"classes/PropertyResolver.html":{}}}],["pinguser",{"_index":998,"title":{},"body":{"classes/UserResolver.html":{}}}],["pk_48ce552495d14eae9b187bb6716",{"_index":386,"title":{},"body":{"classes/CreatePermissionTables1741966377333.html":{}}}],["pk_63bbcee313cee9e95bfba3c7d2b",{"_index":363,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["pk_648e3f5447f725579d7d4ffdfb7",{"_index":407,"title":{},"body":{"classes/CreateRoleTable1741519642145.html":{}}}],["pk_6b031fcd0863e3f6b44230163f9",{"_index":347,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["pk_9c116ac03805ca80baf3e8d2319",{"_index":390,"title":{},"body":{"classes/CreatePermissionTables1741966377333.html":{}}}],["pk_a3ffb1c0c8416b9fc6f907b7433",{"_index":473,"title":{},"body":{"classes/CreateUserTable1741519705062.html":{}}}],["platform",{"_index":1445,"title":{},"body":{"properties.html":{}}}],["please",{"_index":1590,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["pnpm",{"_index":1177,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["pnpminstall",{"_index":1185,"title":{},"body":{"index.html":{}}}],["policies",{"_index":1249,"title":{},"body":{"index.html":{}}}],["pong",{"_index":112,"title":{},"body":{"classes/AuthResolver.html":{},"classes/EscrowResolver.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"classes/UserResolver.html":{}}}],["populate",{"_index":1578,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["port",{"_index":236,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/SubgraphsBuilder.html":{}}}],["postgres",{"_index":490,"title":{},"body":{"classes/DataSource.html":{}}}],["precision",{"_index":740,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["preferences",{"_index":1421,"title":{},"body":{"index.html":{}}}],["prerequisites",{"_index":1168,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["preventing",{"_index":1331,"title":{},"body":{"index.html":{}}}],["price",{"_index":1328,"title":{},"body":{"index.html":{}}}],["primary",{"_index":348,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreatePermissionTables1741966377333.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["primary_color",{"_index":350,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"entities/OrganizationMetadata.html":{}}}],["primary_contact_name",{"_index":338,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"entities/Organization.html":{}}}],["primarycolor",{"_index":737,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["primarycolumn",{"_index":829,"title":{},"body":{"entities/Permission.html":{},"entities/Role.html":{}}}],["primarycontactname",{"_index":691,"title":{},"body":{"entities/Organization.html":{}}}],["primarygeneratedcolumn",{"_index":146,"title":{},"body":{"entities/BaseEntity.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":161,"title":{},"body":{"entities/BaseEntity.html":{}}}],["privacy",{"_index":1285,"title":{},"body":{"index.html":{}}}],["private",{"_index":270,"title":{},"body":{"classes/ConfigHelper.html":{},"injectables/OrganizationService.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"injectables/UserService.html":{}}}],["process",{"_index":479,"title":{},"body":{"classes/DataSource.html":{}}}],["process.env.database_host",{"_index":491,"title":{},"body":{"classes/DataSource.html":{}}}],["process.env.database_name",{"_index":497,"title":{},"body":{"classes/DataSource.html":{}}}],["process.env.database_password",{"_index":496,"title":{},"body":{"classes/DataSource.html":{}}}],["process.env.database_port",{"_index":493,"title":{},"body":{"classes/DataSource.html":{}}}],["process.env.database_type",{"_index":489,"title":{},"body":{"classes/DataSource.html":{}}}],["process.env.database_username",{"_index":495,"title":{},"body":{"classes/DataSource.html":{}}}],["process.env.is_doc_env",{"_index":1508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.exit(1",{"_index":897,"title":{},"body":{"modules/SeederModule.html":{}}}],["processed",{"_index":1413,"title":{},"body":{"index.html":{}}}],["processing",{"_index":1398,"title":{},"body":{"index.html":{}}}],["production",{"_index":32,"title":{},"body":{"modules/AppConfigModule.html":{},"index.html":{}}}],["profile",{"_index":1293,"title":{},"body":{"index.html":{}}}],["profiles",{"_index":1296,"title":{},"body":{"index.html":{}}}],["project",{"_index":1170,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["promise",{"_index":251,"title":{},"body":{"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreatePermissionTables1741966377333.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"modules/GraphQLGatewayModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"classes/SubgraphsBuilder.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{}}}],["proper",{"_index":1382,"title":{},"body":{"index.html":{}}}],["properly",{"_index":1318,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["properties",{"_index":122,"title":{"properties.html":{}},"body":{"entities/BaseEntity.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreatePermissionTables1741966377333.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"entities/OrganizationMetadata.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{},"classes/User-1.html":{},"index.html":{},"properties.html":{}}}],["property",{"_index":853,"title":{},"body":{"injectables/PropertyService.html":{},"index.html":{},"properties.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["property.controller",{"_index":845,"title":{},"body":{"modules/PropertyModule.html":{}}}],["property.service",{"_index":836,"title":{},"body":{"controllers/PropertyController.html":{},"modules/PropertyModule.html":{}}}],["property_client",{"_index":1137,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["property_host",{"_index":614,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["property_port",{"_index":1504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["propertycommand",{"_index":837,"title":{},"body":{"controllers/PropertyController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["propertycommand.ping_property",{"_index":838,"title":{},"body":{"controllers/PropertyController.html":{}}}],["propertycontroller",{"_index":832,"title":{"controllers/PropertyController.html":{}},"body":{"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"coverage.html":{}}}],["propertydecorator",{"_index":1153,"title":{},"body":{"miscellaneous/functions.html":{}}}],["propertykey",{"_index":1155,"title":{},"body":{"miscellaneous/functions.html":{}}}],["propertymodule",{"_index":840,"title":{"modules/PropertyModule.html":{}},"body":{"modules/PropertyModule.html":{},"modules.html":{},"overview.html":{}}}],["propertyresolver",{"_index":846,"title":{"classes/PropertyResolver.html":{}},"body":{"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"coverage.html":{}}}],["propertyservice",{"_index":835,"title":{"injectables/PropertyService.html":{}},"body":{"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"injectables/PropertyService.html":{},"coverage.html":{},"overview.html":{}}}],["protecting",{"_index":1264,"title":{},"body":{"index.html":{}}}],["protocols",{"_index":1400,"title":{},"body":{"index.html":{}}}],["prototype",{"_index":177,"title":{},"body":{"entities/BaseEntity.html":{}}}],["provider",{"_index":872,"title":{},"body":{"modules/SeederModule.html":{}}}],["providers",{"_index":88,"title":{},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/SeederModule.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["provides",{"_index":1595,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["providing",{"_index":1307,"title":{},"body":{"index.html":{}}}],["public",{"_index":321,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreatePermissionTables1741966377333.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["push",{"_index":1418,"title":{},"body":{"index.html":{}}}],["query",{"_index":109,"title":{},"body":{"classes/AuthResolver.html":{},"classes/EscrowResolver.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"classes/UserResolver.html":{}}}],["query(undefined",{"_index":106,"title":{},"body":{"classes/AuthResolver.html":{},"classes/EscrowResolver.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"classes/UserResolver.html":{}}}],["queryrunner",{"_index":326,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreatePermissionTables1741966377333.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["queryrunner.query",{"_index":373,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreatePermissionTables1741966377333.html":{}}}],["queryrunner.query(`alter",{"_index":364,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreatePermissionTables1741966377333.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["queryrunner.query(`create",{"_index":330,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreatePermissionTables1741966377333.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["queryrunner.query(`drop",{"_index":374,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreatePermissionTables1741966377333.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["qumber",{"_index":1450,"title":{},"body":{"properties.html":{}}}],["qushah",{"_index":1161,"title":{},"body":{"index.html":{}}}],["qushah/common",{"_index":100,"title":{},"body":{"modules/AuthModule.html":{},"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{},"classes/CreateUserInput.html":{},"modules/DatabaseModule.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/GraphQLGatewayModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["qushah/common/config",{"_index":267,"title":{},"body":{"modules/CommonModule.html":{}}}],["qushah/common/config/config.helper",{"_index":256,"title":{},"body":{"modules/ClientsModule.html":{}}}],["qushah/common/constants/commands",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{}}}],["qushah/common/constants/commands/organization.command",{"_index":728,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["qushah/common/database/seeder/seeder",{"_index":880,"title":{},"body":{"modules/SeederModule.html":{}}}],["qushah/common/decorators",{"_index":153,"title":{},"body":{"entities/BaseEntity.html":{}}}],["qushah/common/utils",{"_index":157,"title":{},"body":{"entities/BaseEntity.html":{}}}],["r",{"_index":1488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["random",{"_index":538,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["randombytes",{"_index":540,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["randombytes.substring(3",{"_index":560,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["randombytes.substring(7",{"_index":562,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["rate",{"_index":1262,"title":{},"body":{"index.html":{}}}],["razorpay",{"_index":1397,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":62,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"controllers/DocumentationController.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{}}}],["receipts",{"_index":1409,"title":{},"body":{"index.html":{}}}],["recent",{"_index":1550,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["recurring",{"_index":1410,"title":{},"body":{"index.html":{}}}],["redis",{"_index":1178,"title":{},"body":{"index.html":{}}}],["redis_host",{"_index":19,"title":{},"body":{"modules/AppConfigModule.html":{},"miscellaneous/variables.html":{}}}],["redis_port",{"_index":21,"title":{},"body":{"modules/AppConfigModule.html":{},"miscellaneous/variables.html":{}}}],["redisconfig",{"_index":227,"title":{},"body":{"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{}}}],["redisconfig.host",{"_index":235,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["redisconfig.port",{"_index":237,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["referencedcolumnname",{"_index":866,"title":{},"body":{"entities/Role.html":{}}}],["references",{"_index":368,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreatePermissionTables1741966377333.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["reflect",{"_index":1115,"title":{},"body":{"dependencies.html":{}}}],["reflected",{"_index":1350,"title":{},"body":{"index.html":{}}}],["refresh",{"_index":1256,"title":{},"body":{"index.html":{}}}],["regarding",{"_index":1290,"title":{},"body":{"index.html":{}}}],["register",{"_index":247,"title":{},"body":{"modules/ClientsModule.html":{},"modules/GraphQLGatewayModule.html":{}}}],["register(...names",{"_index":248,"title":{},"body":{"modules/ClientsModule.html":{}}}],["register(...subgraphnames",{"_index":623,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["registered",{"_index":1583,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["regulations",{"_index":1287,"title":{},"body":{"index.html":{}}}],["regulatory",{"_index":1373,"title":{},"body":{"index.html":{}}}],["rejectunauthorized",{"_index":500,"title":{},"body":{"classes/DataSource.html":{},"modules/DatabaseModule.html":{}}}],["rel_ad9c5b4a8fb0a54d63b8471019",{"_index":362,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["relations",{"_index":796,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["release",{"_index":1359,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["released",{"_index":1363,"title":{},"body":{"index.html":{}}}],["releases",{"_index":1378,"title":{},"body":{"index.html":{}}}],["rent",{"_index":1368,"title":{},"body":{"index.html":{}}}],["rent_fee_percentage",{"_index":353,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"entities/OrganizationMetadata.html":{}}}],["rental",{"_index":1444,"title":{},"body":{"properties.html":{}}}],["rented",{"_index":1336,"title":{},"body":{"index.html":{}}}],["rentfeepercentage",{"_index":738,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["reorder",{"_index":193,"title":{},"body":{"entities/BaseEntity.html":{}}}],["repo",{"_index":1227,"title":{},"body":{"index.html":{}}}],["repository",{"_index":784,"title":{},"body":{"injectables/OrganizationService.html":{},"injectables/SeederService.html":{},"injectables/UserService.html":{}}}],["request",{"_index":1423,"title":{},"body":{"index.html":{}}}],["requests",{"_index":1425,"title":{},"body":{"index.html":{}}}],["required",{"_index":1254,"title":{},"body":{"index.html":{}}}],["requires",{"_index":965,"title":{},"body":{"classes/User-1.html":{}}}],["reset",{"_index":96,"title":{},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resolution",{"_index":1446,"title":{},"body":{"properties.html":{}}}],["resolutions",{"_index":1211,"title":{},"body":{"index.html":{}}}],["resolvefield",{"_index":1015,"title":{},"body":{"classes/UserResolver-1.html":{}}}],["resolvefield(undefined",{"_index":1012,"title":{},"body":{"classes/UserResolver-1.html":{}}}],["resolver",{"_index":110,"title":{},"body":{"classes/AuthResolver.html":{},"classes/EscrowResolver.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{}}}],["resolver(user",{"_index":1005,"title":{},"body":{"classes/UserResolver.html":{}}}],["resolvers/auth.resolver",{"_index":102,"title":{},"body":{"modules/AuthModule.html":{}}}],["resolvers/escrow.resolver",{"_index":593,"title":{},"body":{"modules/EscrowModule.html":{}}}],["resolvers/media.resolver",{"_index":660,"title":{},"body":{"modules/MediaModule.html":{}}}],["resolvers/notification.resolver",{"_index":682,"title":{},"body":{"modules/NotificationModule.html":{}}}],["resolvers/organization.resolver",{"_index":768,"title":{},"body":{"modules/OrganizationModule.html":{}}}],["resolvers/payment.resolver",{"_index":813,"title":{},"body":{"modules/PaymentModule.html":{}}}],["resolvers/property.resolver",{"_index":847,"title":{},"body":{"modules/PropertyModule.html":{}}}],["resolvers/user.resolver",{"_index":984,"title":{},"body":{"modules/UserModule.html":{}}}],["resolves",{"_index":1568,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["results",{"_index":37,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreatePermissionTables1741966377333.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"entities/Permission.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"entities/Role.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["retries",{"_index":1402,"title":{},"body":{"index.html":{}}}],["retrieve",{"_index":180,"title":{},"body":{"entities/BaseEntity.html":{}}}],["return",{"_index":63,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"controllers/MediaController.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"modules/SeederModule.html":{},"classes/SubgraphsBuilder.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":60,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreatePermissionTables1741966377333.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"controllers/MediaController.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["revert",{"_index":1473,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["rizvi",{"_index":1451,"title":{},"body":{"properties.html":{}}}],["role",{"_index":388,"title":{"entities/Role.html":{}},"body":{"classes/CreatePermissionTables1741966377333.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"entities/Permission.html":{},"entities/Role.html":{},"injectables/SeederService.html":{},"entities/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["role.entity",{"_index":830,"title":{},"body":{"entities/Permission.html":{},"entities/User.html":{}}}],["role.permissions",{"_index":826,"title":{},"body":{"entities/Permission.html":{}}}],["role_permissions",{"_index":861,"title":{},"body":{"entities/Role.html":{}}}],["roleexists",{"_index":917,"title":{},"body":{"injectables/SeederService.html":{}}}],["rolename",{"_index":916,"title":{},"body":{"injectables/SeederService.html":{}}}],["rolerepository",{"_index":904,"title":{},"body":{"injectables/SeederService.html":{}}}],["roles",{"_index":821,"title":{},"body":{"entities/Permission.html":{},"entities/Role.html":{},"injectables/SeederService.html":{},"index.html":{}}}],["rolls",{"_index":1548,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["routing",{"_index":1424,"title":{},"body":{"index.html":{}}}],["rules",{"_index":1362,"title":{},"body":{"index.html":{}}}],["run",{"_index":1169,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["running",{"_index":1481,"title":{"additional-documentation/running-migrations-and-seeders.html":{}},"body":{"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["runs",{"_index":1542,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["rxjs",{"_index":1118,"title":{},"body":{"dependencies.html":{}}}],["saltorrounds",{"_index":1030,"title":{},"body":{"injectables/UserService.html":{}}}],["scalability",{"_index":1310,"title":{},"body":{"index.html":{}}}],["scale",{"_index":741,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["scans",{"_index":1342,"title":{},"body":{"index.html":{}}}],["schema",{"_index":478,"title":{},"body":{"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"modules/OrganizationModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["schema.type",{"_index":520,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/SeederModule.html":{}}}],["script",{"_index":1558,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["search",{"_index":1322,"title":{},"body":{"index.html":{}}}],["secure",{"_index":1244,"title":{},"body":{"index.html":{}}}],["securely",{"_index":1343,"title":{},"body":{"index.html":{}}}],["security",{"_index":1243,"title":{},"body":{"index.html":{}}}],["seed",{"_index":875,"title":{},"body":{"modules/SeederModule.html":{},"injectables/SeederService.html":{},"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["seed(service",{"_index":876,"title":{},"body":{"modules/SeederModule.html":{}}}],["seeder",{"_index":885,"title":{},"body":{"modules/SeederModule.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["seeder.seed",{"_index":887,"title":{},"body":{"modules/SeederModule.html":{}}}],["seeder.ts",{"_index":1576,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["seeder/seeder.service",{"_index":986,"title":{},"body":{"modules/UserModule.html":{}}}],["seedermodule",{"_index":867,"title":{"modules/SeederModule.html":{}},"body":{"modules/SeederModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["seedermodule.bootstrap(service",{"_index":892,"title":{},"body":{"modules/SeederModule.html":{}}}],["seedermodule.init([seederservice",{"_index":989,"title":{},"body":{"modules/UserModule.html":{}}}],["seeders",{"_index":1527,"title":{"additional-documentation/running-migrations-and-seeders.html":{}},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["seederservice",{"_index":879,"title":{"injectables/SeederService.html":{}},"body":{"modules/SeederModule.html":{},"injectables/SeederService.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["seeding",{"_index":890,"title":{},"body":{"modules/SeederModule.html":{}}}],["seedpermissions",{"_index":899,"title":{},"body":{"injectables/SeederService.html":{}}}],["seedroles",{"_index":900,"title":{},"body":{"injectables/SeederService.html":{}}}],["selecting",{"_index":1592,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["sending",{"_index":1406,"title":{},"body":{"index.html":{}}}],["sensitive",{"_index":1280,"title":{},"body":{"index.html":{}}}],["separate",{"_index":1225,"title":{},"body":{"index.html":{}}}],["service",{"_index":117,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"injectables/MediaService.html":{},"injectables/NotificationService.html":{},"injectables/OrganizationService.html":{},"injectables/PaymentService.html":{},"injectables/PropertyService.html":{},"modules/SeederModule.html":{},"classes/User-1.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["service.interface",{"_index":881,"title":{},"body":{"modules/SeederModule.html":{}}}],["service.interface.ts",{"_index":1076,"title":{},"body":{"coverage.html":{}}}],["serviceendpointdefinition",{"_index":933,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["services",{"_index":874,"title":{},"body":{"modules/SeederModule.html":{},"index.html":{}}}],["set",{"_index":524,"title":{},"body":{"modules/DatabaseModule.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["setup",{"_index":1179,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["shared",{"_index":1228,"title":{},"body":{"index.html":{}}}],["show",{"_index":1553,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["slug",{"_index":337,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"entities/Organization.html":{}}}],["sms",{"_index":1417,"title":{},"body":{"index.html":{}}}],["sort",{"_index":208,"title":{},"body":{"entities/BaseEntity.html":{}}}],["sortschema",{"_index":644,"title":{},"body":{"modules/GraphQLMicroserviceModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"modules/AppConfigModule.html":{},"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreatePermissionTables1741966377333.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"entities/Permission.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"entities/Role.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{}}}],["source.ts",{"_index":1044,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["source.util.ts",{"_index":475,"title":{},"body":{"classes/DataSource.html":{},"coverage.html":{}}}],["source.util.ts:9",{"_index":477,"title":{},"body":{"classes/DataSource.html":{}}}],["specified",{"_index":1577,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["specifies",{"_index":1537,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["specify",{"_index":1564,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["src/migrations",{"_index":1493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ssl",{"_index":499,"title":{},"body":{"classes/DataSource.html":{},"modules/DatabaseModule.html":{}}}],["standards",{"_index":1374,"title":{},"body":{"index.html":{}}}],["start",{"_index":1192,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1195,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":1196,"title":{},"body":{"index.html":{}}}],["started",{"_index":1160,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1037,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":166,"title":{},"body":{"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"modules/GraphQLGatewayModule.html":{},"modules/SeederModule.html":{},"classes/SubgraphsBuilder.html":{}}}],["status",{"_index":1347,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["storage",{"_index":1292,"title":{},"body":{"index.html":{}}}],["stored",{"_index":963,"title":{},"body":{"classes/User-1.html":{}}}],["storing",{"_index":1338,"title":{},"body":{"index.html":{}}}],["streamline",{"_index":1530,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["string",{"_index":56,"title":{},"body":{"injectables/AppConfigService.html":{},"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreatePermissionTables1741966377333.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/DatabaseUtil.html":{},"controllers/DocumentationController.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"controllers/MediaController.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"entities/Permission.html":{},"controllers/PropertyController.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"entities/Role.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["strong",{"_index":1248,"title":{},"body":{"index.html":{}}}],["structure",{"_index":1215,"title":{},"body":{"index.html":{}}}],["subgraphnames",{"_index":625,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["subgraphs",{"_index":636,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["subgraphsbuilder",{"_index":632,"title":{"classes/SubgraphsBuilder.html":{}},"body":{"modules/GraphQLGatewayModule.html":{},"classes/SubgraphsBuilder.html":{},"coverage.html":{}}}],["subgraphsbuilder.build(...subgraphnames",{"_index":637,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["subscribers",{"_index":504,"title":{},"body":{"classes/DataSource.html":{}}}],["subscriptions",{"_index":1388,"title":{},"body":{"index.html":{}}}],["successful",{"_index":1407,"title":{},"body":{"index.html":{}}}],["such",{"_index":1305,"title":{},"body":{"index.html":{}}}],["super_admin",{"_index":1144,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["supergraphsdl",{"_index":635,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["support",{"_index":1380,"title":{},"body":{"index.html":{},"modules.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["supporting",{"_index":1411,"title":{},"body":{"index.html":{}}}],["sure",{"_index":1181,"title":{},"body":{"index.html":{}}}],["svg",{"_index":1436,"title":{},"body":{"modules.html":{}}}],["symbol.for('order_key",{"_index":1513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["syntax",{"_index":1536,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["system",{"_index":1163,"title":{},"body":{"index.html":{}}}],["t",{"_index":58,"title":{},"body":{"injectables/AppConfigService.html":{},"classes/ConfigHelper.html":{},"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["table",{"_index":331,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreatePermissionTables1741966377333.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1088,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":174,"title":{},"body":{"entities/BaseEntity.html":{},"miscellaneous/functions.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["target.prototype",{"_index":179,"title":{},"body":{"entities/BaseEntity.html":{}}}],["targets",{"_index":1551,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["tenant",{"_index":1276,"title":{},"body":{"index.html":{},"properties.html":{}}}],["tenants",{"_index":1313,"title":{},"body":{"index.html":{}}}],["test",{"_index":33,"title":{},"body":{"modules/AppConfigModule.html":{},"index.html":{}}}],["test:covtypeorm",{"_index":1201,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1200,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1197,"title":{},"body":{"index.html":{}}}],["this.appconfigservice.getconfig(key",{"_index":315,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.authservice.gethello",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.configservice.get(key",{"_index":64,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.documentationservice.gethello",{"_index":569,"title":{},"body":{"controllers/DocumentationController.html":{}}}],["this.escrowservice.gethello",{"_index":585,"title":{},"body":{"controllers/EscrowController.html":{}}}],["this.getconfig",{"_index":312,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environment.database_host",{"_index":302,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environment.database_name",{"_index":309,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environment.database_password",{"_index":307,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environment.database_port",{"_index":303,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environment.database_type",{"_index":301,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environment.database_username",{"_index":305,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environment.redis_host",{"_index":299,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environment.redis_port",{"_index":300,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environment[`${key}_port",{"_index":311,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.id",{"_index":164,"title":{},"body":{"entities/BaseEntity.html":{}}}],["this.mediaservice.gethello",{"_index":652,"title":{},"body":{"controllers/MediaController.html":{}}}],["this.notificationservice.gethello",{"_index":674,"title":{},"body":{"controllers/NotificationController.html":{}}}],["this.organizationservice.findall",{"_index":779,"title":{},"body":{"classes/OrganizationResolver.html":{}}}],["this.organizationservice.findone",{"_index":732,"title":{},"body":{"controllers/OrganizationController.html":{},"classes/UserResolver-1.html":{}}}],["this.organizationservice.gethello",{"_index":730,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["this.paymentservice.gethello",{"_index":805,"title":{},"body":{"controllers/PaymentController.html":{}}}],["this.permissionrepository.create",{"_index":926,"title":{},"body":{"injectables/SeederService.html":{}}}],["this.permissionrepository.save",{"_index":925,"title":{},"body":{"injectables/SeederService.html":{}}}],["this.propertyservice.gethello",{"_index":839,"title":{},"body":{"controllers/PropertyController.html":{}}}],["this.repository.find",{"_index":795,"title":{},"body":{"injectables/OrganizationService.html":{},"injectables/UserService.html":{}}}],["this.repository.findone",{"_index":797,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["this.repository.save",{"_index":1032,"title":{},"body":{"injectables/UserService.html":{}}}],["this.rolerepository.create",{"_index":920,"title":{},"body":{"injectables/SeederService.html":{}}}],["this.rolerepository.findone",{"_index":918,"title":{},"body":{"injectables/SeederService.html":{}}}],["this.rolerepository.save",{"_index":919,"title":{},"body":{"injectables/SeederService.html":{}}}],["this.seedpermissions",{"_index":914,"title":{},"body":{"injectables/SeederService.html":{}}}],["this.seedroles",{"_index":913,"title":{},"body":{"injectables/SeederService.html":{}}}],["this.userservice.create(input",{"_index":1008,"title":{},"body":{"classes/UserResolver.html":{}}}],["this.userservice.find",{"_index":1006,"title":{},"body":{"classes/UserResolver.html":{}}}],["this.userservice.gethello",{"_index":976,"title":{},"body":{"controllers/UserController.html":{}}}],["through",{"_index":1429,"title":{},"body":{"index.html":{}}}],["throw",{"_index":463,"title":{},"body":{"classes/CreateUserInput.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["time",{"_index":1414,"title":{},"body":{"index.html":{}}}],["timely",{"_index":1416,"title":{},"body":{"index.html":{}}}],["timestamp",{"_index":341,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DatabaseUtil.html":{}}}],["timestamp.substring(0",{"_index":555,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["timestamp.substring(8",{"_index":556,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["title",{"_index":1478,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["token",{"_index":1250,"title":{},"body":{"index.html":{}}}],["tool",{"_index":1204,"title":{"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}},"body":{"index.html":{}}}],["trail",{"_index":1358,"title":{},"body":{"index.html":{}}}],["transaction",{"_index":1355,"title":{},"body":{"index.html":{}}}],["transactions",{"_index":1221,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":1104,"title":{},"body":{"dependencies.html":{}}}],["transparency",{"_index":1360,"title":{},"body":{"index.html":{}}}],["transport",{"_index":222,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{}}}],["transport.redis",{"_index":232,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{}}}],["troubleshooting",{"_index":1580,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["true",{"_index":16,"title":{},"body":{"modules/AppConfigModule.html":{},"entities/BaseEntity.html":{},"classes/ConfigHelper.html":{},"modules/DatabaseModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{},"classes/User-1.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"miscellaneous/variables.html":{}}}],["true})@column({name",{"_index":753,"title":{},"body":{"entities/OrganizationMetadata.html":{},"entities/User.html":{}}}],["true})@column({nullable",{"_index":744,"title":{},"body":{"entities/OrganizationMetadata.html":{},"entities/Permission.html":{},"entities/Role.html":{}}}],["true})@deletedatecolumn({name",{"_index":133,"title":{},"body":{"entities/BaseEntity.html":{}}}],["true})@directive('@external",{"_index":960,"title":{},"body":{"classes/User-1.html":{}}}],["true})@directive('@requires(fields",{"_index":958,"title":{},"body":{"classes/User-1.html":{}}}],["true})@jointable({name",{"_index":860,"title":{},"body":{"entities/Role.html":{}}}],["true})@onetoone(undefined",{"_index":696,"title":{},"body":{"entities/Organization.html":{}}}],["true})@updatedatecolumn({name",{"_index":138,"title":{},"body":{"entities/BaseEntity.html":{}}}],["ts",{"_index":1486,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["tsconfig",{"_index":1489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["type",{"_index":53,"title":{},"body":{"injectables/AppConfigService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreatePermissionTables1741966377333.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"modules/GraphQLGatewayModule.html":{},"entities/Organization.html":{},"classes/Organization-1.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"entities/Permission.html":{},"entities/Role.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/SubgraphsBuilder.html":{},"entities/User.html":{},"classes/User-1.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":148,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreatePermissionTables1741966377333.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"injectables/OrganizationService.html":{},"entities/Permission.html":{},"entities/Role.html":{},"injectables/SeederService.html":{},"entities/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["typeorm/find",{"_index":792,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["typeorm/metadata/columnmetadata",{"_index":155,"title":{},"body":{"entities/BaseEntity.html":{}}}],["typeorm_migrations",{"_index":488,"title":{},"body":{"classes/DataSource.html":{}}}],["typeormcommand",{"_index":1087,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeormdatasource",{"_index":482,"title":{},"body":{"classes/DataSource.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeormmodule",{"_index":516,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["typeormmodule.forfeature(entities",{"_index":527,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["typeormmodule.forrootasync",{"_index":521,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["typeormmoduleoptions",{"_index":517,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["types/yargs",{"_index":1101,"title":{},"body":{"dependencies.html":{}}}],["uint8array(10",{"_index":542,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["unauthorized",{"_index":1245,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":72,"title":{},"body":{"controllers/AuthController.html":{},"entities/BaseEntity.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"entities/Role.html":{},"controllers/UserController.html":{}}}],["unique",{"_index":345,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"entities/Organization.html":{}}}],["unit",{"_index":1198,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":1448,"title":{},"body":{"properties.html":{}}}],["up",{"_index":323,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreatePermissionTables1741966377333.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["up(queryrunner",{"_index":328,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreatePermissionTables1741966377333.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["update",{"_index":371,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreatePermissionTables1741966377333.html":{},"classes/CreateUserTable1741519705062.html":{},"index.html":{}}}],["update_user",{"_index":1141,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["updated_at",{"_index":139,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["updatedat",{"_index":126,"title":{},"body":{"entities/BaseEntity.html":{}}}],["updatedatecolumn",{"_index":147,"title":{},"body":{"entities/BaseEntity.html":{}}}],["updates",{"_index":1294,"title":{},"body":{"index.html":{}}}],["upi",{"_index":1395,"title":{},"body":{"index.html":{}}}],["uq_963693341bd612aa01ddf3a4b68",{"_index":346,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["uq_9b7ca6d30b94fef571cff876884",{"_index":344,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{}}}],["url",{"_index":940,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["usage",{"_index":1534,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["use",{"_index":1213,"title":{"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}},"body":{"index.html":{}}}],["used",{"_index":1573,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["usedatasource(datasource",{"_index":167,"title":{},"body":{"entities/BaseEntity.html":{}}}],["usefactory",{"_index":522,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/GraphQLGatewayModule.html":{}}}],["user",{"_index":942,"title":{"entities/User.html":{},"classes/User-1.html":{}},"body":{"entities/User.html":{},"classes/User-1.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["user\".\"idx_0ab5175ebb91e7a07f850acf42",{"_index":399,"title":{},"body":{"classes/CreatePermissionTables1741966377333.html":{}}}],["user\".\"idx_5d5086bd299f773d403574cf1c",{"_index":400,"title":{},"body":{"classes/CreatePermissionTables1741966377333.html":{}}}],["user\".\"permissions",{"_index":384,"title":{},"body":{"classes/CreatePermissionTables1741966377333.html":{}}}],["user\".\"role_permissions",{"_index":387,"title":{},"body":{"classes/CreatePermissionTables1741966377333.html":{}}}],["user\".\"roles",{"_index":395,"title":{},"body":{"classes/CreatePermissionTables1741966377333.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["user\".\"users",{"_index":382,"title":{},"body":{"classes/CreatePermissionTables1741966377333.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["user.controller",{"_index":982,"title":{},"body":{"modules/UserModule.html":{}}}],["user.input",{"_index":1004,"title":{},"body":{"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["user.input.ts",{"_index":410,"title":{},"body":{"classes/CreateUserInput.html":{},"coverage.html":{}}}],["user.input.ts:21",{"_index":418,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:26",{"_index":419,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:31",{"_index":416,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:42",{"_index":429,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:51",{"_index":435,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:56",{"_index":437,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:61",{"_index":440,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:66",{"_index":421,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.organizationid",{"_index":1018,"title":{},"body":{"classes/UserResolver-1.html":{}}}],["user.service",{"_index":973,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{}}}],["user_client",{"_index":1138,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["user_host",{"_index":615,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["user_port",{"_index":1505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usercommand",{"_index":974,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usercommand.ping_user",{"_index":975,"title":{},"body":{"controllers/UserController.html":{}}}],["usercontroller",{"_index":969,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["usermodule",{"_index":977,"title":{"modules/UserModule.html":{}},"body":{"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":304,"title":{},"body":{"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{}}}],["userpermission",{"_index":909,"title":{},"body":{"injectables/SeederService.html":{},"miscellaneous/enumerations.html":{}}}],["userresolver",{"_index":983,"title":{"classes/UserResolver.html":{},"classes/UserResolver-1.html":{}},"body":{"modules/UserModule.html":{},"classes/UserResolver.html":{},"classes/UserResolver-1.html":{},"coverage.html":{}}}],["userrole",{"_index":438,"title":{},"body":{"classes/CreateUserInput.html":{},"injectables/SeederService.html":{},"miscellaneous/enumerations.html":{}}}],["users",{"_index":955,"title":{},"body":{"entities/User.html":{},"classes/UserResolver.html":{},"index.html":{}}}],["userservice",{"_index":972,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":182,"title":{},"body":{"entities/BaseEntity.html":{},"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["utilities",{"_index":1233,"title":{},"body":{"index.html":{}}}],["uuid",{"_index":333,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{},"entities/User.html":{}}}],["uuid_generate_v4",{"_index":334,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["uuidv7",{"_index":551,"title":{},"body":{"classes/DatabaseUtil.html":{}}}],["valid('development",{"_index":31,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["validate",{"_index":457,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["validated",{"_index":1319,"title":{},"body":{"index.html":{}}}],["validateif",{"_index":451,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["validateif((o",{"_index":454,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["validation",{"_index":1315,"title":{},"body":{"index.html":{}}}],["validationpipe",{"_index":217,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["validationschema",{"_index":17,"title":{},"body":{"modules/AppConfigModule.html":{}}}],["validator",{"_index":452,"title":{},"body":{"classes/CreateUserInput.html":{},"dependencies.html":{}}}],["value",{"_index":190,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreatePermissionTables1741966377333.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":200,"title":{},"body":{"entities/BaseEntity.html":{}}}],["variable",{"_index":1045,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":484,"title":{"miscellaneous/variables.html":{}},"body":{"classes/DataSource.html":{},"miscellaneous/variables.html":{}}}],["varying",{"_index":336,"title":{},"body":{"classes/CreateOrganizationAndMetaTable1741518145374.html":{},"classes/CreatePermissionTables1741966377333.html":{},"classes/CreateRoleTable1741519642145.html":{},"classes/CreateUserTable1741519705062.html":{}}}],["verification",{"_index":1390,"title":{},"body":{"index.html":{}}}],["verified",{"_index":1391,"title":{},"body":{"index.html":{}}}],["verify",{"_index":1584,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["version",{"_index":1442,"title":{},"body":{"properties.html":{}}}],["versioning",{"_index":1589,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["videos",{"_index":1340,"title":{},"body":{"index.html":{}}}],["void",{"_index":878,"title":{},"body":{"modules/SeederModule.html":{}}}],["warning",{"_index":1571,"title":{},"body":{"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["watch",{"_index":1193,"title":{},"body":{"index.html":{}}}],["way",{"_index":1326,"title":{},"body":{"index.html":{},"additional-documentation/running-migrations-and-seeders.html":{},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{}}}],["within",{"_index":1226,"title":{},"body":{"index.html":{}}}],["without",{"_index":1207,"title":{},"body":{"index.html":{}}}],["world",{"_index":577,"title":{},"body":{"injectables/DocumentationService.html":{}}}],["worrying",{"_index":1208,"title":{},"body":{"index.html":{}}}],["yargs",{"_index":1121,"title":{},"body":{"dependencies.html":{}}}],["yargs(process.argv.slice(2",{"_index":1464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ycolumn",{"_index":199,"title":{},"body":{"entities/BaseEntity.html":{}}}],["yes",{"_index":515,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["zoom",{"_index":95,"title":{},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppConfigModule.html":{"url":"modules/AppConfigModule.html","title":"module - AppConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    AppConfigModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/config/config.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { ConfigModule } from '@nestjs/config';\nimport { Module } from '@nestjs/common';\nimport Joi from 'joi';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      validationSchema: Joi.object({\n        REDIS_HOST: Joi.string().required(),\n        REDIS_PORT: Joi.number().required(),\n        DATABASE_TYPE: Joi.string().required(),\n        DATABASE_HOST: Joi.string().required(),\n        DATABASE_PORT: Joi.string().required(),\n        DATABASE_USERNAME: Joi.string().required(),\n        DATABASE_PASSWORD: Joi.string().required(),\n        DATABASE_NAME: Joi.string().required(),\n        NODE_ENV: Joi.string()\n          .valid('development', 'production', 'test')\n          .default('development'),\n      }),\n    }),\n  ],\n})\nexport class AppConfigModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppConfigService.html":{"url":"injectables/AppConfigService.html","title":"injectable - AppConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/config/config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in libs/common/src/config/config.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getConfig\n                        \n                    \n                \n            \n            \n                \ngetConfig(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/config/config.service.ts:8\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class AppConfigService {\n  constructor(private readonly configService: ConfigService) {}\n\n  getConfig(key: string): T {\n    return this.configService.get(key);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/auth.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/auth/src/auth.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { AuthCommand } from '@qushah/common/constants/commands';\n\n@Controller()\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @MessagePattern({ cmd: AuthCommand.PING_AUTH })\n  getHello(): string {\n    return this.authService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nCommonModule->AuthModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nAuthModule -->\n\nGraphQLMicroserviceModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/auth/src/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { CommonModule, GraphQLMicroserviceModule } from '@qushah/common';\nimport { AuthResolver } from './resolvers/auth.resolver';\n\n@Module({\n  imports: [CommonModule, GraphQLMicroserviceModule],\n  controllers: [AuthController],\n  providers: [AuthService, AuthResolver],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthResolver.html":{"url":"classes/AuthResolver.html","title":"class - AuthResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/resolvers/auth.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingAuth'})\n                \n            \n\n                    \n                        \n                            Defined in apps/auth/src/resolvers/auth.resolver.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\n\n@Resolver()\nexport class AuthResolver {\n  @Query(() => String, { name: 'pingAuth' })\n  ping(): string {\n    return 'pong';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/auth/src/auth.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AuthService {\n  getHello(): string {\n    return 'Hello from Auth Service!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/BaseEntity.html":{"url":"entities/BaseEntity.html","title":"entity - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/database/entities/base.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ColumnOrder(9999)@Field(undefined)@CreateDateColumn({name: 'created_at'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/common/src/database/entities/base.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ColumnOrder(9999)@Field(undefined, {nullable: true})@DeleteDateColumn({name: 'deleted_at', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/common/src/database/entities/base.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ColumnOrder(undefined)@Field(undefined)@PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/common/src/database/entities/base.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ColumnOrder(9999)@Field(undefined, {nullable: true})@UpdateDateColumn({name: 'updated_at', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/common/src/database/entities/base.entity.ts:32\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  BaseEntity as BaseEntityTypeOrm,\n  BeforeInsert,\n  CreateDateColumn,\n  DataSource,\n  DeleteDateColumn,\n  Entity,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { Field, ObjectType } from '@nestjs/graphql';\nimport { ColumnOrder, getColumnOrder } from '@qushah/common/decorators';\nimport { ColumnMetadata } from 'typeorm/metadata/ColumnMetadata';\nimport { DatabaseUtil } from '@qushah/common/utils';\n\n@ObjectType()\n@Entity()\nexport abstract class BaseEntity extends BaseEntityTypeOrm {\n  @ColumnOrder(-1)\n  @Field(() => String)\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @ColumnOrder(9999)\n  @Field(() => Date)\n  @CreateDateColumn({ name: 'created_at' })\n  createdAt: Date;\n\n  @ColumnOrder(9999)\n  @Field(() => Date, { nullable: true })\n  @UpdateDateColumn({ name: 'updated_at', nullable: true })\n  updatedAt?: Date;\n\n  @ColumnOrder(9999)\n  @Field(() => Date, { nullable: true })\n  @DeleteDateColumn({ name: 'deleted_at', nullable: true })\n  deletedAt?: Date;\n\n  @BeforeInsert()\n  generateUUID() {\n    this.id = DatabaseUtil.generateUUIDv7();\n  }\n\n  static useDataSource(dataSource: DataSource) {\n    BaseEntityTypeOrm.useDataSource.call(this, dataSource);\n    const meta = dataSource.entityMetadatasMap.get(this);\n\n    const getOrderSafely = (column: ColumnMetadata) => {\n      const target = column.target as any;\n\n      // Check if the target and its prototype exist\n      if (target && target.prototype) {\n        // Retrieve the column order using the custom getColumnOrder function\n        return getColumnOrder(target.prototype, column.propertyName);\n      }\n\n      // Fallback to a default high order value if target is undefined\n      return 9996;\n    };\n\n    if (meta != null) {\n      // Reorder columns based on custom `@ColumnOrder` decorator\n      meta.columns = [...meta.columns].sort((xColumn, yColumn) => {\n        // Get the order values for both columns being compared\n        const orderXColumn = getOrderSafely(xColumn);\n        const orderYColumn = getOrderSafely(yColumn);\n\n        // Sort in ascending order\n        return orderXColumn - orderYColumn;\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Bootstrapper.html":{"url":"classes/Bootstrapper.html","title":"class - Bootstrapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Bootstrapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/utils/bootstrapper.util.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Async\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init(module: any)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/utils/bootstrapper.util.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                module\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Logger, ValidationPipe } from '@nestjs/common';\nimport { ConfigHelper } from '@qushah/common';\nimport { NestFactory } from '@nestjs/core';\nimport { MicroserviceOptions, Transport } from '@nestjs/microservices';\n\nexport class Bootstrapper {\n  static async init(module: any) {\n    const logger = new Logger(`${module.name}Bootstrap`);\n    const configHelper = await ConfigHelper.getInstance();\n    const redisConfig = configHelper.redisConfig;\n    const app = await NestFactory.create(module);\n    app.connectMicroservice({\n      transport: Transport.REDIS,\n      options: {\n        host: redisConfig.host,\n        port: redisConfig.port,\n      },\n    });\n    await app.startAllMicroservices();\n    const port: number = configHelper.getModulePort(module.name);\n    app.useGlobalPipes(new ValidationPipe());\n    await app.listen(port);\n    logger.log(`Microservice listening on port ${port}...`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ClientsModule.html":{"url":"modules/ClientsModule.html","title":"module - ClientsModule","body":"\n                   \n\n\n\n\n    Modules\n    ClientsModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/clients/clients.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(...names: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/clients/clients.module.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                names\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, Global, DynamicModule } from '@nestjs/common';\nimport {\n  ClientsModule as NestClientsModule,\n  ClientsModuleOptions,\n  Transport,\n} from '@nestjs/microservices';\nimport { ConfigHelper } from '@qushah/common/config/config.helper';\n\n@Global()\n@Module({})\nexport class ClientsModule {\n  static async register(...names: string[]): Promise {\n    const configHelper = await ConfigHelper.getInstance();\n    const { host, port } = configHelper.redisConfig;\n    const clients: ClientsModuleOptions = names.map((name) => ({\n      name,\n      transport: Transport.REDIS,\n      options: {\n        host,\n        port,\n      },\n    }));\n    return {\n      module: ClientsModule,\n      imports: [NestClientsModule.register(clients)],\n      exports: [NestClientsModule],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CommonModule.html":{"url":"modules/CommonModule.html","title":"module - CommonModule","body":"\n                   \n\n\n\n\n    Modules\n    CommonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_exports\n\n\n\ncluster_CommonModule_imports\n\n\n\ncluster_CommonModule_providers\n\n\n\n\nAppConfigModule\n\nAppConfigModule\n\n\n\nCommonModule\n\nCommonModule\n\nCommonModule -->\n\nAppConfigModule->CommonModule\n\n\n\n\n\nCommonService \n\nCommonService \n\nCommonService  -->\n\nCommonModule->CommonService \n\n\n\n\n\nCommonService\n\nCommonService\n\nCommonModule -->\n\nCommonService->CommonModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/common.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CommonService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppConfigModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CommonService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CommonService } from './common.service';\nimport { AppConfigModule } from '@qushah/common/config';\n\n@Module({\n  imports: [AppConfigModule],\n  providers: [CommonService],\n  exports: [CommonService],\n})\nexport class CommonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CommonService.html":{"url":"injectables/CommonService.html","title":"injectable - CommonService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CommonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/common.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class CommonService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigHelper.html":{"url":"classes/ConfigHelper.html","title":"class - ConfigHelper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/config/config.helper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                appConfigService\n                            \n                            \n                                    Private\n                                    Static\n                                instance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getConfig\n                            \n                            \n                                    Static\n                                    Async\n                                getInstance\n                            \n                            \n                                getMicroServiceHosts\n                            \n                            \n                                getModulePort\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    redisConfig\n                                \n                                \n                                    databaseConfig\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Private\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in libs/common/src/config/config.helper.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        appConfigService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AppConfigService\n\n                    \n                \n                    \n                        \n                                Defined in libs/common/src/config/config.helper.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        instance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigHelper\n\n                    \n                \n                    \n                        \n                                Defined in libs/common/src/config/config.helper.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getConfig\n                        \n                    \n                \n            \n            \n                \ngetConfig(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/config/config.helper.ts:63\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        getInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    getInstance()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/config/config.helper.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMicroServiceHosts\n                        \n                    \n                \n            \n            \n                \ngetMicroServiceHosts(microserviceName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/config/config.helper.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                microserviceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { host: any; port: any; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getModulePort\n                        \n                    \n                \n            \n            \n                \ngetModulePort(moduleName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/config/config.helper.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                moduleName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        redisConfig\n                    \n                \n\n                \n                    \n                        getredisConfig()\n                    \n                \n                            \n                                \n                                    Defined in libs/common/src/config/config.helper.ts:31\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        databaseConfig\n                    \n                \n\n                \n                    \n                        getdatabaseConfig()\n                    \n                \n                            \n                                \n                                    Defined in libs/common/src/config/config.helper.ts:37\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ConfigService } from '@nestjs/config';\nimport { AppConfigService } from './config.service';\nimport { NestFactory } from '@nestjs/core';\nimport { ConfigModule } from '@nestjs/config';\nimport { ENVIRONMENT } from '@qushah/common';\n\nexport class ConfigHelper {\n  private static instance: ConfigHelper;\n  private appConfigService: AppConfigService;\n\n  private constructor() {}\n\n  static async getInstance(): Promise {\n    if (!ConfigHelper.instance) {\n      const appContext = await NestFactory.createApplicationContext(\n        ConfigModule.forRoot({\n          isGlobal: true,\n        }),\n      );\n\n      const configService = appContext.get(ConfigService);\n      const appConfigService = new AppConfigService(configService);\n\n      ConfigHelper.instance = new ConfigHelper();\n      ConfigHelper.instance.appConfigService = appConfigService;\n    }\n\n    return ConfigHelper.instance;\n  }\n\n  get redisConfig() {\n    const host = this.getConfig(ENVIRONMENT.REDIS_HOST);\n    const port = this.getConfig(ENVIRONMENT.REDIS_PORT);\n    return { host, port };\n  }\n\n  get databaseConfig() {\n    const type = this.getConfig(ENVIRONMENT.DATABASE_TYPE);\n    const host = this.getConfig(ENVIRONMENT.DATABASE_HOST);\n    const port = this.getConfig(ENVIRONMENT.DATABASE_PORT);\n    const username = this.getConfig(ENVIRONMENT.DATABASE_USERNAME);\n    const password = this.getConfig(ENVIRONMENT.DATABASE_PASSWORD);\n    const database = this.getConfig(ENVIRONMENT.DATABASE_NAME);\n    return { type, host, port, username, password, database };\n  }\n\n  getModulePort(moduleName: string) {\n    const key = moduleName?.split('Module')?.[0]?.toUpperCase();\n    if (!key) return;\n    return this.getConfig(ENVIRONMENT[`${key}_PORT`]);\n  }\n\n  getMicroServiceHosts(microserviceName: string) {\n    const host = this.getConfig(\n      `${microserviceName}_HOST`.toUpperCase(),\n    );\n    const port = this.getConfig(\n      `${microserviceName}_PORT`.toUpperCase(),\n    );\n    return { host, port };\n  }\n\n  getConfig(key: string) {\n    return this.appConfigService.getConfig(key);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrganizationAndMetaTable1741518145374.html":{"url":"classes/CreateOrganizationAndMetaTable1741518145374.html","title":"class - CreateOrganizationAndMetaTable1741518145374","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrganizationAndMetaTable1741518145374\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/organization/src/migrations/1741518145374-CreateOrganizationAndMetaTable.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'CreateOrganizationAndMetaTable1741518145374'\n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/migrations/1741518145374-CreateOrganizationAndMetaTable.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/organization/src/migrations/1741518145374-CreateOrganizationAndMetaTable.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/organization/src/migrations/1741518145374-CreateOrganizationAndMetaTable.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class CreateOrganizationAndMetaTable1741518145374\n  implements MigrationInterface\n{\n  name = 'CreateOrganizationAndMetaTable1741518145374';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`CREATE TABLE \"organization\".\"organizations\"\n                             (\n                                 \"id\"                   uuid              NOT NULL DEFAULT uuid_generate_v4(),\n                                 \"name\"                 character varying NOT NULL,\n                                 \"slug\"                 character varying NOT NULL,\n                                 \"primary_contact_name\" character varying NOT NULL,\n                                 \"email\"                character varying NOT NULL,\n                                 \"phone\"                character varying NOT NULL,\n                                 \"created_at\"           TIMESTAMP         NOT NULL DEFAULT now(),\n                                 \"updated_at\"           TIMESTAMP                  DEFAULT now(),\n                                 \"deleted_at\"           TIMESTAMP,\n                                 CONSTRAINT \"UQ_9b7ca6d30b94fef571cff876884\" UNIQUE (\"name\"),\n                                 CONSTRAINT \"UQ_963693341bd612aa01ddf3a4b68\" UNIQUE (\"slug\"),\n                                 CONSTRAINT \"PK_6b031fcd0863e3f6b44230163f9\" PRIMARY KEY (\"id\")\n                             )`);\n    await queryRunner.query(`CREATE TABLE \"organization\".\"organizations_metadata\"\n                             (\n                                 \"id\"                     uuid              NOT NULL DEFAULT uuid_generate_v4(),\n                                 \"primary_color\"          character varying,\n                                 \"domain\"                 character varying,\n                                 \"logo\"                   character varying NOT NULL,\n                                 \"rent_fee_percentage\"    numeric(5, 2)     NOT NULL DEFAULT '5',\n                                 \"deposit_fee_percentage\" numeric(5, 2)     NOT NULL DEFAULT '5',\n                                 \"allow_interest_earning\" boolean           NOT NULL DEFAULT false,\n                                 \"organization_id\"        uuid,\n                                 \"created_at\"             TIMESTAMP         NOT NULL DEFAULT now(),\n                                 \"updated_at\"             TIMESTAMP                  DEFAULT now(),\n                                 \"deleted_at\"             TIMESTAMP,\n                                 CONSTRAINT \"REL_ad9c5b4a8fb0a54d63b8471019\" UNIQUE (\"organization_id\"),\n                                 CONSTRAINT \"PK_63bbcee313cee9e95bfba3c7d2b\" PRIMARY KEY (\"id\")\n                             )`);\n    await queryRunner.query(`ALTER TABLE \"organization\".\"organizations_metadata\"\n        ADD CONSTRAINT \"FK_ad9c5b4a8fb0a54d63b84710190\" FOREIGN KEY (\"organization_id\") REFERENCES \"organization\".\"organizations\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE`);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"organization\".\"organizations_metadata\"\n        DROP CONSTRAINT \"FK_ad9c5b4a8fb0a54d63b84710190\"`);\n    await queryRunner.query(\n      `DROP TABLE \"organization\".\"organizations_metadata\"`,\n    );\n    await queryRunner.query(`DROP TABLE \"organization\".\"organizations\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePermissionTables1741966377333.html":{"url":"classes/CreatePermissionTables1741966377333.html","title":"class - CreatePermissionTables1741966377333","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePermissionTables1741966377333\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user/src/migrations/1741966377333-CreatePermissionTables.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'CreatePermissionTables1741966377333'\n                    \n                \n                    \n                        \n                                Defined in apps/user/src/migrations/1741966377333-CreatePermissionTables.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/user/src/migrations/1741966377333-CreatePermissionTables.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/user/src/migrations/1741966377333-CreatePermissionTables.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class CreatePermissionTables1741966377333 implements MigrationInterface {\n  name = 'CreatePermissionTables1741966377333';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `ALTER TABLE \"user\".\"users\" DROP CONSTRAINT \"FK_a2cecd1a3531c0b041e29ba46e1\"`,\n    );\n    await queryRunner.query(`CREATE TABLE \"user\".\"permissions\"\n                             (\n                                 \"name\"        character varying NOT NULL,\n                                 \"description\" character varying,\n                                 CONSTRAINT \"PK_48ce552495d14eae9b187bb6716\" PRIMARY KEY (\"name\")\n                             )`);\n    await queryRunner.query(`CREATE TABLE \"user\".\"role_permissions\"\n                             (\n                                 \"role\"       character varying NOT NULL,\n                                 \"permission\" character varying NOT NULL,\n                                 CONSTRAINT \"PK_9c116ac03805ca80baf3e8d2319\" PRIMARY KEY (\"role\", \"permission\")\n                             )`);\n    await queryRunner.query(\n      `CREATE INDEX \"IDX_5d5086bd299f773d403574cf1c\" ON \"user\".\"role_permissions\" (\"role\") `,\n    );\n    await queryRunner.query(\n      `CREATE INDEX \"IDX_0ab5175ebb91e7a07f850acf42\" ON \"user\".\"role_permissions\" (\"permission\") `,\n    );\n    await queryRunner.query(`ALTER TABLE \"user\".\"users\"\n        ADD CONSTRAINT \"FK_ace513fa30d485cfd25c11a9e4a\" FOREIGN KEY (\"role\") REFERENCES \"user\".\"roles\" (\"name\") ON DELETE NO ACTION ON UPDATE NO ACTION`);\n    await queryRunner.query(`ALTER TABLE \"user\".\"role_permissions\"\n        ADD CONSTRAINT \"FK_5d5086bd299f773d403574cf1c8\" FOREIGN KEY (\"role\") REFERENCES \"user\".\"roles\" (\"name\") ON DELETE CASCADE ON UPDATE CASCADE`);\n    await queryRunner.query(`ALTER TABLE \"user\".\"role_permissions\"\n        ADD CONSTRAINT \"FK_0ab5175ebb91e7a07f850acf42e\" FOREIGN KEY (\"permission\") REFERENCES \"user\".\"permissions\" (\"name\") ON DELETE NO ACTION ON UPDATE NO ACTION`);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `ALTER TABLE \"user\".\"role_permissions\" DROP CONSTRAINT \"FK_0ab5175ebb91e7a07f850acf42e\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"user\".\"role_permissions\" DROP CONSTRAINT \"FK_5d5086bd299f773d403574cf1c8\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"user\".\"users\" DROP CONSTRAINT \"FK_ace513fa30d485cfd25c11a9e4a\"`,\n    );\n    await queryRunner.query(\n      `DROP INDEX \"user\".\"IDX_0ab5175ebb91e7a07f850acf42\"`,\n    );\n    await queryRunner.query(\n      `DROP INDEX \"user\".\"IDX_5d5086bd299f773d403574cf1c\"`,\n    );\n    await queryRunner.query(`DROP TABLE \"user\".\"role_permissions\"`);\n    await queryRunner.query(`DROP TABLE \"user\".\"permissions\"`);\n    await queryRunner.query(`ALTER TABLE \"user\".\"users\"\n        ADD CONSTRAINT \"FK_a2cecd1a3531c0b041e29ba46e1\" FOREIGN KEY (\"role\") REFERENCES \"user\".\"roles\" (\"name\") ON DELETE NO ACTION ON UPDATE NO ACTION`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRoleTable1741519642145.html":{"url":"classes/CreateRoleTable1741519642145.html","title":"class - CreateRoleTable1741519642145","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRoleTable1741519642145\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user/src/migrations/1741519642145-CreateRoleTable.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'CreateRoleTable1741519642145'\n                    \n                \n                    \n                        \n                                Defined in apps/user/src/migrations/1741519642145-CreateRoleTable.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/user/src/migrations/1741519642145-CreateRoleTable.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/user/src/migrations/1741519642145-CreateRoleTable.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class CreateRoleTable1741519642145 implements MigrationInterface {\n  name = 'CreateRoleTable1741519642145';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`CREATE TABLE \"user\".\"roles\"\n                             (\n                                 \"name\"        character varying NOT NULL,\n                                 \"description\" character varying,\n                                 CONSTRAINT \"PK_648e3f5447f725579d7d4ffdfb7\" PRIMARY KEY (\"name\")\n                             )`);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`DROP TABLE \"user\".\"roles\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserInput.html":{"url":"classes/CreateUserInput.html","title":"class - CreateUserInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user/src/dtos/create-user.input.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                    \n                                    \n                                lastName\n                            \n                            \n                                    \n                                    \n                                    \n                                organizationId\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                passwordConfirmation\n                            \n                            \n                                    \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()@Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/dtos/create-user.input.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/dtos/create-user.input.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/dtos/create-user.input.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        organizationId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsUUID()@Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/dtos/create-user.input.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsStrongPassword({minLength: 8, minLowercase: 1, minNumbers: 1, minSymbols: 1, minUppercase: 1})@Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/dtos/create-user.input.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        passwordConfirmation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ValidateIf(o => )@IsIn(['undefined'], {message: 'Passwords do not match'})@Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/dtos/create-user.input.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsPhoneNumber()@Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/dtos/create-user.input.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRole\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEnum(UserRole)@Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/dtos/create-user.input.ts:61\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql';\nimport { UserRole } from '@qushah/common';\nimport {\n  IsEmail,\n  IsEnum,\n  IsIn,\n  IsNotEmpty,\n  IsOptional,\n  IsPhoneNumber,\n  IsString,\n  IsStrongPassword,\n  IsUUID,\n  ValidateIf,\n} from 'class-validator';\n\n@InputType()\nexport class CreateUserInput {\n  @IsString()\n  @IsNotEmpty()\n  @Field(() => String)\n  firstName: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @Field(() => String)\n  lastName: string;\n\n  @IsEmail()\n  @IsNotEmpty()\n  @Field(() => String)\n  email: string;\n\n  @IsNotEmpty()\n  @IsStrongPassword({\n    minLength: 8,\n    minLowercase: 1,\n    minNumbers: 1,\n    minSymbols: 1,\n    minUppercase: 1,\n  })\n  @Field(() => String)\n  password: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ValidateIf((o) => o.password !== o.passwordConfirmation) // Only validate if passwords don't match\n  @IsIn([Math.random()], {\n    message: 'Passwords do not match', // This condition will always throw error if @ValidateIf fails\n  })\n  @Field(() => String)\n  passwordConfirmation: string;\n\n  @IsNotEmpty()\n  @IsPhoneNumber()\n  @Field(() => String)\n  phone: string;\n\n  @IsNotEmpty()\n  @IsEnum(UserRole)\n  @Field(() => UserRole)\n  role: UserRole;\n\n  @IsOptional()\n  @IsUUID()\n  @Field(() => String)\n  organizationId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserTable1741519705062.html":{"url":"classes/CreateUserTable1741519705062.html","title":"class - CreateUserTable1741519705062","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserTable1741519705062\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user/src/migrations/1741519705062-CreateUserTable.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'CreateUserTable1741519705062'\n                    \n                \n                    \n                        \n                                Defined in apps/user/src/migrations/1741519705062-CreateUserTable.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/user/src/migrations/1741519705062-CreateUserTable.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/user/src/migrations/1741519705062-CreateUserTable.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class CreateUserTable1741519705062 implements MigrationInterface {\n  name = 'CreateUserTable1741519705062';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`CREATE TABLE \"user\".\"users\"\n                             (\n                                 \"id\"              uuid              NOT NULL DEFAULT uuid_generate_v4(),\n                                 \"firstName\"       character varying NOT NULL,\n                                 \"lastName\"        character varying NOT NULL,\n                                 \"email\"           character varying NOT NULL,\n                                 \"password\"        character varying NOT NULL,\n                                 \"phone\"           character varying NOT NULL,\n                                 \"organization_id\" uuid,\n                                 \"role\"         character varying,\n                                 \"created_at\"      TIMESTAMP         NOT NULL DEFAULT now(),\n                                 \"updated_at\"      TIMESTAMP                  DEFAULT now(),\n                                 \"deleted_at\"      TIMESTAMP,\n                                 CONSTRAINT \"PK_a3ffb1c0c8416b9fc6f907b7433\" PRIMARY KEY (\"id\")\n                             )`);\n    await queryRunner.query(`ALTER TABLE \"user\".\"users\"\n        ADD CONSTRAINT \"FK_a2cecd1a3531c0b041e29ba46e1\" FOREIGN KEY (\"role\") REFERENCES \"user\".\"roles\" (\"name\") ON DELETE NO ACTION ON UPDATE NO ACTION`);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"user\".\"users\"\n        DROP CONSTRAINT \"FK_a2cecd1a3531c0b041e29ba46e1\"`);\n    await queryRunner.query(`DROP TABLE \"user\".\"users\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DataSource.html":{"url":"classes/DataSource.html","title":"class - DataSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/utils/data-source.util.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        getInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    getInstance(schema: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/utils/data-source.util.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                schema\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import process from 'node:process';\nimport * as dotenv from 'dotenv';\nimport { DataSource as TypeormDataSource } from 'typeorm';\n\n// Load environment variables from .env file\ndotenv.config();\n\nexport class DataSource {\n  static getInstance(schema: string) {\n    return new TypeormDataSource({\n      migrationsTableName: 'typeorm_migrations',\n      type: (process.env.DATABASE_TYPE as 'postgres') || 'postgres',\n      host: process.env.DATABASE_HOST || 'localhost',\n      port: +process.env.DATABASE_PORT || 5432,\n      username: process.env.DATABASE_USERNAME || 'postgres',\n      password: process.env.DATABASE_PASSWORD || 'postgres',\n      database: process.env.DATABASE_NAME || 'my-db',\n      ssl: { rejectUnauthorized: false },\n      schema,\n      entities: [`apps/${schema}/**/**.entity{.ts,.js}`],\n      migrations: [`apps/${schema}/src/migrations/**/*{.ts,.js}`],\n      subscribers: [`apps/${schema}/src/subscriber/**/*{.ts,.js}`],\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/database/database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init(schema: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/database/database.module.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                schema\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        loadEntities\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadEntities(entities?: EntityClassOrSchema[], dataSource?: DataSource | DataSourceOptions | string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/database/database.module.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        EntityClassOrSchema[]\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                dataSource\n                                            \n                                                            DataSource | DataSourceOptions | string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, DynamicModule } from '@nestjs/common';\nimport { TypeOrmModule, TypeOrmModuleOptions } from '@nestjs/typeorm';\nimport { ConfigHelper } from '@qushah/common';\nimport { EntityClassOrSchema } from '@nestjs/typeorm/dist/interfaces/entity-class-or-schema.type';\nimport { DataSource, DataSourceOptions } from 'typeorm';\n\n@Module({})\nexport class DatabaseModule {\n  static init(schema: string): DynamicModule {\n    return {\n      module: DatabaseModule,\n      imports: [\n        TypeOrmModule.forRootAsync({\n          useFactory: async () => {\n            const configHelper = await ConfigHelper.getInstance();\n            const { type, host, port, username, password, database } =\n              configHelper.databaseConfig;\n            const options: TypeOrmModuleOptions = {\n              type,\n              host,\n              port,\n              username,\n              password,\n              database,\n              schema: schema, // Set schema dynamically\n              autoLoadEntities: true,\n              ssl: { rejectUnauthorized: false },\n            };\n\n            return options;\n          },\n        }),\n      ],\n    };\n  }\n\n  static loadEntities(\n    entities?: EntityClassOrSchema[],\n    dataSource?: DataSource | DataSourceOptions | string,\n  ): DynamicModule {\n    return TypeOrmModule.forFeature(entities, dataSource);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DatabaseUtil.html":{"url":"classes/DatabaseUtil.html","title":"class - DatabaseUtil","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DatabaseUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/utils/database.util.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                generateUUIDv7\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        generateUUIDv7\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateUUIDv7()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/utils/database.util.ts:2\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class DatabaseUtil {\n  static generateUUIDv7(): string {\n    const now = Date.now();\n    const timestamp = now.toString(16).padStart(12, '0'); // 48-bit timestamp\n\n    // Generate 10 random bytes\n    const randomBytes = Array.from(crypto.getRandomValues(new Uint8Array(10)))\n      .map((b) => b.toString(16).padStart(2, '0')) // Convert to hex and ensure 2 characters\n      .join('');\n\n    // Construct UUIDv7 (ensuring the correct format)\n    return `${timestamp.substring(0, 8)}-${timestamp.substring(8, 12)}-7${randomBytes.substring(1, 3)}-${randomBytes.substring(3, 7)}-${randomBytes.substring(7, 19)}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DocumentationController.html":{"url":"controllers/DocumentationController.html","title":"controller - DocumentationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DocumentationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/documentation/src/documentation.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in apps/documentation/src/documentation.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { DocumentationService } from './documentation.service';\n\n@Controller()\nexport class DocumentationController {\n  constructor(private readonly documentationService: DocumentationService) {}\n\n  @Get()\n  getHello(): string {\n    return this.documentationService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DocumentationModule.html":{"url":"modules/DocumentationModule.html","title":"module - DocumentationModule","body":"\n                   \n\n\n\n\n    Modules\n    DocumentationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DocumentationModule\n\n\n\ncluster_DocumentationModule_providers\n\n\n\n\nDocumentationService\n\nDocumentationService\n\n\n\nDocumentationModule\n\nDocumentationModule\n\nDocumentationModule -->\n\nDocumentationService->DocumentationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/documentation/src/documentation.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DocumentationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DocumentationController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DocumentationController } from './documentation.controller';\nimport { DocumentationService } from './documentation.service';\n\n@Module({\n  imports: [],\n  controllers: [DocumentationController],\n  providers: [DocumentationService],\n})\nexport class DocumentationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DocumentationService.html":{"url":"injectables/DocumentationService.html","title":"injectable - DocumentationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DocumentationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/documentation/src/documentation.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/documentation/src/documentation.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class DocumentationService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/EscrowController.html":{"url":"controllers/EscrowController.html","title":"controller - EscrowController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  EscrowController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/escrow/src/escrow.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/escrow/src/escrow.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { EscrowService } from './escrow.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { EscrowCommand } from '@qushah/common';\n\n@Controller()\nexport class EscrowController {\n  constructor(private readonly escrowService: EscrowService) {}\n\n  @MessagePattern({ cmd: EscrowCommand.PING_ESCROW })\n  getHello(): string {\n    return this.escrowService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EscrowModule.html":{"url":"modules/EscrowModule.html","title":"module - EscrowModule","body":"\n                   \n\n\n\n\n    Modules\n    EscrowModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EscrowModule\n\n\n\ncluster_EscrowModule_providers\n\n\n\ncluster_EscrowModule_imports\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nEscrowModule\n\nEscrowModule\n\nEscrowModule -->\n\nCommonModule->EscrowModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nEscrowModule -->\n\nGraphQLMicroserviceModule->EscrowModule\n\n\n\n\n\nEscrowService\n\nEscrowService\n\nEscrowModule -->\n\nEscrowService->EscrowModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/escrow/src/escrow.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            EscrowService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            EscrowController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { EscrowController } from './escrow.controller';\nimport { EscrowService } from './escrow.service';\nimport { CommonModule, GraphQLMicroserviceModule } from '@qushah/common';\nimport { EscrowResolver } from './resolvers/escrow.resolver';\n\n@Module({\n  imports: [CommonModule, GraphQLMicroserviceModule],\n  controllers: [EscrowController],\n  providers: [EscrowService, EscrowResolver],\n})\nexport class EscrowModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EscrowResolver.html":{"url":"classes/EscrowResolver.html","title":"class - EscrowResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EscrowResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/escrow/src/resolvers/escrow.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingEscrow'})\n                \n            \n\n                    \n                        \n                            Defined in apps/escrow/src/resolvers/escrow.resolver.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\n\n@Resolver()\nexport class EscrowResolver {\n  @Query(() => String, { name: 'pingEscrow' })\n  ping(): string {\n    return 'pong';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EscrowService.html":{"url":"injectables/EscrowService.html","title":"injectable - EscrowService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EscrowService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/escrow/src/escrow.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/escrow/src/escrow.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class EscrowService {\n  getHello(): string {\n    return 'Hello from Escrow Service!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GatewayModule.html":{"url":"modules/GatewayModule.html","title":"module - GatewayModule","body":"\n                   \n\n\n\n\n    Modules\n    GatewayModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GatewayModule\n\n\n\ncluster_GatewayModule_providers\n\n\n\ncluster_GatewayModule_imports\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nGatewayModule\n\nGatewayModule\n\nGatewayModule -->\n\nCommonModule->GatewayModule\n\n\n\n\n\nGraphQLGatewayModule\n\nGraphQLGatewayModule\n\nGatewayModule -->\n\nGraphQLGatewayModule->GatewayModule\n\n\n\n\n\nGatewayService\n\nGatewayService\n\nGatewayModule -->\n\nGatewayService->GatewayModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/gateway/src/gateway.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GatewayService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            GraphQLGatewayModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { GatewayService } from './gateway.service';\nimport {\n  CommonModule,\n  ENVIRONMENT,\n  GraphQLGatewayModule,\n} from '@qushah/common';\n\nconst {\n  AUTH_HOST,\n  ESCROW_HOST,\n  MEDIA_HOST,\n  NOTIFICATION_HOST,\n  ORGANIZATION_HOST,\n  PAYMENT_HOST,\n  PROPERTY_HOST,\n  USER_HOST,\n} = ENVIRONMENT;\n\n@Module({\n  imports: [\n    CommonModule,\n    GraphQLGatewayModule.register(\n      AUTH_HOST,\n      ESCROW_HOST,\n      MEDIA_HOST,\n      NOTIFICATION_HOST,\n      ORGANIZATION_HOST,\n      PAYMENT_HOST,\n      PROPERTY_HOST,\n      USER_HOST,\n    ),\n  ],\n  providers: [GatewayService],\n})\nexport class GatewayModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GatewayService.html":{"url":"injectables/GatewayService.html","title":"injectable - GatewayService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GatewayService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gateway/src/gateway.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gateway/src/gateway.service.ts:4\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ping\n                        \n                    \n                \n            \n            \n                \nping()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gateway/src/gateway.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class GatewayService {\n  constructor() {}\n\n  ping(): string {\n    return 'Hello from Gateway Service!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GraphQLGatewayModule.html":{"url":"modules/GraphQLGatewayModule.html","title":"module - GraphQLGatewayModule","body":"\n                   \n\n\n\n\n    Modules\n    GraphQLGatewayModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/graphql/graphql-gateway.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(...subgraphNames: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/graphql/graphql-gateway.module.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                subgraphNames\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, Global, DynamicModule } from '@nestjs/common';\nimport { GraphQLModule } from '@nestjs/graphql';\nimport { ApolloGatewayDriver, ApolloGatewayDriverConfig } from '@nestjs/apollo';\nimport { IntrospectAndCompose } from '@apollo/gateway';\nimport { SubgraphsBuilder } from '@qushah/common';\n\n@Global()\n@Module({})\nexport class GraphQLGatewayModule {\n  static async register(...subgraphNames: string[]): Promise {\n    return {\n      module: GraphQLGatewayModule,\n      imports: [\n        GraphQLModule.forRootAsync({\n          driver: ApolloGatewayDriver,\n          useFactory: async () => {\n            return {\n              gateway: {\n                supergraphSdl: new IntrospectAndCompose({\n                  subgraphs: await SubgraphsBuilder.build(...subgraphNames),\n                }),\n              },\n            };\n          },\n        }),\n      ],\n      exports: [GraphQLModule],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GraphQLMicroserviceModule.html":{"url":"modules/GraphQLMicroserviceModule.html","title":"module - GraphQLMicroserviceModule","body":"\n                   \n\n\n\n\n    Modules\n    GraphQLMicroserviceModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/graphql/graphql-microservice.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { GraphQLModule } from '@nestjs/graphql';\nimport {\n  ApolloFederationDriver,\n  ApolloFederationDriverConfig,\n} from '@nestjs/apollo';\n\n@Module({\n  imports: [\n    GraphQLModule.forRoot({\n      driver: ApolloFederationDriver,\n      autoSchemaFile: {\n        federation: 2,\n      },\n      sortSchema: true,\n    }),\n  ],\n})\nexport class GraphQLMicroserviceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MediaController.html":{"url":"controllers/MediaController.html","title":"controller - MediaController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MediaController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/media/src/media.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/media/src/media.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { MediaService } from './media.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { MediaCommand } from '@qushah/common';\n\n@Controller()\nexport class MediaController {\n  constructor(private readonly mediaService: MediaService) {}\n\n  @MessagePattern({ cmd: MediaCommand.PING_MEDIA })\n  getHello(): string {\n    return this.mediaService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MediaModule.html":{"url":"modules/MediaModule.html","title":"module - MediaModule","body":"\n                   \n\n\n\n\n    Modules\n    MediaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MediaModule\n\n\n\ncluster_MediaModule_providers\n\n\n\ncluster_MediaModule_imports\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nMediaModule\n\nMediaModule\n\nMediaModule -->\n\nCommonModule->MediaModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nMediaModule -->\n\nGraphQLMicroserviceModule->MediaModule\n\n\n\n\n\nMediaService\n\nMediaService\n\nMediaModule -->\n\nMediaService->MediaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/media/src/media.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MediaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MediaController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MediaController } from './media.controller';\nimport { MediaService } from './media.service';\nimport { CommonModule, GraphQLMicroserviceModule } from '@qushah/common';\nimport { MediaResolver } from './resolvers/media.resolver';\n\n@Module({\n  imports: [CommonModule, GraphQLMicroserviceModule],\n  controllers: [MediaController],\n  providers: [MediaService, MediaResolver],\n})\nexport class MediaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MediaResolver.html":{"url":"classes/MediaResolver.html","title":"class - MediaResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MediaResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/media/src/resolvers/media.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingMedia'})\n                \n            \n\n                    \n                        \n                            Defined in apps/media/src/resolvers/media.resolver.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\n\n@Resolver()\nexport class MediaResolver {\n  @Query(() => String, { name: 'pingMedia' })\n  ping(): string {\n    return 'pong';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MediaService.html":{"url":"injectables/MediaService.html","title":"injectable - MediaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MediaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/media/src/media.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/media/src/media.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class MediaService {\n  getHello(): string {\n    return 'Hello from Media Service!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/NotificationController.html":{"url":"controllers/NotificationController.html","title":"controller - NotificationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  NotificationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/notification/src/notification.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/notification/src/notification.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { NotificationService } from './notification.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { NotificationCommand } from '@qushah/common';\n\n@Controller()\nexport class NotificationController {\n  constructor(private readonly notificationService: NotificationService) {}\n\n  @MessagePattern({ cmd: NotificationCommand.PING_NOTIFICATION })\n  getHello(): string {\n    return this.notificationService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NotificationModule.html":{"url":"modules/NotificationModule.html","title":"module - NotificationModule","body":"\n                   \n\n\n\n\n    Modules\n    NotificationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NotificationModule\n\n\n\ncluster_NotificationModule_providers\n\n\n\ncluster_NotificationModule_imports\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nNotificationModule\n\nNotificationModule\n\nNotificationModule -->\n\nCommonModule->NotificationModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nNotificationModule -->\n\nGraphQLMicroserviceModule->NotificationModule\n\n\n\n\n\nNotificationService\n\nNotificationService\n\nNotificationModule -->\n\nNotificationService->NotificationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/notification/src/notification.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NotificationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            NotificationController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { NotificationController } from './notification.controller';\nimport { NotificationService } from './notification.service';\nimport { CommonModule, GraphQLMicroserviceModule } from '@qushah/common';\nimport { NotificationResolver } from './resolvers/notification.resolver';\n\n@Module({\n  imports: [CommonModule, GraphQLMicroserviceModule],\n  controllers: [NotificationController],\n  providers: [NotificationService, NotificationResolver],\n})\nexport class NotificationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotificationResolver.html":{"url":"classes/NotificationResolver.html","title":"class - NotificationResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotificationResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/notification/src/resolvers/notification.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingNotification'})\n                \n            \n\n                    \n                        \n                            Defined in apps/notification/src/resolvers/notification.resolver.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\n\n@Resolver()\nexport class NotificationResolver {\n  @Query(() => String, { name: 'pingNotification' })\n  ping(): string {\n    return 'pong';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationService.html":{"url":"injectables/NotificationService.html","title":"injectable - NotificationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NotificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/notification/src/notification.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/notification/src/notification.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class NotificationService {\n  getHello(): string {\n    return 'Hello from Notification Service!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Organization.html":{"url":"entities/Organization.html","title":"entity - Organization","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Organization\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/organization/src/entities/organization.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                meta\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                primaryContactName\n                            \n                            \n                                    \n                                    \n                                slug\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrganizationMetadata\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@OneToOne(undefined, meta => meta.organization)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        primaryContactName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column({name: 'primary_contact_name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization.entity.ts:16\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql';\nimport { Column, Entity, OneToOne } from 'typeorm';\nimport { BaseEntity, GraphQLFederationDirective } from '@qushah/common';\nimport { OrganizationMetadata } from './organization-metadata.entity';\n\n@ObjectType()\n@Entity({ name: 'organizations' })\n@GraphQLFederationDirective('@key(fields: \"id\")')\nexport class Organization extends BaseEntity {\n  @Field(() => String)\n  @Column({ unique: true })\n  name: string;\n\n  @Field(() => String)\n  @Column({ unique: true })\n  slug: string;\n\n  @Field(() => String)\n  @Column({ name: 'primary_contact_name' })\n  primaryContactName: string;\n\n  @Field(() => String)\n  @Column()\n  email: string;\n\n  @Field(() => String)\n  @Column()\n  phone: string;\n\n  @Field(() => OrganizationMetadata, { nullable: true })\n  @OneToOne(() => OrganizationMetadata, (meta) => meta.organization)\n  meta?: OrganizationMetadata;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Organization-1.html":{"url":"classes/Organization-1.html","title":"class - Organization-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Organization\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user/src/entities/external/organization.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Directive('@external')\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/entities/external/organization.entity.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive, Field, ObjectType } from '@nestjs/graphql';\nimport { GraphQLFederationDirective } from '@qushah/common';\n\n@ObjectType()\n@GraphQLFederationDirective('@extends') // Extending from Organization Microservice\n@GraphQLFederationDirective('@key(fields: \"id\")') // Federation key\nexport class Organization {\n  @Field(() => String)\n  @Directive('@external') // This field is managed by Organization Microservice\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrganizationController.html":{"url":"controllers/OrganizationController.html","title":"controller - OrganizationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrganizationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/organization/src/organization.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                findOneById\n                            \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/organization/src/organization.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/organization/src/organization.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { OrganizationService } from './organization.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { OrganizationCommand } from '@qushah/common/constants/commands/organization.command';\n\n@Controller()\nexport class OrganizationController {\n  constructor(private readonly organizationService: OrganizationService) {}\n\n  @MessagePattern({ cmd: OrganizationCommand.PING_ORGANIZATION })\n  getHello(): string {\n    return this.organizationService.getHello();\n  }\n\n  @MessagePattern({ cmd: OrganizationCommand.FIND_ORGANIZATION_BY_ID })\n  findOneById(id: string) {\n    return this.organizationService.findOne({ id });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/OrganizationMetadata.html":{"url":"entities/OrganizationMetadata.html","title":"entity - OrganizationMetadata","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  OrganizationMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/organization/src/entities/organization-metadata.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                allowInterestEarning\n                            \n                            \n                                    \n                                    \n                                depositFeePercentage\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                domain\n                            \n                            \n                                    \n                                    \n                                logo\n                            \n                            \n                                    \n                                    \n                                organization\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                primaryColor\n                            \n                            \n                                    \n                                    \n                                rentFeePercentage\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        allowInterestEarning\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column({name: 'allow_interest_earning', type: 'boolean', default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization-metadata.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        depositFeePercentage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column({name: 'deposit_fee_percentage', default: 5, precision: 5, scale: 2, type: 'decimal'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization-metadata.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        domain\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization-metadata.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization-metadata.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        organization\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Organization\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, organization => organization.meta, {cascade: true, onDelete: 'CASCADE', onUpdate: 'CASCADE'})@JoinColumn({name: 'organization_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization-metadata.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        primaryColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Column({name: 'primary_color', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization-metadata.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        rentFeePercentage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column({name: 'rent_fee_percentage', default: 5, precision: 5, scale: 2, type: 'decimal'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization-metadata.entity.ts:38\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, OneToOne } from 'typeorm';\nimport { Field, Float, ObjectType } from '@nestjs/graphql';\nimport { BaseEntity } from '@qushah/common';\nimport { JoinColumn } from 'typeorm';\nimport { Organization } from './organization.entity';\n\n@ObjectType()\n@Entity({ name: 'organizations_metadata' })\nexport class OrganizationMetadata extends BaseEntity {\n  @OneToOne(() => Organization, (organization) => organization.meta, {\n    cascade: true,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n  })\n  @JoinColumn({ name: 'organization_id' })\n  organization: Organization;\n\n  @Field(() => String, { nullable: true })\n  @Column({ name: 'primary_color', nullable: true })\n  primaryColor?: string;\n\n  @Field(() => String, { nullable: true })\n  @Column({ nullable: true })\n  domain?: string;\n\n  @Field(() => String)\n  @Column()\n  logo: string;\n\n  @Field(() => Float)\n  @Column({\n    name: 'rent_fee_percentage',\n    default: 5.0,\n    precision: 5,\n    scale: 2,\n    type: 'decimal',\n  })\n  rentFeePercentage: number;\n\n  @Field(() => Float)\n  @Column({\n    name: 'deposit_fee_percentage',\n    default: 5.0,\n    precision: 5,\n    scale: 2,\n    type: 'decimal',\n  })\n  depositFeePercentage: number;\n\n  @Field(() => Boolean)\n  @Column({ name: 'allow_interest_earning', type: 'boolean', default: false })\n  allowInterestEarning: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrganizationModule.html":{"url":"modules/OrganizationModule.html","title":"module - OrganizationModule","body":"\n                   \n\n\n\n\n    Modules\n    OrganizationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OrganizationModule\n\n\n\ncluster_OrganizationModule_imports\n\n\n\ncluster_OrganizationModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nOrganizationModule\n\nOrganizationModule\n\nOrganizationModule -->\n\nCommonModule->OrganizationModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nOrganizationModule -->\n\nDatabaseModule->OrganizationModule\n\n\n\nOrganizationModule -->\n\nDatabaseModule->OrganizationModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nOrganizationModule -->\n\nGraphQLMicroserviceModule->OrganizationModule\n\n\n\n\n\nOrganizationService\n\nOrganizationService\n\nOrganizationModule -->\n\nOrganizationService->OrganizationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/organization/src/organization.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrganizationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrganizationController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { OrganizationController } from './organization.controller';\nimport { OrganizationService } from './organization.service';\nimport {\n  CommonModule,\n  DatabaseModule,\n  GraphQLMicroserviceModule,\n  SCHEMA,\n} from '@qushah/common';\nimport { OrganizationResolver } from './resolvers/organization.resolver';\nimport { Organization } from './entities/organization.entity';\nimport { OrganizationMetadata } from './entities/organization-metadata.entity';\n\n@Module({\n  imports: [\n    DatabaseModule.init(SCHEMA.ORGANIZATION),\n    DatabaseModule.loadEntities([Organization, OrganizationMetadata]),\n    CommonModule,\n    GraphQLMicroserviceModule,\n  ],\n  controllers: [OrganizationController],\n  providers: [OrganizationService, OrganizationResolver],\n})\nexport class OrganizationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrganizationResolver.html":{"url":"classes/OrganizationResolver.html","title":"class - OrganizationResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrganizationResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/organization/src/resolvers/organization.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                organizations\n                            \n                            \n                                    \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(organizationService: OrganizationService)\n                    \n                \n                        \n                            \n                                Defined in apps/organization/src/resolvers/organization.resolver.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationService\n                                                  \n                                                        \n                                                                        OrganizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        organizations\n                        \n                    \n                \n            \n            \n                \n                        \n                    organizations()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: true})\n                \n            \n\n                    \n                        \n                            Defined in apps/organization/src/resolvers/organization.resolver.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingOrganization'})\n                \n            \n\n                    \n                        \n                            Defined in apps/organization/src/resolvers/organization.resolver.ts:10\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\nimport { Organization } from '../entities/organization.entity';\nimport { OrganizationService } from '../organization.service';\n\n@Resolver()\nexport class OrganizationResolver {\n  constructor(private readonly organizationService: OrganizationService) {}\n\n  @Query(() => String, { name: 'pingOrganization' })\n  ping(): string {\n    return 'pong';\n  }\n\n  @Query(() => [Organization], { nullable: true })\n  organizations(): Promise {\n    return this.organizationService.findAll();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrganizationService.html":{"url":"injectables/OrganizationService.html","title":"injectable - OrganizationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrganizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/organization/src/organization.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: Repository)\n                    \n                \n                        \n                            \n                                Defined in apps/organization/src/organization.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/organization/src/organization.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(where: FindOptionsWhere)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/organization/src/organization.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                where\n                                            \n                                                            FindOptionsWhere\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/organization/src/organization.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { Organization } from './entities/organization.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { FindOptionsWhere } from 'typeorm/find-options/FindOptionsWhere';\n\n@Injectable()\nexport class OrganizationService {\n  constructor(\n    @InjectRepository(Organization)\n    private readonly repository: Repository,\n  ) {}\n\n  getHello(): string {\n    return 'Hello from Organization Service!';\n  }\n\n  findAll(): Promise {\n    return this.repository.find({\n      relations: ['meta'],\n    });\n  }\n\n  findOne(where: FindOptionsWhere) {\n    return this.repository.findOne({ where });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PaymentController.html":{"url":"controllers/PaymentController.html","title":"controller - PaymentController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PaymentController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/payment/src/payment.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/payment/src/payment.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { PaymentService } from './payment.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { PaymentCommand } from '@qushah/common';\n\n@Controller()\nexport class PaymentController {\n  constructor(private readonly paymentService: PaymentService) {}\n\n  @MessagePattern({ cmd: PaymentCommand.PING_PAYMENT })\n  getHello(): string {\n    return this.paymentService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PaymentModule.html":{"url":"modules/PaymentModule.html","title":"module - PaymentModule","body":"\n                   \n\n\n\n\n    Modules\n    PaymentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PaymentModule\n\n\n\ncluster_PaymentModule_imports\n\n\n\ncluster_PaymentModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nPaymentModule\n\nPaymentModule\n\nPaymentModule -->\n\nCommonModule->PaymentModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nPaymentModule -->\n\nGraphQLMicroserviceModule->PaymentModule\n\n\n\n\n\nPaymentService\n\nPaymentService\n\nPaymentModule -->\n\nPaymentService->PaymentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/payment/src/payment.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PaymentService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PaymentController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PaymentController } from './payment.controller';\nimport { PaymentService } from './payment.service';\nimport { CommonModule, GraphQLMicroserviceModule } from '@qushah/common';\nimport { PaymentResolver } from './resolvers/payment.resolver';\n\n@Module({\n  imports: [CommonModule, GraphQLMicroserviceModule],\n  controllers: [PaymentController],\n  providers: [PaymentService, PaymentResolver],\n})\nexport class PaymentModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaymentResolver.html":{"url":"classes/PaymentResolver.html","title":"class - PaymentResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaymentResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/payment/src/resolvers/payment.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingPayment'})\n                \n            \n\n                    \n                        \n                            Defined in apps/payment/src/resolvers/payment.resolver.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\n\n@Resolver()\nexport class PaymentResolver {\n  @Query(() => String, { name: 'pingPayment' })\n  ping(): string {\n    return 'pong';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PaymentService.html":{"url":"injectables/PaymentService.html","title":"injectable - PaymentService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PaymentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/payment/src/payment.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/payment/src/payment.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class PaymentService {\n  getHello(): string {\n    return 'Hello from Payment Service!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Permission.html":{"url":"entities/Permission.html","title":"entity - Permission","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Permission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user/src/entities/permission.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                roles\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/entities/permission.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@PrimaryColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/entities/permission.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, role => role.permissions)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/entities/permission.entity.ts:17\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql';\nimport { BaseEntity, Column, Entity, ManyToMany, PrimaryColumn } from 'typeorm';\nimport { Role } from './role.entity';\n\n@ObjectType()\n@Entity({ name: 'permissions' })\nexport class Permission extends BaseEntity {\n  @Field(() => String)\n  @PrimaryColumn()\n  name: string;\n\n  @Field(() => String, { nullable: true })\n  @Column({ nullable: true })\n  description?: string;\n\n  @ManyToMany(() => Role, (role) => role.permissions)\n  roles: Role[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PropertyController.html":{"url":"controllers/PropertyController.html","title":"controller - PropertyController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PropertyController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/property/src/property.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/property/src/property.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { PropertyService } from './property.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { PropertyCommand } from '@qushah/common';\n\n@Controller()\nexport class PropertyController {\n  constructor(private readonly propertyService: PropertyService) {}\n\n  @MessagePattern({ cmd: PropertyCommand.PING_PROPERTY })\n  getHello(): string {\n    return this.propertyService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PropertyModule.html":{"url":"modules/PropertyModule.html","title":"module - PropertyModule","body":"\n                   \n\n\n\n\n    Modules\n    PropertyModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PropertyModule\n\n\n\ncluster_PropertyModule_providers\n\n\n\ncluster_PropertyModule_imports\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nPropertyModule\n\nPropertyModule\n\nPropertyModule -->\n\nCommonModule->PropertyModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nPropertyModule -->\n\nGraphQLMicroserviceModule->PropertyModule\n\n\n\n\n\nPropertyService\n\nPropertyService\n\nPropertyModule -->\n\nPropertyService->PropertyModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/property/src/property.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PropertyService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PropertyController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PropertyController } from './property.controller';\nimport { PropertyService } from './property.service';\nimport { CommonModule, GraphQLMicroserviceModule } from '@qushah/common';\nimport { PropertyResolver } from './resolvers/property.resolver';\n\n@Module({\n  imports: [CommonModule, GraphQLMicroserviceModule],\n  controllers: [PropertyController],\n  providers: [PropertyService, PropertyResolver],\n})\nexport class PropertyModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PropertyResolver.html":{"url":"classes/PropertyResolver.html","title":"class - PropertyResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PropertyResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/property/src/resolvers/property.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingProperty'})\n                \n            \n\n                    \n                        \n                            Defined in apps/property/src/resolvers/property.resolver.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\n\n@Resolver()\nexport class PropertyResolver {\n  @Query(() => String, { name: 'pingProperty' })\n  ping(): string {\n    return 'pong';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PropertyService.html":{"url":"injectables/PropertyService.html","title":"injectable - PropertyService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PropertyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/property/src/property.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/property/src/property.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class PropertyService {\n  getHello(): string {\n    return 'Hello from Property Service!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Role.html":{"url":"entities/Role.html","title":"entity - Role","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user/src/entities/role.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                permissions\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/entities/role.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@PrimaryColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/entities/role.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Permission[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@ManyToMany(undefined, permission => permission.roles, {eager: true})@JoinTable({name: 'role_permissions', joinColumn: undefined, inverseJoinColumn: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/entities/role.entity.ts:32\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql';\nimport {\n  BaseEntity,\n  Column,\n  Entity,\n  JoinTable,\n  ManyToMany,\n  PrimaryColumn,\n} from 'typeorm';\nimport { Permission } from './permission.entity';\n\n@ObjectType()\n@Entity({ name: 'roles' })\nexport class Role extends BaseEntity {\n  @Field(() => String)\n  @PrimaryColumn()\n  name: string;\n\n  @Field(() => String, { nullable: true })\n  @Column({ nullable: true })\n  description?: string;\n\n  @Field(() => [Permission])\n  @ManyToMany(() => Permission, (permission) => permission.roles, {\n    eager: true,\n  })\n  @JoinTable({\n    name: 'role_permissions',\n    joinColumn: { name: 'role', referencedColumnName: 'name' },\n    inverseJoinColumn: { name: 'permission', referencedColumnName: 'name' },\n  })\n  permissions: Permission[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SeederModule.html":{"url":"modules/SeederModule.html","title":"module - SeederModule","body":"\n                   \n\n\n\n\n    Modules\n    SeederModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/database/seeder/seeder.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Async\n                        bootstrap\n                        \n                    \n                \n            \n            \n                \n                        \n                    bootstrap(service: Type, module: any)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/database/seeder/seeder.module.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                service\n                                            \n                                                            Type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                module\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init(services: Provider[], entities: EntityClassOrSchema[])\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/database/seeder/seeder.module.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                services\n                                            \n                                                        Provider[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entities\n                                            \n                                                        EntityClassOrSchema[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        seed\n                        \n                    \n                \n            \n            \n                \n                        \n                    seed(service: Type, module: any)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/database/seeder/seeder.module.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                service\n                                            \n                                                            Type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                module\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, DynamicModule, Provider } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\nimport { SeederService } from '@qushah/common/database/seeder/seeder-service.interface';\nimport { Type } from '@nestjs/common/interfaces/type.interface';\nimport { EntityClassOrSchema } from '@nestjs/typeorm/dist/interfaces/entity-class-or-schema.type';\nimport { DatabaseModule } from '../';\n\n@Module({})\nexport class SeederModule {\n  static init(\n    services: Provider[],\n    entities: EntityClassOrSchema[],\n  ): DynamicModule {\n    return {\n      module: SeederModule,\n      imports: [DatabaseModule.loadEntities(entities)],\n      providers: services,\n      exports: services,\n    };\n  }\n\n  private static async bootstrap(service: Type, module: any) {\n    const app = await NestFactory.createApplicationContext(module);\n    const seeder = app.get(service);\n    await seeder.seed();\n    await app.close();\n    console.log('✅ Database seeding completed.');\n  }\n\n  static seed(service: Type, module: any) {\n    SeederModule.bootstrap(service, module).catch((err) => {\n      console.error('Seeding failed!', err);\n      process.exit(1);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SeederService.html":{"url":"injectables/SeederService.html","title":"injectable - SeederService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SeederService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user/src/seeder/seeder.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                seed\n                            \n                            \n                                    Private\n                                    Async\n                                seedPermissions\n                            \n                            \n                                    Private\n                                    Async\n                                seedRoles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleRepository: Repository, permissionRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in apps/user/src/seeder/seeder.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        permissionRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        seed\n                        \n                    \n                \n            \n            \n                \n                        \n                    seed()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/user/src/seeder/seeder.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        seedPermissions\n                        \n                    \n                \n            \n            \n                \n                        \n                    seedPermissions()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/user/src/seeder/seeder.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        seedRoles\n                        \n                    \n                \n            \n            \n                \n                        \n                    seedRoles()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/user/src/seeder/seeder.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Role } from '../entities/role.entity';\nimport { UserPermission, UserRole } from '@qushah/common';\nimport { Permission } from '../entities/permission.entity';\n\n@Injectable()\nexport class SeederService {\n  constructor(\n    @InjectRepository(Role) private roleRepository: Repository,\n    @InjectRepository(Permission)\n    private permissionRepository: Repository,\n  ) {}\n\n  async seed() {\n    await this.seedRoles();\n    await this.seedPermissions();\n  }\n\n  private async seedRoles() {\n    const roles = Object.values(UserRole);\n    for (const roleName of roles) {\n      const roleExists = await this.roleRepository.findOne({\n        where: { name: roleName },\n      });\n      if (!roleExists) {\n        await this.roleRepository.save(\n          this.roleRepository.create({ name: roleName }),\n        );\n        console.log(`Inserted Role: ${roleName}`);\n      }\n    }\n  }\n\n  private async seedPermissions() {\n    const permissions = Object.values(UserPermission);\n    for (const permissionName of permissions) {\n      const permissionExists = await this.roleRepository.findOne({\n        where: { name: permissionName },\n      });\n\n      if (!permissionExists) {\n        await this.permissionRepository.save(\n          this.permissionRepository.create({ name: permissionName }),\n        );\n        console.log(`Inserted Permission: ${permissionName}`);\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SubgraphsBuilder.html":{"url":"classes/SubgraphsBuilder.html","title":"class - SubgraphsBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SubgraphsBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/utils/subgraphs-builder.util.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Async\n                                build\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        build\n                        \n                    \n                \n            \n            \n                \n                        \n                    build(...graphNames: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/utils/subgraphs-builder.util.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                graphNames\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ServiceEndpointDefinition } from '@apollo/gateway/src/config';\nimport { ConfigHelper } from '@qushah/common';\n\nexport class SubgraphsBuilder {\n  static async build(\n    ...graphNames: string[]\n  ): Promise {\n    const configHelper = await ConfigHelper.getInstance();\n\n    return graphNames.map((graphName) => {\n      const keyPart = graphName?.split('_HOST')?.[0];\n      const key = keyPart || graphName;\n      const { host, port } = configHelper.getMicroServiceHosts(key);\n      return {\n        name: graphName,\n        url: `${host}:${port}/graphql`,\n      };\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user/src/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                    \n                                lastName\n                            \n                            \n                                    \n                                    Optional\n                                organization\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                organizationId\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/entities/user.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/entities/user.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/entities/user.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        organization\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Organization\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/entities/user.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        organizationId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Column({name: 'organization_id', type: 'uuid', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/entities/user.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/entities/user.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/entities/user.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@ManyToOne(undefined)@JoinColumn({name: 'role'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/user/src/entities/user.entity.ts:33\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql';\nimport { Column, Entity, JoinColumn, ManyToOne } from 'typeorm';\nimport { BaseEntity, GraphQLFederationDirective } from '@qushah/common';\nimport { Organization } from './external/organization.entity';\nimport { Role } from './role.entity';\n\n@ObjectType()\n@Entity({ name: 'users' })\n@GraphQLFederationDirective('@key(fields: \"id\")')\nexport class User extends BaseEntity {\n  @Field(() => String)\n  @Column()\n  firstName: string;\n\n  @Field(() => String)\n  @Column()\n  lastName: string;\n\n  @Field(() => String)\n  @Column()\n  email: string;\n\n  @Column()\n  password: string;\n\n  @Field(() => String)\n  @Column()\n  phone: string;\n\n  @Field(() => Role)\n  @ManyToOne(() => Role)\n  @JoinColumn({ name: 'role' })\n  role: Role;\n\n  @Field(() => String, { nullable: true })\n  @Column({ name: 'organization_id', type: 'uuid', nullable: true })\n  organizationId?: string;\n\n  @Field(() => [Organization], { nullable: true })\n  organization?: Organization;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User-1.html":{"url":"classes/User-1.html","title":"class - User-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/organization/src/entities/external/user.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                organization\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                organizationId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/external/user.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        organization\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Organization\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Directive('@requires(fields: \"organizationId\")')\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/external/user.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        organizationId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Directive('@external')\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/external/user.entity.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive, Field, ObjectType } from '@nestjs/graphql';\nimport { Organization } from '../organization.entity';\nimport { GraphQLFederationDirective } from '@qushah/common';\n\n@ObjectType()\n@GraphQLFederationDirective('@extends') // 🚀 Extending User from User microservice\n@GraphQLFederationDirective('@key(fields: \"id\")') // Federated entity\nexport class User {\n  @Field(() => String)\n  id: string;\n\n  @Field(() => String, { nullable: true })\n  @Directive('@external') // organizationId is stored in User service\n  organizationId?: string;\n\n  @Field(() => Organization, { nullable: true })\n  @Directive('@requires(fields: \"organizationId\")') // Requires orgId to fetch org\n  organization?: Organization;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user/src/user.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/user/src/user.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { UserCommand } from '@qushah/common';\n\n@Controller()\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @MessagePattern({ cmd: UserCommand.PING_USER })\n  getHello(): string {\n    return this.userService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nCommonModule->UserModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nUserModule -->\n\nDatabaseModule->UserModule\n\n\n\nUserModule -->\n\nDatabaseModule->UserModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nUserModule -->\n\nGraphQLMicroserviceModule->UserModule\n\n\n\n\n\nSeederModule\n\nSeederModule\n\nUserModule -->\n\nSeederModule->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/user/src/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                        \n                            SeederModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserController } from './user.controller';\nimport { UserService } from './user.service';\nimport {\n  CommonModule,\n  DatabaseModule,\n  GraphQLMicroserviceModule,\n  SCHEMA,\n  SeederModule,\n} from '@qushah/common';\nimport { UserResolver } from './resolvers/user.resolver';\nimport { User } from './entities/user.entity';\nimport { Role } from './entities/role.entity';\nimport { SeederService } from './seeder/seeder.service';\nimport { Permission } from './entities/permission.entity';\n\n@Module({\n  imports: [\n    CommonModule,\n    GraphQLMicroserviceModule,\n    DatabaseModule.init(SCHEMA.USER),\n    DatabaseModule.loadEntities([User, Role, Permission]),\n    SeederModule.init([SeederService], [Role, Permission]),\n  ],\n  controllers: [UserController],\n  providers: [UserService, UserResolver],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserResolver.html":{"url":"classes/UserResolver.html","title":"class - UserResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user/src/resolvers/user.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createUser\n                            \n                            \n                                    \n                                ping\n                            \n                            \n                                    \n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in apps/user/src/resolvers/user.resolver.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(input: CreateUserInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)\n                \n            \n\n                    \n                        \n                            Defined in apps/user/src/resolvers/user.resolver.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            CreateUserInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingUser'})\n                \n            \n\n                    \n                        \n                            Defined in apps/user/src/resolvers/user.resolver.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        users\n                        \n                    \n                \n            \n            \n                \n                        \n                    users()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: true})\n                \n            \n\n                    \n                        \n                            Defined in apps/user/src/resolvers/user.resolver.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Args, Mutation, Query, Resolver } from '@nestjs/graphql';\nimport { User } from '../entities/user.entity';\nimport { UserService } from '../user.service';\nimport { CreateUserInput } from '../dtos/create-user.input';\n\n@Resolver(User)\nexport class UserResolver {\n  constructor(private readonly userService: UserService) {}\n\n  @Query(() => String, { name: 'pingUser' })\n  ping(): string {\n    return 'pong';\n  }\n\n  @Query(() => [User], { nullable: true })\n  users(): Promise {\n    return this.userService.find();\n  }\n\n  @Mutation(() => User)\n  createUser(@Args('input') input: CreateUserInput): Promise {\n    return this.userService.create(input);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserResolver-1.html":{"url":"classes/UserResolver-1.html","title":"class - UserResolver-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/organization/src/resolvers/external/user.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                organization\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(organizationService: OrganizationService)\n                    \n                \n                        \n                            \n                                Defined in apps/organization/src/resolvers/external/user.resolver.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationService\n                                                  \n                                                        \n                                                                        OrganizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        organization\n                        \n                    \n                \n            \n            \n                \n                        \n                    organization(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResolveField(undefined, {nullable: true})\n                \n            \n\n                    \n                        \n                            Defined in apps/organization/src/resolvers/external/user.resolver.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Parent, ResolveField, Resolver } from '@nestjs/graphql';\nimport { User } from '../../entities/external/user.entity';\nimport { Organization } from '../../entities/organization.entity';\nimport { OrganizationService } from '../../organization.service';\n\n@Resolver(() => User)\nexport class UserResolver {\n  constructor(private readonly organizationService: OrganizationService) {}\n\n  @ResolveField(() => Organization, { nullable: true })\n  async organization(@Parent() user: User): Promise {\n    if (!user.organizationId) return null;\n    return this.organizationService.findOne({ id: user.organizationId });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user/src/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                find\n                            \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: Repository)\n                    \n                \n                        \n                            \n                                Defined in apps/user/src/user.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(input: CreateUserInput)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/user/src/user.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            CreateUserInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \nfind()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/user/src/user.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/user/src/user.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { User } from './entities/user.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CreateUserInput } from './dtos/create-user.input';\nimport { genSalt, hash } from 'bcrypt';\n\n@Injectable()\nexport class UserService {\n  constructor(\n    @InjectRepository(User)\n    private readonly repository: Repository,\n  ) {}\n\n  getHello(): string {\n    return 'Hello from User Service!';\n  }\n\n  find(): Promise {\n    return this.repository.find();\n  }\n\n  async create(input: CreateUserInput): Promise {\n    const saltOrRounds = await genSalt();\n    const password = await hash(input.password, saltOrRounds);\n\n    return this.repository.save({\n      ...input,\n      password,\n      role: {\n        name: input.role,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/auth/src/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/auth/src/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/auth/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/auth/src/resolvers/auth.resolver.ts\n            \n            class\n            AuthResolver\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/documentation/src/documentation.controller.ts\n            \n            controller\n            DocumentationController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/documentation/src/documentation.service.ts\n            \n            injectable\n            DocumentationService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/documentation/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/escrow/src/escrow.controller.ts\n            \n            controller\n            EscrowController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/escrow/src/escrow.service.ts\n            \n            injectable\n            EscrowService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/escrow/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/escrow/src/resolvers/escrow.resolver.ts\n            \n            class\n            EscrowResolver\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/escrow/src/typeorm.data-source.ts\n            \n            variable\n            TypeormDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/gateway/src/gateway.module.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/gateway/src/gateway.service.ts\n            \n            injectable\n            GatewayService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        apps/gateway/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/media/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/media/src/media.controller.ts\n            \n            controller\n            MediaController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/media/src/media.service.ts\n            \n            injectable\n            MediaService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/media/src/resolvers/media.resolver.ts\n            \n            class\n            MediaResolver\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/media/src/typeorm.data-source.ts\n            \n            variable\n            TypeormDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/notification/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/notification/src/notification.controller.ts\n            \n            controller\n            NotificationController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/notification/src/notification.service.ts\n            \n            injectable\n            NotificationService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/notification/src/resolvers/notification.resolver.ts\n            \n            class\n            NotificationResolver\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/notification/src/typeorm.data-source.ts\n            \n            variable\n            TypeormDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/organization/src/entities/external/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/organization/src/entities/organization-metadata.entity.ts\n            \n            entity\n            OrganizationMetadata\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/organization/src/entities/organization-metadata.entity.ts\n            \n            class\n            OrganizationMetadata\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/organization/src/entities/organization.entity.ts\n            \n            entity\n            Organization\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/organization/src/entities/organization.entity.ts\n            \n            class\n            Organization\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        apps/organization/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/organization/src/migrations/1741518145374-CreateOrganizationAndMetaTable.ts\n            \n            class\n            CreateOrganizationAndMetaTable1741518145374\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/organization/src/organization.controller.ts\n            \n            controller\n            OrganizationController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/organization/src/organization.service.ts\n            \n            injectable\n            OrganizationService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/organization/src/resolvers/external/user.resolver.ts\n            \n            class\n            UserResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/organization/src/resolvers/organization.resolver.ts\n            \n            class\n            OrganizationResolver\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        apps/organization/src/typeorm.data-source.ts\n            \n            variable\n            TypeormDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/payment/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/payment/src/payment.controller.ts\n            \n            controller\n            PaymentController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/payment/src/payment.service.ts\n            \n            injectable\n            PaymentService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/payment/src/resolvers/payment.resolver.ts\n            \n            class\n            PaymentResolver\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/payment/src/typeorm.data-source.ts\n            \n            variable\n            TypeormDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/property/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/property/src/property.controller.ts\n            \n            controller\n            PropertyController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/property/src/property.service.ts\n            \n            injectable\n            PropertyService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/property/src/resolvers/property.resolver.ts\n            \n            class\n            PropertyResolver\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/property/src/typeorm.data-source.ts\n            \n            variable\n            TypeormDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/user/src/dtos/create-user.input.ts\n            \n            class\n            CreateUserInput\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/user/src/entities/external/organization.entity.ts\n            \n            class\n            Organization\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/user/src/entities/permission.entity.ts\n            \n            entity\n            Permission\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/user/src/entities/permission.entity.ts\n            \n            class\n            Permission\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/user/src/entities/role.entity.ts\n            \n            entity\n            Role\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/user/src/entities/role.entity.ts\n            \n            class\n            Role\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/user/src/entities/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/user/src/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                        apps/user/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/user/src/migrations/1741519642145-CreateRoleTable.ts\n            \n            class\n            CreateRoleTable1741519642145\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/user/src/migrations/1741519705062-CreateUserTable.ts\n            \n            class\n            CreateUserTable1741519705062\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/user/src/migrations/1741966377333-CreatePermissionTables.ts\n            \n            class\n            CreatePermissionTables1741966377333\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/user/src/resolvers/user.resolver.ts\n            \n            class\n            UserResolver\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/user/src/seeder/seeder.service.ts\n            \n            injectable\n            SeederService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        apps/user/src/typeorm.data-source.ts\n            \n            variable\n            TypeormDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/user/src/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/user/src/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                libs/common/src/common.service.ts\n            \n            injectable\n            CommonService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/config/config.helper.ts\n            \n            class\n            ConfigHelper\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                libs/common/src/config/config.service.ts\n            \n            injectable\n            AppConfigService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/auth.command.ts\n            \n            variable\n            AuthCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/escrow.command.ts\n            \n            variable\n            EscrowCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/media.command.ts\n            \n            variable\n            MediaCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/notification.command.ts\n            \n            variable\n            NotificationCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/organization.command.ts\n            \n            variable\n            OrganizationCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/payment.command.ts\n            \n            variable\n            PaymentCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/property.command.ts\n            \n            variable\n            PropertyCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/user.command.ts\n            \n            variable\n            UserCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/environment.constant.ts\n            \n            variable\n            ENVIRONMENT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/schema.constant.ts\n            \n            variable\n            SCHEMA\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/database/entities/base.entity.ts\n            \n            entity\n            BaseEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/database/entities/base.entity.ts\n            \n            class\n            BaseEntity\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                libs/common/src/database/seeder/seeder-service.interface.ts\n            \n            interface\n            SeederService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        libs/common/src/decorators/column-order.decorator.ts\n            \n            function\n            ColumnOrder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/decorators/column-order.decorator.ts\n            \n            function\n            getColumnOrder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/decorators/column-order.decorator.ts\n            \n            variable\n            ORDER_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/decorators/graphql-federation-directive.decorator.ts\n            \n            function\n            GraphQLFederationDirective\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/decorators/graphql-federation-directive.decorator.ts\n            \n            variable\n            isDocEnv\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/utils/bootstrapper.util.ts\n            \n            class\n            Bootstrapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/common/src/utils/data-source.util.ts\n            \n            class\n            DataSource\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/common/src/utils/database.util.ts\n            \n            class\n            DatabaseUtil\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/common/src/utils/subgraphs-builder.util.ts\n            \n            class\n            SubgraphsBuilder\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        typeorm-cli.ts\n            \n            variable\n            argv\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        typeorm-cli.ts\n            \n            variable\n            dataSourcePath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        typeorm-cli.ts\n            \n            variable\n            typeormCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        typeorm-cli.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @apollo/gateway : ^2.9.3\n        \n            @apollo/server : ^4.11.3\n        \n            @apollo/subgraph : ^2.9.3\n        \n            @nestjs/apollo : ^12.2.2\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.3.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/graphql : ^12.2.2\n        \n            @nestjs/microservices : ^10.4.15\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/typeorm : ^11.0.0\n        \n            @types/yargs : ^17.0.33\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            dotenv : ^16.4.7\n        \n            graphql : ^16.10.0\n        \n            ioredis : ^5.4.2\n        \n            joi : ^17.13.3\n        \n            pg : ^8.13.1\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.20\n        \n            yargs : ^17.7.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            MicroServiceClient   (libs/.../micro-service-client.enum.ts)\n                        \n                        \n                            UserPermission   (libs/.../permission.enum.ts)\n                        \n                        \n                            UserRole   (libs/.../role.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/common/src/enums/micro-service-client.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        MicroServiceClient\n                    \n                \n                        \n                            \n                                 AUTH_CLIENT\n                            \n                        \n                        \n                            \n                                Value : AUTH_CLIENT\n                            \n                        \n                        \n                            \n                                 ESCROW_CLIENT\n                            \n                        \n                        \n                            \n                                Value : ESCROW_CLIENT\n                            \n                        \n                        \n                            \n                                 MEDIA_CLIENT\n                            \n                        \n                        \n                            \n                                Value : MEDIA_CLIENT\n                            \n                        \n                        \n                            \n                                 NOTIFICATION_CLIENT\n                            \n                        \n                        \n                            \n                                Value : NOTIFICATION_CLIENT\n                            \n                        \n                        \n                            \n                                 ORGANIZATION_CLIENT\n                            \n                        \n                        \n                            \n                                Value : ORGANIZATION_CLIENT\n                            \n                        \n                        \n                            \n                                 PAYMENT_CLIENT\n                            \n                        \n                        \n                            \n                                Value : PAYMENT_CLIENT\n                            \n                        \n                        \n                            \n                                 PROPERTY_CLIENT\n                            \n                        \n                        \n                            \n                                Value : PROPERTY_CLIENT\n                            \n                        \n                        \n                            \n                                 USER_CLIENT\n                            \n                        \n                        \n                            \n                                Value : USER_CLIENT\n                            \n                        \n            \n        \n\n    libs/common/src/enums/permission.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        UserPermission\n                    \n                \n                        \n                            \n                                 CREATE_USER\n                            \n                        \n                        \n                            \n                                Value : CREATE_USER\n                            \n                        \n                        \n                            \n                                 UPDATE_USER\n                            \n                        \n                        \n                            \n                                Value : UPDATE_USER\n                            \n                        \n                        \n                            \n                                 DELETE_USER\n                            \n                        \n                        \n                            \n                                Value : DELETE_USER\n                            \n                        \n            \n        \n\n    libs/common/src/enums/role.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        UserRole\n                    \n                \n                        \n                            \n                                 SUPER_ADMIN\n                            \n                        \n                        \n                            \n                                Value : SUPER_ADMIN\n                            \n                        \n                        \n                            \n                                 OWNER\n                            \n                        \n                        \n                            \n                                Value : OWNER\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : ADMIN\n                            \n                        \n                        \n                            \n                                 MEMBER\n                            \n                        \n                        \n                            \n                                Value : MEMBER\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            ColumnOrder   (libs/.../column-order.decorator.ts)\n                        \n                        \n                            getColumnOrder   (libs/.../column-order.decorator.ts)\n                        \n                        \n                            GraphQLFederationDirective   (libs/.../graphql-federation-directive.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/auth/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/documentation/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/escrow/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/gateway/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/media/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/notification/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/organization/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/payment/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/property/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/user/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    libs/common/src/decorators/column-order.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ColumnOrder\n                        \n                    \n                \n            \n            \n                \nColumnOrder(value: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     PropertyDecorator\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getColumnOrder\n                        \n                    \n                \n            \n            \n                \ngetColumnOrder(target, propertyKey, defaultVal: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                propertyKey\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                defaultVal\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    libs/common/src/decorators/graphql-federation-directive.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GraphQLFederationDirective\n                        \n                    \n                \n            \n            \n                \nGraphQLFederationDirective(directive: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                directive\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ClassDecorator\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nQushah Backend\nDescription\nQushah Escrow System backend containing microservices, gateway, libs, etc.\nPrerequisites\nTo be able to run this project on machine, the following must be installed:\n\nNodeJS 22 LTS\npnpm\nRedis\n\nProject setup\nMake sure pnpm is installed\nExample :$ npm install --global pnpmInstall dependencies\nExample :$ pnpm installInstall Redis\nFollow the official docs to install Redis on your machine.\nCompile and run the project\nExample :# development\n$ pnpm run start\n\n# watch mode\n$ pnpm run start:dev\n\n# production mode\n$ pnpm run start:prodRun tests\nExample :# unit tests\n$ pnpm run test\n\n# e2e tests\n$ pnpm run test:e2e\n\n# test coverage\n$ pnpm run test:covTypeorm CLI Helper Tool\nThe Typeorm CLI Helper tool lets you run typeorm CLI commands without worrying\nabout DataSources and path resolutions.\nLearn how to use the tool here.\nStructure\nExample :qushah-backend/\n│\n├── apps/\n│   ├── auth/        # Authentication Service\n│   ├── user/       # User Management Service\n│   ├── escrow/      # Escrow and Deposits Service\n│   ├── organization/    # Organization management Service\n│   ├── payment/    # Payments and Transactions Service\n│   ├── property/  # Property Listings Service\n│   ├── notification/      # Notifications Service\n│   └── gateway/     # API Gateway (separate app within the repo)\n│\n└── libs/                   # Shared Libraries (for DTOs, Interfaces, etc.)\n    └── common/             # Common utilities, interceptors, and guards\nArchitecture\nExample :            [Frontend (Angular)]\n                     │\n              [GraphQL Gateway]\n                     │\n     ┌──────────┬─────┬───────┬──────────────┬───────────┐\n     │          │     │       │              │           │\n [Auth]     [User]    │ [Property]     [Escrow]    [Payment]\n     │                │                      │\n [Notification]      [Organization]        [Disputes]\nConcerns\nHere are the key concerns for each microservice in this architecture:\n1. auth (Authentication and Authorization)\n\nSecurity: Ensuring the system is secure from unauthorized access. This includes strong password policies, token-based authentication (e.g., JWT), and OAuth if required.\nToken Expiry and Refresh: Managing token expiration and refresh mechanisms. Implement token blacklisting for security.\nRate Limiting: Protecting against brute-force attacks by implementing rate limiting or CAPTCHA.\nSecure API Communication: Ensuring all communication (especially authentication data) is encrypted with HTTPS.\nUser Roles and Permissions: Managing user roles and ensuring each user (tenant, landlord, admin) has the correct permissions for their actions.\n\n2. user (User Management)\n\nUser Data Management: Ensuring that personal data is secure, especially sensitive information like emails, addresses, and phone numbers.\nData Privacy: Complying with regulations like GDPR or CCPA, especially regarding the collection and storage of user data.\nUser Profile Updates: Allowing users to update their profiles (e.g., changing names, contact details) while maintaining data integrity.\nError Handling: Handling errors effectively, such as invalid user data, and providing clear feedback to users.\nScalability: Ensuring the system can handle large numbers of users (tenants, landlords).\n\n3. property (Property Management)\n\nProperty Data Validation: Ensuring that property details are accurate, complete, and properly validated before being listed.\nSearch Functionality: Providing a fast and efficient way for tenants to search for properties (by location, price, features, etc.).\nProperty Availability: Managing the availability of properties and preventing double-booking or issues with properties already rented.\nImage and Media Handling: Handling and storing images, videos, and 3D scans securely and efficiently. Integrating with media service when required.\nData Consistency: Ensuring that any updates to the property data (e.g., status changes, price updates) are consistent and reflected across all services.\n\n4. escrow (Escrow Service)\n\nDeposit Security: Ensuring that the deposit is secure, especially when handling large amounts of money.\nTransaction Auditing: Providing an auditable trail of deposit and release actions for transparency and security.\nEscrow Release Conditions: Implementing clear rules on when the deposit should be released to either the tenant or landlord.\nDispute Management: Handling any disputes regarding the deposit, such as property damage or failure to pay rent.\nCompliance: Ensuring that escrow services comply with local financial and regulatory standards (especially for handling money).\nEvent-Driven Updates: Integrating with other services (e.g., notifying users about escrow releases or disputes) using event-driven architecture.\n\n5. organization (Organization Management)\n\nMulti-Tenant Support: Managing organizations and their members, ensuring proper isolation between different organizations.\nAccess Control: Implementing role-based access control within organizations.\nBilling and Subscriptions: Managing organization-level billing and payments.\nOrganization Verification: Ensuring that organizations are verified before allowing transactions.\n\n6. payment (Payment Service)\n\nPayment Gateway Integration: Integrating with external payment providers (e.g., UPI, Paytm, Razorpay) for processing payments.\nTransaction Security: Ensuring secure handling of payments and sensitive financial data. Use of encryption and secure protocols.\nTransaction Failures: Handling payment failures and retries in case of network or gateway issues.\nPayment Confirmation: Sending clear confirmation of successful payments and generating receipts.\nRecurring Payments: Supporting recurring rent payments (e.g., monthly payments) and ensuring they are processed on time.\n\n7. notification (Notification Service)\n\nNotification Delivery: Ensuring timely delivery of notifications (SMS, email, push notifications) to users.\nOpt-in/Opt-out Preferences: Allowing users to manage their notification preferences.\n\n8. gateway (API Gateway)\n\nRequest Routing: Efficiently routing requests to the appropriate microservice based on the endpoint and service.\nSecurity: Ensuring that requests passing through the gateway are authenticated and authorized.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppConfigModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ClientsModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CommonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DocumentationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EscrowModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GatewayModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GraphQLGatewayModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GraphQLMicroserviceModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MediaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NotificationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrganizationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PaymentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PropertyModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SeederModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_imports\n\n\n\ncluster_CommonModule_exports\n\n\n\ncluster_CommonModule_providers\n\n\n\ncluster_DocumentationModule\n\n\n\ncluster_DocumentationModule_providers\n\n\n\ncluster_EscrowModule\n\n\n\ncluster_EscrowModule_providers\n\n\n\ncluster_GatewayModule\n\n\n\ncluster_GatewayModule_imports\n\n\n\ncluster_GatewayModule_providers\n\n\n\ncluster_MediaModule\n\n\n\ncluster_MediaModule_providers\n\n\n\ncluster_NotificationModule\n\n\n\ncluster_NotificationModule_providers\n\n\n\ncluster_OrganizationModule\n\n\n\ncluster_OrganizationModule_imports\n\n\n\ncluster_OrganizationModule_providers\n\n\n\ncluster_PaymentModule\n\n\n\ncluster_PaymentModule_providers\n\n\n\ncluster_PropertyModule\n\n\n\ncluster_PropertyModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nCommonModule->AuthModule\n\n\n\n\n\nCommonService \n\nCommonService \n\nCommonService  -->\n\nCommonModule->CommonService \n\n\n\n\n\nEscrowModule\n\nEscrowModule\n\nEscrowModule -->\n\nCommonModule->EscrowModule\n\n\n\n\n\nGatewayModule\n\nGatewayModule\n\nGatewayModule -->\n\nCommonModule->GatewayModule\n\n\n\n\n\nMediaModule\n\nMediaModule\n\nMediaModule -->\n\nCommonModule->MediaModule\n\n\n\n\n\nNotificationModule\n\nNotificationModule\n\nNotificationModule -->\n\nCommonModule->NotificationModule\n\n\n\n\n\nOrganizationModule\n\nOrganizationModule\n\nOrganizationModule -->\n\nCommonModule->OrganizationModule\n\n\n\n\n\nPaymentModule\n\nPaymentModule\n\nPaymentModule -->\n\nCommonModule->PaymentModule\n\n\n\n\n\nPropertyModule\n\nPropertyModule\n\nPropertyModule -->\n\nCommonModule->PropertyModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nCommonModule->UserModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nAuthModule -->\n\nGraphQLMicroserviceModule->AuthModule\n\n\n\nEscrowModule -->\n\nGraphQLMicroserviceModule->EscrowModule\n\n\n\nMediaModule -->\n\nGraphQLMicroserviceModule->MediaModule\n\n\n\nNotificationModule -->\n\nGraphQLMicroserviceModule->NotificationModule\n\n\n\nOrganizationModule -->\n\nGraphQLMicroserviceModule->OrganizationModule\n\n\n\nPaymentModule -->\n\nGraphQLMicroserviceModule->PaymentModule\n\n\n\nPropertyModule -->\n\nGraphQLMicroserviceModule->PropertyModule\n\n\n\nUserModule -->\n\nGraphQLMicroserviceModule->UserModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nAppConfigModule\n\nAppConfigModule\n\nCommonModule -->\n\nAppConfigModule->CommonModule\n\n\n\n\n\nCommonService\n\nCommonService\n\nCommonModule -->\n\nCommonService->CommonModule\n\n\n\n\n\nDocumentationService\n\nDocumentationService\n\n\n\nDocumentationModule\n\nDocumentationModule\n\nDocumentationModule -->\n\nDocumentationService->DocumentationModule\n\n\n\n\n\nEscrowService\n\nEscrowService\n\nEscrowModule -->\n\nEscrowService->EscrowModule\n\n\n\n\n\nGraphQLGatewayModule\n\nGraphQLGatewayModule\n\nGatewayModule -->\n\nGraphQLGatewayModule->GatewayModule\n\n\n\n\n\nGatewayService\n\nGatewayService\n\nGatewayModule -->\n\nGatewayService->GatewayModule\n\n\n\n\n\nMediaService\n\nMediaService\n\nMediaModule -->\n\nMediaService->MediaModule\n\n\n\n\n\nNotificationService\n\nNotificationService\n\nNotificationModule -->\n\nNotificationService->NotificationModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nOrganizationModule -->\n\nDatabaseModule->OrganizationModule\n\n\n\nOrganizationModule -->\n\nDatabaseModule->OrganizationModule\n\n\n\nUserModule -->\n\nDatabaseModule->UserModule\n\n\n\nUserModule -->\n\nDatabaseModule->UserModule\n\n\n\n\n\nOrganizationService\n\nOrganizationService\n\nOrganizationModule -->\n\nOrganizationService->OrganizationModule\n\n\n\n\n\nPaymentService\n\nPaymentService\n\nPaymentModule -->\n\nPaymentService->PaymentModule\n\n\n\n\n\nPropertyService\n\nPropertyService\n\nPropertyModule -->\n\nPropertyService->PropertyModule\n\n\n\n\n\nSeederModule\n\nSeederModule\n\nUserModule -->\n\nSeederModule->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        17 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    13 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    27 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : A multi-tenant escrow rental platform with property listings, deposit management, and dispute resolution.\n        \n            License : UNLICENSED\n        \n            Author : Qumber Rizvi\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            argv   (typeorm-cli.ts)\n                        \n                        \n                            AuthCommand   (libs/.../auth.command.ts)\n                        \n                        \n                            dataSourcePath   (typeorm-cli.ts)\n                        \n                        \n                            ENVIRONMENT   (libs/.../environment.constant.ts)\n                        \n                        \n                            EscrowCommand   (libs/.../escrow.command.ts)\n                        \n                        \n                            isDocEnv   (libs/.../graphql-federation-directive.decorator.ts)\n                        \n                        \n                            MediaCommand   (libs/.../media.command.ts)\n                        \n                        \n                            NotificationCommand   (libs/.../notification.command.ts)\n                        \n                        \n                            ORDER_KEY   (libs/.../column-order.decorator.ts)\n                        \n                        \n                            OrganizationCommand   (libs/.../organization.command.ts)\n                        \n                        \n                            PaymentCommand   (libs/.../payment.command.ts)\n                        \n                        \n                            PropertyCommand   (libs/.../property.command.ts)\n                        \n                        \n                            SCHEMA   (libs/.../schema.constant.ts)\n                        \n                        \n                            typeormCommand   (typeorm-cli.ts)\n                        \n                        \n                            TypeormDataSource   (apps/.../typeorm.data-source.ts)\n                        \n                        \n                            TypeormDataSource   (apps/.../typeorm.data-source.ts)\n                        \n                        \n                            TypeormDataSource   (apps/.../typeorm.data-source.ts)\n                        \n                        \n                            TypeormDataSource   (apps/.../typeorm.data-source.ts)\n                        \n                        \n                            TypeormDataSource   (apps/.../typeorm.data-source.ts)\n                        \n                        \n                            TypeormDataSource   (apps/.../typeorm.data-source.ts)\n                        \n                        \n                            TypeormDataSource   (apps/.../typeorm.data-source.ts)\n                        \n                        \n                               (typeorm-cli.ts)\n                        \n                        \n                               (apps/.../gateway.module.ts)\n                        \n                        \n                            UserCommand   (libs/.../user.command.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    typeorm-cli.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        argv\n                        \n                    \n                \n            \n                \n                    \n                        Default value : yargs(process.argv.slice(2))\n  .option('microservice', {\n    alias: 'm',\n    type: 'string',\n    describe: 'The name of the microservice',\n    demandOption: true,\n  })\n  .option('command', {\n    alias: 'c',\n    type: 'string',\n    describe: 'TypeORM CLI command (e.g., generate, run, revert, seed)',\n    demandOption: true,\n  })\n  .option('args', {\n    alias: 'a',\n    type: 'string',\n    describe: 'Additional arguments for the TypeORM CLI command (optional)',\n    default: '',\n  })\n  .option('title', {\n    alias: 't',\n    type: 'string',\n    describe:\n      'Title for migration file. Needed while running generate (optional)',\n    default: '',\n  })\n  .help().argv\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSourcePath\n                        \n                    \n                \n            \n                \n                    \n                        Default value : path.join(\n  __dirname,\n  `./apps/${microservice}/src/typeorm.data-source.ts`,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        typeormCommand\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli.js migration:${command} ${title ? './apps/' + microservice + '/src/migrations/' + title : ''} -d ${dataSourcePath} ${args || ''}`\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : argv as {\n  microservice: string;\n  command: string;\n  args?: string;\n  title?: string;\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/auth.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AuthCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_AUTH: 'PING_AUTH',\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/environment.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ENVIRONMENT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  REDIS_HOST: 'REDIS_HOST',\n  REDIS_PORT: 'REDIS_PORT',\n  AUTH_PORT: 'AUTH_PORT',\n  ESCROW_PORT: 'ESCROW_PORT',\n  GATEWAY_PORT: 'GATEWAY_PORT',\n  MEDIA_PORT: 'MEDIA_PORT',\n  NOTIFICATION_PORT: 'NOTIFICATION_PORT',\n  ORGANIZATION_PORT: 'ORGANIZATION_PORT',\n  PAYMENT_PORT: 'PAYMENT_PORT',\n  PROPERTY_PORT: 'PROPERTY_PORT',\n  USER_PORT: 'USER_PORT',\n  AUTH_HOST: 'AUTH_HOST',\n  ESCROW_HOST: 'ESCROW_HOST',\n  GATEWAY_HOST: 'GATEWAY_HOST',\n  MEDIA_HOST: 'MEDIA_HOST',\n  NOTIFICATION_HOST: 'NOTIFICATION_HOST',\n  ORGANIZATION_HOST: 'ORGANIZATION_HOST',\n  PAYMENT_HOST: 'PAYMENT_HOST',\n  PROPERTY_HOST: 'PROPERTY_HOST',\n  USER_HOST: 'USER_HOST',\n  DATABASE_TYPE: 'DATABASE_TYPE',\n  DATABASE_HOST: 'DATABASE_HOST',\n  DATABASE_PORT: 'DATABASE_PORT',\n  DATABASE_USERNAME: 'DATABASE_USERNAME',\n  DATABASE_PASSWORD: 'DATABASE_PASSWORD',\n  DATABASE_NAME: 'DATABASE_NAME',\n  IS_DOC_ENV: process.env.IS_DOC_ENV === 'true',\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/escrow.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EscrowCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_ESCROW: 'PING_ESCROW',\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/decorators/graphql-federation-directive.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isDocEnv\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ENVIRONMENT.IS_DOC_ENV\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/media.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MediaCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_MEDIA: 'PING_MEDIA',\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/notification.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NotificationCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_NOTIFICATION: 'PING_NOTIFICATION',\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/decorators/column-order.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ORDER_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol.for('order_key')\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/organization.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        OrganizationCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_ORGANIZATION: 'PING_ORGANIZATION',\n  FIND_ORGANIZATION_BY_ID: 'FIND_ORGANIZATION_BY_ID',\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/payment.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PaymentCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_PAYMENT: 'PING_PAYMENT',\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/property.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PropertyCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_PROPERTY: 'PING_PROPERTY',\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/schema.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SCHEMA\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  ORGANIZATION: 'organization',\n  USER: 'user',\n}\n                    \n                \n\n\n        \n    \n\n    apps/escrow/src/typeorm.data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TypeormDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DataSource.getInstance('escrow')\n                    \n                \n\n\n        \n    \n\n    apps/media/src/typeorm.data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TypeormDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DataSource.getInstance('media')\n                    \n                \n\n\n        \n    \n\n    apps/notification/src/typeorm.data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TypeormDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DataSource.getInstance('notification')\n                    \n                \n\n\n        \n    \n\n    apps/organization/src/typeorm.data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TypeormDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DataSource.getInstance('organization')\n                    \n                \n\n\n        \n    \n\n    apps/payment/src/typeorm.data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TypeormDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DataSource.getInstance('payment')\n                    \n                \n\n\n        \n    \n\n    apps/property/src/typeorm.data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TypeormDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DataSource.getInstance('property')\n                    \n                \n\n\n        \n    \n\n    apps/user/src/typeorm.data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TypeormDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DataSource.getInstance('user')\n                    \n                \n\n\n        \n    \n\n    apps/gateway/src/gateway.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : ENVIRONMENT\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/user.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_USER: 'PING_USER',\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/running-migrations-and-seeders.html":{"url":"additional-documentation/running-migrations-and-seeders.html","title":"additional-page - Running Migrations and Seeders","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMigration CLI Manual\nThis CLI is designed to streamline database migration management in a multi-microservice NestJS project using TypeORM.\nPrerequisites\n\nEnsure pnpm is installed globally.\nEnsure TypeORM and ts-node are installed as dependencies in the project.\nEnsure you have a .env file properly set up for database connections.\n\nUsage\nThe general syntax for the migration command:\nExample :pnpm migration -m  -c  [-a ]Parameters:\n\n-m, --microservice → Specifies the target microservice (e.g., auth, escrow, user, etc.).\n-c, --command → Specifies the TypeORM migration command to run (e.g., generate, run, revert, seed, etc.).\n-t, --title (optional) → Title for migration file. Needed while running generate.\n-a, --args (optional) → Additional arguments passed to TypeORM CLI.\n\n\nAvailable Commands\n1. Generate a Migration\nCreates a new migration file based on changes in entity definitions.\nExample :pnpm migration -m organization -c generate -t CreateOrganization\n-m organization → Runs migration for the organization microservice.\n-c generate → Generates a migration file.\n-t \"CreateOrganization\" → Specifies the migration file name.\n\n\n2. Run Migrations\nApplies pending migrations to the database.\nExample :pnpm migration -m escrow -c run\n-m escrow → Runs migrations for the escrow microservice.\n-c run → Executes pending migrations.\n\n\n3. Revert Last Migration\nRolls back the most recent migration.\nExample :pnpm migration -m user -c revert\n-m user → Targets the user microservice.\n-c revert → Rolls back the latest migration.\n\n\n4. Show Migration Status\nLists applied and pending migrations.\nExample :pnpm migration -m property -c show\n-m property → Targets the property microservice.\n-c show → Displays migration history.\n\n\n5. Run Seeder\nExecutes the seed script for a microservice.\nExample :pnpm migration -m user -c seed\n-m user → Targets the user microservice.\n-c seed → Runs the seeder script located at apps//src/seeder/seeder.ts.\n\n\nNotes\n\nThe -m flag is mandatory to specify which microservice's migration should be executed.\nThe CLI automatically resolves the correct TypeORM DataSource file based on the microservice name.\nIf no changes are detected when generating a migration, the CLI will not throw an error but will log a warning\ninstead.\nIf -c seed is used, the CLI will execute the corresponding seeder.ts file for the specified microservice. Seeders\nare used to populate the database with initial data and should be located at\napps//src/seeder/seeder.ts.\n\nTroubleshooting\nError: \"No changes in database schema were found\"\n\nEnsure that your entities are properly configured and registered in the microservice's DataSource.\nVerify that the database is up to date with the latest migrations.\n\nError: \"Cannot find module 'typeorm'\"\n\nRun pnpm install to ensure dependencies are correctly installed.\n\n\nFuture Enhancements\n\nAutomate versioning with Release Please integration.\nSupport interactive mode for selecting microservices and commands.\nEnhance error handling and logging.\n\n\nThis CLI provides an efficient way to manage database migrations across multiple microservices in a monorepo setup.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html":{"url":"additional-documentation/running-migrations-and-seeders/how-to-use-migration-tool.html","title":"additional-page - How to use migration tool","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMigration CLI Manual\nThis CLI is designed to streamline database migration management in a multi-microservice NestJS project using TypeORM.\nPrerequisites\n\nEnsure pnpm is installed globally.\nEnsure TypeORM and ts-node are installed as dependencies in the project.\nEnsure you have a .env file properly set up for database connections.\n\nUsage\nThe general syntax for the migration command:\nExample :pnpm migration -m  -c  [-a ]Parameters:\n\n-m, --microservice → Specifies the target microservice (e.g., auth, escrow, user, etc.).\n-c, --command → Specifies the TypeORM migration command to run (e.g., generate, run, revert, seed, etc.).\n-t, --title (optional) → Title for migration file. Needed while running generate.\n-a, --args (optional) → Additional arguments passed to TypeORM CLI.\n\n\nAvailable Commands\n1. Generate a Migration\nCreates a new migration file based on changes in entity definitions.\nExample :pnpm migration -m organization -c generate -t CreateOrganization\n-m organization → Runs migration for the organization microservice.\n-c generate → Generates a migration file.\n-t \"CreateOrganization\" → Specifies the migration file name.\n\n\n2. Run Migrations\nApplies pending migrations to the database.\nExample :pnpm migration -m escrow -c run\n-m escrow → Runs migrations for the escrow microservice.\n-c run → Executes pending migrations.\n\n\n3. Revert Last Migration\nRolls back the most recent migration.\nExample :pnpm migration -m user -c revert\n-m user → Targets the user microservice.\n-c revert → Rolls back the latest migration.\n\n\n4. Show Migration Status\nLists applied and pending migrations.\nExample :pnpm migration -m property -c show\n-m property → Targets the property microservice.\n-c show → Displays migration history.\n\n\n5. Run Seeder\nExecutes the seed script for a microservice.\nExample :pnpm migration -m user -c seed\n-m user → Targets the user microservice.\n-c seed → Runs the seeder script located at apps//src/seeder/seeder.ts.\n\n\nNotes\n\nThe -m flag is mandatory to specify which microservice's migration should be executed.\nThe CLI automatically resolves the correct TypeORM DataSource file based on the microservice name.\nIf no changes are detected when generating a migration, the CLI will not throw an error but will log a warning\ninstead.\nIf -c seed is used, the CLI will execute the corresponding seeder.ts file for the specified microservice. Seeders\nare used to populate the database with initial data and should be located at\napps//src/seeder/seeder.ts.\n\nTroubleshooting\nError: \"No changes in database schema were found\"\n\nEnsure that your entities are properly configured and registered in the microservice's DataSource.\nVerify that the database is up to date with the latest migrations.\n\nError: \"Cannot find module 'typeorm'\"\n\nRun pnpm install to ensure dependencies are correctly installed.\n\n\nFuture Enhancements\n\nAutomate versioning with Release Please integration.\nSupport interactive mode for selecting microservices and commands.\nEnhance error handling and logging.\n\n\nThis CLI provides an efficient way to manage database migrations across multiple microservices in a monorepo setup.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
