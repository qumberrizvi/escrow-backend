var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AuthController.html",[0,1.195,1,2.69]],["body/controllers/AuthController.html",[0,1.805,1,4.063,2,1.388,3,0.194,4,0.194,5,0.15,6,3.82,7,0.523,8,0.84,9,2.22,10,1.329,11,0.017,12,2.371,13,2.24,14,0.553,15,4.425,16,0.614,17,0.758,18,0.296,19,0.553,20,3.885,21,3.82,22,3.084,23,2.014,24,3.422,25,4.425,26,0.194,27,0.076,28,2.121,29,2.121,30,2.371,31,4.425,32,0.679,33,4.425,34,0.012,35,0.012]],["title/modules/AuthModule.html",[36,0.614,37,2.69]],["body/modules/AuthModule.html",[1,4.286,2,1.684,3,0.174,4,0.174,5,0.135,11,0.016,18,0.297,19,0.498,20,4.245,21,3.44,26,0.174,27,0.069,34,0.011,35,0.011,36,0.978,37,5.248,38,1.25,39,1.495,40,1.724,41,1.724,42,1.566,43,2.502,44,1.566,45,3.44,46,3.44,47,3.44,48,2.879,49,3.023,50,2.323,51,1.724,52,1.642,53,3.985,54,1.924,55,3.985,56,1.098,57,3.79,58,3.985]],["title/classes/AuthResolver.html",[27,0.066,57,2.69]],["body/classes/AuthResolver.html",[3,0.207,4,0.207,5,0.161,7,0.56,8,0.878,10,1.424,11,0.017,14,0.592,16,0.658,17,0.87,18,0.207,26,0.207,27,0.082,32,0.727,34,0.013,35,0.013,57,4.245,59,1.863,60,4.091,61,3.516,62,2.54,63,1.656,64,6.013,65,4.739,66,3.222,67,3.222,68,1.863,69,2.54]],["title/injectables/AuthService.html",[20,2.315,70,0.922]],["body/injectables/AuthService.html",[3,0.219,4,0.219,5,0.17,7,0.591,8,0.908,9,2.322,11,0.016,14,0.624,16,0.694,17,0.819,18,0.219,19,0.624,20,3.779,26,0.219,27,0.086,32,0.767,34,0.013,35,0.013,70,1.505,71,2.06,72,4.316,73,4.999,74,2.397,75,4.316,76,2.275]],["title/entities/BaseEntity.html",[77,2.169,78,2.485]],["body/entities/BaseEntity.html",[3,0.106,4,0.106,5,0.082,7,0.286,10,1.545,11,0.017,13,1.227,14,0.643,18,0.225,26,0.106,27,0.042,32,0.702,34,0.008,35,0.008,63,1.26,68,0.952,77,2.131,78,2.984,79,1.473,80,2.092,81,2.006,82,4.574,83,2.022,84,4.574,85,4.801,86,4.574,87,1.844,88,6.495,89,2.423,90,3.232,91,2.423,92,3.743,93,4.894,94,2.423,95,3.232,96,3.15,97,2.423,98,2.643,99,2.423,100,2.423,101,2.423,102,3.232,103,2.423,104,3.743,105,3.743,106,3.229,107,3.743,108,3.743,109,3.743,110,1.227,111,4.3,112,2.895,113,3.537,114,2.895,115,2.423,116,3.743,117,2.423,118,2.423,119,1.874,120,2.092,121,4.574,122,1.299,123,2.423,124,2.423,125,3.166,126,3.743,127,2.423,128,2.423,129,2.895,130,4.441,131,2.423,132,2.423,133,2.423,134,2.423,135,2.423,136,2.423,137,5.145,138,2.092,139,3.743,140,2.092,141,2.423,142,2.423,143,2.423,144,1.581,145,2.092,146,1.581,147,2.423,148,2.092,149,2.423,150,3.743,151,2.092,152,2.423,153,2.423,154,2.423,155,2.423,156,2.423,157,2.423,158,2.092,159,2.423,160,3.743,161,2.423,162,3.743,163,2.423,164,2.423,165,2.423]],["title/classes/Bootstrapper.html",[27,0.066,166,2.946]],["body/classes/Bootstrapper.html",[3,0.166,4,0.166,5,0.128,7,0.448,8,0.758,11,0.017,14,0.473,16,0.526,18,0.278,19,0.473,23,1.724,26,0.166,27,0.065,34,0.011,35,0.011,36,0.61,56,1.044,59,1.489,63,1.044,83,1.489,87,1.358,98,2.675,122,3.17,125,3.794,166,4.012,167,3.271,168,3.368,169,5.188,170,5.188,171,3.789,172,1.816,173,5.188,174,2.954,175,3.271,176,2.93,177,3.789,178,4.479,179,2.472,180,3.789,181,3.622,182,2.675,183,3.271,184,3.271,185,3.271,186,3.789,187,3.789,188,3.271,189,2.93,190,2.303,191,3.789,192,3.866,193,3.789,194,3.789,195,3.789,196,3.789,197,3.789,198,3.789]],["title/modules/ClientsModule.html",[36,0.614,199,2.946]],["body/modules/ClientsModule.html",[3,0.169,4,0.169,5,0.131,8,0.564,11,0.017,14,0.482,16,0.536,17,0.787,18,0.261,19,0.482,23,1.757,26,0.169,27,0.067,32,0.593,34,0.011,35,0.011,36,0.963,38,1.212,44,1.518,54,1.384,63,1.448,83,1.518,87,1.384,122,2.817,125,3.402,168,2.993,172,1.851,174,2.993,178,4.537,181,2.199,182,2.727,184,3.334,188,3.334,189,2.987,190,3.194,192,3.194,199,4.959,200,3.862,201,3.334,202,5.256,203,3.862,204,3.334,205,3.429,206,4.064,207,2.987,208,5.256,209,5.256,210,3.862,211,3.862,212,3.862,213,3.862]],["title/modules/CommonModule.html",[36,0.614,48,1.57]],["body/modules/CommonModule.html",[3,0.184,4,0.184,5,0.143,11,0.016,18,0.273,19,0.525,26,0.184,27,0.073,34,0.012,35,0.012,36,1.004,38,1.318,39,1.577,40,1.818,41,1.818,42,1.652,43,2.57,44,2.45,48,3.063,50,2.407,51,1.818,52,1.732,54,1.994,214,3.628,215,3.628,216,3.628,217,3.628,218,4.627,219,4.968,220,4.202,221,4.202,222,4.202]],["title/injectables/CommonService.html",[70,0.922,219,2.485]],["body/injectables/CommonService.html",[3,0.243,4,0.243,5,0.188,11,0.016,18,0.243,19,0.694,26,0.243,27,0.096,34,0.014,35,0.014,70,1.604,71,2.289,219,4.325,223,4.795]],["title/classes/ConfigHelper.html",[27,0.066,174,2.169]],["body/classes/ConfigHelper.html",[3,0.097,4,0.097,5,0.076,7,0.263,8,0.512,11,0.017,14,0.791,16,0.683,17,0.834,18,0.234,26,0.097,27,0.038,32,0.912,34,0.007,35,0.007,56,0.614,59,0.876,63,1.195,81,1.88,83,1.704,87,2.206,96,1.195,122,3.043,125,3.928,168,2.469,172,2.357,174,3.045,175,1.924,176,1.724,179,2.288,181,1.269,183,3.744,190,3.61,192,3.61,205,2.288,224,1.924,225,6.154,226,4.336,227,4.345,228,3.028,229,4.245,230,3.507,231,3.507,232,3.507,233,4.336,234,3.353,235,3.507,236,2.229,237,3.028,238,2.229,239,1.724,240,2.829,241,2.229,242,3.507,243,2.229,244,2.229,245,3.507,246,2.229,247,2.229,248,2.229,249,2.229,250,2.229,251,2.229,252,3.028,253,2.476,254,2.229,255,1.924,256,1.574,257,4.336,258,2.229,259,2.229,260,1.924,261,1.924,262,2.229,263,2.229,264,2.229,265,2.229,266,2.229,267,2.229,268,2.229,269,2.229,270,2.712,271,4.917,272,2.229,273,2.476,274,2.229,275,2.476,276,2.229,277,2.229,278,2.229,279,2.229,280,2.229,281,2.229]],["title/classes/CreateOrganization1740356244243.html",[27,0.066,282,2.946]],["body/classes/CreateOrganization1740356244243.html",[3,0.107,4,0.107,5,0.083,7,0.29,8,0.552,11,0.016,14,0.576,16,0.524,17,0.323,18,0.107,26,0.107,27,0.042,34,0.008,35,0.008,59,0.964,63,1.695,81,2.025,83,1.485,85,4.47,87,1.652,90,3.262,95,3.262,102,3.262,110,1.242,144,4.145,146,1.6,148,6.011,168,3.363,172,1.811,181,3.363,205,3.378,240,3.007,282,4.004,283,4.47,284,2.118,285,3.779,286,4.609,287,5.907,288,3.262,289,3.779,290,2.453,291,3.779,292,6.519,293,2.453,294,3.779,295,2.453,296,5.592,297,3.779,298,5.1,299,3.779,300,3.779,301,6.354,302,6.354,303,3.262,304,2.118,305,1.897,306,1.897,307,5.907,308,5.178,309,6.155,310,2.453,311,3.979,312,2.453,313,2.453,314,3.779,315,5.178,316,2.118,317,2.118,318,2.118,319,2.118,320,3.779,321,2.922,322,2.118,323,2.118,324,2.118,325,1.897,326,3.979,327,2.453,328,2.453,329,2.453,330,3.779,331,2.453,332,3.779,333,2.453,334,2.453,335,2.453,336,2.453,337,3.262,338,2.118,339,3.779,340,2.453]],["title/classes/DataSource.html",[27,0.066,106,2.69]],["body/classes/DataSource.html",[3,0.165,4,0.165,5,0.175,7,0.446,8,0.756,11,0.017,14,0.471,16,0.524,17,0.778,18,0.258,26,0.165,27,0.065,32,0.579,34,0.011,35,0.011,59,1.484,63,1.04,79,2.294,83,1.484,87,1.855,106,4.169,110,1.911,122,3.164,172,1.81,179,2.463,190,2.294,192,2.294,229,4.467,270,2.919,273,2.665,275,2.665,325,2.919,341,4.467,342,3.259,343,5.174,344,3.775,345,4.467,346,3.775,347,3.775,348,4.467,349,4.001,350,3.259,351,3.775,352,2.919,353,3.775,354,3.775,355,3.775,356,3.775,357,3.775,358,6.352,359,3.775,360,3.775,361,3.775,362,3.775,363,3.775,364,3.775,365,3.775,366,3.259,367,3.775,368,3.775,369,3.775,370,3.775,371,3.775,372,3.775,373,3.775]],["title/modules/DatabaseModule.html",[36,0.614,374,2.946]],["body/modules/DatabaseModule.html",[3,0.151,4,0.151,5,0.117,8,0.504,11,0.017,14,0.431,16,0.479,17,0.88,18,0.246,19,0.431,26,0.151,27,0.06,32,0.746,34,0.01,35,0.01,36,0.907,38,1.082,54,1.237,56,0.95,63,0.95,79,2.954,83,1.356,87,2.017,96,1.849,122,2.605,125,3.204,168,1.964,172,1.654,174,2.767,181,1.964,182,2.436,189,3.759,190,2.954,192,2.954,207,4.352,270,3.759,273,3.432,275,3.432,345,5.769,374,4.352,375,3.45,376,3.45,377,4.86,378,3.45,379,4.86,380,3.45,381,4.86,382,2.978,383,3.45,384,2.978,385,3.45,386,3.45,387,4.86,388,3.45,389,3.45,390,3.45,391,2.978,392,3.45,393,3.45,394,2.978]],["title/controllers/DocumentationController.html",[0,1.195,395,2.69]],["body/controllers/DocumentationController.html",[0,1.892,2,1.494,3,0.208,4,0.208,5,0.161,7,0.563,8,0.881,9,2.281,10,1.43,11,0.017,14,0.595,16,0.661,17,0.795,18,0.264,19,0.595,26,0.208,27,0.082,28,2.283,29,2.283,32,0.731,34,0.013,35,0.013,395,4.258,396,4.111,397,4.762,398,4.022,399,4.111,400,4.762]],["title/modules/DocumentationModule.html",[36,0.614,401,2.69]],["body/modules/DocumentationModule.html",[2,1.826,3,0.197,4,0.197,5,0.153,11,0.016,18,0.282,19,0.563,26,0.197,27,0.078,34,0.012,35,0.012,36,1.039,38,1.413,39,1.69,40,1.949,41,1.949,42,1.77,43,2.658,44,1.77,50,2.519,51,1.949,52,1.857,54,1.615,395,4.553,398,4.393,399,3.889,401,5.104,402,3.889,403,3.889,404,4.505,405,4.505]],["title/injectables/DocumentationService.html",[70,0.922,398,2.315]],["body/injectables/DocumentationService.html",[3,0.22,4,0.22,5,0.17,7,0.594,8,0.911,9,2.326,11,0.016,14,0.628,16,0.697,17,0.822,18,0.22,19,0.628,26,0.22,27,0.087,32,0.771,34,0.013,35,0.013,70,1.509,71,2.071,74,2.409,398,3.79,406,4.338,407,5.024,408,5.024]],["title/controllers/EscrowController.html",[0,1.195,409,2.69]],["body/controllers/EscrowController.html",[0,1.805,2,1.388,3,0.194,4,0.194,5,0.15,7,0.523,8,0.84,9,2.22,10,1.329,11,0.017,12,2.371,13,2.24,14,0.553,16,0.614,17,0.758,18,0.296,19,0.553,22,3.084,23,2.014,26,0.194,27,0.076,28,2.121,29,2.121,30,2.371,32,0.679,34,0.012,35,0.012,56,1.219,409,4.063,410,3.82,411,4.425,412,3.885,413,3.82,414,3.422,415,4.425,416,4.425]],["title/modules/EscrowModule.html",[36,0.614,417,2.69]],["body/modules/EscrowModule.html",[2,1.684,3,0.174,4,0.174,5,0.135,11,0.016,18,0.297,19,0.498,26,0.174,27,0.069,34,0.011,35,0.011,36,0.978,38,1.25,39,1.495,40,1.724,41,1.724,42,1.566,43,2.502,44,1.566,48,2.879,49,3.023,50,2.323,51,1.724,52,1.642,54,1.924,56,1.098,409,4.286,412,4.245,413,3.44,417,5.248,418,3.44,419,3.985,420,3.44,421,3.985,422,3.985,423,3.79,424,3.985]],["title/classes/EscrowResolver.html",[27,0.066,423,2.69]],["body/classes/EscrowResolver.html",[3,0.207,4,0.207,5,0.161,7,0.56,8,0.878,10,1.424,11,0.017,14,0.592,16,0.658,17,0.87,18,0.207,26,0.207,27,0.082,32,0.727,34,0.013,35,0.013,59,1.863,61,3.516,62,2.54,63,1.656,66,3.222,67,3.222,68,1.863,69,2.54,423,4.245,425,4.091,426,6.013,427,4.739]],["title/injectables/EscrowService.html",[70,0.922,412,2.315]],["body/injectables/EscrowService.html",[3,0.219,4,0.219,5,0.17,7,0.591,8,0.908,9,2.322,11,0.016,14,0.624,16,0.694,17,0.819,18,0.219,19,0.624,26,0.219,27,0.086,32,0.767,34,0.013,35,0.013,70,1.505,71,2.06,74,2.397,76,2.275,412,3.779,428,4.316,429,4.999,430,4.316]],["title/modules/GatewayModule.html",[36,0.614,431,2.69]],["body/modules/GatewayModule.html",[3,0.168,4,0.168,5,0.13,11,0.017,18,0.26,19,0.479,26,0.168,27,0.066,34,0.011,35,0.011,36,0.959,38,1.202,39,1.438,40,1.658,41,1.658,42,1.506,43,2.452,44,1.506,48,2.846,50,2.262,51,1.658,52,1.58,54,1.874,56,1.056,125,2.182,256,3.691,431,5.209,432,3.309,433,3.309,434,3.309,435,4.364,436,4.504,437,2.964,438,3.832,439,4.514,440,4.514,441,4.514,442,4.514,443,4.514,444,4.514,445,4.514,446,4.514,447,3.832]],["title/injectables/GatewayService.html",[70,0.922,436,2.485]],["body/injectables/GatewayService.html",[3,0.212,4,0.212,5,0.165,7,0.574,8,0.891,11,0.016,14,0.762,16,0.674,17,0.804,18,0.212,19,0.606,26,0.212,27,0.084,32,0.745,34,0.013,35,0.013,61,3.547,70,1.477,71,2.001,74,2.327,76,2.209,234,5.164,436,3.982,448,4.191,449,4.854,450,4.854,451,3.754]],["title/modules/GraphQLGatewayModule.html",[36,0.614,435,2.485]],["body/modules/GraphQLGatewayModule.html",[3,0.165,4,0.165,5,0.128,8,0.551,11,0.017,14,0.471,16,0.524,17,0.778,18,0.291,19,0.471,26,0.165,27,0.065,32,0.794,34,0.011,35,0.011,36,0.951,38,1.184,44,1.484,54,1.353,56,1.04,63,1.04,68,1.484,83,1.484,87,1.353,122,2.773,168,3.362,172,1.81,179,2.463,181,2.149,201,3.259,205,3.376,206,4.001,207,2.919,384,3.259,435,3.852,451,2.919,452,4.467,453,3.775,454,5.174,455,3.775,456,3.775,457,4.467,458,5.174,459,3.775,460,2.919,461,5.174,462,3.259,463,2.665,464,3.775,465,3.259,466,3.775,467,3.775,468,3.775]],["title/modules/GraphQLMicroserviceModule.html",[36,0.614,49,1.649]],["body/modules/GraphQLMicroserviceModule.html",[3,0.211,4,0.211,5,0.164,11,0.017,18,0.291,19,0.603,26,0.211,27,0.083,34,0.013,35,0.013,36,0.981,38,1.516,49,2.634,54,1.732,68,1.899,96,2.589,452,4.17,457,4.17,460,3.736,465,4.17,469,4.831,470,6.086,471,4.831,472,4.831,473,4.831,474,4.831,475,3.736,476,4.831]],["title/controllers/MediaController.html",[0,1.195,477,2.69]],["body/controllers/MediaController.html",[0,1.805,2,1.388,3,0.194,4,0.194,5,0.15,7,0.523,8,0.84,9,2.22,10,1.329,11,0.017,12,2.371,13,2.24,14,0.553,16,0.614,17,0.758,18,0.296,19,0.553,22,3.084,23,2.014,26,0.194,27,0.076,28,2.121,29,2.121,30,2.371,32,0.679,34,0.012,35,0.012,56,1.219,477,4.063,478,3.82,479,4.425,480,3.885,481,3.82,482,3.422,483,4.425,484,4.425]],["title/modules/MediaModule.html",[36,0.614,485,2.69]],["body/modules/MediaModule.html",[2,1.684,3,0.174,4,0.174,5,0.135,11,0.016,18,0.297,19,0.498,26,0.174,27,0.069,34,0.011,35,0.011,36,0.978,38,1.25,39,1.495,40,1.724,41,1.724,42,1.566,43,2.502,44,1.566,48,2.879,49,3.023,50,2.323,51,1.724,52,1.642,54,1.924,56,1.098,477,4.286,480,4.245,481,3.44,485,5.248,486,3.44,487,3.985,488,3.44,489,3.985,490,3.985,491,3.79,492,3.985]],["title/classes/MediaResolver.html",[27,0.066,491,2.69]],["body/classes/MediaResolver.html",[3,0.207,4,0.207,5,0.161,7,0.56,8,0.878,10,1.424,11,0.017,14,0.592,16,0.658,17,0.87,18,0.207,26,0.207,27,0.082,32,0.727,34,0.013,35,0.013,59,1.863,61,3.516,62,2.54,63,1.656,66,3.222,67,3.222,68,1.863,69,2.54,491,4.245,493,4.091,494,6.013,495,4.739]],["title/injectables/MediaService.html",[70,0.922,480,2.315]],["body/injectables/MediaService.html",[3,0.219,4,0.219,5,0.17,7,0.591,8,0.908,9,2.322,11,0.016,14,0.624,16,0.694,17,0.819,18,0.219,19,0.624,26,0.219,27,0.086,32,0.767,34,0.013,35,0.013,70,1.505,71,2.06,74,2.397,76,2.275,480,3.779,496,4.316,497,4.999,498,4.316]],["title/controllers/NotificationController.html",[0,1.195,499,2.69]],["body/controllers/NotificationController.html",[0,1.805,2,1.388,3,0.194,4,0.194,5,0.15,7,0.523,8,0.84,9,2.22,10,1.329,11,0.017,12,2.371,13,2.24,14,0.553,16,0.614,17,0.758,18,0.296,19,0.553,22,3.084,23,2.014,26,0.194,27,0.076,28,2.121,29,2.121,30,2.371,32,0.679,34,0.012,35,0.012,56,1.219,499,4.063,500,3.82,501,4.425,502,3.885,503,3.82,504,3.422,505,4.425,506,4.425]],["title/modules/NotificationModule.html",[36,0.614,507,2.69]],["body/modules/NotificationModule.html",[2,1.684,3,0.174,4,0.174,5,0.135,11,0.016,18,0.297,19,0.498,26,0.174,27,0.069,34,0.011,35,0.011,36,0.978,38,1.25,39,1.495,40,1.724,41,1.724,42,1.566,43,2.502,44,1.566,48,2.879,49,3.023,50,2.323,51,1.724,52,1.642,54,1.924,56,1.098,499,4.286,502,4.245,503,3.44,507,5.248,508,3.44,509,3.44,510,3.985,511,3.985,512,3.985,513,3.79,514,3.985]],["title/classes/NotificationResolver.html",[27,0.066,513,2.69]],["body/classes/NotificationResolver.html",[3,0.207,4,0.207,5,0.161,7,0.56,8,0.878,10,1.424,11,0.017,14,0.592,16,0.658,17,0.87,18,0.207,26,0.207,27,0.082,32,0.727,34,0.013,35,0.013,59,1.863,61,3.516,62,2.54,63,1.656,66,3.222,67,3.222,68,1.863,69,2.54,513,4.245,515,4.091,516,6.013,517,4.739]],["title/injectables/NotificationService.html",[70,0.922,502,2.315]],["body/injectables/NotificationService.html",[3,0.219,4,0.219,5,0.17,7,0.591,8,0.908,9,2.322,11,0.016,14,0.624,16,0.694,17,0.819,18,0.219,19,0.624,26,0.219,27,0.086,32,0.767,34,0.013,35,0.013,70,1.505,71,2.06,74,2.397,76,2.275,502,3.779,518,4.316,519,4.999,520,4.316]],["title/entities/Organization.html",[77,2.169,521,2.485]],["body/entities/Organization.html",[3,0.133,4,0.133,5,0.103,7,0.358,10,1.922,11,0.017,14,0.799,17,0.972,18,0.252,26,0.133,27,0.052,34,0.009,35,0.009,56,0.835,63,1.586,68,1.192,77,2.523,78,2.89,79,1.843,81,2.374,83,1.741,87,2.293,93,3.426,96,3.283,110,1.535,111,5.109,112,3.426,119,2.345,129,4.947,303,4.52,304,3.825,305,4.048,306,4.048,311,3.825,521,3.415,522,2.618,523,5.288,524,5.235,525,3.825,526,3.032,527,4.325,528,2.618,529,3.032,530,4.43,531,3.032,532,4.43,533,3.032,534,3.032,535,2.618,536,3.032,537,3.032,538,3.825,539,3.032]],["title/controllers/OrganizationController.html",[0,1.195,540,2.69]],["body/controllers/OrganizationController.html",[0,1.805,2,1.388,3,0.194,4,0.194,5,0.15,7,0.523,8,0.84,9,2.22,10,1.329,11,0.017,12,2.371,13,2.24,14,0.553,16,0.614,17,0.758,18,0.296,19,0.553,22,3.084,23,2.014,26,0.194,27,0.076,28,2.121,29,2.121,30,2.371,32,0.679,34,0.012,35,0.012,540,4.063,541,3.82,542,4.425,543,3.885,544,3.82,545,3.422,546,4.425,547,4.425,548,4.425]],["title/entities/OrganizationMetadata.html",[77,2.169,527,2.69]],["body/entities/OrganizationMetadata.html",[3,0.101,4,0.101,5,0.078,7,0.272,10,1.806,11,0.017,14,0.751,17,0.842,18,0.237,26,0.101,27,0.04,34,0.008,35,0.008,56,0.634,63,1.495,68,0.904,77,2.047,78,2.346,79,1.398,81,1.927,83,1.966,87,2.46,93,4.649,96,3.334,98,3.533,110,1.82,111,4.649,112,2.78,119,1.779,129,4.649,144,3.754,316,3.104,317,3.821,318,3.821,319,3.104,321,4.45,322,3.104,323,3.104,324,4.686,325,2.78,326,3.104,337,4.686,475,3.869,521,4.171,525,1.986,527,2.539,528,3.104,535,3.821,538,3.104,549,5.371,550,1.986,551,4.426,552,4.426,553,4.426,554,4.426,555,2.301,556,5.003,557,4.319,558,5.003,559,2.301,560,2.301,561,2.301,562,2.301,563,2.301,564,3.595,565,3.595,566,3.595,567,2.301,568,2.301,569,2.301,570,2.301,571,2.301,572,4.426,573,3.595,574,2.301,575,3.595]],["title/modules/OrganizationModule.html",[36,0.614,576,2.69]],["body/modules/OrganizationModule.html",[2,1.684,3,0.174,4,0.174,5,0.135,11,0.016,18,0.297,19,0.498,26,0.174,27,0.069,34,0.011,35,0.011,36,0.978,38,1.25,39,1.495,40,1.724,41,1.724,42,1.566,43,2.502,44,1.566,48,2.879,49,3.023,50,2.323,51,1.724,52,1.642,54,1.924,56,1.098,540,4.286,543,4.245,544,3.44,576,5.248,577,3.44,578,3.985,579,3.44,580,3.985,581,3.985,582,3.79,583,3.985]],["title/classes/OrganizationResolver.html",[27,0.066,582,2.69]],["body/classes/OrganizationResolver.html",[3,0.207,4,0.207,5,0.161,7,0.56,8,0.878,10,1.424,11,0.017,14,0.592,16,0.658,17,0.87,18,0.207,26,0.207,27,0.082,32,0.727,34,0.013,35,0.013,59,1.863,61,3.516,62,2.54,63,1.656,66,3.222,67,3.222,68,1.863,69,2.54,582,4.245,584,4.091,585,6.013,586,4.739]],["title/injectables/OrganizationService.html",[70,0.922,543,2.315]],["body/injectables/OrganizationService.html",[3,0.219,4,0.219,5,0.17,7,0.591,8,0.908,9,2.322,11,0.016,14,0.624,16,0.694,17,0.819,18,0.219,19,0.624,26,0.219,27,0.086,32,0.767,34,0.013,35,0.013,70,1.505,71,2.06,74,2.397,76,2.275,521,3.261,543,3.779,587,4.316,588,4.999]],["title/controllers/PaymentController.html",[0,1.195,589,2.69]],["body/controllers/PaymentController.html",[0,1.805,2,1.388,3,0.194,4,0.194,5,0.15,7,0.523,8,0.84,9,2.22,10,1.329,11,0.017,12,2.371,13,2.24,14,0.553,16,0.614,17,0.758,18,0.296,19,0.553,22,3.084,23,2.014,26,0.194,27,0.076,28,2.121,29,2.121,30,2.371,32,0.679,34,0.012,35,0.012,56,1.219,589,4.063,590,3.82,591,4.425,592,3.885,593,3.82,594,3.422,595,4.425,596,4.425]],["title/modules/PaymentModule.html",[36,0.614,597,2.69]],["body/modules/PaymentModule.html",[2,1.684,3,0.174,4,0.174,5,0.135,11,0.016,18,0.297,19,0.498,26,0.174,27,0.069,34,0.011,35,0.011,36,0.978,38,1.25,39,1.495,40,1.724,41,1.724,42,1.566,43,2.502,44,1.566,48,2.879,49,3.023,50,2.323,51,1.724,52,1.642,54,1.924,56,1.098,589,4.286,592,4.245,593,3.44,597,5.248,598,3.44,599,3.985,600,3.44,601,3.985,602,3.985,603,3.79,604,3.985]],["title/classes/PaymentResolver.html",[27,0.066,603,2.69]],["body/classes/PaymentResolver.html",[3,0.207,4,0.207,5,0.161,7,0.56,8,0.878,10,1.424,11,0.017,14,0.592,16,0.658,17,0.87,18,0.207,26,0.207,27,0.082,32,0.727,34,0.013,35,0.013,59,1.863,61,3.516,62,2.54,63,1.656,66,3.222,67,3.222,68,1.863,69,2.54,603,4.245,605,4.091,606,6.013,607,4.739]],["title/injectables/PaymentService.html",[70,0.922,592,2.315]],["body/injectables/PaymentService.html",[3,0.219,4,0.219,5,0.17,7,0.591,8,0.908,9,2.322,11,0.016,14,0.624,16,0.694,17,0.819,18,0.219,19,0.624,26,0.219,27,0.086,32,0.767,34,0.013,35,0.013,70,1.505,71,2.06,74,2.397,76,2.275,592,3.779,608,4.316,609,4.999,610,4.316]],["title/controllers/PropertyController.html",[0,1.195,611,2.69]],["body/controllers/PropertyController.html",[0,1.805,2,1.388,3,0.194,4,0.194,5,0.15,7,0.523,8,0.84,9,2.22,10,1.329,11,0.017,12,2.371,13,2.24,14,0.553,16,0.614,17,0.758,18,0.296,19,0.553,22,3.084,23,2.014,26,0.194,27,0.076,28,2.121,29,2.121,30,2.371,32,0.679,34,0.012,35,0.012,56,1.219,611,4.063,612,3.82,613,4.425,614,3.885,615,3.82,616,3.422,617,4.425,618,4.425]],["title/modules/PropertyModule.html",[36,0.614,619,2.69]],["body/modules/PropertyModule.html",[2,1.684,3,0.174,4,0.174,5,0.135,11,0.016,18,0.297,19,0.498,26,0.174,27,0.069,34,0.011,35,0.011,36,0.978,38,1.25,39,1.495,40,1.724,41,1.724,42,1.566,43,2.502,44,1.566,48,2.879,49,3.023,50,2.323,51,1.724,52,1.642,54,1.924,56,1.098,611,4.286,614,4.245,615,3.44,619,5.248,620,3.44,621,3.985,622,3.44,623,3.985,624,3.985,625,3.79,626,3.985]],["title/classes/PropertyResolver.html",[27,0.066,625,2.69]],["body/classes/PropertyResolver.html",[3,0.207,4,0.207,5,0.161,7,0.56,8,0.878,10,1.424,11,0.017,14,0.592,16,0.658,17,0.87,18,0.207,26,0.207,27,0.082,32,0.727,34,0.013,35,0.013,59,1.863,61,3.516,62,2.54,63,1.656,66,3.222,67,3.222,68,1.863,69,2.54,625,4.245,627,4.091,628,6.013,629,4.739]],["title/injectables/PropertyService.html",[70,0.922,614,2.315]],["body/injectables/PropertyService.html",[3,0.219,4,0.219,5,0.17,7,0.591,8,0.908,9,2.322,11,0.016,14,0.624,16,0.694,17,0.819,18,0.219,19,0.624,26,0.219,27,0.086,32,0.767,34,0.013,35,0.013,70,1.505,71,2.06,74,2.397,76,2.275,614,3.779,630,4.316,631,4.999,632,4.316]],["title/modules/QushahConfigModule.html",[36,0.614,218,2.485]],["body/modules/QushahConfigModule.html",[3,0.198,4,0.198,5,0.153,11,0.016,18,0.283,19,0.565,26,0.198,27,0.078,34,0.012,35,0.012,36,0.94,38,1.42,54,1.622,96,2.425,218,3.808,253,3.195,255,3.907,260,3.907,261,3.907,633,4.525,634,5.04,635,4.525,636,4.525,637,3.907,638,7.363,639,3.907,640,4.525,641,3.907,642,3.907,643,3.907,644,3.907,645,3.907,646,3.907,647,4.525,648,4.525,649,4.525,650,3.907,651,3.907,652,4.525]],["title/injectables/QushahConfigService.html",[70,0.922,227,2.69]],["body/injectables/QushahConfigService.html",[3,0.188,4,0.188,5,0.146,7,0.507,8,0.824,11,0.017,14,0.704,16,0.596,17,0.83,18,0.247,19,0.536,26,0.188,27,0.074,28,2.058,29,2.058,32,0.659,34,0.012,35,0.012,63,1.554,70,1.365,71,1.769,83,2.217,87,2.258,172,3.02,227,3.983,228,4.87,234,3.319,237,4.87,239,4.872,240,2.8,252,6.159,253,3.031,653,3.706,654,4.292,655,4.292,656,4.292,657,4.292]],["title/classes/SubgraphsBuilder.html",[27,0.066,463,2.69]],["body/classes/SubgraphsBuilder.html",[3,0.173,4,0.173,5,0.134,7,0.467,8,0.78,11,0.017,14,0.494,16,0.549,17,0.797,18,0.234,26,0.173,27,0.068,32,0.819,34,0.011,35,0.011,56,1.089,59,1.554,63,1.471,83,1.554,87,1.417,122,3.24,125,3.687,168,3.443,172,1.895,174,3.04,181,2.251,182,2.791,190,2.402,192,2.402,205,3.484,240,2.579,463,3.77,658,4.61,659,3.413,660,6.046,661,3.953,662,3.953,663,5.34,664,3.953,665,3.953,666,3.953,667,5.34,668,3.953,669,5.34,670,3.953,671,3.953,672,3.953]],["title/controllers/UserController.html",[0,1.195,673,2.69]],["body/controllers/UserController.html",[0,1.805,2,1.388,3,0.194,4,0.194,5,0.15,7,0.523,8,0.84,9,2.22,10,1.329,11,0.017,12,2.371,13,2.24,14,0.553,16,0.614,17,0.758,18,0.296,19,0.553,22,3.084,23,2.014,26,0.194,27,0.076,28,2.121,29,2.121,30,2.371,32,0.679,34,0.012,35,0.012,56,1.219,673,4.063,674,3.82,675,4.425,676,3.885,677,3.82,678,3.422,679,4.425,680,4.425]],["title/modules/UserModule.html",[36,0.614,681,2.69]],["body/modules/UserModule.html",[2,1.684,3,0.174,4,0.174,5,0.135,11,0.016,18,0.297,19,0.498,26,0.174,27,0.069,34,0.011,35,0.011,36,0.978,38,1.25,39,1.495,40,1.724,41,1.724,42,1.566,43,2.502,44,1.566,48,2.879,49,3.023,50,2.323,51,1.724,52,1.642,54,1.924,56,1.098,673,4.286,676,4.245,677,3.44,681,5.248,682,3.44,683,3.985,684,3.44,685,3.985,686,3.985,687,3.79,688,3.985]],["title/classes/UserResolver.html",[27,0.066,687,2.69]],["body/classes/UserResolver.html",[3,0.207,4,0.207,5,0.161,7,0.56,8,0.878,10,1.424,11,0.017,14,0.592,16,0.658,17,0.87,18,0.207,26,0.207,27,0.082,32,0.727,34,0.013,35,0.013,59,1.863,61,3.516,62,2.54,63,1.656,66,3.222,67,3.222,68,1.863,69,2.54,687,4.245,689,4.091,690,6.013,691,4.739]],["title/injectables/UserService.html",[70,0.922,676,2.315]],["body/injectables/UserService.html",[3,0.219,4,0.219,5,0.17,7,0.591,8,0.908,9,2.322,11,0.016,14,0.624,16,0.694,17,0.819,18,0.219,19,0.624,26,0.219,27,0.086,32,0.767,34,0.013,35,0.013,70,1.505,71,2.06,74,2.397,76,2.275,676,3.779,692,4.316,693,4.999,694,4.316]],["title/coverage.html",[695,4.027]],["body/coverage.html",[0,1.758,1,1.115,5,0.054,6,1.363,11,0.017,20,0.96,24,1.221,27,0.112,34,0.006,35,0.006,42,2.275,57,1.115,60,1.363,70,1.473,72,1.363,77,1.949,78,1.728,80,2.287,87,0.566,106,1.115,110,2.028,113,1.221,114,1.221,140,5.256,166,1.221,167,1.363,174,0.899,179,1.03,219,1.03,223,1.363,224,1.363,227,1.115,256,1.115,282,1.221,283,1.363,284,1.363,298,1.363,341,1.363,342,1.363,349,3.972,395,1.115,396,1.363,398,0.96,406,1.363,409,1.115,410,1.363,412,0.96,414,1.221,423,1.115,425,1.363,428,1.363,436,1.03,437,1.221,448,1.363,463,1.115,477,1.115,478,1.363,480,0.96,482,1.221,491,1.115,493,1.363,496,1.363,499,1.115,500,1.363,502,0.96,504,1.221,513,1.115,515,1.363,518,1.363,521,1.728,522,2.287,527,1.871,540,1.115,541,1.363,543,0.96,545,1.221,549,2.287,550,2.287,582,1.115,584,1.363,587,1.363,589,1.115,590,1.363,592,0.96,594,1.221,603,1.115,605,1.363,608,1.363,611,1.115,612,1.363,614,0.96,616,1.221,625,1.115,627,1.363,630,1.363,653,1.363,658,1.363,659,1.363,673,1.115,674,1.363,676,0.96,678,1.221,687,1.115,689,1.363,692,1.363,695,1.221,696,1.363,697,1.579,698,1.579,699,6.717,700,7.181,701,1.363,702,7.403,703,1.363,704,1.363,705,1.363,706,4.434,707,6.903,708,2.649,709,1.363,710,1.363,711,1.363,712,1.363,713,1.363,714,2.649,715,1.579,716,1.363,717,1.579,718,1.363,719,1.363,720,1.363,721,1.363,722,1.363,723,1.363,724,1.363,725,1.363,726,1.363,727,1.363,728,1.363,729,1.363,730,1.363,731,1.363,732,1.363,733,1.363,734,1.579,735,2.647,736,2.647,737,1.363,738,3.46,739,1.363,740,1.363,741,1.363,742,1.579]],["title/dependencies.html",[39,1.72,743,2.743]],["body/dependencies.html",[11,0.017,19,0.543,23,1.979,34,0.012,35,0.012,39,1.631,68,1.709,110,2.201,176,3.363,253,3.07,348,3.754,382,3.754,460,3.363,462,3.754,523,3.754,634,3.754,744,5.688,745,4.348,746,4.348,747,4.348,748,5.688,749,6.34,750,4.348,751,4.348,752,4.348,753,4.348,754,4.348,755,4.348,756,4.348,757,4.348,758,3.754,759,4.348,760,4.348,761,4.348,762,4.348,763,4.348,764,4.348,765,4.348,766,4.348,767,4.348,768,4.348,769,4.348,770,4.348,771,4.348]],["title/miscellaneous/enumerations.html",[772,1.931,773,3.957]],["body/miscellaneous/enumerations.html",[7,0.582,11,0.016,34,0.013,35,0.013,76,2.803,146,4.896,772,2.993,773,4.252,774,6.161,775,4.926,776,6.161,777,4.926,778,6.161,779,6.161,780,6.161,781,6.161,782,6.161,783,6.161,784,6.161]],["title/miscellaneous/functions.html",[772,1.931,785,3.957]],["body/miscellaneous/functions.html",[7,0.464,11,0.014,16,0.544,34,0.011,35,0.011,42,3.118,63,1.463,83,2.087,87,1.904,98,4.557,113,4.107,114,4.107,130,3.386,144,2.559,146,3.465,172,2.546,699,3.386,701,3.386,703,3.386,704,3.386,709,3.386,710,3.386,712,3.386,716,3.386,719,3.386,721,3.386,723,3.386,735,3.033,736,4.657,772,2.384,785,3.386,786,7.41,787,4.585,788,3.923,789,3.923,790,3.923,791,5.311,792,5.311]],["title/index.html",[7,0.376,793,3.178,794,3.178]],["body/index.html",[11,0.016,34,0.004,35,0.004,39,0.377,43,0.414,52,0.414,75,2.09,76,2.41,81,1.298,87,0.36,110,0.906,120,0.867,138,2.09,145,0.867,151,2.09,158,0.867,185,0.867,204,0.867,206,0.777,240,0.655,273,0.709,275,0.709,288,0.867,305,1.872,306,0.777,321,0.777,338,0.867,350,0.867,366,0.867,391,0.867,430,3.947,451,3.535,475,0.777,498,3.947,520,3.739,557,0.867,610,3.947,632,4.44,650,0.867,651,1.545,694,4.691,695,0.777,696,1.545,758,2.538,795,5.876,796,2.421,797,0.867,798,2.94,799,1.004,800,1.79,801,1.79,802,3.373,803,1.004,804,3.947,805,2.421,806,1.79,807,1.004,808,1.79,809,1.004,810,1.004,811,1.004,812,4.572,813,2.421,814,1.004,815,1.004,816,1.004,817,3.741,818,1.004,819,1.79,820,1.004,821,1.004,822,1.004,823,1.004,824,1.004,825,1.004,826,1.004,827,1.004,828,1.79,829,1.004,830,1.004,831,2.421,832,1.004,833,1.004,834,1.004,835,1.004,836,2.09,837,1.79,838,2.421,839,1.004,840,1.004,841,1.79,842,1.004,843,1.004,844,1.004,845,1.004,846,1.004,847,2.421,848,1.79,849,1.004,850,0.867,851,2.94,852,3.373,853,1.004,854,4.057,855,1.79,856,1.004,857,4.331,858,3.741,859,1.004,860,1.004,861,1.004,862,1.79,863,1.004,864,1.004,865,1.004,866,1.79,867,1.004,868,1.004,869,1.004,870,1.004,871,1.004,872,1.004,873,1.004,874,2.94,875,1.79,876,1.004,877,2.421,878,1.79,879,2.421,880,2.09,881,1.004,882,4.057,883,5.966,884,3.741,885,1.79,886,1.79,887,1.004,888,1.004,889,1.004,890,2.94,891,4.44,892,1.004,893,1.004,894,1.79,895,1.004,896,1.79,897,3.373,898,1.004,899,1.004,900,1.004,901,1.004,902,2.94,903,2.421,904,1.79,905,1.004,906,1.004,907,1.004,908,1.004,909,2.421,910,1.004,911,2.421,912,4.331,913,4.973,914,1.004,915,1.004,916,1.79,917,1.79,918,1.79,919,1.79,920,1.004,921,1.004,922,1.79,923,1.004,924,1.79,925,1.004,926,1.004,927,1.004,928,1.79,929,1.004,930,1.004,931,1.004,932,1.004,933,1.004,934,1.79,935,1.004,936,2.94,937,1.79,938,3.373,939,2.421,940,3.741,941,1.004,942,1.004,943,1.004,944,1.79,945,1.004,946,1.004,947,1.004,948,5.143,949,1.004,950,1.004,951,1.79,952,1.004,953,3.373,954,2.94,955,1.004,956,2.94,957,1.79,958,3.373,959,1.79,960,1.004,961,0.867,962,1.004,963,1.004,964,1.004,965,1.004,966,1.004,967,1.004,968,1.004,969,1.79,970,1.004,971,1.79,972,1.79,973,1.004,974,1.004,975,1.79,976,1.004,977,1.79,978,1.79,979,1.004,980,1.004,981,1.79,982,1.004,983,1.004,984,1.004,985,1.79,986,2.421,987,1.79,988,2.421,989,2.421,990,1.79,991,1.79,992,2.421,993,1.004,994,1.79,995,1.004,996,1.004,997,1.004,998,2.421,999,1.004,1000,3.373,1001,1.004,1002,1.79,1003,2.421,1004,1.004,1005,1.004,1006,1.004,1007,1.79,1008,1.004,1009,1.004,1010,1.004,1011,1.004,1012,1.004,1013,1.004,1014,1.004,1015,1.004,1016,2.421,1017,1.004,1018,1.004,1019,1.004,1020,1.79,1021,1.004,1022,1.004,1023,1.79,1024,1.79,1025,1.004,1026,1.004,1027,1.79,1028,1.004,1029,1.004,1030,1.004,1031,1.004,1032,1.004,1033,1.004,1034,1.004,1035,2.421,1036,1.79,1037,1.004,1038,1.004,1039,1.79,1040,1.004,1041,1.004,1042,1.004,1043,1.004,1044,1.79,1045,1.004,1046,1.004,1047,1.004,1048,1.004,1049,1.79,1050,1.004,1051,2.09,1052,1.004,1053,1.004,1054,1.004,1055,1.004,1056,1.004,1057,1.004,1058,1.004,1059,1.004,1060,1.004,1061,1.004,1062,1.004,1063,1.79,1064,1.004,1065,1.79,1066,1.79,1067,1.004,1068,1.79,1069,1.004,1070,1.004,1071,1.004,1072,1.79,1073,1.004,1074,1.004,1075,1.004,1076,1.004,1077,1.004,1078,1.004,1079,2.421,1080,1.004,1081,1.004,1082,1.004,1083,1.004,1084,1.004,1085,1.79,1086,1.004,1087,1.004,1088,3.741,1089,1.004,1090,1.004,1091,1.79,1092,1.004,1093,1.004,1094,1.004,1095,1.004,1096,1.004,1097,1.004,1098,1.004,1099,1.004,1100,1.004,1101,1.004,1102,1.004,1103,1.004,1104,1.004,1105,1.004,1106,1.004,1107,1.004,1108,1.004,1109,1.004,1110,1.004,1111,1.004,1112,1.004,1113,1.004,1114,1.004,1115,1.79,1116,2.421,1117,1.004,1118,1.004,1119,1.004,1120,1.004,1121,1.004,1122,1.004,1123,1.004,1124,1.004,1125,1.004,1126,1.004,1127,1.004,1128,1.004,1129,1.004,1130,1.79,1131,1.004,1132,1.004,1133,1.004,1134,1.004,1135,1.004,1136,1.79,1137,1.004,1138,1.004]],["title/modules.html",[38,1.634]],["body/modules.html",[11,0.012,34,0.012,35,0.012,37,2.942,38,1.308,48,1.718,49,1.803,199,3.223,218,2.719,374,3.223,401,2.942,417,2.942,431,2.942,435,2.719,485,2.942,507,2.942,576,2.942,597,2.942,619,2.942,681,2.942,1051,6.522,1139,7.555,1140,7.555,1141,7.751,1142,6.883,1143,6.883]],["title/overview.html",[1144,4.495]],["body/overview.html",[2,0.809,11,0.016,20,2.889,34,0.008,35,0.008,36,0.416,37,4.559,38,0.809,39,0.968,40,1.116,41,1.116,42,1.014,43,1.063,44,1.014,45,2.227,46,2.227,47,2.227,48,2.981,49,2.919,50,1.699,51,1.116,52,1.063,59,1.014,71,1.063,79,1.567,214,2.227,215,2.227,216,2.227,217,2.227,218,3.102,219,4.087,398,2.889,401,3.753,402,2.227,403,2.227,412,2.889,417,4.559,418,2.227,420,2.227,431,4.559,432,2.227,433,2.227,434,2.227,435,3.102,436,3.102,480,2.889,485,4.559,486,2.227,488,2.227,502,2.889,507,4.559,508,2.227,509,2.227,543,2.889,576,4.559,577,2.227,579,2.227,592,2.889,597,4.559,598,2.227,600,2.227,614,2.889,619,4.559,620,2.227,622,2.227,676,2.889,681,4.559,682,2.227,684,2.227,961,2.227,1144,2.227,1145,3.927,1146,2.579,1147,2.579]],["title/properties.html",[81,2.457,743,2.743]],["body/properties.html",[11,0.016,34,0.014,35,0.014,81,3.061,797,4.931,1148,5.712,1149,5.712,1150,5.712,1151,5.712,1152,5.712]],["title/miscellaneous/variables.html",[352,3.545,772,1.931]],["body/miscellaneous/variables.html",[5,0.061,7,0.212,11,0.017,17,0.748,24,2.274,34,0.006,35,0.006,63,0.493,83,1.156,87,2.309,96,1.576,110,2.751,144,4.666,146,4.612,239,1.385,256,2.642,349,5.06,352,1.385,394,1.546,414,2.274,437,1.385,439,2.539,440,2.539,441,2.539,442,2.539,443,2.539,444,2.539,445,2.539,446,2.539,482,2.274,504,2.274,545,2.274,594,2.274,616,2.274,637,2.539,639,2.539,641,2.539,642,2.539,643,2.539,644,2.539,645,2.539,646,2.539,678,2.274,705,1.546,706,5.728,711,1.546,713,1.546,718,1.546,720,1.546,722,1.546,724,1.546,725,1.546,726,1.546,727,1.546,728,1.546,729,1.546,730,1.546,731,1.546,732,1.546,733,1.546,735,1.385,736,2.274,737,2.539,738,4.131,739,3.231,740,3.231,741,2.539,772,1.088,787,1.546,804,1.546,836,2.539,850,1.546,880,3.231,891,1.546,1153,1.791,1154,1.791,1155,1.791,1156,1.791,1157,1.791,1158,1.791,1159,1.791,1160,1.791,1161,5.434,1162,1.791,1163,1.791,1164,1.791,1165,1.791,1166,4.332,1167,1.791,1168,4.332,1169,2.941,1170,1.791,1171,1.791,1172,3.742,1173,2.941,1174,1.791,1175,1.791,1176,1.791,1177,1.791,1178,1.791,1179,4.332,1180,1.791,1181,1.791,1182,1.791,1183,1.791,1184,1.791,1185,1.791,1186,1.791,1187,1.791,1188,1.791,1189,1.791,1190,1.791,1191,1.791,1192,1.791,1193,1.791,1194,1.791,1195,2.941,1196,5.877,1197,2.941,1198,2.941,1199,2.941,1200,2.941,1201,2.941,1202,2.941,1203,2.941,1204,2.941,1205,2.941,1206,2.941,1207,2.941,1208,2.941,1209,2.941,1210,2.941,1211,1.791,1212,2.941,1213,2.941,1214,2.941,1215,1.791,1216,1.791,1217,1.791,1218,1.791,1219,1.791,1220,1.791,1221,1.791,1222,2.941]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"modules/QushahConfigModule.html":{},"injectables/QushahConfigService.html":{},"classes/SubgraphsBuilder.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":699,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["0.0.1",{"_index":1149,"title":{},"body":{"properties.html":{}}}],["0.2.0",{"_index":766,"title":{},"body":{"dependencies.html":{}}}],["0.3.20",{"_index":769,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":702,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":700,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":708,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":717,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":734,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":715,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":714,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":120,"title":{},"body":{"entities/BaseEntity.html":{},"index.html":{}}}],["10.0.0",{"_index":749,"title":{},"body":{"dependencies.html":{}}}],["10.4.15",{"_index":751,"title":{},"body":{"dependencies.html":{}}}],["11.0.0",{"_index":754,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":1147,"title":{},"body":{"overview.html":{}}}],["12.2.2",{"_index":748,"title":{},"body":{"dependencies.html":{}}}],["16",{"_index":1145,"title":{},"body":{"overview.html":{}}}],["16.10.0",{"_index":759,"title":{},"body":{"dependencies.html":{}}}],["16.4.7",{"_index":757,"title":{},"body":{"dependencies.html":{}}}],["17.0.33",{"_index":756,"title":{},"body":{"dependencies.html":{}}}],["17.13.3",{"_index":762,"title":{},"body":{"dependencies.html":{}}}],["17.7.2",{"_index":771,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":475,"title":{},"body":{"modules/GraphQLMicroserviceModule.html":{},"entities/OrganizationMetadata.html":{},"index.html":{}}}],["2.9.3",{"_index":744,"title":{},"body":{"dependencies.html":{}}}],["22",{"_index":810,"title":{},"body":{"index.html":{}}}],["3",{"_index":961,"title":{},"body":{"index.html":{},"overview.html":{}}}],["3.3.0",{"_index":750,"title":{},"body":{"dependencies.html":{}}}],["3d",{"_index":988,"title":{},"body":{"index.html":{}}}],["4",{"_index":999,"title":{},"body":{"index.html":{}}}],["4.11.3",{"_index":746,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":321,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{},"entities/OrganizationMetadata.html":{},"index.html":{}}}],["5.0",{"_index":575,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["5.4.2",{"_index":761,"title":{},"body":{"dependencies.html":{}}}],["5432",{"_index":362,"title":{},"body":{"classes/DataSource.html":{}}}],["6",{"_index":1062,"title":{},"body":{"index.html":{}}}],["7",{"_index":1087,"title":{},"body":{"index.html":{}}}],["7.8.1",{"_index":768,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1113,"title":{},"body":{"index.html":{}}}],["8.13.1",{"_index":764,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":1146,"title":{},"body":{"overview.html":{}}}],["9996",{"_index":147,"title":{},"body":{"entities/BaseEntity.html":{}}}],["__dirname",{"_index":1184,"title":{},"body":{"miscellaneous/variables.html":{}}}],["abstract",{"_index":118,"title":{},"body":{"entities/BaseEntity.html":{}}}],["abuse",{"_index":1127,"title":{},"body":{"index.html":{}}}],["access",{"_index":886,"title":{},"body":{"index.html":{}}}],["accessible",{"_index":1090,"title":{},"body":{"index.html":{}}}],["accessors",{"_index":232,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["accurate",{"_index":963,"title":{},"body":{"index.html":{}}}],["actions",{"_index":922,"title":{},"body":{"index.html":{}}}],["add",{"_index":331,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["adding",{"_index":1056,"title":{},"body":{"index.html":{}}}],["additional",{"_index":1176,"title":{},"body":{"miscellaneous/variables.html":{}}}],["addresses",{"_index":927,"title":{},"body":{"index.html":{}}}],["admin",{"_index":920,"title":{},"body":{"index.html":{}}}],["against",{"_index":905,"title":{},"body":{"index.html":{}}}],["alias",{"_index":1166,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allow_interest_earning",{"_index":323,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{},"entities/OrganizationMetadata.html":{}}}],["allowing",{"_index":939,"title":{},"body":{"index.html":{}}}],["allowinterestearning",{"_index":551,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["already",{"_index":982,"title":{},"body":{"index.html":{}}}],["alter",{"_index":330,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["amounts",{"_index":1001,"title":{},"body":{"index.html":{}}}],["angular",{"_index":876,"title":{},"body":{"index.html":{}}}],["api",{"_index":858,"title":{},"body":{"index.html":{}}}],["apollo/gateway",{"_index":462,"title":{},"body":{"modules/GraphQLGatewayModule.html":{},"dependencies.html":{}}}],["apollo/gateway/src/config",{"_index":665,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["apollo/server",{"_index":745,"title":{},"body":{"dependencies.html":{}}}],["apollo/subgraph",{"_index":747,"title":{},"body":{"dependencies.html":{}}}],["apollofederationdriver",{"_index":470,"title":{},"body":{"modules/GraphQLMicroserviceModule.html":{}}}],["apollofederationdriverconfig",{"_index":471,"title":{},"body":{"modules/GraphQLMicroserviceModule.html":{}}}],["apollogatewaydriver",{"_index":458,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["apollogatewaydriverconfig",{"_index":459,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["app",{"_index":185,"title":{},"body":{"classes/Bootstrapper.html":{},"index.html":{}}}],["app.connectmicroservice",{"_index":187,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["app.listen(port",{"_index":196,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["app.startallmicroservices",{"_index":194,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["appcontext",{"_index":258,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["appcontext.get(configservice",{"_index":262,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["applying",{"_index":1128,"title":{},"body":{"index.html":{}}}],["appropriate",{"_index":1117,"title":{},"body":{"index.html":{}}}],["apps",{"_index":850,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["apps/${microservice}/src/typeorm.data",{"_index":1185,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/${schema}/**/**.entity{.ts,.js",{"_index":369,"title":{},"body":{"classes/DataSource.html":{}}}],["apps/${schema}/src/migrations/**/*{.ts,.js",{"_index":371,"title":{},"body":{"classes/DataSource.html":{}}}],["apps/${schema}/src/subscriber/**/*{.ts,.js",{"_index":373,"title":{},"body":{"classes/DataSource.html":{}}}],["apps/.../gateway.module.ts",{"_index":1162,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../main.ts",{"_index":786,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../typeorm.data",{"_index":1161,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/auth/src/auth.controller.ts",{"_index":6,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["apps/auth/src/auth.controller.ts:11",{"_index":15,"title":{},"body":{"controllers/AuthController.html":{}}}],["apps/auth/src/auth.module.ts",{"_index":53,"title":{},"body":{"modules/AuthModule.html":{}}}],["apps/auth/src/auth.resolver.ts",{"_index":60,"title":{},"body":{"classes/AuthResolver.html":{},"coverage.html":{}}}],["apps/auth/src/auth.resolver.ts:6",{"_index":65,"title":{},"body":{"classes/AuthResolver.html":{}}}],["apps/auth/src/auth.service.ts",{"_index":72,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["apps/auth/src/auth.service.ts:5",{"_index":73,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/auth/src/main.ts",{"_index":701,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/documentation/src/documentation.controller.ts",{"_index":396,"title":{},"body":{"controllers/DocumentationController.html":{},"coverage.html":{}}}],["apps/documentation/src/documentation.controller.ts:9",{"_index":397,"title":{},"body":{"controllers/DocumentationController.html":{}}}],["apps/documentation/src/documentation.module.ts",{"_index":404,"title":{},"body":{"modules/DocumentationModule.html":{}}}],["apps/documentation/src/documentation.service.ts",{"_index":406,"title":{},"body":{"injectables/DocumentationService.html":{},"coverage.html":{}}}],["apps/documentation/src/documentation.service.ts:5",{"_index":407,"title":{},"body":{"injectables/DocumentationService.html":{}}}],["apps/documentation/src/main.ts",{"_index":703,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/escrow/src/escrow.controller.ts",{"_index":410,"title":{},"body":{"controllers/EscrowController.html":{},"coverage.html":{}}}],["apps/escrow/src/escrow.controller.ts:11",{"_index":411,"title":{},"body":{"controllers/EscrowController.html":{}}}],["apps/escrow/src/escrow.module.ts",{"_index":421,"title":{},"body":{"modules/EscrowModule.html":{}}}],["apps/escrow/src/escrow.resolver.ts",{"_index":425,"title":{},"body":{"classes/EscrowResolver.html":{},"coverage.html":{}}}],["apps/escrow/src/escrow.resolver.ts:6",{"_index":427,"title":{},"body":{"classes/EscrowResolver.html":{}}}],["apps/escrow/src/escrow.service.ts",{"_index":428,"title":{},"body":{"injectables/EscrowService.html":{},"coverage.html":{}}}],["apps/escrow/src/escrow.service.ts:5",{"_index":429,"title":{},"body":{"injectables/EscrowService.html":{}}}],["apps/escrow/src/main.ts",{"_index":704,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/escrow/src/typeorm.data",{"_index":705,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/gateway/src/gateway.module.ts",{"_index":437,"title":{},"body":{"modules/GatewayModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/gateway/src/gateway.service.ts",{"_index":448,"title":{},"body":{"injectables/GatewayService.html":{},"coverage.html":{}}}],["apps/gateway/src/gateway.service.ts:4",{"_index":449,"title":{},"body":{"injectables/GatewayService.html":{}}}],["apps/gateway/src/gateway.service.ts:7",{"_index":450,"title":{},"body":{"injectables/GatewayService.html":{}}}],["apps/gateway/src/main.ts",{"_index":709,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/media/src/main.ts",{"_index":710,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/media/src/media.controller.ts",{"_index":478,"title":{},"body":{"controllers/MediaController.html":{},"coverage.html":{}}}],["apps/media/src/media.controller.ts:11",{"_index":479,"title":{},"body":{"controllers/MediaController.html":{}}}],["apps/media/src/media.module.ts",{"_index":489,"title":{},"body":{"modules/MediaModule.html":{}}}],["apps/media/src/media.resolver.ts",{"_index":493,"title":{},"body":{"classes/MediaResolver.html":{},"coverage.html":{}}}],["apps/media/src/media.resolver.ts:6",{"_index":495,"title":{},"body":{"classes/MediaResolver.html":{}}}],["apps/media/src/media.service.ts",{"_index":496,"title":{},"body":{"injectables/MediaService.html":{},"coverage.html":{}}}],["apps/media/src/media.service.ts:5",{"_index":497,"title":{},"body":{"injectables/MediaService.html":{}}}],["apps/media/src/typeorm.data",{"_index":711,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/notification/src/main.ts",{"_index":712,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/notification/src/notification.controller.ts",{"_index":500,"title":{},"body":{"controllers/NotificationController.html":{},"coverage.html":{}}}],["apps/notification/src/notification.controller.ts:11",{"_index":501,"title":{},"body":{"controllers/NotificationController.html":{}}}],["apps/notification/src/notification.module.ts",{"_index":511,"title":{},"body":{"modules/NotificationModule.html":{}}}],["apps/notification/src/notification.resolver.ts",{"_index":515,"title":{},"body":{"classes/NotificationResolver.html":{},"coverage.html":{}}}],["apps/notification/src/notification.resolver.ts:6",{"_index":517,"title":{},"body":{"classes/NotificationResolver.html":{}}}],["apps/notification/src/notification.service.ts",{"_index":518,"title":{},"body":{"injectables/NotificationService.html":{},"coverage.html":{}}}],["apps/notification/src/notification.service.ts:5",{"_index":519,"title":{},"body":{"injectables/NotificationService.html":{}}}],["apps/notification/src/typeorm.data",{"_index":713,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/organization/src/entities/organization",{"_index":549,"title":{},"body":{"entities/OrganizationMetadata.html":{},"coverage.html":{}}}],["apps/organization/src/entities/organization.entity.ts",{"_index":522,"title":{},"body":{"entities/Organization.html":{},"coverage.html":{}}}],["apps/organization/src/entities/organization.entity.ts:11",{"_index":533,"title":{},"body":{"entities/Organization.html":{}}}],["apps/organization/src/entities/organization.entity.ts:15",{"_index":537,"title":{},"body":{"entities/Organization.html":{}}}],["apps/organization/src/entities/organization.entity.ts:19",{"_index":536,"title":{},"body":{"entities/Organization.html":{}}}],["apps/organization/src/entities/organization.entity.ts:23",{"_index":526,"title":{},"body":{"entities/Organization.html":{}}}],["apps/organization/src/entities/organization.entity.ts:27",{"_index":534,"title":{},"body":{"entities/Organization.html":{}}}],["apps/organization/src/entities/organization.entity.ts:31",{"_index":531,"title":{},"body":{"entities/Organization.html":{}}}],["apps/organization/src/main.ts",{"_index":716,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/organization/src/migrations/1740356244243",{"_index":283,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{},"coverage.html":{}}}],["apps/organization/src/organization.controller.ts",{"_index":541,"title":{},"body":{"controllers/OrganizationController.html":{},"coverage.html":{}}}],["apps/organization/src/organization.controller.ts:11",{"_index":542,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["apps/organization/src/organization.module.ts",{"_index":580,"title":{},"body":{"modules/OrganizationModule.html":{}}}],["apps/organization/src/organization.resolver.ts",{"_index":584,"title":{},"body":{"classes/OrganizationResolver.html":{},"coverage.html":{}}}],["apps/organization/src/organization.resolver.ts:6",{"_index":586,"title":{},"body":{"classes/OrganizationResolver.html":{}}}],["apps/organization/src/organization.service.ts",{"_index":587,"title":{},"body":{"injectables/OrganizationService.html":{},"coverage.html":{}}}],["apps/organization/src/organization.service.ts:5",{"_index":588,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["apps/organization/src/typeorm.data",{"_index":718,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/payment/src/main.ts",{"_index":719,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/payment/src/payment.controller.ts",{"_index":590,"title":{},"body":{"controllers/PaymentController.html":{},"coverage.html":{}}}],["apps/payment/src/payment.controller.ts:11",{"_index":591,"title":{},"body":{"controllers/PaymentController.html":{}}}],["apps/payment/src/payment.module.ts",{"_index":601,"title":{},"body":{"modules/PaymentModule.html":{}}}],["apps/payment/src/payment.resolver.ts",{"_index":605,"title":{},"body":{"classes/PaymentResolver.html":{},"coverage.html":{}}}],["apps/payment/src/payment.resolver.ts:6",{"_index":607,"title":{},"body":{"classes/PaymentResolver.html":{}}}],["apps/payment/src/payment.service.ts",{"_index":608,"title":{},"body":{"injectables/PaymentService.html":{},"coverage.html":{}}}],["apps/payment/src/payment.service.ts:5",{"_index":609,"title":{},"body":{"injectables/PaymentService.html":{}}}],["apps/payment/src/typeorm.data",{"_index":720,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/property/src/main.ts",{"_index":721,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/property/src/property.controller.ts",{"_index":612,"title":{},"body":{"controllers/PropertyController.html":{},"coverage.html":{}}}],["apps/property/src/property.controller.ts:11",{"_index":613,"title":{},"body":{"controllers/PropertyController.html":{}}}],["apps/property/src/property.module.ts",{"_index":623,"title":{},"body":{"modules/PropertyModule.html":{}}}],["apps/property/src/property.resolver.ts",{"_index":627,"title":{},"body":{"classes/PropertyResolver.html":{},"coverage.html":{}}}],["apps/property/src/property.resolver.ts:6",{"_index":629,"title":{},"body":{"classes/PropertyResolver.html":{}}}],["apps/property/src/property.service.ts",{"_index":630,"title":{},"body":{"injectables/PropertyService.html":{},"coverage.html":{}}}],["apps/property/src/property.service.ts:5",{"_index":631,"title":{},"body":{"injectables/PropertyService.html":{}}}],["apps/property/src/typeorm.data",{"_index":722,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/user/src/main.ts",{"_index":723,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/user/src/typeorm.data",{"_index":724,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/user/src/user.controller.ts",{"_index":674,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["apps/user/src/user.controller.ts:11",{"_index":675,"title":{},"body":{"controllers/UserController.html":{}}}],["apps/user/src/user.module.ts",{"_index":685,"title":{},"body":{"modules/UserModule.html":{}}}],["apps/user/src/user.resolver.ts",{"_index":689,"title":{},"body":{"classes/UserResolver.html":{},"coverage.html":{}}}],["apps/user/src/user.resolver.ts:6",{"_index":691,"title":{},"body":{"classes/UserResolver.html":{}}}],["apps/user/src/user.service.ts",{"_index":692,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["apps/user/src/user.service.ts:5",{"_index":693,"title":{},"body":{"injectables/UserService.html":{}}}],["architecture",{"_index":874,"title":{},"body":{"index.html":{}}}],["args",{"_index":1195,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arguments",{"_index":1177,"title":{},"body":{"miscellaneous/variables.html":{}}}],["argv",{"_index":739,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ascending",{"_index":165,"title":{},"body":{"entities/BaseEntity.html":{}}}],["async",{"_index":168,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"modules/DatabaseModule.html":{},"modules/GraphQLGatewayModule.html":{},"classes/SubgraphsBuilder.html":{}}}],["attacks",{"_index":908,"title":{},"body":{"index.html":{}}}],["auditable",{"_index":1005,"title":{},"body":{"index.html":{}}}],["auditing",{"_index":1004,"title":{},"body":{"index.html":{}}}],["auth",{"_index":75,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["auth.controller",{"_index":55,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.resolver",{"_index":58,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":21,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth_client",{"_index":778,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth_host",{"_index":439,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["auth_port",{"_index":1198,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authcommand",{"_index":24,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authcommand.ping_auth",{"_index":31,"title":{},"body":{"controllers/AuthController.html":{}}}],["authcontroller",{"_index":1,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticated",{"_index":1121,"title":{},"body":{"index.html":{}}}],["authentication",{"_index":851,"title":{},"body":{"index.html":{}}}],["authmodule",{"_index":37,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1152,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":881,"title":{},"body":{"index.html":{}}}],["authorized",{"_index":1122,"title":{},"body":{"index.html":{}}}],["authresolver",{"_index":57,"title":{"classes/AuthResolver.html":{}},"body":{"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"coverage.html":{}}}],["authservice",{"_index":20,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["automatically",{"_index":1099,"title":{},"body":{"index.html":{}}}],["autoschemafile",{"_index":473,"title":{},"body":{"modules/GraphQLMicroserviceModule.html":{}}}],["availability",{"_index":977,"title":{},"body":{"index.html":{}}}],["available",{"_index":1143,"title":{},"body":{"modules.html":{}}}],["await",{"_index":181,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"modules/DatabaseModule.html":{},"modules/GraphQLGatewayModule.html":{},"classes/SubgraphsBuilder.html":{}}}],["backend",{"_index":796,"title":{},"body":{"index.html":{}}}],["balancing",{"_index":1123,"title":{},"body":{"index.html":{}}}],["base",{"_index":1061,"title":{},"body":{"index.html":{}}}],["based",{"_index":151,"title":{},"body":{"entities/BaseEntity.html":{},"index.html":{}}}],["baseentity",{"_index":78,"title":{"entities/BaseEntity.html":{}},"body":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"coverage.html":{}}}],["baseentitytypeorm",{"_index":104,"title":{},"body":{"entities/BaseEntity.html":{}}}],["baseentitytypeorm.usedatasource.call(this",{"_index":124,"title":{},"body":{"entities/BaseEntity.html":{}}}],["before",{"_index":967,"title":{},"body":{"index.html":{}}}],["being",{"_index":158,"title":{},"body":{"entities/BaseEntity.html":{},"index.html":{}}}],["blacklisting",{"_index":901,"title":{},"body":{"index.html":{}}}],["booking",{"_index":980,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":324,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{},"entities/OrganizationMetadata.html":{}}}],["bootstrap",{"_index":42,"title":{},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["bootstrapper",{"_index":166,"title":{"classes/Bootstrapper.html":{}},"body":{"classes/Bootstrapper.html":{},"coverage.html":{}}}],["both",{"_index":157,"title":{},"body":{"entities/BaseEntity.html":{}}}],["browse",{"_index":1141,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1139,"title":{},"body":{"modules.html":{}}}],["brute",{"_index":906,"title":{},"body":{"index.html":{}}}],["build",{"_index":660,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["build(...graphnames",{"_index":661,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["builder.util.ts",{"_index":659,"title":{},"body":{"classes/SubgraphsBuilder.html":{},"coverage.html":{}}}],["builder.util.ts:5",{"_index":662,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["c",{"_index":1171,"title":{},"body":{"miscellaneous/variables.html":{}}}],["caching",{"_index":1136,"title":{},"body":{"index.html":{}}}],["captcha",{"_index":910,"title":{},"body":{"index.html":{}}}],["cascade",{"_index":337,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{},"entities/OrganizationMetadata.html":{}}}],["cascade'})@joincolumn({name",{"_index":567,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["case",{"_index":1037,"title":{},"body":{"index.html":{}}}],["ccpa",{"_index":933,"title":{},"body":{"index.html":{}}}],["changes",{"_index":995,"title":{},"body":{"index.html":{}}}],["changing",{"_index":942,"title":{},"body":{"index.html":{}}}],["channel",{"_index":1071,"title":{},"body":{"index.html":{}}}],["channels",{"_index":1073,"title":{},"body":{"index.html":{}}}],["character",{"_index":301,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["check",{"_index":132,"title":{},"body":{"entities/BaseEntity.html":{}}}],["class",{"_index":27,"title":{"classes/AuthResolver.html":{},"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"classes/EscrowResolver.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"classes/SubgraphsBuilder.html":{},"classes/UserResolver.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"modules/QushahConfigModule.html":{},"injectables/QushahConfigService.html":{},"classes/SubgraphsBuilder.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["classes",{"_index":59,"title":{},"body":{"classes/AuthResolver.html":{},"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"classes/EscrowResolver.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"classes/SubgraphsBuilder.html":{},"classes/UserResolver.html":{},"overview.html":{}}}],["clear",{"_index":954,"title":{},"body":{"index.html":{}}}],["cli",{"_index":836,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["cli.ts",{"_index":738,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["client.enum.ts",{"_index":776,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["clients",{"_index":211,"title":{},"body":{"modules/ClientsModule.html":{}}}],["clientsmodule",{"_index":199,"title":{"modules/ClientsModule.html":{}},"body":{"modules/ClientsModule.html":{},"modules.html":{}}}],["clientsmoduleoptions",{"_index":209,"title":{},"body":{"modules/ClientsModule.html":{}}}],["cluster_authmodule",{"_index":45,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":46,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":47,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_commonmodule",{"_index":214,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_exports",{"_index":215,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_imports",{"_index":216,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_providers",{"_index":217,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_documentationmodule",{"_index":402,"title":{},"body":{"modules/DocumentationModule.html":{},"overview.html":{}}}],["cluster_documentationmodule_providers",{"_index":403,"title":{},"body":{"modules/DocumentationModule.html":{},"overview.html":{}}}],["cluster_escrowmodule",{"_index":418,"title":{},"body":{"modules/EscrowModule.html":{},"overview.html":{}}}],["cluster_escrowmodule_imports",{"_index":419,"title":{},"body":{"modules/EscrowModule.html":{}}}],["cluster_escrowmodule_providers",{"_index":420,"title":{},"body":{"modules/EscrowModule.html":{},"overview.html":{}}}],["cluster_gatewaymodule",{"_index":432,"title":{},"body":{"modules/GatewayModule.html":{},"overview.html":{}}}],["cluster_gatewaymodule_imports",{"_index":433,"title":{},"body":{"modules/GatewayModule.html":{},"overview.html":{}}}],["cluster_gatewaymodule_providers",{"_index":434,"title":{},"body":{"modules/GatewayModule.html":{},"overview.html":{}}}],["cluster_mediamodule",{"_index":486,"title":{},"body":{"modules/MediaModule.html":{},"overview.html":{}}}],["cluster_mediamodule_imports",{"_index":487,"title":{},"body":{"modules/MediaModule.html":{}}}],["cluster_mediamodule_providers",{"_index":488,"title":{},"body":{"modules/MediaModule.html":{},"overview.html":{}}}],["cluster_notificationmodule",{"_index":508,"title":{},"body":{"modules/NotificationModule.html":{},"overview.html":{}}}],["cluster_notificationmodule_imports",{"_index":510,"title":{},"body":{"modules/NotificationModule.html":{}}}],["cluster_notificationmodule_providers",{"_index":509,"title":{},"body":{"modules/NotificationModule.html":{},"overview.html":{}}}],["cluster_organizationmodule",{"_index":577,"title":{},"body":{"modules/OrganizationModule.html":{},"overview.html":{}}}],["cluster_organizationmodule_imports",{"_index":578,"title":{},"body":{"modules/OrganizationModule.html":{}}}],["cluster_organizationmodule_providers",{"_index":579,"title":{},"body":{"modules/OrganizationModule.html":{},"overview.html":{}}}],["cluster_paymentmodule",{"_index":598,"title":{},"body":{"modules/PaymentModule.html":{},"overview.html":{}}}],["cluster_paymentmodule_imports",{"_index":599,"title":{},"body":{"modules/PaymentModule.html":{}}}],["cluster_paymentmodule_providers",{"_index":600,"title":{},"body":{"modules/PaymentModule.html":{},"overview.html":{}}}],["cluster_propertymodule",{"_index":620,"title":{},"body":{"modules/PropertyModule.html":{},"overview.html":{}}}],["cluster_propertymodule_imports",{"_index":621,"title":{},"body":{"modules/PropertyModule.html":{}}}],["cluster_propertymodule_providers",{"_index":622,"title":{},"body":{"modules/PropertyModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":682,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":683,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":684,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cmd",{"_index":30,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{}}}],["collection",{"_index":935,"title":{},"body":{"index.html":{}}}],["column",{"_index":129,"title":{},"body":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{}}}],["column.propertyname",{"_index":142,"title":{},"body":{"entities/BaseEntity.html":{}}}],["column.target",{"_index":131,"title":{},"body":{"entities/BaseEntity.html":{}}}],["columnmetadata",{"_index":116,"title":{},"body":{"entities/BaseEntity.html":{}}}],["columnorder",{"_index":113,"title":{},"body":{"entities/BaseEntity.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["columnorder(9999",{"_index":121,"title":{},"body":{"entities/BaseEntity.html":{}}}],["columnorder(9999)@field(undefined",{"_index":92,"title":{},"body":{"entities/BaseEntity.html":{}}}],["columnorder(9999)@field(undefined)@createdatecolumn({name",{"_index":89,"title":{},"body":{"entities/BaseEntity.html":{}}}],["columnorder(undefined)@field(undefined)@primarygeneratedcolumn",{"_index":99,"title":{},"body":{"entities/BaseEntity.html":{}}}],["columnorder(value",{"_index":788,"title":{},"body":{"miscellaneous/functions.html":{}}}],["columns",{"_index":150,"title":{},"body":{"entities/BaseEntity.html":{}}}],["command",{"_index":1172,"title":{},"body":{"miscellaneous/variables.html":{}}}],["commands",{"_index":840,"title":{},"body":{"index.html":{}}}],["common",{"_index":866,"title":{},"body":{"index.html":{}}}],["common.service",{"_index":221,"title":{},"body":{"modules/CommonModule.html":{}}}],["commonmodule",{"_index":48,"title":{"modules/CommonModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["commonservice",{"_index":219,"title":{"injectables/CommonService.html":{}},"body":{"modules/CommonModule.html":{},"injectables/CommonService.html":{},"coverage.html":{},"overview.html":{}}}],["communication",{"_index":911,"title":{},"body":{"index.html":{}}}],["compared",{"_index":159,"title":{},"body":{"entities/BaseEntity.html":{}}}],["compile",{"_index":825,"title":{},"body":{"index.html":{}}}],["complete",{"_index":964,"title":{},"body":{"index.html":{}}}],["compliance",{"_index":1017,"title":{},"body":{"index.html":{}}}],["complicating",{"_index":1058,"title":{},"body":{"index.html":{}}}],["comply",{"_index":1018,"title":{},"body":{"index.html":{}}}],["complying",{"_index":930,"title":{},"body":{"index.html":{}}}],["compressing",{"_index":1100,"title":{},"body":{"index.html":{}}}],["compression",{"_index":1097,"title":{},"body":{"index.html":{}}}],["concerns",{"_index":878,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":1009,"title":{},"body":{"index.html":{}}}],["config.service",{"_index":254,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["confighelper",{"_index":174,"title":{"classes/ConfigHelper.html":{}},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"modules/DatabaseModule.html":{},"classes/SubgraphsBuilder.html":{},"coverage.html":{}}}],["confighelper.databaseconfig",{"_index":385,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["confighelper.getinstance",{"_index":182,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/DatabaseModule.html":{},"classes/SubgraphsBuilder.html":{}}}],["confighelper.getmicroservicehosts(key",{"_index":670,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["confighelper.getmoduleport(module.name",{"_index":195,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["confighelper.instance",{"_index":257,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["confighelper.instance.qushahconfigservice",{"_index":264,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["confighelper.redisconfig",{"_index":184,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{}}}],["configmodule",{"_index":255,"title":{},"body":{"classes/ConfigHelper.html":{},"modules/QushahConfigModule.html":{}}}],["configmodule.forroot",{"_index":260,"title":{},"body":{"classes/ConfigHelper.html":{},"modules/QushahConfigModule.html":{}}}],["configservice",{"_index":252,"title":{},"body":{"classes/ConfigHelper.html":{},"injectables/QushahConfigService.html":{}}}],["confirmation",{"_index":1039,"title":{},"body":{"index.html":{}}}],["connection",{"_index":872,"title":{},"body":{"index.html":{}}}],["consistency",{"_index":993,"title":{},"body":{"index.html":{}}}],["consistent",{"_index":996,"title":{},"body":{"index.html":{}}}],["const",{"_index":125,"title":{},"body":{"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"modules/DatabaseModule.html":{},"modules/GatewayModule.html":{},"classes/SubgraphsBuilder.html":{}}}],["constraint",{"_index":309,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["constructor",{"_index":234,"title":{},"body":{"classes/ConfigHelper.html":{},"injectables/GatewayService.html":{},"injectables/QushahConfigService.html":{}}}],["constructor(configservice",{"_index":654,"title":{},"body":{"injectables/QushahConfigService.html":{}}}],["constructor(private",{"_index":28,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DocumentationController.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"injectables/QushahConfigService.html":{},"controllers/UserController.html":{}}}],["consume",{"_index":1094,"title":{},"body":{"index.html":{}}}],["contact",{"_index":943,"title":{},"body":{"index.html":{}}}],["containing",{"_index":799,"title":{},"body":{"index.html":{}}}],["controller",{"_index":0,"title":{"controllers/AuthController.html":{},"controllers/DocumentationController.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AuthController.html":{},"controllers/DocumentationController.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["correct",{"_index":921,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":695,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":297,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["created_at",{"_index":90,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganization1740356244243.html":{}}}],["createdat",{"_index":82,"title":{},"body":{"entities/BaseEntity.html":{}}}],["createdatecolumn",{"_index":105,"title":{},"body":{"entities/BaseEntity.html":{}}}],["createorganization.ts",{"_index":284,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{},"coverage.html":{}}}],["createorganization.ts:18",{"_index":293,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["createorganization.ts:4",{"_index":290,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["createorganization.ts:6",{"_index":295,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["createorganization1740356244243",{"_index":282,"title":{"classes/CreateOrganization1740356244243.html":{}},"body":{"classes/CreateOrganization1740356244243.html":{},"coverage.html":{}}}],["currencies",{"_index":1057,"title":{},"body":{"index.html":{}}}],["currency",{"_index":1050,"title":{},"body":{"index.html":{}}}],["custom",{"_index":139,"title":{},"body":{"entities/BaseEntity.html":{}}}],["d",{"_index":1194,"title":{},"body":{"miscellaneous/variables.html":{}}}],["damage",{"_index":1013,"title":{},"body":{"index.html":{}}}],["data",{"_index":913,"title":{},"body":{"index.html":{}}}],["database",{"_index":275,"title":{},"body":{"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"index.html":{}}}],["database_host",{"_index":642,"title":{},"body":{"modules/QushahConfigModule.html":{},"miscellaneous/variables.html":{}}}],["database_name",{"_index":646,"title":{},"body":{"modules/QushahConfigModule.html":{},"miscellaneous/variables.html":{}}}],["database_password",{"_index":645,"title":{},"body":{"modules/QushahConfigModule.html":{},"miscellaneous/variables.html":{}}}],["database_port",{"_index":643,"title":{},"body":{"modules/QushahConfigModule.html":{},"miscellaneous/variables.html":{}}}],["database_type",{"_index":641,"title":{},"body":{"modules/QushahConfigModule.html":{},"miscellaneous/variables.html":{}}}],["database_username",{"_index":644,"title":{},"body":{"modules/QushahConfigModule.html":{},"miscellaneous/variables.html":{}}}],["databaseconfig",{"_index":233,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["databasemodule",{"_index":374,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/DatabaseModule.html":{},"modules.html":{}}}],["datasource",{"_index":106,"title":{"classes/DataSource.html":{}},"body":{"entities/BaseEntity.html":{},"classes/DataSource.html":{},"coverage.html":{}}}],["datasource.entitymetadatasmap.get(this",{"_index":127,"title":{},"body":{"entities/BaseEntity.html":{}}}],["datasource.getinstance('escrow",{"_index":1215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource.getinstance('media",{"_index":1216,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource.getinstance('notification",{"_index":1217,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource.getinstance('organization",{"_index":1218,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource.getinstance('payment",{"_index":1219,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource.getinstance('property",{"_index":1220,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource.getinstance('user",{"_index":1221,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasourcepath",{"_index":740,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["datasources",{"_index":843,"title":{},"body":{"index.html":{}}}],["date",{"_index":88,"title":{},"body":{"entities/BaseEntity.html":{}}}],["db",{"_index":366,"title":{},"body":{"classes/DataSource.html":{},"index.html":{}}}],["decimal",{"_index":558,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["declarations",{"_index":41,"title":{},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorator",{"_index":152,"title":{},"body":{"entities/BaseEntity.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"entities/BaseEntity.html":{},"controllers/DocumentationController.html":{},"controllers/EscrowController.html":{},"classes/EscrowResolver.html":{},"controllers/MediaController.html":{},"classes/MediaResolver.html":{},"controllers/NotificationController.html":{},"classes/NotificationResolver.html":{},"entities/Organization.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"controllers/PaymentController.html":{},"classes/PaymentResolver.html":{},"controllers/PropertyController.html":{},"classes/PropertyResolver.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{}}}],["default",{"_index":144,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganization1740356244243.html":{},"entities/OrganizationMetadata.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["default('development",{"_index":652,"title":{},"body":{"modules/QushahConfigModule.html":{}}}],["defaultval",{"_index":792,"title":{},"body":{"miscellaneous/functions.html":{}}}],["defined",{"_index":14,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"controllers/DocumentationController.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"controllers/MediaController.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"injectables/QushahConfigService.html":{},"classes/SubgraphsBuilder.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":336,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["deleted_at",{"_index":95,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganization1740356244243.html":{}}}],["deletedat",{"_index":84,"title":{},"body":{"entities/BaseEntity.html":{}}}],["deletedatecolumn",{"_index":107,"title":{},"body":{"entities/BaseEntity.html":{}}}],["deliveries",{"_index":1076,"title":{},"body":{"index.html":{}}}],["delivery",{"_index":1063,"title":{},"body":{"index.html":{}}}],["demandoption",{"_index":1169,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dependencies",{"_index":39,"title":{"dependencies.html":{}},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["deposit",{"_index":1000,"title":{},"body":{"index.html":{}}}],["deposit_fee_percentage",{"_index":322,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{},"entities/OrganizationMetadata.html":{}}}],["depositfeepercentage",{"_index":552,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["deposits",{"_index":853,"title":{},"body":{"index.html":{}}}],["describe",{"_index":1168,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":797,"title":{},"body":{"index.html":{},"properties.html":{}}}],["details",{"_index":944,"title":{},"body":{"index.html":{}}}],["developers",{"_index":1135,"title":{},"body":{"index.html":{}}}],["development",{"_index":391,"title":{},"body":{"modules/DatabaseModule.html":{},"index.html":{}}}],["dispute",{"_index":1012,"title":{},"body":{"index.html":{}}}],["disputes",{"_index":877,"title":{},"body":{"index.html":{}}}],["distributed",{"_index":1124,"title":{},"body":{"index.html":{}}}],["docs",{"_index":824,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":696,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["documentation.controller",{"_index":405,"title":{},"body":{"modules/DocumentationModule.html":{}}}],["documentation.service",{"_index":399,"title":{},"body":{"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{}}}],["documentationcontroller",{"_index":395,"title":{"controllers/DocumentationController.html":{}},"body":{"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"coverage.html":{}}}],["documentationmodule",{"_index":401,"title":{"modules/DocumentationModule.html":{}},"body":{"modules/DocumentationModule.html":{},"modules.html":{},"overview.html":{}}}],["documentationservice",{"_index":398,"title":{"injectables/DocumentationService.html":{}},"body":{"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"coverage.html":{},"overview.html":{}}}],["domain",{"_index":317,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{},"entities/OrganizationMetadata.html":{}}}],["dotenv",{"_index":348,"title":{},"body":{"classes/DataSource.html":{},"dependencies.html":{}}}],["dotenv.config",{"_index":354,"title":{},"body":{"classes/DataSource.html":{}}}],["double",{"_index":979,"title":{},"body":{"index.html":{}}}],["down",{"_index":288,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{},"index.html":{}}}],["down(queryrunner",{"_index":291,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["downloads",{"_index":1093,"title":{},"body":{"index.html":{}}}],["driven",{"_index":1024,"title":{},"body":{"index.html":{}}}],["driver",{"_index":465,"title":{},"body":{"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{}}}],["drop",{"_index":339,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["dtos",{"_index":864,"title":{},"body":{"index.html":{}}}],["dynamic",{"_index":1069,"title":{},"body":{"index.html":{}}}],["dynamically",{"_index":387,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["dynamicmodule",{"_index":207,"title":{},"body":{"modules/ClientsModule.html":{},"modules/DatabaseModule.html":{},"modules/GraphQLGatewayModule.html":{}}}],["e.g",{"_index":891,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["e2e",{"_index":833,"title":{},"body":{"index.html":{}}}],["each",{"_index":879,"title":{},"body":{"index.html":{}}}],["easily",{"_index":1089,"title":{},"body":{"index.html":{}}}],["easy",{"_index":1110,"title":{},"body":{"index.html":{}}}],["effectively",{"_index":950,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":972,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":991,"title":{},"body":{"index.html":{}}}],["email",{"_index":305,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{},"entities/Organization.html":{},"index.html":{}}}],["emails",{"_index":926,"title":{},"body":{"index.html":{}}}],["enable",{"_index":390,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["encrypted",{"_index":914,"title":{},"body":{"index.html":{}}}],["encryption",{"_index":1033,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":1118,"title":{},"body":{"index.html":{}}}],["endpoints",{"_index":1130,"title":{},"body":{"index.html":{}}}],["ensuring",{"_index":883,"title":{},"body":{"index.html":{}}}],["entities",{"_index":79,"title":{},"body":{"entities/BaseEntity.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"overview.html":{}}}],["entitiespath",{"_index":379,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["entity",{"_index":77,"title":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{}},"body":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"coverage.html":{}}}],["enumerations",{"_index":773,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":353,"title":{},"body":{"classes/DataSource.html":{}}}],["environment",{"_index":351,"title":{},"body":{"classes/DataSource.html":{}}}],["environmentconstant",{"_index":256,"title":{},"body":{"classes/ConfigHelper.html":{},"modules/GatewayModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environmentconstant.database_password",{"_index":274,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["environmentconstant.database_username",{"_index":272,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["error",{"_index":947,"title":{},"body":{"index.html":{}}}],["errors",{"_index":949,"title":{},"body":{"index.html":{}}}],["escrow",{"_index":430,"title":{},"body":{"injectables/EscrowService.html":{},"index.html":{}}}],["escrow.controller",{"_index":422,"title":{},"body":{"modules/EscrowModule.html":{}}}],["escrow.resolver",{"_index":424,"title":{},"body":{"modules/EscrowModule.html":{}}}],["escrow.service",{"_index":413,"title":{},"body":{"controllers/EscrowController.html":{},"modules/EscrowModule.html":{}}}],["escrow_client",{"_index":779,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["escrow_host",{"_index":440,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["escrow_port",{"_index":1199,"title":{},"body":{"miscellaneous/variables.html":{}}}],["escrowcommand",{"_index":414,"title":{},"body":{"controllers/EscrowController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["escrowcommand.ping_escrow",{"_index":415,"title":{},"body":{"controllers/EscrowController.html":{}}}],["escrowcontroller",{"_index":409,"title":{"controllers/EscrowController.html":{}},"body":{"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"coverage.html":{}}}],["escrowmodule",{"_index":417,"title":{"modules/EscrowModule.html":{}},"body":{"modules/EscrowModule.html":{},"modules.html":{},"overview.html":{}}}],["escrowresolver",{"_index":423,"title":{"classes/EscrowResolver.html":{}},"body":{"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"coverage.html":{}}}],["escrowservice",{"_index":412,"title":{"injectables/EscrowService.html":{}},"body":{"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"injectables/EscrowService.html":{},"coverage.html":{},"overview.html":{}}}],["especially",{"_index":912,"title":{},"body":{"index.html":{}}}],["etc",{"_index":802,"title":{},"body":{"index.html":{}}}],["evenly",{"_index":1125,"title":{},"body":{"index.html":{}}}],["event",{"_index":1023,"title":{},"body":{"index.html":{}}}],["example",{"_index":817,"title":{},"body":{"index.html":{}}}],["exist",{"_index":134,"title":{},"body":{"entities/BaseEntity.html":{}}}],["expiration",{"_index":898,"title":{},"body":{"index.html":{}}}],["expiry",{"_index":895,"title":{},"body":{"index.html":{}}}],["export",{"_index":26,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"modules/QushahConfigModule.html":{},"injectables/QushahConfigService.html":{},"classes/SubgraphsBuilder.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":44,"title":{},"body":{"modules/AuthModule.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/GraphQLGatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":753,"title":{},"body":{"dependencies.html":{}}}],["extended",{"_index":393,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["extends",{"_index":119,"title":{},"body":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{}}}],["external",{"_index":1028,"title":{},"body":{"index.html":{}}}],["failed",{"_index":1075,"title":{},"body":{"index.html":{}}}],["failure",{"_index":1014,"title":{},"body":{"index.html":{}}}],["failures",{"_index":1035,"title":{},"body":{"index.html":{}}}],["fallback",{"_index":143,"title":{},"body":{"entities/BaseEntity.html":{}}}],["false",{"_index":325,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"entities/OrganizationMetadata.html":{}}}],["fast",{"_index":971,"title":{},"body":{"index.html":{}}}],["faster",{"_index":1102,"title":{},"body":{"index.html":{}}}],["features",{"_index":976,"title":{},"body":{"index.html":{}}}],["federation",{"_index":474,"title":{},"body":{"modules/GraphQLMicroserviceModule.html":{}}}],["feedback",{"_index":955,"title":{},"body":{"index.html":{}}}],["field",{"_index":111,"title":{},"body":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{}}}],["field(undefined",{"_index":528,"title":{},"body":{"entities/Organization.html":{},"entities/OrganizationMetadata.html":{}}}],["field(undefined)@column",{"_index":525,"title":{},"body":{"entities/Organization.html":{},"entities/OrganizationMetadata.html":{}}}],["field(undefined)@column({name",{"_index":535,"title":{},"body":{"entities/Organization.html":{},"entities/OrganizationMetadata.html":{}}}],["field(undefined)@column({unique",{"_index":532,"title":{},"body":{"entities/Organization.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"modules/QushahConfigModule.html":{},"injectables/QushahConfigService.html":{},"classes/SubgraphsBuilder.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["files",{"_index":1088,"title":{},"body":{"index.html":{}}}],["financial",{"_index":1020,"title":{},"body":{"index.html":{}}}],["fk_efaca847c588a9817470f7c6ca8",{"_index":332,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["float",{"_index":572,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["follow",{"_index":822,"title":{},"body":{"index.html":{}}}],["following",{"_index":807,"title":{},"body":{"index.html":{}}}],["force",{"_index":907,"title":{},"body":{"index.html":{}}}],["foreign",{"_index":333,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["forroot",{"_index":376,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["forroot(entitiespath",{"_index":377,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["free",{"_index":1109,"title":{},"body":{"index.html":{}}}],["frequency",{"_index":1080,"title":{},"body":{"index.html":{}}}],["frontend",{"_index":875,"title":{},"body":{"index.html":{}}}],["function",{"_index":140,"title":{},"body":{"entities/BaseEntity.html":{},"coverage.html":{}}}],["functionality",{"_index":970,"title":{},"body":{"index.html":{}}}],["functions",{"_index":785,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gateway",{"_index":451,"title":{},"body":{"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"index.html":{}}}],["gateway.module.ts",{"_index":453,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["gateway.module.ts:10",{"_index":455,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["gateway.service",{"_index":438,"title":{},"body":{"modules/GatewayModule.html":{}}}],["gateway_host",{"_index":1207,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gateway_port",{"_index":1200,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gatewaymodule",{"_index":431,"title":{"modules/GatewayModule.html":{}},"body":{"modules/GatewayModule.html":{},"modules.html":{},"overview.html":{}}}],["gatewayservice",{"_index":436,"title":{"injectables/GatewayService.html":{}},"body":{"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"coverage.html":{},"overview.html":{}}}],["gdpr",{"_index":932,"title":{},"body":{"index.html":{}}}],["generate",{"_index":1173,"title":{},"body":{"miscellaneous/variables.html":{}}}],["generating",{"_index":1042,"title":{},"body":{"index.html":{}}}],["getcolumnorder",{"_index":114,"title":{},"body":{"entities/BaseEntity.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getcolumnorder(target",{"_index":790,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getcolumnorder(target.prototype",{"_index":141,"title":{},"body":{"entities/BaseEntity.html":{}}}],["getconfig",{"_index":228,"title":{},"body":{"classes/ConfigHelper.html":{},"injectables/QushahConfigService.html":{}}}],["getconfig(key",{"_index":237,"title":{},"body":{"classes/ConfigHelper.html":{},"injectables/QushahConfigService.html":{}}}],["getdatabaseconfig",{"_index":250,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/DocumentationController.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"injectables/EscrowService.html":{},"controllers/MediaController.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"injectables/NotificationService.html":{},"controllers/OrganizationController.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"injectables/PropertyService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["getinstance",{"_index":229,"title":{},"body":{"classes/ConfigHelper.html":{},"classes/DataSource.html":{}}}],["getinstance(schema",{"_index":343,"title":{},"body":{"classes/DataSource.html":{}}}],["getmicroservicehosts",{"_index":230,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["getmicroservicehosts(microservicename",{"_index":242,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["getmoduleport",{"_index":231,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["getmoduleport(modulename",{"_index":245,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["getordersafely",{"_index":128,"title":{},"body":{"entities/BaseEntity.html":{}}}],["getordersafely(xcolumn",{"_index":161,"title":{},"body":{"entities/BaseEntity.html":{}}}],["getordersafely(ycolumn",{"_index":163,"title":{},"body":{"entities/BaseEntity.html":{}}}],["getredisconfig",{"_index":248,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["getting",{"_index":793,"title":{"index.html":{}},"body":{}}],["global",{"_index":206,"title":{},"body":{"modules/ClientsModule.html":{},"modules/GraphQLGatewayModule.html":{},"index.html":{}}}],["graph",{"_index":1142,"title":{},"body":{"modules.html":{}}}],["graphname",{"_index":669,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["graphname?.split('_host')?.[0",{"_index":668,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["graphnames",{"_index":663,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["graphnames.map((graphname",{"_index":666,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["graphql",{"_index":758,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["graphqlgatewaymodule",{"_index":435,"title":{"modules/GraphQLGatewayModule.html":{}},"body":{"modules/GatewayModule.html":{},"modules/GraphQLGatewayModule.html":{},"modules.html":{},"overview.html":{}}}],["graphqlgatewaymodule.register",{"_index":447,"title":{},"body":{"modules/GatewayModule.html":{}}}],["graphqlmicroservicemodule",{"_index":49,"title":{"modules/GraphQLMicroserviceModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/EscrowModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["graphqlmodule",{"_index":457,"title":{},"body":{"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{}}}],["graphqlmodule.forroot",{"_index":472,"title":{},"body":{"modules/GraphQLMicroserviceModule.html":{}}}],["graphqlmodule.forrootasync",{"_index":464,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["growing",{"_index":1060,"title":{},"body":{"index.html":{}}}],["guards",{"_index":869,"title":{},"body":{"index.html":{}}}],["handle",{"_index":957,"title":{},"body":{"index.html":{}}}],["handling",{"_index":948,"title":{},"body":{"index.html":{}}}],["hello",{"_index":74,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DocumentationService.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"injectables/MediaService.html":{},"injectables/NotificationService.html":{},"injectables/OrganizationService.html":{},"injectables/PaymentService.html":{},"injectables/PropertyService.html":{},"injectables/UserService.html":{}}}],["help().argv",{"_index":1182,"title":{},"body":{"miscellaneous/variables.html":{}}}],["helper",{"_index":837,"title":{},"body":{"index.html":{}}}],["here",{"_index":848,"title":{},"body":{"index.html":{}}}],["high",{"_index":145,"title":{},"body":{"entities/BaseEntity.html":{},"index.html":{}}}],["host",{"_index":190,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/SubgraphsBuilder.html":{}}}],["host}:${port}/graphql",{"_index":672,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["https",{"_index":915,"title":{},"body":{"index.html":{}}}],["id",{"_index":85,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganization1740356244243.html":{}}}],["identifier",{"_index":697,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":984,"title":{},"body":{"index.html":{}}}],["images",{"_index":986,"title":{},"body":{"index.html":{}}}],["implement",{"_index":900,"title":{},"body":{"index.html":{}}}],["implementing",{"_index":909,"title":{},"body":{"index.html":{}}}],["implements",{"_index":285,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["import",{"_index":18,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"modules/QushahConfigModule.html":{},"injectables/QushahConfigService.html":{},"classes/SubgraphsBuilder.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":54,"title":{},"body":{"modules/AuthModule.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/QushahConfigModule.html":{},"modules/UserModule.html":{}}}],["improve",{"_index":1138,"title":{},"body":{"index.html":{}}}],["in/opt",{"_index":1082,"title":{},"body":{"index.html":{}}}],["includes",{"_index":887,"title":{},"body":{"index.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"controllers/DocumentationController.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"controllers/MediaController.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"injectables/QushahConfigService.html":{},"classes/SubgraphsBuilder.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"modules/QushahConfigModule.html":{},"injectables/QushahConfigService.html":{},"classes/SubgraphsBuilder.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["information",{"_index":925,"title":{},"body":{"index.html":{}}}],["init",{"_index":169,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["init(module",{"_index":170,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["initially",{"_index":1052,"title":{},"body":{"index.html":{}}}],["injectable",{"_index":70,"title":{"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/DocumentationService.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"injectables/MediaService.html":{},"injectables/NotificationService.html":{},"injectables/OrganizationService.html":{},"injectables/PaymentService.html":{},"injectables/PropertyService.html":{},"injectables/QushahConfigService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/DocumentationService.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"injectables/MediaService.html":{},"injectables/NotificationService.html":{},"injectables/OrganizationService.html":{},"injectables/PaymentService.html":{},"injectables/PropertyService.html":{},"injectables/QushahConfigService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":71,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/DocumentationService.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"injectables/MediaService.html":{},"injectables/NotificationService.html":{},"injectables/OrganizationService.html":{},"injectables/PaymentService.html":{},"injectables/PropertyService.html":{},"injectables/QushahConfigService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["inr",{"_index":1053,"title":{},"body":{"index.html":{}}}],["install",{"_index":819,"title":{},"body":{"index.html":{}}}],["installed",{"_index":808,"title":{},"body":{"index.html":{}}}],["installinstall",{"_index":821,"title":{},"body":{"index.html":{}}}],["instance",{"_index":226,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["instances",{"_index":1126,"title":{},"body":{"index.html":{}}}],["integer",{"_index":327,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["integrating",{"_index":992,"title":{},"body":{"index.html":{}}}],["integration",{"_index":1027,"title":{},"body":{"index.html":{}}}],["integrity",{"_index":946,"title":{},"body":{"index.html":{}}}],["interceptors",{"_index":868,"title":{},"body":{"index.html":{}}}],["interfaces",{"_index":865,"title":{},"body":{"index.html":{}}}],["introspectandcompose",{"_index":461,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["introspection",{"_index":1132,"title":{},"body":{"index.html":{}}}],["invalid",{"_index":952,"title":{},"body":{"index.html":{}}}],["ioredis",{"_index":760,"title":{},"body":{"dependencies.html":{}}}],["isglobal",{"_index":261,"title":{},"body":{"classes/ConfigHelper.html":{},"modules/QushahConfigModule.html":{}}}],["issues",{"_index":981,"title":{},"body":{"index.html":{}}}],["joi",{"_index":634,"title":{},"body":{"modules/QushahConfigModule.html":{},"dependencies.html":{}}}],["joi.number().required",{"_index":640,"title":{},"body":{"modules/QushahConfigModule.html":{}}}],["joi.object",{"_index":636,"title":{},"body":{"modules/QushahConfigModule.html":{}}}],["joi.string",{"_index":648,"title":{},"body":{"modules/QushahConfigModule.html":{}}}],["joi.string().required",{"_index":638,"title":{},"body":{"modules/QushahConfigModule.html":{}}}],["joincolumn",{"_index":573,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["jwt",{"_index":892,"title":{},"body":{"index.html":{}}}],["key",{"_index":240,"title":{},"body":{"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"injectables/QushahConfigService.html":{},"classes/SubgraphsBuilder.html":{},"index.html":{}}}],["keypart",{"_index":667,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["landlord",{"_index":919,"title":{},"body":{"index.html":{}}}],["landlords",{"_index":960,"title":{},"body":{"index.html":{}}}],["large",{"_index":958,"title":{},"body":{"index.html":{}}}],["later",{"_index":1054,"title":{},"body":{"index.html":{}}}],["learn",{"_index":846,"title":{},"body":{"index.html":{}}}],["legend",{"_index":40,"title":{},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["lets",{"_index":839,"title":{},"body":{"index.html":{}}}],["libraries",{"_index":863,"title":{},"body":{"index.html":{}}}],["libs",{"_index":801,"title":{},"body":{"index.html":{}}}],["libs/.../auth.command.ts",{"_index":1153,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../column",{"_index":787,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/.../environment.constant.ts",{"_index":1154,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../escrow.command.ts",{"_index":1155,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../media.command.ts",{"_index":1156,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../micro",{"_index":775,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../notification.command.ts",{"_index":1157,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../organization.command.ts",{"_index":1158,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../payment.command.ts",{"_index":1159,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../property.command.ts",{"_index":1160,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../user.command.ts",{"_index":1163,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/common/src/clients/clients.module.ts",{"_index":200,"title":{},"body":{"modules/ClientsModule.html":{}}}],["libs/common/src/clients/clients.module.ts:12",{"_index":203,"title":{},"body":{"modules/ClientsModule.html":{}}}],["libs/common/src/common.module.ts",{"_index":220,"title":{},"body":{"modules/CommonModule.html":{}}}],["libs/common/src/common.service.ts",{"_index":223,"title":{},"body":{"injectables/CommonService.html":{},"coverage.html":{}}}],["libs/common/src/config/config.helper.ts",{"_index":224,"title":{},"body":{"classes/ConfigHelper.html":{},"coverage.html":{}}}],["libs/common/src/config/config.helper.ts:13",{"_index":241,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.helper.ts:31",{"_index":249,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.helper.ts:37",{"_index":251,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.helper.ts:51",{"_index":246,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.helper.ts:57",{"_index":243,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.helper.ts:67",{"_index":238,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.helper.ts:8",{"_index":236,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.helper.ts:9",{"_index":235,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["libs/common/src/config/config.module.ts",{"_index":633,"title":{},"body":{"modules/QushahConfigModule.html":{}}}],["libs/common/src/config/config.service.ts",{"_index":653,"title":{},"body":{"injectables/QushahConfigService.html":{},"coverage.html":{}}}],["libs/common/src/config/config.service.ts:5",{"_index":655,"title":{},"body":{"injectables/QushahConfigService.html":{}}}],["libs/common/src/config/config.service.ts:8",{"_index":656,"title":{},"body":{"injectables/QushahConfigService.html":{}}}],["libs/common/src/constants/commands/auth.command.ts",{"_index":725,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/commands/escrow.command.ts",{"_index":726,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/commands/media.command.ts",{"_index":727,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/commands/notification.command.ts",{"_index":728,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/commands/organization.command.ts",{"_index":729,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/commands/payment.command.ts",{"_index":730,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/commands/property.command.ts",{"_index":731,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/commands/user.command.ts",{"_index":732,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/constants/environment.constant.ts",{"_index":733,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/database/database.module.ts",{"_index":375,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["libs/common/src/database/database.module.ts:7",{"_index":378,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["libs/common/src/database/entities/base.entity.ts",{"_index":80,"title":{},"body":{"entities/BaseEntity.html":{},"coverage.html":{}}}],["libs/common/src/database/entities/base.entity.ts:20",{"_index":100,"title":{},"body":{"entities/BaseEntity.html":{}}}],["libs/common/src/database/entities/base.entity.ts:25",{"_index":91,"title":{},"body":{"entities/BaseEntity.html":{}}}],["libs/common/src/database/entities/base.entity.ts:30",{"_index":103,"title":{},"body":{"entities/BaseEntity.html":{}}}],["libs/common/src/database/entities/base.entity.ts:35",{"_index":97,"title":{},"body":{"entities/BaseEntity.html":{}}}],["libs/common/src/decorators/column",{"_index":735,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/enums/micro",{"_index":777,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/common/src/graphql/graphql",{"_index":452,"title":{},"body":{"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{}}}],["libs/common/src/utils/bootstrapper.util.ts",{"_index":167,"title":{},"body":{"classes/Bootstrapper.html":{},"coverage.html":{}}}],["libs/common/src/utils/bootstrapper.util.ts:7",{"_index":171,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["libs/common/src/utils/data",{"_index":341,"title":{},"body":{"classes/DataSource.html":{},"coverage.html":{}}}],["libs/common/src/utils/subgraphs",{"_index":658,"title":{},"body":{"classes/SubgraphsBuilder.html":{},"coverage.html":{}}}],["license",{"_index":1150,"title":{},"body":{"properties.html":{}}}],["limiting",{"_index":903,"title":{},"body":{"index.html":{}}}],["limits",{"_index":1129,"title":{},"body":{"index.html":{}}}],["listed",{"_index":968,"title":{},"body":{"index.html":{}}}],["listening",{"_index":198,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["listings",{"_index":856,"title":{},"body":{"index.html":{}}}],["load",{"_index":350,"title":{},"body":{"classes/DataSource.html":{},"index.html":{}}}],["loading",{"_index":1103,"title":{},"body":{"index.html":{}}}],["local",{"_index":1019,"title":{},"body":{"index.html":{}}}],["localhost",{"_index":360,"title":{},"body":{"classes/DataSource.html":{}}}],["location",{"_index":974,"title":{},"body":{"index.html":{}}}],["logger",{"_index":173,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["logger(`${module.name}bootstrap",{"_index":180,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["logger.log(`microservice",{"_index":197,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["logo",{"_index":318,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{},"entities/OrganizationMetadata.html":{}}}],["lts",{"_index":811,"title":{},"body":{"index.html":{}}}],["m",{"_index":1167,"title":{},"body":{"miscellaneous/variables.html":{}}}],["machine",{"_index":806,"title":{},"body":{"index.html":{}}}],["maintaining",{"_index":945,"title":{},"body":{"index.html":{}}}],["make",{"_index":815,"title":{},"body":{"index.html":{}}}],["manage",{"_index":1083,"title":{},"body":{"index.html":{}}}],["management",{"_index":852,"title":{},"body":{"index.html":{}}}],["managing",{"_index":897,"title":{},"body":{"index.html":{}}}],["matching",{"_index":35,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"modules/QushahConfigModule.html":{},"injectables/QushahConfigService.html":{},"classes/SubgraphsBuilder.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["mechanisms",{"_index":899,"title":{},"body":{"index.html":{}}}],["media",{"_index":498,"title":{},"body":{"injectables/MediaService.html":{},"index.html":{}}}],["media.controller",{"_index":490,"title":{},"body":{"modules/MediaModule.html":{}}}],["media.resolver",{"_index":492,"title":{},"body":{"modules/MediaModule.html":{}}}],["media.service",{"_index":481,"title":{},"body":{"controllers/MediaController.html":{},"modules/MediaModule.html":{}}}],["media_client",{"_index":780,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["media_host",{"_index":441,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["media_port",{"_index":1201,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mediacommand",{"_index":482,"title":{},"body":{"controllers/MediaController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mediacommand.ping_media",{"_index":483,"title":{},"body":{"controllers/MediaController.html":{}}}],["mediacontroller",{"_index":477,"title":{"controllers/MediaController.html":{}},"body":{"controllers/MediaController.html":{},"modules/MediaModule.html":{},"coverage.html":{}}}],["mediamodule",{"_index":485,"title":{"modules/MediaModule.html":{}},"body":{"modules/MediaModule.html":{},"modules.html":{},"overview.html":{}}}],["mediaresolver",{"_index":491,"title":{"classes/MediaResolver.html":{}},"body":{"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"coverage.html":{}}}],["mediaservice",{"_index":480,"title":{"injectables/MediaService.html":{}},"body":{"controllers/MediaController.html":{},"modules/MediaModule.html":{},"injectables/MediaService.html":{},"coverage.html":{},"overview.html":{}}}],["message",{"_index":1067,"title":{},"body":{"index.html":{}}}],["messagepattern",{"_index":22,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{}}}],["messagepattern({cmd",{"_index":12,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{}}}],["meta",{"_index":126,"title":{},"body":{"entities/BaseEntity.html":{}}}],["meta.columns",{"_index":153,"title":{},"body":{"entities/BaseEntity.html":{}}}],["meta.columns].sort((xcolumn",{"_index":154,"title":{},"body":{"entities/BaseEntity.html":{}}}],["metadata",{"_index":523,"title":{},"body":{"entities/Organization.html":{},"dependencies.html":{}}}],["metadata.entity",{"_index":539,"title":{},"body":{"entities/Organization.html":{}}}],["metadata.entity.ts",{"_index":550,"title":{},"body":{"entities/OrganizationMetadata.html":{},"coverage.html":{}}}],["metadata.entity.ts:16",{"_index":568,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["metadata.entity.ts:20",{"_index":570,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["metadata.entity.ts:24",{"_index":561,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["metadata.entity.ts:28",{"_index":562,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["metadata.entity.ts:38",{"_index":571,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["metadata.entity.ts:48",{"_index":559,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["metadata.entity.ts:52",{"_index":555,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["metadata.organization",{"_index":530,"title":{},"body":{"entities/Organization.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"controllers/DocumentationController.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"controllers/MediaController.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"injectables/QushahConfigService.html":{},"classes/SubgraphsBuilder.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["microservice",{"_index":880,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["microservice.module.ts",{"_index":469,"title":{},"body":{"modules/GraphQLMicroserviceModule.html":{}}}],["microserviceclient",{"_index":774,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["microservicename",{"_index":244,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["microservicename}_host`.touppercase",{"_index":279,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["microservicename}_port`.touppercase",{"_index":280,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["microserviceoptions",{"_index":177,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["microservices",{"_index":800,"title":{},"body":{"index.html":{}}}],["migration",{"_index":1180,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migration:${command",{"_index":1192,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migrationinterface",{"_index":286,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["migrations",{"_index":370,"title":{},"body":{"classes/DataSource.html":{}}}],["migrationstablename",{"_index":355,"title":{},"body":{"classes/DataSource.html":{}}}],["miscellaneous",{"_index":772,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mobile",{"_index":1074,"title":{},"body":{"index.html":{}}}],["mode",{"_index":828,"title":{},"body":{"index.html":{}}}],["models",{"_index":873,"title":{},"body":{"index.html":{}}}],["module",{"_index":36,"title":{"modules/AuthModule.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/QushahConfigModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AuthModule.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/QushahConfigModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modulename",{"_index":247,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["modulename?.split('module')?.[0]?.touppercase",{"_index":277,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["modules",{"_index":38,"title":{"modules.html":{}},"body":{"modules/AuthModule.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/QushahConfigModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["money",{"_index":1002,"title":{},"body":{"index.html":{}}}],["monthly",{"_index":1046,"title":{},"body":{"index.html":{}}}],["multi",{"_index":1049,"title":{},"body":{"index.html":{}}}],["multiple",{"_index":1072,"title":{},"body":{"index.html":{}}}],["name",{"_index":63,"title":{},"body":{"classes/AuthResolver.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/EscrowResolver.html":{},"modules/GraphQLGatewayModule.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"injectables/QushahConfigService.html":{},"classes/SubgraphsBuilder.html":{},"classes/UserResolver.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["names",{"_index":204,"title":{},"body":{"modules/ClientsModule.html":{},"index.html":{}}}],["names.map((name",{"_index":212,"title":{},"body":{"modules/ClientsModule.html":{}}}],["needed",{"_index":394,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["nestclientsmodule",{"_index":208,"title":{},"body":{"modules/ClientsModule.html":{}}}],["nestclientsmodule.register(clients",{"_index":213,"title":{},"body":{"modules/ClientsModule.html":{}}}],["nestfactory",{"_index":175,"title":{},"body":{"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{}}}],["nestfactory.create(module",{"_index":186,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["nestfactory.createapplicationcontext",{"_index":259,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["nestjs/apollo",{"_index":460,"title":{},"body":{"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":19,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"modules/DatabaseModule.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"injectables/PropertyService.html":{},"modules/QushahConfigModule.html":{},"injectables/QushahConfigService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":253,"title":{},"body":{"classes/ConfigHelper.html":{},"modules/QushahConfigModule.html":{},"injectables/QushahConfigService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":176,"title":{},"body":{"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{},"dependencies.html":{}}}],["nestjs/graphql",{"_index":68,"title":{},"body":{"classes/AuthResolver.html":{},"entities/BaseEntity.html":{},"classes/EscrowResolver.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"classes/UserResolver.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":23,"title":{},"body":{"controllers/AuthController.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":752,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":382,"title":{},"body":{"modules/DatabaseModule.html":{},"dependencies.html":{}}}],["network",{"_index":1038,"title":{},"body":{"index.html":{}}}],["new",{"_index":179,"title":{},"body":{"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/GraphQLGatewayModule.html":{},"coverage.html":{}}}],["node",{"_index":1187,"title":{},"body":{"miscellaneous/variables.html":{}}}],["node:process",{"_index":347,"title":{},"body":{"classes/DataSource.html":{}}}],["node_env",{"_index":647,"title":{},"body":{"modules/QushahConfigModule.html":{}}}],["node_modules/typeorm/cli.js",{"_index":1191,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nodejs",{"_index":809,"title":{},"body":{"index.html":{}}}],["notification",{"_index":520,"title":{},"body":{"injectables/NotificationService.html":{},"index.html":{}}}],["notification.controller",{"_index":512,"title":{},"body":{"modules/NotificationModule.html":{}}}],["notification.resolver",{"_index":514,"title":{},"body":{"modules/NotificationModule.html":{}}}],["notification.service",{"_index":503,"title":{},"body":{"controllers/NotificationController.html":{},"modules/NotificationModule.html":{}}}],["notification_client",{"_index":781,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["notification_host",{"_index":442,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["notification_port",{"_index":1202,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notificationcommand",{"_index":504,"title":{},"body":{"controllers/NotificationController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["notificationcommand.ping_notification",{"_index":505,"title":{},"body":{"controllers/NotificationController.html":{}}}],["notificationcontroller",{"_index":499,"title":{"controllers/NotificationController.html":{}},"body":{"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"coverage.html":{}}}],["notificationmodule",{"_index":507,"title":{"modules/NotificationModule.html":{}},"body":{"modules/NotificationModule.html":{},"modules.html":{},"overview.html":{}}}],["notificationresolver",{"_index":513,"title":{"classes/NotificationResolver.html":{}},"body":{"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"coverage.html":{}}}],["notifications",{"_index":857,"title":{},"body":{"index.html":{}}}],["notificationservice",{"_index":502,"title":{"injectables/NotificationService.html":{}},"body":{"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"coverage.html":{},"overview.html":{}}}],["notifying",{"_index":1025,"title":{},"body":{"index.html":{}}}],["now",{"_index":308,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["npm",{"_index":818,"title":{},"body":{"index.html":{}}}],["null",{"_index":148,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganization1740356244243.html":{}}}],["nullable",{"_index":93,"title":{},"body":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{}}}],["number",{"_index":98,"title":{},"body":{"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"entities/OrganizationMetadata.html":{},"miscellaneous/functions.html":{}}}],["numbers",{"_index":928,"title":{},"body":{"index.html":{}}}],["numeric(5,2",{"_index":320,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["oauth",{"_index":893,"title":{},"body":{"index.html":{}}}],["object",{"_index":1196,"title":{},"body":{"miscellaneous/variables.html":{}}}],["objecttype",{"_index":112,"title":{},"body":{"entities/BaseEntity.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{}}}],["official",{"_index":823,"title":{},"body":{"index.html":{}}}],["ondelete",{"_index":565,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["onetoone",{"_index":538,"title":{},"body":{"entities/Organization.html":{},"entities/OrganizationMetadata.html":{}}}],["onetoone(undefined",{"_index":563,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["onupdate",{"_index":566,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["opt",{"_index":1081,"title":{},"body":{"index.html":{}}}],["optimization",{"_index":1098,"title":{},"body":{"index.html":{}}}],["optimizing",{"_index":1101,"title":{},"body":{"index.html":{}}}],["option('args",{"_index":1175,"title":{},"body":{"miscellaneous/variables.html":{}}}],["option('command",{"_index":1170,"title":{},"body":{"miscellaneous/variables.html":{}}}],["option('microservice",{"_index":1165,"title":{},"body":{"miscellaneous/variables.html":{}}}],["option('title",{"_index":1178,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optional",{"_index":83,"title":{},"body":{"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"modules/GraphQLGatewayModule.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"injectables/QushahConfigService.html":{},"classes/SubgraphsBuilder.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["options",{"_index":189,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/DatabaseModule.html":{}}}],["order",{"_index":137,"title":{},"body":{"entities/BaseEntity.html":{}}}],["order.decorator.ts",{"_index":736,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["order_key",{"_index":737,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["orderxcolumn",{"_index":160,"title":{},"body":{"entities/BaseEntity.html":{}}}],["orderycolumn",{"_index":162,"title":{},"body":{"entities/BaseEntity.html":{}}}],["organization",{"_index":521,"title":{"entities/Organization.html":{}},"body":{"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"injectables/OrganizationService.html":{},"coverage.html":{}}}],["organization\".\"organization",{"_index":299,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["organization\".\"organization\"(\"id",{"_index":335,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["organization\".\"organization_metadata",{"_index":315,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["organization.controller",{"_index":581,"title":{},"body":{"modules/OrganizationModule.html":{}}}],["organization.entity",{"_index":574,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["organization.metadata",{"_index":564,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["organization.resolver",{"_index":583,"title":{},"body":{"modules/OrganizationModule.html":{}}}],["organization.service",{"_index":544,"title":{},"body":{"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{}}}],["organization_host",{"_index":443,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["organization_id",{"_index":326,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{},"entities/OrganizationMetadata.html":{}}}],["organization_port",{"_index":1203,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organizationcommand",{"_index":545,"title":{},"body":{"controllers/OrganizationController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["organizationcommand.ping_organization",{"_index":547,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["organizationcontroller",{"_index":540,"title":{"controllers/OrganizationController.html":{}},"body":{"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"coverage.html":{}}}],["organizationmetadata",{"_index":527,"title":{"entities/OrganizationMetadata.html":{}},"body":{"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"coverage.html":{}}}],["organizationmodule",{"_index":576,"title":{"modules/OrganizationModule.html":{}},"body":{"modules/OrganizationModule.html":{},"modules.html":{},"overview.html":{}}}],["organizationresolver",{"_index":582,"title":{"classes/OrganizationResolver.html":{}},"body":{"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"coverage.html":{}}}],["organizationservice",{"_index":543,"title":{"injectables/OrganizationService.html":{}},"body":{"controllers/OrganizationController.html":{},"modules/OrganizationModule.html":{},"injectables/OrganizationService.html":{},"coverage.html":{},"overview.html":{}}}],["out",{"_index":52,"title":{},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":1144,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":743,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameters",{"_index":172,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"modules/GraphQLGatewayModule.html":{},"injectables/QushahConfigService.html":{},"classes/SubgraphsBuilder.html":{},"miscellaneous/functions.html":{}}}],["party",{"_index":1134,"title":{},"body":{"index.html":{}}}],["pass",{"_index":388,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["passing",{"_index":1119,"title":{},"body":{"index.html":{}}}],["password",{"_index":273,"title":{},"body":{"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"index.html":{}}}],["path",{"_index":844,"title":{},"body":{"index.html":{}}}],["path.join",{"_index":1183,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paths/register",{"_index":1190,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pay",{"_index":1015,"title":{},"body":{"index.html":{}}}],["payment",{"_index":610,"title":{},"body":{"injectables/PaymentService.html":{},"index.html":{}}}],["payment.controller",{"_index":602,"title":{},"body":{"modules/PaymentModule.html":{}}}],["payment.resolver",{"_index":604,"title":{},"body":{"modules/PaymentModule.html":{}}}],["payment.service",{"_index":593,"title":{},"body":{"controllers/PaymentController.html":{},"modules/PaymentModule.html":{}}}],["payment_client",{"_index":782,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["payment_host",{"_index":444,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["payment_port",{"_index":1204,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paymentcommand",{"_index":594,"title":{},"body":{"controllers/PaymentController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["paymentcommand.ping_payment",{"_index":595,"title":{},"body":{"controllers/PaymentController.html":{}}}],["paymentcontroller",{"_index":589,"title":{"controllers/PaymentController.html":{}},"body":{"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"coverage.html":{}}}],["paymentmodule",{"_index":597,"title":{"modules/PaymentModule.html":{}},"body":{"modules/PaymentModule.html":{},"modules.html":{},"overview.html":{}}}],["paymentresolver",{"_index":603,"title":{"classes/PaymentResolver.html":{}},"body":{"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"coverage.html":{}}}],["payments",{"_index":854,"title":{},"body":{"index.html":{}}}],["paymentservice",{"_index":592,"title":{"injectables/PaymentService.html":{}},"body":{"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"coverage.html":{},"overview.html":{}}}],["paytm",{"_index":1030,"title":{},"body":{"index.html":{}}}],["performance",{"_index":1091,"title":{},"body":{"index.html":{}}}],["permissions",{"_index":917,"title":{},"body":{"index.html":{}}}],["personal",{"_index":923,"title":{},"body":{"index.html":{}}}],["personalization",{"_index":1077,"title":{},"body":{"index.html":{}}}],["personalized",{"_index":1078,"title":{},"body":{"index.html":{}}}],["pg",{"_index":763,"title":{},"body":{"dependencies.html":{}}}],["phone",{"_index":306,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{},"entities/Organization.html":{},"index.html":{}}}],["pictures",{"_index":1112,"title":{},"body":{"index.html":{}}}],["ping",{"_index":61,"title":{},"body":{"classes/AuthResolver.html":{},"classes/EscrowResolver.html":{},"injectables/GatewayService.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"classes/UserResolver.html":{}}}],["ping_auth",{"_index":1197,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ping_escrow",{"_index":1208,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ping_media",{"_index":1209,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ping_notification",{"_index":1210,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ping_organization",{"_index":1212,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ping_payment",{"_index":1213,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ping_property",{"_index":1214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ping_user",{"_index":1222,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pingauth",{"_index":64,"title":{},"body":{"classes/AuthResolver.html":{}}}],["pingescrow",{"_index":426,"title":{},"body":{"classes/EscrowResolver.html":{}}}],["pingmedia",{"_index":494,"title":{},"body":{"classes/MediaResolver.html":{}}}],["pingnotification",{"_index":516,"title":{},"body":{"classes/NotificationResolver.html":{}}}],["pingorganization",{"_index":585,"title":{},"body":{"classes/OrganizationResolver.html":{}}}],["pingpayment",{"_index":606,"title":{},"body":{"classes/PaymentResolver.html":{}}}],["pingproperty",{"_index":628,"title":{},"body":{"classes/PropertyResolver.html":{}}}],["pinguser",{"_index":690,"title":{},"body":{"classes/UserResolver.html":{}}}],["pk_2fecc2ceb81f30a7f46be802cbd",{"_index":329,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["pk_472c1f99a32def1b0abb219cd67",{"_index":313,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["pnpm",{"_index":812,"title":{},"body":{"index.html":{}}}],["pnpminstall",{"_index":820,"title":{},"body":{"index.html":{}}}],["policies",{"_index":889,"title":{},"body":{"index.html":{}}}],["pong",{"_index":69,"title":{},"body":{"classes/AuthResolver.html":{},"classes/EscrowResolver.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"classes/UserResolver.html":{}}}],["port",{"_index":192,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"classes/SubgraphsBuilder.html":{}}}],["possibly",{"_index":1055,"title":{},"body":{"index.html":{}}}],["postgres",{"_index":358,"title":{},"body":{"classes/DataSource.html":{}}}],["precision",{"_index":556,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["preferences",{"_index":1079,"title":{},"body":{"index.html":{}}}],["prerequisites",{"_index":803,"title":{},"body":{"index.html":{}}}],["preventing",{"_index":978,"title":{},"body":{"index.html":{}}}],["price",{"_index":975,"title":{},"body":{"index.html":{}}}],["primary",{"_index":314,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["primary_color",{"_index":316,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{},"entities/OrganizationMetadata.html":{}}}],["primary_contact_name",{"_index":304,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{},"entities/Organization.html":{}}}],["primarycolor",{"_index":553,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["primarycontactname",{"_index":524,"title":{},"body":{"entities/Organization.html":{}}}],["primarygeneratedcolumn",{"_index":108,"title":{},"body":{"entities/BaseEntity.html":{}}}],["privacy",{"_index":929,"title":{},"body":{"index.html":{}}}],["private",{"_index":225,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["process",{"_index":346,"title":{},"body":{"classes/DataSource.html":{}}}],["process.env.database_host",{"_index":359,"title":{},"body":{"classes/DataSource.html":{}}}],["process.env.database_name",{"_index":365,"title":{},"body":{"classes/DataSource.html":{}}}],["process.env.database_password",{"_index":364,"title":{},"body":{"classes/DataSource.html":{}}}],["process.env.database_port",{"_index":361,"title":{},"body":{"classes/DataSource.html":{}}}],["process.env.database_type",{"_index":357,"title":{},"body":{"classes/DataSource.html":{}}}],["process.env.database_username",{"_index":363,"title":{},"body":{"classes/DataSource.html":{}}}],["processed",{"_index":1047,"title":{},"body":{"index.html":{}}}],["processing",{"_index":1032,"title":{},"body":{"index.html":{}}}],["production",{"_index":650,"title":{},"body":{"modules/QushahConfigModule.html":{},"index.html":{}}}],["profile",{"_index":937,"title":{},"body":{"index.html":{}}}],["profiles",{"_index":941,"title":{},"body":{"index.html":{}}}],["project",{"_index":805,"title":{},"body":{"index.html":{}}}],["promise",{"_index":205,"title":{},"body":{"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"modules/GraphQLGatewayModule.html":{},"classes/SubgraphsBuilder.html":{}}}],["properly",{"_index":965,"title":{},"body":{"index.html":{}}}],["properties",{"_index":81,"title":{"properties.html":{}},"body":{"entities/BaseEntity.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"index.html":{},"properties.html":{}}}],["property",{"_index":632,"title":{},"body":{"injectables/PropertyService.html":{},"index.html":{}}}],["property.controller",{"_index":624,"title":{},"body":{"modules/PropertyModule.html":{}}}],["property.resolver",{"_index":626,"title":{},"body":{"modules/PropertyModule.html":{}}}],["property.service",{"_index":615,"title":{},"body":{"controllers/PropertyController.html":{},"modules/PropertyModule.html":{}}}],["property_client",{"_index":783,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["property_host",{"_index":445,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["property_port",{"_index":1205,"title":{},"body":{"miscellaneous/variables.html":{}}}],["propertycommand",{"_index":616,"title":{},"body":{"controllers/PropertyController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["propertycommand.ping_property",{"_index":617,"title":{},"body":{"controllers/PropertyController.html":{}}}],["propertycontroller",{"_index":611,"title":{"controllers/PropertyController.html":{}},"body":{"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"coverage.html":{}}}],["propertydecorator",{"_index":789,"title":{},"body":{"miscellaneous/functions.html":{}}}],["propertykey",{"_index":791,"title":{},"body":{"miscellaneous/functions.html":{}}}],["propertymodule",{"_index":619,"title":{"modules/PropertyModule.html":{}},"body":{"modules/PropertyModule.html":{},"modules.html":{},"overview.html":{}}}],["propertyresolver",{"_index":625,"title":{"classes/PropertyResolver.html":{}},"body":{"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"coverage.html":{}}}],["propertyservice",{"_index":614,"title":{"injectables/PropertyService.html":{}},"body":{"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"injectables/PropertyService.html":{},"coverage.html":{},"overview.html":{}}}],["protecting",{"_index":904,"title":{},"body":{"index.html":{}}}],["protocols",{"_index":1034,"title":{},"body":{"index.html":{}}}],["prototype",{"_index":133,"title":{},"body":{"entities/BaseEntity.html":{}}}],["providers",{"_index":43,"title":{},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["providing",{"_index":953,"title":{},"body":{"index.html":{}}}],["public",{"_index":287,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["push",{"_index":1066,"title":{},"body":{"index.html":{}}}],["query",{"_index":66,"title":{},"body":{"classes/AuthResolver.html":{},"classes/EscrowResolver.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"classes/UserResolver.html":{}}}],["query(undefined",{"_index":62,"title":{},"body":{"classes/AuthResolver.html":{},"classes/EscrowResolver.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"classes/UserResolver.html":{}}}],["queryrunner",{"_index":292,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["queryrunner.query",{"_index":296,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["queryrunner.query(`drop",{"_index":340,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["qushah",{"_index":795,"title":{},"body":{"index.html":{}}}],["qushah/common",{"_index":56,"title":{},"body":{"modules/AuthModule.html":{},"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{},"modules/DatabaseModule.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/GraphQLGatewayModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/SubgraphsBuilder.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["qushah/common/config",{"_index":222,"title":{},"body":{"modules/CommonModule.html":{}}}],["qushah/common/config/config.helper",{"_index":210,"title":{},"body":{"modules/ClientsModule.html":{}}}],["qushah/common/constants/commands",{"_index":25,"title":{},"body":{"controllers/AuthController.html":{}}}],["qushah/common/constants/commands/organization.command",{"_index":546,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["qushah/common/decorators",{"_index":115,"title":{},"body":{"entities/BaseEntity.html":{}}}],["qushahconfigmodule",{"_index":218,"title":{"modules/QushahConfigModule.html":{}},"body":{"modules/CommonModule.html":{},"modules/QushahConfigModule.html":{},"modules.html":{},"overview.html":{}}}],["qushahconfigservice",{"_index":227,"title":{"injectables/QushahConfigService.html":{}},"body":{"classes/ConfigHelper.html":{},"injectables/QushahConfigService.html":{},"coverage.html":{}}}],["qushahconfigservice(configservice",{"_index":263,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["r",{"_index":1188,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rate",{"_index":902,"title":{},"body":{"index.html":{}}}],["razorpay",{"_index":1031,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":29,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DocumentationController.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"injectables/QushahConfigService.html":{},"controllers/UserController.html":{}}}],["receipts",{"_index":1043,"title":{},"body":{"index.html":{}}}],["recurring",{"_index":1044,"title":{},"body":{"index.html":{}}}],["redis",{"_index":813,"title":{},"body":{"index.html":{}}}],["redis_host",{"_index":637,"title":{},"body":{"modules/QushahConfigModule.html":{},"miscellaneous/variables.html":{}}}],["redis_port",{"_index":639,"title":{},"body":{"modules/QushahConfigModule.html":{},"miscellaneous/variables.html":{}}}],["redisconfig",{"_index":183,"title":{},"body":{"classes/Bootstrapper.html":{},"classes/ConfigHelper.html":{}}}],["redisconfig.host",{"_index":191,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["redisconfig.port",{"_index":193,"title":{},"body":{"classes/Bootstrapper.html":{}}}],["reduced",{"_index":1105,"title":{},"body":{"index.html":{}}}],["references",{"_index":334,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["reflect",{"_index":765,"title":{},"body":{"dependencies.html":{}}}],["reflected",{"_index":997,"title":{},"body":{"index.html":{}}}],["refresh",{"_index":896,"title":{},"body":{"index.html":{}}}],["regarding",{"_index":934,"title":{},"body":{"index.html":{}}}],["register",{"_index":201,"title":{},"body":{"modules/ClientsModule.html":{},"modules/GraphQLGatewayModule.html":{}}}],["register(...names",{"_index":202,"title":{},"body":{"modules/ClientsModule.html":{}}}],["register(...subgraphnames",{"_index":454,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["regulations",{"_index":931,"title":{},"body":{"index.html":{}}}],["regulatory",{"_index":1021,"title":{},"body":{"index.html":{}}}],["rejectunauthorized",{"_index":368,"title":{},"body":{"classes/DataSource.html":{}}}],["rel_efaca847c588a9817470f7c6ca",{"_index":328,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["release",{"_index":1007,"title":{},"body":{"index.html":{}}}],["released",{"_index":1011,"title":{},"body":{"index.html":{}}}],["releases",{"_index":1026,"title":{},"body":{"index.html":{}}}],["reminders",{"_index":1070,"title":{},"body":{"index.html":{}}}],["rent",{"_index":1016,"title":{},"body":{"index.html":{}}}],["rent_fee_percentage",{"_index":319,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{},"entities/OrganizationMetadata.html":{}}}],["rented",{"_index":983,"title":{},"body":{"index.html":{}}}],["rentfeepercentage",{"_index":554,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["reorder",{"_index":149,"title":{},"body":{"entities/BaseEntity.html":{}}}],["repo",{"_index":861,"title":{},"body":{"index.html":{}}}],["request",{"_index":1114,"title":{},"body":{"index.html":{}}}],["requests",{"_index":1116,"title":{},"body":{"index.html":{}}}],["required",{"_index":894,"title":{},"body":{"index.html":{}}}],["reset",{"_index":51,"title":{},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resolutions",{"_index":845,"title":{},"body":{"index.html":{}}}],["resolver",{"_index":67,"title":{},"body":{"classes/AuthResolver.html":{},"classes/EscrowResolver.html":{},"classes/MediaResolver.html":{},"classes/NotificationResolver.html":{},"classes/OrganizationResolver.html":{},"classes/PaymentResolver.html":{},"classes/PropertyResolver.html":{},"classes/UserResolver.html":{}}}],["resolvers",{"_index":871,"title":{},"body":{"index.html":{}}}],["results",{"_index":34,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"modules/QushahConfigModule.html":{},"injectables/QushahConfigService.html":{},"classes/SubgraphsBuilder.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retries",{"_index":1036,"title":{},"body":{"index.html":{}}}],["retrieve",{"_index":136,"title":{},"body":{"entities/BaseEntity.html":{}}}],["return",{"_index":32,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"controllers/DocumentationController.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"controllers/MediaController.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"injectables/QushahConfigService.html":{},"classes/SubgraphsBuilder.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":16,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"controllers/DocumentationController.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"controllers/MediaController.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"controllers/OrganizationController.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"injectables/QushahConfigService.html":{},"classes/SubgraphsBuilder.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["revert",{"_index":1174,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roles",{"_index":916,"title":{},"body":{"index.html":{}}}],["routing",{"_index":1115,"title":{},"body":{"index.html":{}}}],["rules",{"_index":1010,"title":{},"body":{"index.html":{}}}],["run",{"_index":804,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["running",{"_index":1181,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rxjs",{"_index":767,"title":{},"body":{"dependencies.html":{}}}],["scalability",{"_index":956,"title":{},"body":{"index.html":{}}}],["scale",{"_index":557,"title":{},"body":{"entities/OrganizationMetadata.html":{},"index.html":{}}}],["scans",{"_index":989,"title":{},"body":{"index.html":{}}}],["schema",{"_index":345,"title":{},"body":{"classes/DataSource.html":{},"modules/DatabaseModule.html":{}}}],["schemas",{"_index":870,"title":{},"body":{"index.html":{}}}],["search",{"_index":969,"title":{},"body":{"index.html":{}}}],["secure",{"_index":884,"title":{},"body":{"index.html":{}}}],["securely",{"_index":990,"title":{},"body":{"index.html":{}}}],["security",{"_index":882,"title":{},"body":{"index.html":{}}}],["sending",{"_index":1040,"title":{},"body":{"index.html":{}}}],["sensitive",{"_index":924,"title":{},"body":{"index.html":{}}}],["separate",{"_index":859,"title":{},"body":{"index.html":{}}}],["serial",{"_index":300,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["service",{"_index":76,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"injectables/MediaService.html":{},"injectables/NotificationService.html":{},"injectables/OrganizationService.html":{},"injectables/PaymentService.html":{},"injectables/PropertyService.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["serviceendpointdefinition",{"_index":664,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["services",{"_index":998,"title":{},"body":{"index.html":{}}}],["set",{"_index":386,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["setup",{"_index":814,"title":{},"body":{"index.html":{}}}],["shared",{"_index":862,"title":{},"body":{"index.html":{}}}],["significant",{"_index":1095,"title":{},"body":{"index.html":{}}}],["slug",{"_index":303,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{},"entities/Organization.html":{}}}],["sms",{"_index":1065,"title":{},"body":{"index.html":{}}}],["sort",{"_index":164,"title":{},"body":{"entities/BaseEntity.html":{}}}],["sortschema",{"_index":476,"title":{},"body":{"modules/GraphQLMicroserviceModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"controllers/DocumentationController.html":{},"modules/DocumentationModule.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"modules/EscrowModule.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"modules/GatewayModule.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"modules/NotificationModule.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"modules/OrganizationModule.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"modules/PropertyModule.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"modules/QushahConfigModule.html":{},"injectables/QushahConfigService.html":{},"classes/SubgraphsBuilder.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["source.ts",{"_index":706,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["source.util.ts",{"_index":342,"title":{},"body":{"classes/DataSource.html":{},"coverage.html":{}}}],["source.util.ts:9",{"_index":344,"title":{},"body":{"classes/DataSource.html":{}}}],["space",{"_index":1096,"title":{},"body":{"index.html":{}}}],["specific",{"_index":1085,"title":{},"body":{"index.html":{}}}],["src/migrations",{"_index":1193,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ssl",{"_index":367,"title":{},"body":{"classes/DataSource.html":{}}}],["standards",{"_index":1022,"title":{},"body":{"index.html":{}}}],["start",{"_index":826,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":829,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":830,"title":{},"body":{"index.html":{}}}],["started",{"_index":794,"title":{"index.html":{}},"body":{}}],["statements",{"_index":698,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":122,"title":{},"body":{"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"modules/GraphQLGatewayModule.html":{},"classes/SubgraphsBuilder.html":{}}}],["status",{"_index":994,"title":{},"body":{"index.html":{}}}],["storage",{"_index":936,"title":{},"body":{"index.html":{}}}],["storing",{"_index":985,"title":{},"body":{"index.html":{}}}],["string",{"_index":17,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"controllers/DocumentationController.html":{},"injectables/DocumentationService.html":{},"controllers/EscrowController.html":{},"classes/EscrowResolver.html":{},"injectables/EscrowService.html":{},"injectables/GatewayService.html":{},"modules/GraphQLGatewayModule.html":{},"controllers/MediaController.html":{},"classes/MediaResolver.html":{},"injectables/MediaService.html":{},"controllers/NotificationController.html":{},"classes/NotificationResolver.html":{},"injectables/NotificationService.html":{},"entities/Organization.html":{},"controllers/OrganizationController.html":{},"entities/OrganizationMetadata.html":{},"classes/OrganizationResolver.html":{},"injectables/OrganizationService.html":{},"controllers/PaymentController.html":{},"classes/PaymentResolver.html":{},"injectables/PaymentService.html":{},"controllers/PropertyController.html":{},"classes/PropertyResolver.html":{},"injectables/PropertyService.html":{},"injectables/QushahConfigService.html":{},"classes/SubgraphsBuilder.html":{},"controllers/UserController.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["strong",{"_index":888,"title":{},"body":{"index.html":{}}}],["structure",{"_index":849,"title":{},"body":{"index.html":{}}}],["subgraphnames",{"_index":456,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["subgraphs",{"_index":467,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["subgraphsbuilder",{"_index":463,"title":{"classes/SubgraphsBuilder.html":{}},"body":{"modules/GraphQLGatewayModule.html":{},"classes/SubgraphsBuilder.html":{},"coverage.html":{}}}],["subgraphsbuilder.build(...subgraphnames",{"_index":468,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["subscribers",{"_index":372,"title":{},"body":{"classes/DataSource.html":{}}}],["successful",{"_index":1041,"title":{},"body":{"index.html":{}}}],["such",{"_index":951,"title":{},"body":{"index.html":{}}}],["supergraphsdl",{"_index":466,"title":{},"body":{"modules/GraphQLGatewayModule.html":{}}}],["support",{"_index":1051,"title":{},"body":{"index.html":{},"modules.html":{}}}],["supporting",{"_index":1045,"title":{},"body":{"index.html":{}}}],["sure",{"_index":816,"title":{},"body":{"index.html":{}}}],["svg",{"_index":1140,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1131,"title":{},"body":{"index.html":{}}}],["symbol.for('order_key",{"_index":1211,"title":{},"body":{"miscellaneous/variables.html":{}}}],["synchronize",{"_index":389,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["system",{"_index":798,"title":{},"body":{"index.html":{}}}],["t",{"_index":239,"title":{},"body":{"classes/ConfigHelper.html":{},"injectables/QushahConfigService.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":298,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":742,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":130,"title":{},"body":{"entities/BaseEntity.html":{},"miscellaneous/functions.html":{}}}],["target.prototype",{"_index":135,"title":{},"body":{"entities/BaseEntity.html":{}}}],["templates",{"_index":1068,"title":{},"body":{"index.html":{}}}],["tenant",{"_index":918,"title":{},"body":{"index.html":{}}}],["tenants",{"_index":959,"title":{},"body":{"index.html":{}}}],["test",{"_index":651,"title":{},"body":{"modules/QushahConfigModule.html":{},"index.html":{}}}],["test:covtypeorm",{"_index":835,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":834,"title":{},"body":{"index.html":{}}}],["tests",{"_index":831,"title":{},"body":{"index.html":{}}}],["third",{"_index":1133,"title":{},"body":{"index.html":{}}}],["this.authservice.gethello",{"_index":33,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.configservice.get(key",{"_index":657,"title":{},"body":{"injectables/QushahConfigService.html":{}}}],["this.documentationservice.gethello",{"_index":400,"title":{},"body":{"controllers/DocumentationController.html":{}}}],["this.escrowservice.gethello",{"_index":416,"title":{},"body":{"controllers/EscrowController.html":{}}}],["this.getconfig",{"_index":271,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environmentconstant.database_host",{"_index":268,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environmentconstant.database_name",{"_index":276,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environmentconstant.database_port",{"_index":269,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environmentconstant.database_type",{"_index":267,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environmentconstant.redis_host",{"_index":265,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environmentconstant.redis_port",{"_index":266,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.getconfig(environmentconstant[`${key}_port",{"_index":278,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.mediaservice.gethello",{"_index":484,"title":{},"body":{"controllers/MediaController.html":{}}}],["this.notificationservice.gethello",{"_index":506,"title":{},"body":{"controllers/NotificationController.html":{}}}],["this.organizationservice.gethello",{"_index":548,"title":{},"body":{"controllers/OrganizationController.html":{}}}],["this.paymentservice.gethello",{"_index":596,"title":{},"body":{"controllers/PaymentController.html":{}}}],["this.propertyservice.gethello",{"_index":618,"title":{},"body":{"controllers/PropertyController.html":{}}}],["this.qushahconfigservice.getconfig(key",{"_index":281,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["this.userservice.gethello",{"_index":680,"title":{},"body":{"controllers/UserController.html":{}}}],["through",{"_index":1120,"title":{},"body":{"index.html":{}}}],["time",{"_index":1048,"title":{},"body":{"index.html":{}}}],["timely",{"_index":1064,"title":{},"body":{"index.html":{}}}],["times",{"_index":1104,"title":{},"body":{"index.html":{}}}],["timestamp",{"_index":307,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["title",{"_index":1179,"title":{},"body":{"miscellaneous/variables.html":{}}}],["token",{"_index":890,"title":{},"body":{"index.html":{}}}],["tool",{"_index":838,"title":{},"body":{"index.html":{}}}],["traffic",{"_index":1137,"title":{},"body":{"index.html":{}}}],["trail",{"_index":1006,"title":{},"body":{"index.html":{}}}],["transaction",{"_index":1003,"title":{},"body":{"index.html":{}}}],["transactions",{"_index":855,"title":{},"body":{"index.html":{}}}],["transparency",{"_index":1008,"title":{},"body":{"index.html":{}}}],["transport",{"_index":178,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{}}}],["transport.redis",{"_index":188,"title":{},"body":{"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{}}}],["true",{"_index":96,"title":{},"body":{"entities/BaseEntity.html":{},"classes/ConfigHelper.html":{},"modules/DatabaseModule.html":{},"modules/GraphQLMicroserviceModule.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"modules/QushahConfigModule.html":{},"miscellaneous/variables.html":{}}}],["true})@column({name",{"_index":569,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["true})@column({nullable",{"_index":560,"title":{},"body":{"entities/OrganizationMetadata.html":{}}}],["true})@deletedatecolumn({name",{"_index":94,"title":{},"body":{"entities/BaseEntity.html":{}}}],["true})@onetoone(undefined",{"_index":529,"title":{},"body":{"entities/Organization.html":{}}}],["true})@updatedatecolumn({name",{"_index":101,"title":{},"body":{"entities/BaseEntity.html":{}}}],["ts",{"_index":1186,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tsconfig",{"_index":1189,"title":{},"body":{"miscellaneous/variables.html":{}}}],["type",{"_index":87,"title":{},"body":{"entities/BaseEntity.html":{},"classes/Bootstrapper.html":{},"modules/ClientsModule.html":{},"classes/ConfigHelper.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{},"modules/GraphQLGatewayModule.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"injectables/QushahConfigService.html":{},"classes/SubgraphsBuilder.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":110,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganization1740356244243.html":{},"classes/DataSource.html":{},"entities/Organization.html":{},"entities/OrganizationMetadata.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["typeorm/metadata/columnmetadata",{"_index":117,"title":{},"body":{"entities/BaseEntity.html":{}}}],["typeorm_migrations",{"_index":356,"title":{},"body":{"classes/DataSource.html":{}}}],["typeormcommand",{"_index":741,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeormdatasource",{"_index":349,"title":{},"body":{"classes/DataSource.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeormmodule",{"_index":380,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["typeormmodule.forfeature",{"_index":392,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["typeormmodule.forrootasync",{"_index":383,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["typeormmoduleoptions",{"_index":381,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["types",{"_index":1086,"title":{},"body":{"index.html":{}}}],["types/yargs",{"_index":755,"title":{},"body":{"dependencies.html":{}}}],["unauthorized",{"_index":885,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":13,"title":{},"body":{"controllers/AuthController.html":{},"entities/BaseEntity.html":{},"controllers/EscrowController.html":{},"controllers/MediaController.html":{},"controllers/NotificationController.html":{},"controllers/OrganizationController.html":{},"controllers/PaymentController.html":{},"controllers/PropertyController.html":{},"controllers/UserController.html":{}}}],["unique",{"_index":311,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{},"entities/Organization.html":{}}}],["unit",{"_index":832,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":1151,"title":{},"body":{"properties.html":{}}}],["unsubscribing",{"_index":1084,"title":{},"body":{"index.html":{}}}],["up",{"_index":289,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["up(queryrunner",{"_index":294,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["update",{"_index":338,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{},"index.html":{}}}],["updated_at",{"_index":102,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganization1740356244243.html":{}}}],["updatedat",{"_index":86,"title":{},"body":{"entities/BaseEntity.html":{}}}],["updatedatecolumn",{"_index":109,"title":{},"body":{"entities/BaseEntity.html":{}}}],["updates",{"_index":938,"title":{},"body":{"index.html":{}}}],["upi",{"_index":1029,"title":{},"body":{"index.html":{}}}],["uploaded",{"_index":1107,"title":{},"body":{"index.html":{}}}],["uploading",{"_index":1111,"title":{},"body":{"index.html":{}}}],["uploads",{"_index":1092,"title":{},"body":{"index.html":{}}}],["uq_a08804baa7c5d5427067c49a31f",{"_index":312,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["uq_c21e615583a3ebbb0977452afb0",{"_index":310,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["url",{"_index":671,"title":{},"body":{"classes/SubgraphsBuilder.html":{}}}],["usage",{"_index":1106,"title":{},"body":{"index.html":{}}}],["use",{"_index":847,"title":{},"body":{"index.html":{}}}],["usedatasource(datasource",{"_index":123,"title":{},"body":{"entities/BaseEntity.html":{}}}],["usefactory",{"_index":384,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/GraphQLGatewayModule.html":{}}}],["user",{"_index":694,"title":{},"body":{"injectables/UserService.html":{},"index.html":{}}}],["user.controller",{"_index":686,"title":{},"body":{"modules/UserModule.html":{}}}],["user.resolver",{"_index":688,"title":{},"body":{"modules/UserModule.html":{}}}],["user.service",{"_index":677,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user_client",{"_index":784,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["user_host",{"_index":446,"title":{},"body":{"modules/GatewayModule.html":{},"miscellaneous/variables.html":{}}}],["user_port",{"_index":1206,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usercommand",{"_index":678,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usercommand.ping_user",{"_index":679,"title":{},"body":{"controllers/UserController.html":{}}}],["usercontroller",{"_index":673,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["usermodule",{"_index":681,"title":{"modules/UserModule.html":{}},"body":{"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":270,"title":{},"body":{"classes/ConfigHelper.html":{},"classes/DataSource.html":{},"modules/DatabaseModule.html":{}}}],["userresolver",{"_index":687,"title":{"classes/UserResolver.html":{}},"body":{"modules/UserModule.html":{},"classes/UserResolver.html":{},"coverage.html":{}}}],["users",{"_index":940,"title":{},"body":{"index.html":{}}}],["userservice",{"_index":676,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":138,"title":{},"body":{"entities/BaseEntity.html":{},"index.html":{}}}],["utilities",{"_index":867,"title":{},"body":{"index.html":{}}}],["valid('development",{"_index":649,"title":{},"body":{"modules/QushahConfigModule.html":{}}}],["validated",{"_index":966,"title":{},"body":{"index.html":{}}}],["validation",{"_index":962,"title":{},"body":{"index.html":{}}}],["validationschema",{"_index":635,"title":{},"body":{"modules/QushahConfigModule.html":{}}}],["value",{"_index":146,"title":{},"body":{"entities/BaseEntity.html":{},"classes/CreateOrganization1740356244243.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":156,"title":{},"body":{"entities/BaseEntity.html":{}}}],["variable",{"_index":707,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":352,"title":{"miscellaneous/variables.html":{}},"body":{"classes/DataSource.html":{},"miscellaneous/variables.html":{}}}],["varying",{"_index":302,"title":{},"body":{"classes/CreateOrganization1740356244243.html":{}}}],["version",{"_index":1148,"title":{},"body":{"properties.html":{}}}],["videos",{"_index":987,"title":{},"body":{"index.html":{}}}],["virus",{"_index":1108,"title":{},"body":{"index.html":{}}}],["volumes",{"_index":1059,"title":{},"body":{"index.html":{}}}],["watch",{"_index":827,"title":{},"body":{"index.html":{}}}],["way",{"_index":973,"title":{},"body":{"index.html":{}}}],["within",{"_index":860,"title":{},"body":{"index.html":{}}}],["without",{"_index":841,"title":{},"body":{"index.html":{}}}],["world",{"_index":408,"title":{},"body":{"injectables/DocumentationService.html":{}}}],["worrying",{"_index":842,"title":{},"body":{"index.html":{}}}],["yargs",{"_index":770,"title":{},"body":{"dependencies.html":{}}}],["yargs(process.argv.slice(2",{"_index":1164,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ycolumn",{"_index":155,"title":{},"body":{"entities/BaseEntity.html":{}}}],["zoom",{"_index":50,"title":{},"body":{"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/DocumentationModule.html":{},"modules/EscrowModule.html":{},"modules/GatewayModule.html":{},"modules/MediaModule.html":{},"modules/NotificationModule.html":{},"modules/OrganizationModule.html":{},"modules/PaymentModule.html":{},"modules/PropertyModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/auth.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/auth/src/auth.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { AuthCommand } from '@qushah/common/constants/commands';\n\n@Controller()\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @MessagePattern({ cmd: AuthCommand.PING_AUTH })\n  getHello(): string {\n    return this.authService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nCommonModule->AuthModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nAuthModule -->\n\nGraphQLMicroserviceModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/auth/src/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { CommonModule, GraphQLMicroserviceModule } from '@qushah/common';\nimport { AuthResolver } from './auth.resolver';\n\n@Module({\n  imports: [CommonModule, GraphQLMicroserviceModule],\n  controllers: [AuthController],\n  providers: [AuthService, AuthResolver],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthResolver.html":{"url":"classes/AuthResolver.html","title":"class - AuthResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/auth.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingAuth'})\n                \n            \n\n                    \n                        \n                            Defined in apps/auth/src/auth.resolver.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\n\n@Resolver()\nexport class AuthResolver {\n  @Query(() => String, { name: 'pingAuth' })\n  ping(): string {\n    return 'pong';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/auth/src/auth.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AuthService {\n  getHello(): string {\n    return 'Hello from Auth Service!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/BaseEntity.html":{"url":"entities/BaseEntity.html","title":"entity - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/database/entities/base.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ColumnOrder(9999)@Field(undefined)@CreateDateColumn({name: 'created_at'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/common/src/database/entities/base.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ColumnOrder(9999)@Field(undefined, {nullable: true})@DeleteDateColumn({name: 'deleted_at', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/common/src/database/entities/base.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ColumnOrder(undefined)@Field(undefined)@PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/common/src/database/entities/base.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ColumnOrder(9999)@Field(undefined, {nullable: true})@UpdateDateColumn({name: 'updated_at', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/common/src/database/entities/base.entity.ts:30\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  BaseEntity as BaseEntityTypeOrm,\n  CreateDateColumn,\n  DataSource,\n  DeleteDateColumn,\n  Entity,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { Field, ID, ObjectType } from '@nestjs/graphql';\nimport { ColumnOrder, getColumnOrder } from '@qushah/common/decorators';\nimport { ColumnMetadata } from 'typeorm/metadata/ColumnMetadata';\n\n@ObjectType()\n@Entity()\nexport abstract class BaseEntity extends BaseEntityTypeOrm {\n  @ColumnOrder(-1)\n  @Field(() => ID)\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @ColumnOrder(9999)\n  @Field(() => Date)\n  @CreateDateColumn({ name: 'created_at' })\n  createdAt: Date;\n\n  @ColumnOrder(9999)\n  @Field(() => Date, { nullable: true })\n  @UpdateDateColumn({ name: 'updated_at', nullable: true })\n  updatedAt?: Date;\n\n  @ColumnOrder(9999)\n  @Field(() => Date, { nullable: true })\n  @DeleteDateColumn({ name: 'deleted_at', nullable: true })\n  deletedAt?: Date;\n\n  static useDataSource(dataSource: DataSource) {\n    BaseEntityTypeOrm.useDataSource.call(this, dataSource);\n    const meta = dataSource.entityMetadatasMap.get(this);\n\n    const getOrderSafely = (column: ColumnMetadata) => {\n      const target = column.target as any;\n\n      // Check if the target and its prototype exist\n      if (target && target.prototype) {\n        // Retrieve the column order using the custom getColumnOrder function\n        return getColumnOrder(target.prototype, column.propertyName);\n      }\n\n      // Fallback to a default high order value if target is undefined\n      return 9996;\n    };\n\n    if (meta != null) {\n      // Reorder columns based on custom `@ColumnOrder` decorator\n      meta.columns = [...meta.columns].sort((xColumn, yColumn) => {\n        // Get the order values for both columns being compared\n        const orderXColumn = getOrderSafely(xColumn);\n        const orderYColumn = getOrderSafely(yColumn);\n\n        // Sort in ascending order\n        return orderXColumn - orderYColumn;\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Bootstrapper.html":{"url":"classes/Bootstrapper.html","title":"class - Bootstrapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Bootstrapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/utils/bootstrapper.util.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Async\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init(module: any)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/utils/bootstrapper.util.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                module\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Logger } from '@nestjs/common';\nimport { ConfigHelper } from '@qushah/common';\nimport { NestFactory } from '@nestjs/core';\nimport { MicroserviceOptions, Transport } from '@nestjs/microservices';\n\nexport class Bootstrapper {\n  static async init(module: any) {\n    const logger = new Logger(`${module.name}Bootstrap`);\n    const configHelper = await ConfigHelper.getInstance();\n    const redisConfig = configHelper.redisConfig;\n    const app = await NestFactory.create(module);\n    app.connectMicroservice({\n      transport: Transport.REDIS,\n      options: {\n        host: redisConfig.host,\n        port: redisConfig.port,\n      },\n    });\n    await app.startAllMicroservices();\n    const port: number = configHelper.getModulePort(module.name);\n    await app.listen(port);\n    logger.log(`Microservice listening on port ${port}...`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ClientsModule.html":{"url":"modules/ClientsModule.html","title":"module - ClientsModule","body":"\n                   \n\n\n\n\n    Modules\n    ClientsModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/clients/clients.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(...names: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/clients/clients.module.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                names\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, Global, DynamicModule } from '@nestjs/common';\nimport {\n  ClientsModule as NestClientsModule,\n  ClientsModuleOptions,\n  Transport,\n} from '@nestjs/microservices';\nimport { ConfigHelper } from '@qushah/common/config/config.helper';\n\n@Global()\n@Module({})\nexport class ClientsModule {\n  static async register(...names: string[]): Promise {\n    const configHelper = await ConfigHelper.getInstance();\n    const { host, port } = configHelper.redisConfig;\n    const clients: ClientsModuleOptions = names.map((name) => ({\n      name,\n      transport: Transport.REDIS,\n      options: {\n        host,\n        port,\n      },\n    }));\n    return {\n      module: ClientsModule,\n      imports: [NestClientsModule.register(clients)],\n      exports: [NestClientsModule],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CommonModule.html":{"url":"modules/CommonModule.html","title":"module - CommonModule","body":"\n                   \n\n\n\n\n    Modules\n    CommonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_exports\n\n\n\ncluster_CommonModule_imports\n\n\n\ncluster_CommonModule_providers\n\n\n\n\nQushahConfigModule\n\nQushahConfigModule\n\n\n\nCommonModule\n\nCommonModule\n\nCommonModule -->\n\nQushahConfigModule->CommonModule\n\n\n\n\n\nCommonService \n\nCommonService \n\nCommonService  -->\n\nCommonModule->CommonService \n\n\n\n\n\nCommonService\n\nCommonService\n\nCommonModule -->\n\nCommonService->CommonModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/common.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CommonService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            QushahConfigModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CommonService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CommonService } from './common.service';\nimport { QushahConfigModule } from '@qushah/common/config';\n\n@Module({\n  imports: [QushahConfigModule],\n  providers: [CommonService],\n  exports: [CommonService],\n})\nexport class CommonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CommonService.html":{"url":"injectables/CommonService.html","title":"injectable - CommonService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CommonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/common.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class CommonService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigHelper.html":{"url":"classes/ConfigHelper.html","title":"class - ConfigHelper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/config/config.helper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                instance\n                            \n                            \n                                    Private\n                                qushahConfigService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getConfig\n                            \n                            \n                                    Static\n                                    Async\n                                getInstance\n                            \n                            \n                                getMicroServiceHosts\n                            \n                            \n                                getModulePort\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    redisConfig\n                                \n                                \n                                    databaseConfig\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Private\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in libs/common/src/config/config.helper.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        instance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigHelper\n\n                    \n                \n                    \n                        \n                                Defined in libs/common/src/config/config.helper.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        qushahConfigService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QushahConfigService\n\n                    \n                \n                    \n                        \n                                Defined in libs/common/src/config/config.helper.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getConfig\n                        \n                    \n                \n            \n            \n                \ngetConfig(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/config/config.helper.ts:67\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        getInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    getInstance()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/config/config.helper.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMicroServiceHosts\n                        \n                    \n                \n            \n            \n                \ngetMicroServiceHosts(microserviceName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/config/config.helper.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                microserviceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { host: any; port: any; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getModulePort\n                        \n                    \n                \n            \n            \n                \ngetModulePort(moduleName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/config/config.helper.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                moduleName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        redisConfig\n                    \n                \n\n                \n                    \n                        getredisConfig()\n                    \n                \n                            \n                                \n                                    Defined in libs/common/src/config/config.helper.ts:31\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        databaseConfig\n                    \n                \n\n                \n                    \n                        getdatabaseConfig()\n                    \n                \n                            \n                                \n                                    Defined in libs/common/src/config/config.helper.ts:37\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ConfigService } from '@nestjs/config';\nimport { QushahConfigService } from './config.service';\nimport { NestFactory } from '@nestjs/core';\nimport { ConfigModule } from '@nestjs/config';\nimport { EnvironmentConstant } from '@qushah/common';\n\nexport class ConfigHelper {\n  private static instance: ConfigHelper;\n  private qushahConfigService: QushahConfigService;\n\n  private constructor() {}\n\n  static async getInstance(): Promise {\n    if (!ConfigHelper.instance) {\n      const appContext = await NestFactory.createApplicationContext(\n        ConfigModule.forRoot({\n          isGlobal: true,\n        }),\n      );\n\n      const configService = appContext.get(ConfigService);\n      const qushahConfigService = new QushahConfigService(configService);\n\n      ConfigHelper.instance = new ConfigHelper();\n      ConfigHelper.instance.qushahConfigService = qushahConfigService;\n    }\n\n    return ConfigHelper.instance;\n  }\n\n  get redisConfig() {\n    const host = this.getConfig(EnvironmentConstant.REDIS_HOST);\n    const port = this.getConfig(EnvironmentConstant.REDIS_PORT);\n    return { host, port };\n  }\n\n  get databaseConfig() {\n    const type = this.getConfig(EnvironmentConstant.DATABASE_TYPE);\n    const host = this.getConfig(EnvironmentConstant.DATABASE_HOST);\n    const port = this.getConfig(EnvironmentConstant.DATABASE_PORT);\n    const username = this.getConfig(\n      EnvironmentConstant.DATABASE_USERNAME,\n    );\n    const password = this.getConfig(\n      EnvironmentConstant.DATABASE_PASSWORD,\n    );\n    const database = this.getConfig(EnvironmentConstant.DATABASE_NAME);\n    return { type, host, port, username, password, database };\n  }\n\n  getModulePort(moduleName: string) {\n    const key = moduleName?.split('Module')?.[0]?.toUpperCase();\n    if (!key) return;\n    return this.getConfig(EnvironmentConstant[`${key}_PORT`]);\n  }\n\n  getMicroServiceHosts(microserviceName: string) {\n    const host = this.getConfig(\n      `${microserviceName}_HOST`.toUpperCase(),\n    );\n    const port = this.getConfig(\n      `${microserviceName}_PORT`.toUpperCase(),\n    );\n    return { host, port };\n  }\n\n  getConfig(key: string) {\n    return this.qushahConfigService.getConfig(key);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrganization1740356244243.html":{"url":"classes/CreateOrganization1740356244243.html","title":"class - CreateOrganization1740356244243","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrganization1740356244243\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/organization/src/migrations/1740356244243-CreateOrganization.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'CreateOrganization1740356244243'\n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/migrations/1740356244243-CreateOrganization.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/organization/src/migrations/1740356244243-CreateOrganization.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/organization/src/migrations/1740356244243-CreateOrganization.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class CreateOrganization1740356244243 implements MigrationInterface {\n  name = 'CreateOrganization1740356244243';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `CREATE TABLE \"organization\".\"organization\" (\"id\" SERIAL NOT NULL, \"name\" character varying NOT NULL, \"slug\" character varying NOT NULL, \"primary_contact_name\" character varying NOT NULL, \"email\" character varying NOT NULL, \"phone\" character varying NOT NULL, \"created_at\" TIMESTAMP NOT NULL DEFAULT now(), \"updated_at\" TIMESTAMP DEFAULT now(), \"deleted_at\" TIMESTAMP, CONSTRAINT \"UQ_c21e615583a3ebbb0977452afb0\" UNIQUE (\"name\"), CONSTRAINT \"UQ_a08804baa7c5d5427067c49a31f\" UNIQUE (\"slug\"), CONSTRAINT \"PK_472c1f99a32def1b0abb219cd67\" PRIMARY KEY (\"id\"))`,\n    );\n    await queryRunner.query(\n      `CREATE TABLE \"organization\".\"organization_metadata\" (\"id\" SERIAL NOT NULL, \"primary_color\" character varying, \"domain\" character varying, \"logo\" character varying NOT NULL, \"rent_fee_percentage\" numeric(5,2) NOT NULL DEFAULT '5', \"deposit_fee_percentage\" numeric(5,2) NOT NULL DEFAULT '5', \"allow_interest_earning\" boolean NOT NULL DEFAULT false, \"organization_id\" integer, \"created_at\" TIMESTAMP NOT NULL DEFAULT now(), \"updated_at\" TIMESTAMP DEFAULT now(), \"deleted_at\" TIMESTAMP, CONSTRAINT \"REL_efaca847c588a9817470f7c6ca\" UNIQUE (\"organization_id\"), CONSTRAINT \"PK_2fecc2ceb81f30a7f46be802cbd\" PRIMARY KEY (\"id\"))`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"organization\".\"organization_metadata\" ADD CONSTRAINT \"FK_efaca847c588a9817470f7c6ca8\" FOREIGN KEY (\"organization_id\") REFERENCES \"organization\".\"organization\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `ALTER TABLE \"organization\".\"organization_metadata\" DROP CONSTRAINT \"FK_efaca847c588a9817470f7c6ca8\"`,\n    );\n    await queryRunner.query(\n      `DROP TABLE \"organization\".\"organization_metadata\"`,\n    );\n    await queryRunner.query(`DROP TABLE \"organization\".\"organization\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DataSource.html":{"url":"classes/DataSource.html","title":"class - DataSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/utils/data-source.util.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        getInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    getInstance(schema: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/utils/data-source.util.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                schema\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import process from 'node:process';\nimport * as dotenv from 'dotenv';\nimport { DataSource as TypeormDataSource } from 'typeorm';\n\n// Load environment variables from .env file\ndotenv.config();\n\nexport class DataSource {\n  static getInstance(schema: string) {\n    return new TypeormDataSource({\n      migrationsTableName: 'typeorm_migrations',\n      type: (process.env.DATABASE_TYPE as 'postgres') || 'postgres',\n      host: process.env.DATABASE_HOST || 'localhost',\n      port: +process.env.DATABASE_PORT || 5432,\n      username: process.env.DATABASE_USERNAME || 'postgres',\n      password: process.env.DATABASE_PASSWORD || 'postgres',\n      database: process.env.DATABASE_NAME || 'my-db',\n      ssl: { rejectUnauthorized: false },\n      schema,\n      entities: [`apps/${schema}/**/**.entity{.ts,.js}`],\n      migrations: [`apps/${schema}/src/migrations/**/*{.ts,.js}`],\n      subscribers: [`apps/${schema}/src/subscriber/**/*{.ts,.js}`],\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/database/database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(entitiesPath: string[], schema: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/database/database.module.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entitiesPath\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                schema\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, DynamicModule } from '@nestjs/common';\nimport { TypeOrmModule, TypeOrmModuleOptions } from '@nestjs/typeorm';\nimport { ConfigHelper } from '@qushah/common';\n\n@Module({})\nexport class DatabaseModule {\n  static forRoot(entitiesPath: string[], schema: string): DynamicModule {\n    return {\n      module: DatabaseModule,\n      imports: [\n        TypeOrmModule.forRootAsync({\n          useFactory: async () => {\n            const configHelper = await ConfigHelper.getInstance();\n            const { type, host, port, username, password, database } =\n              configHelper.databaseConfig;\n            const options: TypeOrmModuleOptions = {\n              type,\n              host,\n              port,\n              username,\n              password,\n              database,\n              schema: schema, // Set schema dynamically\n              entities: entitiesPath, // Pass entities dynamically\n              // synchronize: true, // Enable only for development\n            };\n\n            return options;\n          },\n        }),\n        TypeOrmModule.forFeature([]), // Can be extended as needed\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DocumentationController.html":{"url":"controllers/DocumentationController.html","title":"controller - DocumentationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DocumentationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/documentation/src/documentation.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in apps/documentation/src/documentation.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { DocumentationService } from './documentation.service';\n\n@Controller()\nexport class DocumentationController {\n  constructor(private readonly documentationService: DocumentationService) {}\n\n  @Get()\n  getHello(): string {\n    return this.documentationService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DocumentationModule.html":{"url":"modules/DocumentationModule.html","title":"module - DocumentationModule","body":"\n                   \n\n\n\n\n    Modules\n    DocumentationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DocumentationModule\n\n\n\ncluster_DocumentationModule_providers\n\n\n\n\nDocumentationService\n\nDocumentationService\n\n\n\nDocumentationModule\n\nDocumentationModule\n\nDocumentationModule -->\n\nDocumentationService->DocumentationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/documentation/src/documentation.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DocumentationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DocumentationController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DocumentationController } from './documentation.controller';\nimport { DocumentationService } from './documentation.service';\n\n@Module({\n  imports: [],\n  controllers: [DocumentationController],\n  providers: [DocumentationService],\n})\nexport class DocumentationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DocumentationService.html":{"url":"injectables/DocumentationService.html","title":"injectable - DocumentationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DocumentationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/documentation/src/documentation.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/documentation/src/documentation.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class DocumentationService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/EscrowController.html":{"url":"controllers/EscrowController.html","title":"controller - EscrowController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  EscrowController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/escrow/src/escrow.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/escrow/src/escrow.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { EscrowService } from './escrow.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { EscrowCommand } from '@qushah/common';\n\n@Controller()\nexport class EscrowController {\n  constructor(private readonly escrowService: EscrowService) {}\n\n  @MessagePattern({ cmd: EscrowCommand.PING_ESCROW })\n  getHello(): string {\n    return this.escrowService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EscrowModule.html":{"url":"modules/EscrowModule.html","title":"module - EscrowModule","body":"\n                   \n\n\n\n\n    Modules\n    EscrowModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EscrowModule\n\n\n\ncluster_EscrowModule_imports\n\n\n\ncluster_EscrowModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nEscrowModule\n\nEscrowModule\n\nEscrowModule -->\n\nCommonModule->EscrowModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nEscrowModule -->\n\nGraphQLMicroserviceModule->EscrowModule\n\n\n\n\n\nEscrowService\n\nEscrowService\n\nEscrowModule -->\n\nEscrowService->EscrowModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/escrow/src/escrow.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            EscrowService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            EscrowController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { EscrowController } from './escrow.controller';\nimport { EscrowService } from './escrow.service';\nimport { CommonModule, GraphQLMicroserviceModule } from '@qushah/common';\nimport { EscrowResolver } from './escrow.resolver';\n\n@Module({\n  imports: [CommonModule, GraphQLMicroserviceModule],\n  controllers: [EscrowController],\n  providers: [EscrowService, EscrowResolver],\n})\nexport class EscrowModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EscrowResolver.html":{"url":"classes/EscrowResolver.html","title":"class - EscrowResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EscrowResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/escrow/src/escrow.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingEscrow'})\n                \n            \n\n                    \n                        \n                            Defined in apps/escrow/src/escrow.resolver.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\n\n@Resolver()\nexport class EscrowResolver {\n  @Query(() => String, { name: 'pingEscrow' })\n  ping(): string {\n    return 'pong';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EscrowService.html":{"url":"injectables/EscrowService.html","title":"injectable - EscrowService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EscrowService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/escrow/src/escrow.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/escrow/src/escrow.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class EscrowService {\n  getHello(): string {\n    return 'Hello from Escrow Service!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GatewayModule.html":{"url":"modules/GatewayModule.html","title":"module - GatewayModule","body":"\n                   \n\n\n\n\n    Modules\n    GatewayModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GatewayModule\n\n\n\ncluster_GatewayModule_imports\n\n\n\ncluster_GatewayModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nGatewayModule\n\nGatewayModule\n\nGatewayModule -->\n\nCommonModule->GatewayModule\n\n\n\n\n\nGraphQLGatewayModule\n\nGraphQLGatewayModule\n\nGatewayModule -->\n\nGraphQLGatewayModule->GatewayModule\n\n\n\n\n\nGatewayService\n\nGatewayService\n\nGatewayModule -->\n\nGatewayService->GatewayModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/gateway/src/gateway.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GatewayService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            GraphQLGatewayModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { GatewayService } from './gateway.service';\nimport {\n  CommonModule,\n  EnvironmentConstant,\n  GraphQLGatewayModule,\n} from '@qushah/common';\n\nconst {\n  AUTH_HOST,\n  ESCROW_HOST,\n  MEDIA_HOST,\n  NOTIFICATION_HOST,\n  ORGANIZATION_HOST,\n  PAYMENT_HOST,\n  PROPERTY_HOST,\n  USER_HOST,\n} = EnvironmentConstant;\n\n@Module({\n  imports: [\n    CommonModule,\n    GraphQLGatewayModule.register(\n      AUTH_HOST,\n      ESCROW_HOST,\n      MEDIA_HOST,\n      NOTIFICATION_HOST,\n      ORGANIZATION_HOST,\n      PAYMENT_HOST,\n      PROPERTY_HOST,\n      USER_HOST,\n    ),\n  ],\n  providers: [GatewayService],\n})\nexport class GatewayModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GatewayService.html":{"url":"injectables/GatewayService.html","title":"injectable - GatewayService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GatewayService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/gateway/src/gateway.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/gateway/src/gateway.service.ts:4\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ping\n                        \n                    \n                \n            \n            \n                \nping()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/gateway/src/gateway.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class GatewayService {\n  constructor() {}\n\n  ping(): string {\n    return 'Hello from Gateway Service!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GraphQLGatewayModule.html":{"url":"modules/GraphQLGatewayModule.html","title":"module - GraphQLGatewayModule","body":"\n                   \n\n\n\n\n    Modules\n    GraphQLGatewayModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/graphql/graphql-gateway.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(...subgraphNames: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/graphql/graphql-gateway.module.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                subgraphNames\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, Global, DynamicModule } from '@nestjs/common';\nimport { GraphQLModule } from '@nestjs/graphql';\nimport { ApolloGatewayDriver, ApolloGatewayDriverConfig } from '@nestjs/apollo';\nimport { IntrospectAndCompose } from '@apollo/gateway';\nimport { SubgraphsBuilder } from '@qushah/common';\n\n@Global()\n@Module({})\nexport class GraphQLGatewayModule {\n  static async register(...subgraphNames: string[]): Promise {\n    return {\n      module: GraphQLGatewayModule,\n      imports: [\n        GraphQLModule.forRootAsync({\n          driver: ApolloGatewayDriver,\n          useFactory: async () => {\n            return {\n              gateway: {\n                supergraphSdl: new IntrospectAndCompose({\n                  subgraphs: await SubgraphsBuilder.build(...subgraphNames),\n                }),\n              },\n            };\n          },\n        }),\n      ],\n      exports: [GraphQLModule],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GraphQLMicroserviceModule.html":{"url":"modules/GraphQLMicroserviceModule.html","title":"module - GraphQLMicroserviceModule","body":"\n                   \n\n\n\n\n    Modules\n    GraphQLMicroserviceModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/graphql/graphql-microservice.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { GraphQLModule } from '@nestjs/graphql';\nimport {\n  ApolloFederationDriver,\n  ApolloFederationDriverConfig,\n} from '@nestjs/apollo';\n\n@Module({\n  imports: [\n    GraphQLModule.forRoot({\n      driver: ApolloFederationDriver,\n      autoSchemaFile: {\n        federation: 2,\n      },\n      sortSchema: true,\n    }),\n  ],\n})\nexport class GraphQLMicroserviceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MediaController.html":{"url":"controllers/MediaController.html","title":"controller - MediaController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MediaController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/media/src/media.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/media/src/media.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { MediaService } from './media.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { MediaCommand } from '@qushah/common';\n\n@Controller()\nexport class MediaController {\n  constructor(private readonly mediaService: MediaService) {}\n\n  @MessagePattern({ cmd: MediaCommand.PING_MEDIA })\n  getHello(): string {\n    return this.mediaService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MediaModule.html":{"url":"modules/MediaModule.html","title":"module - MediaModule","body":"\n                   \n\n\n\n\n    Modules\n    MediaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MediaModule\n\n\n\ncluster_MediaModule_imports\n\n\n\ncluster_MediaModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nMediaModule\n\nMediaModule\n\nMediaModule -->\n\nCommonModule->MediaModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nMediaModule -->\n\nGraphQLMicroserviceModule->MediaModule\n\n\n\n\n\nMediaService\n\nMediaService\n\nMediaModule -->\n\nMediaService->MediaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/media/src/media.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MediaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MediaController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MediaController } from './media.controller';\nimport { MediaService } from './media.service';\nimport { CommonModule, GraphQLMicroserviceModule } from '@qushah/common';\nimport { MediaResolver } from './media.resolver';\n\n@Module({\n  imports: [CommonModule, GraphQLMicroserviceModule],\n  controllers: [MediaController],\n  providers: [MediaService, MediaResolver],\n})\nexport class MediaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MediaResolver.html":{"url":"classes/MediaResolver.html","title":"class - MediaResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MediaResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/media/src/media.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingMedia'})\n                \n            \n\n                    \n                        \n                            Defined in apps/media/src/media.resolver.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\n\n@Resolver()\nexport class MediaResolver {\n  @Query(() => String, { name: 'pingMedia' })\n  ping(): string {\n    return 'pong';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MediaService.html":{"url":"injectables/MediaService.html","title":"injectable - MediaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MediaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/media/src/media.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/media/src/media.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class MediaService {\n  getHello(): string {\n    return 'Hello from Media Service!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/NotificationController.html":{"url":"controllers/NotificationController.html","title":"controller - NotificationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  NotificationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/notification/src/notification.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/notification/src/notification.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { NotificationService } from './notification.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { NotificationCommand } from '@qushah/common';\n\n@Controller()\nexport class NotificationController {\n  constructor(private readonly notificationService: NotificationService) {}\n\n  @MessagePattern({ cmd: NotificationCommand.PING_NOTIFICATION })\n  getHello(): string {\n    return this.notificationService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NotificationModule.html":{"url":"modules/NotificationModule.html","title":"module - NotificationModule","body":"\n                   \n\n\n\n\n    Modules\n    NotificationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NotificationModule\n\n\n\ncluster_NotificationModule_providers\n\n\n\ncluster_NotificationModule_imports\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nNotificationModule\n\nNotificationModule\n\nNotificationModule -->\n\nCommonModule->NotificationModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nNotificationModule -->\n\nGraphQLMicroserviceModule->NotificationModule\n\n\n\n\n\nNotificationService\n\nNotificationService\n\nNotificationModule -->\n\nNotificationService->NotificationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/notification/src/notification.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NotificationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            NotificationController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { NotificationController } from './notification.controller';\nimport { NotificationService } from './notification.service';\nimport { CommonModule, GraphQLMicroserviceModule } from '@qushah/common';\nimport { NotificationResolver } from './notification.resolver';\n\n@Module({\n  imports: [CommonModule, GraphQLMicroserviceModule],\n  controllers: [NotificationController],\n  providers: [NotificationService, NotificationResolver],\n})\nexport class NotificationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotificationResolver.html":{"url":"classes/NotificationResolver.html","title":"class - NotificationResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotificationResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/notification/src/notification.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingNotification'})\n                \n            \n\n                    \n                        \n                            Defined in apps/notification/src/notification.resolver.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\n\n@Resolver()\nexport class NotificationResolver {\n  @Query(() => String, { name: 'pingNotification' })\n  ping(): string {\n    return 'pong';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationService.html":{"url":"injectables/NotificationService.html","title":"injectable - NotificationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NotificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/notification/src/notification.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/notification/src/notification.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class NotificationService {\n  getHello(): string {\n    return 'Hello from Notification Service!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Organization.html":{"url":"entities/Organization.html","title":"entity - Organization","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Organization\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/organization/src/entities/organization.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                metadata\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                primaryContactName\n                            \n                            \n                                    \n                                    \n                                slug\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrganizationMetadata\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@OneToOne(undefined, metadata => metadata.organization)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        primaryContactName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column({name: 'primary_contact_name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization.entity.ts:15\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql';\nimport { Column, Entity, OneToOne } from 'typeorm';\nimport { BaseEntity } from '@qushah/common';\nimport { OrganizationMetadata } from './organization-metadata.entity';\n\n@ObjectType()\n@Entity()\nexport class Organization extends BaseEntity {\n  @Field(() => String)\n  @Column({ unique: true })\n  name: string;\n\n  @Field(() => String)\n  @Column({ unique: true })\n  slug: string;\n\n  @Field(() => String)\n  @Column({ name: 'primary_contact_name' })\n  primaryContactName: string;\n\n  @Field(() => String)\n  @Column()\n  email: string;\n\n  @Field(() => String)\n  @Column()\n  phone: string;\n\n  @Field(() => OrganizationMetadata, { nullable: true })\n  @OneToOne(() => OrganizationMetadata, (metadata) => metadata.organization)\n  metadata?: OrganizationMetadata;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrganizationController.html":{"url":"controllers/OrganizationController.html","title":"controller - OrganizationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrganizationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/organization/src/organization.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/organization/src/organization.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { OrganizationService } from './organization.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { OrganizationCommand } from '@qushah/common/constants/commands/organization.command';\n\n@Controller()\nexport class OrganizationController {\n  constructor(private readonly organizationService: OrganizationService) {}\n\n  @MessagePattern({ cmd: OrganizationCommand.PING_ORGANIZATION })\n  getHello(): string {\n    return this.organizationService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/OrganizationMetadata.html":{"url":"entities/OrganizationMetadata.html","title":"entity - OrganizationMetadata","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  OrganizationMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/organization/src/entities/organization-metadata.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                allowInterestEarning\n                            \n                            \n                                    \n                                    \n                                depositFeePercentage\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                domain\n                            \n                            \n                                    \n                                    \n                                logo\n                            \n                            \n                                    \n                                    \n                                organization\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                primaryColor\n                            \n                            \n                                    \n                                    \n                                rentFeePercentage\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        allowInterestEarning\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column({name: 'allow_interest_earning', type: 'boolean', default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization-metadata.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        depositFeePercentage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column({name: 'deposit_fee_percentage', default: 5, precision: 5, scale: 2, type: 'decimal'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization-metadata.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        domain\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization-metadata.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization-metadata.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        organization\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Organization\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, organization => organization.metadata, {cascade: true, onDelete: 'CASCADE', onUpdate: 'CASCADE'})@JoinColumn({name: 'organization_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization-metadata.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        primaryColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Column({name: 'primary_color', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization-metadata.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        rentFeePercentage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Column({name: 'rent_fee_percentage', default: 5, precision: 5, scale: 2, type: 'decimal'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/organization/src/entities/organization-metadata.entity.ts:38\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, OneToOne } from 'typeorm';\nimport { Field, Float, ObjectType } from '@nestjs/graphql';\nimport { BaseEntity } from '@qushah/common';\nimport { JoinColumn } from 'typeorm';\nimport { Organization } from './organization.entity';\n\n@ObjectType()\n@Entity()\nexport class OrganizationMetadata extends BaseEntity {\n  @OneToOne(() => Organization, (organization) => organization.metadata, {\n    cascade: true,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n  })\n  @JoinColumn({ name: 'organization_id' })\n  organization: Organization;\n\n  @Field(() => String, { nullable: true })\n  @Column({ name: 'primary_color', nullable: true })\n  primaryColor?: string;\n\n  @Field(() => String, { nullable: true })\n  @Column({ nullable: true })\n  domain?: string;\n\n  @Field(() => String)\n  @Column()\n  logo: string;\n\n  @Field(() => Float)\n  @Column({\n    name: 'rent_fee_percentage',\n    default: 5.0,\n    precision: 5,\n    scale: 2,\n    type: 'decimal',\n  })\n  rentFeePercentage: number;\n\n  @Field(() => Float)\n  @Column({\n    name: 'deposit_fee_percentage',\n    default: 5.0,\n    precision: 5,\n    scale: 2,\n    type: 'decimal',\n  })\n  depositFeePercentage: number;\n\n  @Field(() => Boolean)\n  @Column({ name: 'allow_interest_earning', type: 'boolean', default: false })\n  allowInterestEarning: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrganizationModule.html":{"url":"modules/OrganizationModule.html","title":"module - OrganizationModule","body":"\n                   \n\n\n\n\n    Modules\n    OrganizationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OrganizationModule\n\n\n\ncluster_OrganizationModule_imports\n\n\n\ncluster_OrganizationModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nOrganizationModule\n\nOrganizationModule\n\nOrganizationModule -->\n\nCommonModule->OrganizationModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nOrganizationModule -->\n\nGraphQLMicroserviceModule->OrganizationModule\n\n\n\n\n\nOrganizationService\n\nOrganizationService\n\nOrganizationModule -->\n\nOrganizationService->OrganizationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/organization/src/organization.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrganizationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrganizationController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { OrganizationController } from './organization.controller';\nimport { OrganizationService } from './organization.service';\nimport { CommonModule, GraphQLMicroserviceModule } from '@qushah/common';\nimport { OrganizationResolver } from './organization.resolver';\n\n@Module({\n  imports: [CommonModule, GraphQLMicroserviceModule],\n  controllers: [OrganizationController],\n  providers: [OrganizationService, OrganizationResolver],\n})\nexport class OrganizationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrganizationResolver.html":{"url":"classes/OrganizationResolver.html","title":"class - OrganizationResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrganizationResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/organization/src/organization.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingOrganization'})\n                \n            \n\n                    \n                        \n                            Defined in apps/organization/src/organization.resolver.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\n\n@Resolver()\nexport class OrganizationResolver {\n  @Query(() => String, { name: 'pingOrganization' })\n  ping(): string {\n    return 'pong';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrganizationService.html":{"url":"injectables/OrganizationService.html","title":"injectable - OrganizationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrganizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/organization/src/organization.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/organization/src/organization.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class OrganizationService {\n  getHello(): string {\n    return 'Hello from Organization Service!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PaymentController.html":{"url":"controllers/PaymentController.html","title":"controller - PaymentController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PaymentController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/payment/src/payment.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/payment/src/payment.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { PaymentService } from './payment.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { PaymentCommand } from '@qushah/common';\n\n@Controller()\nexport class PaymentController {\n  constructor(private readonly paymentService: PaymentService) {}\n\n  @MessagePattern({ cmd: PaymentCommand.PING_PAYMENT })\n  getHello(): string {\n    return this.paymentService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PaymentModule.html":{"url":"modules/PaymentModule.html","title":"module - PaymentModule","body":"\n                   \n\n\n\n\n    Modules\n    PaymentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PaymentModule\n\n\n\ncluster_PaymentModule_imports\n\n\n\ncluster_PaymentModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nPaymentModule\n\nPaymentModule\n\nPaymentModule -->\n\nCommonModule->PaymentModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nPaymentModule -->\n\nGraphQLMicroserviceModule->PaymentModule\n\n\n\n\n\nPaymentService\n\nPaymentService\n\nPaymentModule -->\n\nPaymentService->PaymentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/payment/src/payment.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PaymentService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PaymentController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PaymentController } from './payment.controller';\nimport { PaymentService } from './payment.service';\nimport { CommonModule, GraphQLMicroserviceModule } from '@qushah/common';\nimport { PaymentResolver } from './payment.resolver';\n\n@Module({\n  imports: [CommonModule, GraphQLMicroserviceModule],\n  controllers: [PaymentController],\n  providers: [PaymentService, PaymentResolver],\n})\nexport class PaymentModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaymentResolver.html":{"url":"classes/PaymentResolver.html","title":"class - PaymentResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaymentResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/payment/src/payment.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingPayment'})\n                \n            \n\n                    \n                        \n                            Defined in apps/payment/src/payment.resolver.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\n\n@Resolver()\nexport class PaymentResolver {\n  @Query(() => String, { name: 'pingPayment' })\n  ping(): string {\n    return 'pong';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PaymentService.html":{"url":"injectables/PaymentService.html","title":"injectable - PaymentService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PaymentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/payment/src/payment.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/payment/src/payment.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class PaymentService {\n  getHello(): string {\n    return 'Hello from Payment Service!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PropertyController.html":{"url":"controllers/PropertyController.html","title":"controller - PropertyController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PropertyController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/property/src/property.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/property/src/property.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { PropertyService } from './property.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { PropertyCommand } from '@qushah/common';\n\n@Controller()\nexport class PropertyController {\n  constructor(private readonly propertyService: PropertyService) {}\n\n  @MessagePattern({ cmd: PropertyCommand.PING_PROPERTY })\n  getHello(): string {\n    return this.propertyService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PropertyModule.html":{"url":"modules/PropertyModule.html","title":"module - PropertyModule","body":"\n                   \n\n\n\n\n    Modules\n    PropertyModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PropertyModule\n\n\n\ncluster_PropertyModule_imports\n\n\n\ncluster_PropertyModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nPropertyModule\n\nPropertyModule\n\nPropertyModule -->\n\nCommonModule->PropertyModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nPropertyModule -->\n\nGraphQLMicroserviceModule->PropertyModule\n\n\n\n\n\nPropertyService\n\nPropertyService\n\nPropertyModule -->\n\nPropertyService->PropertyModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/property/src/property.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PropertyService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PropertyController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PropertyController } from './property.controller';\nimport { PropertyService } from './property.service';\nimport { CommonModule, GraphQLMicroserviceModule } from '@qushah/common';\nimport { PropertyResolver } from './property.resolver';\n\n@Module({\n  imports: [CommonModule, GraphQLMicroserviceModule],\n  controllers: [PropertyController],\n  providers: [PropertyService, PropertyResolver],\n})\nexport class PropertyModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PropertyResolver.html":{"url":"classes/PropertyResolver.html","title":"class - PropertyResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PropertyResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/property/src/property.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingProperty'})\n                \n            \n\n                    \n                        \n                            Defined in apps/property/src/property.resolver.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\n\n@Resolver()\nexport class PropertyResolver {\n  @Query(() => String, { name: 'pingProperty' })\n  ping(): string {\n    return 'pong';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PropertyService.html":{"url":"injectables/PropertyService.html","title":"injectable - PropertyService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PropertyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/property/src/property.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/property/src/property.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class PropertyService {\n  getHello(): string {\n    return 'Hello from Property Service!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/QushahConfigModule.html":{"url":"modules/QushahConfigModule.html","title":"module - QushahConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    QushahConfigModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/config/config.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { ConfigModule } from '@nestjs/config';\nimport { Module } from '@nestjs/common';\nimport Joi from 'joi';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      validationSchema: Joi.object({\n        REDIS_HOST: Joi.string().required(),\n        REDIS_PORT: Joi.number().required(),\n        DATABASE_TYPE: Joi.string().required(),\n        DATABASE_HOST: Joi.string().required(),\n        DATABASE_PORT: Joi.string().required(),\n        DATABASE_USERNAME: Joi.string().required(),\n        DATABASE_PASSWORD: Joi.string().required(),\n        DATABASE_NAME: Joi.string().required(),\n        NODE_ENV: Joi.string()\n          .valid('development', 'production', 'test')\n          .default('development'),\n      }),\n    }),\n  ],\n})\nexport class QushahConfigModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QushahConfigService.html":{"url":"injectables/QushahConfigService.html","title":"injectable - QushahConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QushahConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/config/config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in libs/common/src/config/config.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getConfig\n                        \n                    \n                \n            \n            \n                \ngetConfig(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/config/config.service.ts:8\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class QushahConfigService {\n  constructor(private readonly configService: ConfigService) {}\n\n  getConfig(key: string): T {\n    return this.configService.get(key);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SubgraphsBuilder.html":{"url":"classes/SubgraphsBuilder.html","title":"class - SubgraphsBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SubgraphsBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/utils/subgraphs-builder.util.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Async\n                                build\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        build\n                        \n                    \n                \n            \n            \n                \n                        \n                    build(...graphNames: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/utils/subgraphs-builder.util.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                graphNames\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ServiceEndpointDefinition } from '@apollo/gateway/src/config';\nimport { ConfigHelper } from '@qushah/common';\n\nexport class SubgraphsBuilder {\n  static async build(\n    ...graphNames: string[]\n  ): Promise {\n    const configHelper = await ConfigHelper.getInstance();\n\n    return graphNames.map((graphName) => {\n      const keyPart = graphName?.split('_HOST')?.[0];\n      const key = keyPart || graphName;\n      const { host, port } = configHelper.getMicroServiceHosts(key);\n      return {\n        name: graphName,\n        url: `${host}:${port}/graphql`,\n      };\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user/src/user.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: undefined})\n                \n            \n\n                    \n                        \n                            Defined in apps/user/src/user.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { UserCommand } from '@qushah/common';\n\n@Controller()\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @MessagePattern({ cmd: UserCommand.PING_USER })\n  getHello(): string {\n    return this.userService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nCommonModule->UserModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nUserModule -->\n\nGraphQLMicroserviceModule->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/user/src/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            GraphQLMicroserviceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserController } from './user.controller';\nimport { UserService } from './user.service';\nimport { CommonModule, GraphQLMicroserviceModule } from '@qushah/common';\nimport { UserResolver } from './user.resolver';\n\n@Module({\n  imports: [CommonModule, GraphQLMicroserviceModule],\n  controllers: [UserController],\n  providers: [UserService, UserResolver],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserResolver.html":{"url":"classes/UserResolver.html","title":"class - UserResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user/src/user.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ping\n                        \n                    \n                \n            \n            \n                \n                        \n                    ping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'pingUser'})\n                \n            \n\n                    \n                        \n                            Defined in apps/user/src/user.resolver.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\n\n@Resolver()\nexport class UserResolver {\n  @Query(() => String, { name: 'pingUser' })\n  ping(): string {\n    return 'pong';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/user/src/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/user/src/user.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class UserService {\n  getHello(): string {\n    return 'Hello from User Service!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/auth/src/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/auth/src/auth.resolver.ts\n            \n            class\n            AuthResolver\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/auth/src/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/auth/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/documentation/src/documentation.controller.ts\n            \n            controller\n            DocumentationController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/documentation/src/documentation.service.ts\n            \n            injectable\n            DocumentationService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/documentation/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/escrow/src/escrow.controller.ts\n            \n            controller\n            EscrowController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/escrow/src/escrow.resolver.ts\n            \n            class\n            EscrowResolver\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/escrow/src/escrow.service.ts\n            \n            injectable\n            EscrowService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/escrow/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/escrow/src/typeorm.data-source.ts\n            \n            variable\n            TypeormDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/gateway/src/gateway.module.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/gateway/src/gateway.service.ts\n            \n            injectable\n            GatewayService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        apps/gateway/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/media/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/media/src/media.controller.ts\n            \n            controller\n            MediaController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/media/src/media.resolver.ts\n            \n            class\n            MediaResolver\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/media/src/media.service.ts\n            \n            injectable\n            MediaService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/media/src/typeorm.data-source.ts\n            \n            variable\n            TypeormDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/notification/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/notification/src/notification.controller.ts\n            \n            controller\n            NotificationController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/notification/src/notification.resolver.ts\n            \n            class\n            NotificationResolver\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/notification/src/notification.service.ts\n            \n            injectable\n            NotificationService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/notification/src/typeorm.data-source.ts\n            \n            variable\n            TypeormDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/organization/src/entities/organization-metadata.entity.ts\n            \n            entity\n            OrganizationMetadata\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/organization/src/entities/organization-metadata.entity.ts\n            \n            class\n            OrganizationMetadata\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/organization/src/entities/organization.entity.ts\n            \n            entity\n            Organization\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/organization/src/entities/organization.entity.ts\n            \n            class\n            Organization\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        apps/organization/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/organization/src/migrations/1740356244243-CreateOrganization.ts\n            \n            class\n            CreateOrganization1740356244243\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/organization/src/organization.controller.ts\n            \n            controller\n            OrganizationController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/organization/src/organization.resolver.ts\n            \n            class\n            OrganizationResolver\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/organization/src/organization.service.ts\n            \n            injectable\n            OrganizationService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/organization/src/typeorm.data-source.ts\n            \n            variable\n            TypeormDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/payment/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/payment/src/payment.controller.ts\n            \n            controller\n            PaymentController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/payment/src/payment.resolver.ts\n            \n            class\n            PaymentResolver\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/payment/src/payment.service.ts\n            \n            injectable\n            PaymentService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/payment/src/typeorm.data-source.ts\n            \n            variable\n            TypeormDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/property/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/property/src/property.controller.ts\n            \n            controller\n            PropertyController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/property/src/property.resolver.ts\n            \n            class\n            PropertyResolver\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/property/src/property.service.ts\n            \n            injectable\n            PropertyService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/property/src/typeorm.data-source.ts\n            \n            variable\n            TypeormDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/user/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/user/src/typeorm.data-source.ts\n            \n            variable\n            TypeormDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/user/src/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/user/src/user.resolver.ts\n            \n            class\n            UserResolver\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/user/src/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/common/src/common.service.ts\n            \n            injectable\n            CommonService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/config/config.helper.ts\n            \n            class\n            ConfigHelper\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                libs/common/src/config/config.service.ts\n            \n            injectable\n            QushahConfigService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/auth.command.ts\n            \n            variable\n            AuthCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/escrow.command.ts\n            \n            variable\n            EscrowCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/media.command.ts\n            \n            variable\n            MediaCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/notification.command.ts\n            \n            variable\n            NotificationCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/organization.command.ts\n            \n            variable\n            OrganizationCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/payment.command.ts\n            \n            variable\n            PaymentCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/property.command.ts\n            \n            variable\n            PropertyCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/commands/user.command.ts\n            \n            variable\n            UserCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/constants/environment.constant.ts\n            \n            variable\n            EnvironmentConstant\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/database/entities/base.entity.ts\n            \n            entity\n            BaseEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/database/entities/base.entity.ts\n            \n            class\n            BaseEntity\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        libs/common/src/decorators/column-order.decorator.ts\n            \n            function\n            ColumnOrder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/decorators/column-order.decorator.ts\n            \n            function\n            getColumnOrder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/decorators/column-order.decorator.ts\n            \n            variable\n            ORDER_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/utils/bootstrapper.util.ts\n            \n            class\n            Bootstrapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/common/src/utils/data-source.util.ts\n            \n            class\n            DataSource\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/common/src/utils/subgraphs-builder.util.ts\n            \n            class\n            SubgraphsBuilder\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        typeorm-cli.ts\n            \n            variable\n            argv\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        typeorm-cli.ts\n            \n            variable\n            dataSourcePath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        typeorm-cli.ts\n            \n            variable\n            typeormCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        typeorm-cli.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @apollo/gateway : ^2.9.3\n        \n            @apollo/server : ^4.11.3\n        \n            @apollo/subgraph : ^2.9.3\n        \n            @nestjs/apollo : ^12.2.2\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.3.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/graphql : ^12.2.2\n        \n            @nestjs/microservices : ^10.4.15\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/typeorm : ^11.0.0\n        \n            @types/yargs : ^17.0.33\n        \n            dotenv : ^16.4.7\n        \n            graphql : ^16.10.0\n        \n            ioredis : ^5.4.2\n        \n            joi : ^17.13.3\n        \n            pg : ^8.13.1\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.20\n        \n            yargs : ^17.7.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            MicroServiceClient   (libs/.../micro-service-client.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/common/src/enums/micro-service-client.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        MicroServiceClient\n                    \n                \n                        \n                            \n                                 AUTH_CLIENT\n                            \n                        \n                        \n                            \n                                Value : AUTH_CLIENT\n                            \n                        \n                        \n                            \n                                 ESCROW_CLIENT\n                            \n                        \n                        \n                            \n                                Value : ESCROW_CLIENT\n                            \n                        \n                        \n                            \n                                 MEDIA_CLIENT\n                            \n                        \n                        \n                            \n                                Value : MEDIA_CLIENT\n                            \n                        \n                        \n                            \n                                 NOTIFICATION_CLIENT\n                            \n                        \n                        \n                            \n                                Value : NOTIFICATION_CLIENT\n                            \n                        \n                        \n                            \n                                 PAYMENT_CLIENT\n                            \n                        \n                        \n                            \n                                Value : PAYMENT_CLIENT\n                            \n                        \n                        \n                            \n                                 PROPERTY_CLIENT\n                            \n                        \n                        \n                            \n                                Value : PROPERTY_CLIENT\n                            \n                        \n                        \n                            \n                                 USER_CLIENT\n                            \n                        \n                        \n                            \n                                Value : USER_CLIENT\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            ColumnOrder   (libs/.../column-order.decorator.ts)\n                        \n                        \n                            getColumnOrder   (libs/.../column-order.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/auth/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/documentation/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/escrow/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/gateway/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/media/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/notification/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/organization/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/payment/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/property/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/user/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    libs/common/src/decorators/column-order.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ColumnOrder\n                        \n                    \n                \n            \n            \n                \nColumnOrder(value: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     PropertyDecorator\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getColumnOrder\n                        \n                    \n                \n            \n            \n                \ngetColumnOrder(target, propertyKey, defaultVal: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                propertyKey\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                defaultVal\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nQushah Backend\nDescription\nQushah Escrow System backend containing microservices, gateway, libs, etc.\nPrerequisites\nTo be able to run this project on machine, the following must be installed:\n\nNodeJS 22 LTS\npnpm\nRedis\n\nProject setup\nMake sure pnpm is installed\nExample :$ npm install --global pnpmInstall dependencies\nExample :$ pnpm installInstall Redis\nFollow the official docs to install Redis on your machine.\nCompile and run the project\nExample :# development\n$ pnpm run start\n\n# watch mode\n$ pnpm run start:dev\n\n# production mode\n$ pnpm run start:prodRun tests\nExample :# unit tests\n$ pnpm run test\n\n# e2e tests\n$ pnpm run test:e2e\n\n# test coverage\n$ pnpm run test:covTypeorm CLI Helper Tool\nThe Typeorm CLI Helper tool lets you run typeorm CLI commands without worrying\nabout DataSources and path resolutions.\nLearn how to use the tool here.\nStructure\nExample :qushah-backend/\n│\n├── apps/\n│   ├── qushah-auth/        # Authentication Service\n│   ├── qushah-user/       # User Management Service\n│   ├── qushah-escrow/      # Escrow and Deposits Service\n│   ├── qushah-payment/    # Payments and Transactions Service\n│   ├── qushah-property/  # Property Listings Service\n│   ├── qushah-notification/      # Notifications Service\n│   └── qushah-gateway/     # API Gateway (separate app within the repo)\n│\n└── libs/                   # Shared Libraries (for DTOs, Interfaces, etc.)\n    ├── common/             # Common utilities, interceptors, and guards\n    ├── graphql/            # Shared GraphQL schemas and resolvers\n    └── db/                 # Database connection and models\nArchitecture\nExample :            [Frontend (Angular)]\n                     │\n              [GraphQL Gateway]\n                     │\n     ┌──────────┬────────────┬──────────────┬───────────┐\n     │          │            │              │           │\n [Auth]     [User]     [Property]     [Escrow]    [Payment]\n     │                                      │\n [Notification]                                [Disputes]\nConcerns\nHere are the key concerns for each microservice in this architecture:\n1. qushah-auth (Authentication and Authorization)\n\nSecurity: Ensuring the system is secure from unauthorized access. This includes strong password policies, token-based authentication (e.g., JWT), and OAuth if required.\nToken Expiry and Refresh: Managing token expiration and refresh mechanisms. Implement token blacklisting for security.\nRate Limiting: Protecting against brute-force attacks by implementing rate limiting or CAPTCHA.\nSecure API Communication: Ensuring all communication (especially authentication data) is encrypted with HTTPS.\nUser Roles and Permissions: Managing user roles and ensuring each user (tenant, landlord, admin) has the correct permissions for their actions.\n\n2. qushah-user (User Management)\n\nUser Data Management: Ensuring that personal data is secure, especially sensitive information like emails, addresses, and phone numbers.\nData Privacy: Complying with regulations like GDPR or CCPA, especially regarding the collection and storage of user data.\nUser Profile Updates: Allowing users to update their profiles (e.g., changing names, contact details) while maintaining data integrity.\nError Handling: Handling errors effectively, such as invalid user data, and providing clear feedback to users.\nScalability: Ensuring the system can handle large numbers of users (tenants, landlords).\n\n3. qushah-property (Property Management)\n\nProperty Data Validation: Ensuring that property details are accurate, complete, and properly validated before being listed.\nSearch Functionality: Providing a fast and efficient way for tenants to search for properties (by location, price, features, etc.).\nProperty Availability: Managing the availability of properties and preventing double-booking or issues with properties already rented.\nImage and Media Handling: Handling and storing images, videos, and 3D scans securely and efficiently. Integrating with media service when required.\nData Consistency: Ensuring that any updates to the property data (e.g., status changes, price updates) are consistent and reflected across all services.\n\n4. qushah-escrow (Escrow Service)\n\nDeposit Security: Ensuring that the deposit is secure, especially when handling large amounts of money.\nTransaction Auditing: Providing an auditable trail of deposit and release actions for transparency and security.\nEscrow Release Conditions: Implementing clear rules on when the deposit should be released to either the tenant or landlord.\nDispute Management: Handling any disputes regarding the deposit, such as property damage or failure to pay rent.\nCompliance: Ensuring that escrow services comply with local financial and regulatory standards (especially for handling money).\nEvent-Driven Updates: Integrating with other services (e.g., notifying users about escrow releases or disputes) using event-driven architecture.\n\n5. qushah-payment (Payment Service)\n\nPayment Gateway Integration: Integrating with external payment providers (e.g., UPI, Paytm, Razorpay) for processing payments.\nTransaction Security: Ensuring secure handling of payments and sensitive financial data. Use of encryption and secure protocols.\nTransaction Failures: Handling payment failures and retries in case of network or gateway issues.\nPayment Confirmation: Sending clear confirmation of successful payments and generating receipts.\nRecurring Payments: Supporting recurring rent payments (e.g., monthly payments) and ensuring they are processed on time.\nMulti-currency Support: Initially handling INR and later possibly adding other currencies, without complicating the architecture.\nScalability: Ensuring the service can handle large volumes of transactions, especially for a growing user base.\n\n6. qushah-notification (Notification Service)\n\nNotification Delivery: Ensuring timely delivery of notifications (SMS, email, push notifications) to users.\nMessage Templates: Using dynamic templates for notifications (e.g., rent payment reminders, property status updates).\nMulti-channel Support: Ensuring support for multiple communication channels (SMS, email, mobile push notifications, etc.).\nHandling Failures: Managing failed notification deliveries and retries, e.g., if an email service is down.\nPersonalization: Allowing notifications to be personalized based on user preferences (e.g., notification frequency, type of notifications).\nOpt-in/Opt-out Preferences: Allowing users to manage their notification preferences (e.g., unsubscribing from specific types of notifications).\n\n7. qushah-media (Media Handling)\n\nStorage: Securely storing large media files (images, videos, 3D scans) and ensuring they are easily accessible.\nPerformance: Ensuring that media uploads and downloads are fast and efficient, especially for large files.\nScalability: Managing storage at scale as media files (especially 3D scans) can consume significant space.\nCompression and Optimization: Automatically compressing and optimizing media files for faster loading times and reduced storage usage.\nSecurity: Protecting media files from unauthorized access and ensuring that the uploaded files are virus-free.\nIntegration: Providing an easy API for other microservices to use (e.g., for uploading profile pictures, property images, etc.).\n\n8. qushah-gateway (API Gateway)\n\nRequest Routing: Efficiently routing requests to the appropriate microservice based on the endpoint and service.\nSecurity: Ensuring that requests passing through the gateway are authenticated and authorized.\nLoad Balancing: Ensuring requests are distributed evenly across multiple instances of each microservice for scalability.\nRate Limiting: Preventing abuse of the system by applying rate limits on specific endpoints.\nAPI Documentation: Providing clear API documentation (e.g., using Swagger or GraphQL introspection) for the frontend and third-party developers.\nCaching: Implementing caching for high-traffic endpoints to improve performance.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ClientsModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CommonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DocumentationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EscrowModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GatewayModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GraphQLGatewayModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GraphQLMicroserviceModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MediaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NotificationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrganizationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PaymentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PropertyModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        QushahConfigModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_imports\n\n\n\ncluster_CommonModule_exports\n\n\n\ncluster_CommonModule_providers\n\n\n\ncluster_DocumentationModule\n\n\n\ncluster_DocumentationModule_providers\n\n\n\ncluster_EscrowModule\n\n\n\ncluster_EscrowModule_providers\n\n\n\ncluster_GatewayModule\n\n\n\ncluster_GatewayModule_imports\n\n\n\ncluster_GatewayModule_providers\n\n\n\ncluster_MediaModule\n\n\n\ncluster_MediaModule_providers\n\n\n\ncluster_NotificationModule\n\n\n\ncluster_NotificationModule_providers\n\n\n\ncluster_OrganizationModule\n\n\n\ncluster_OrganizationModule_providers\n\n\n\ncluster_PaymentModule\n\n\n\ncluster_PaymentModule_providers\n\n\n\ncluster_PropertyModule\n\n\n\ncluster_PropertyModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nCommonModule->AuthModule\n\n\n\n\n\nCommonService \n\nCommonService \n\nCommonService  -->\n\nCommonModule->CommonService \n\n\n\n\n\nEscrowModule\n\nEscrowModule\n\nEscrowModule -->\n\nCommonModule->EscrowModule\n\n\n\n\n\nGatewayModule\n\nGatewayModule\n\nGatewayModule -->\n\nCommonModule->GatewayModule\n\n\n\n\n\nMediaModule\n\nMediaModule\n\nMediaModule -->\n\nCommonModule->MediaModule\n\n\n\n\n\nNotificationModule\n\nNotificationModule\n\nNotificationModule -->\n\nCommonModule->NotificationModule\n\n\n\n\n\nOrganizationModule\n\nOrganizationModule\n\nOrganizationModule -->\n\nCommonModule->OrganizationModule\n\n\n\n\n\nPaymentModule\n\nPaymentModule\n\nPaymentModule -->\n\nCommonModule->PaymentModule\n\n\n\n\n\nPropertyModule\n\nPropertyModule\n\nPropertyModule -->\n\nCommonModule->PropertyModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nCommonModule->UserModule\n\n\n\n\n\nGraphQLMicroserviceModule\n\nGraphQLMicroserviceModule\n\nAuthModule -->\n\nGraphQLMicroserviceModule->AuthModule\n\n\n\nEscrowModule -->\n\nGraphQLMicroserviceModule->EscrowModule\n\n\n\nMediaModule -->\n\nGraphQLMicroserviceModule->MediaModule\n\n\n\nNotificationModule -->\n\nGraphQLMicroserviceModule->NotificationModule\n\n\n\nOrganizationModule -->\n\nGraphQLMicroserviceModule->OrganizationModule\n\n\n\nPaymentModule -->\n\nGraphQLMicroserviceModule->PaymentModule\n\n\n\nPropertyModule -->\n\nGraphQLMicroserviceModule->PropertyModule\n\n\n\nUserModule -->\n\nGraphQLMicroserviceModule->UserModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nQushahConfigModule\n\nQushahConfigModule\n\nCommonModule -->\n\nQushahConfigModule->CommonModule\n\n\n\n\n\nCommonService\n\nCommonService\n\nCommonModule -->\n\nCommonService->CommonModule\n\n\n\n\n\nDocumentationService\n\nDocumentationService\n\n\n\nDocumentationModule\n\nDocumentationModule\n\nDocumentationModule -->\n\nDocumentationService->DocumentationModule\n\n\n\n\n\nEscrowService\n\nEscrowService\n\nEscrowModule -->\n\nEscrowService->EscrowModule\n\n\n\n\n\nGraphQLGatewayModule\n\nGraphQLGatewayModule\n\nGatewayModule -->\n\nGraphQLGatewayModule->GatewayModule\n\n\n\n\n\nGatewayService\n\nGatewayService\n\nGatewayModule -->\n\nGatewayService->GatewayModule\n\n\n\n\n\nMediaService\n\nMediaService\n\nMediaModule -->\n\nMediaService->MediaModule\n\n\n\n\n\nNotificationService\n\nNotificationService\n\nNotificationModule -->\n\nNotificationService->NotificationModule\n\n\n\n\n\nOrganizationService\n\nOrganizationService\n\nOrganizationModule -->\n\nOrganizationService->OrganizationModule\n\n\n\n\n\nPaymentService\n\nPaymentService\n\nPaymentModule -->\n\nPaymentService->PaymentModule\n\n\n\n\n\nPropertyService\n\nPropertyService\n\nPropertyModule -->\n\nPropertyService->PropertyModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        16 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    12 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    16 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            argv   (typeorm-cli.ts)\n                        \n                        \n                            AuthCommand   (libs/.../auth.command.ts)\n                        \n                        \n                            dataSourcePath   (typeorm-cli.ts)\n                        \n                        \n                            EnvironmentConstant   (libs/.../environment.constant.ts)\n                        \n                        \n                            EscrowCommand   (libs/.../escrow.command.ts)\n                        \n                        \n                            MediaCommand   (libs/.../media.command.ts)\n                        \n                        \n                            NotificationCommand   (libs/.../notification.command.ts)\n                        \n                        \n                            ORDER_KEY   (libs/.../column-order.decorator.ts)\n                        \n                        \n                            OrganizationCommand   (libs/.../organization.command.ts)\n                        \n                        \n                            PaymentCommand   (libs/.../payment.command.ts)\n                        \n                        \n                            PropertyCommand   (libs/.../property.command.ts)\n                        \n                        \n                            typeormCommand   (typeorm-cli.ts)\n                        \n                        \n                            TypeormDataSource   (apps/.../typeorm.data-source.ts)\n                        \n                        \n                            TypeormDataSource   (apps/.../typeorm.data-source.ts)\n                        \n                        \n                            TypeormDataSource   (apps/.../typeorm.data-source.ts)\n                        \n                        \n                            TypeormDataSource   (apps/.../typeorm.data-source.ts)\n                        \n                        \n                            TypeormDataSource   (apps/.../typeorm.data-source.ts)\n                        \n                        \n                            TypeormDataSource   (apps/.../typeorm.data-source.ts)\n                        \n                        \n                            TypeormDataSource   (apps/.../typeorm.data-source.ts)\n                        \n                        \n                               (typeorm-cli.ts)\n                        \n                        \n                               (apps/.../gateway.module.ts)\n                        \n                        \n                            UserCommand   (libs/.../user.command.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    typeorm-cli.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        argv\n                        \n                    \n                \n            \n                \n                    \n                        Default value : yargs(process.argv.slice(2))\n  .option('microservice', {\n    alias: 'm',\n    type: 'string',\n    describe: 'The name of the microservice',\n    demandOption: true,\n  })\n  .option('command', {\n    alias: 'c',\n    type: 'string',\n    describe: 'TypeORM CLI command (e.g., generate, run, revert)',\n    demandOption: true,\n  })\n  .option('args', {\n    alias: 'a',\n    type: 'string',\n    describe: 'Additional arguments for the TypeORM CLI command (optional)',\n    default: '',\n  })\n  .option('title', {\n    alias: 't',\n    type: 'string',\n    describe:\n      'Title for migration file. Needed while running generate (optional)',\n    default: '',\n  })\n  .help().argv\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSourcePath\n                        \n                    \n                \n            \n                \n                    \n                        Default value : path.join(\n  __dirname,\n  `./apps/${microservice}/src/typeorm.data-source.ts`,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        typeormCommand\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli.js migration:${command} ${title ? './apps/' + microservice + '/src/migrations/' + title : ''} -d ${dataSourcePath} ${args || ''}`\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : argv as {\n  microservice: string;\n  command: string;\n  args?: string;\n  title?: string;\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/auth.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AuthCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_AUTH: 'PING_AUTH',\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/environment.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EnvironmentConstant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  REDIS_HOST: 'REDIS_HOST',\n  REDIS_PORT: 'REDIS_PORT',\n  AUTH_PORT: 'AUTH_PORT',\n  ESCROW_PORT: 'ESCROW_PORT',\n  GATEWAY_PORT: 'GATEWAY_PORT',\n  MEDIA_PORT: 'MEDIA_PORT',\n  NOTIFICATION_PORT: 'NOTIFICATION_PORT',\n  ORGANIZATION_PORT: 'ORGANIZATION_PORT',\n  PAYMENT_PORT: 'PAYMENT_PORT',\n  PROPERTY_PORT: 'PROPERTY_PORT',\n  USER_PORT: 'USER_PORT',\n  AUTH_HOST: 'AUTH_HOST',\n  ESCROW_HOST: 'ESCROW_HOST',\n  GATEWAY_HOST: 'GATEWAY_HOST',\n  MEDIA_HOST: 'MEDIA_HOST',\n  NOTIFICATION_HOST: 'NOTIFICATION_HOST',\n  ORGANIZATION_HOST: 'ORGANIZATION_HOST',\n  PAYMENT_HOST: 'PAYMENT_HOST',\n  PROPERTY_HOST: 'PROPERTY_HOST',\n  USER_HOST: 'USER_HOST',\n  DATABASE_TYPE: 'DATABASE_TYPE',\n  DATABASE_HOST: 'DATABASE_HOST',\n  DATABASE_PORT: 'DATABASE_PORT',\n  DATABASE_USERNAME: 'DATABASE_USERNAME',\n  DATABASE_PASSWORD: 'DATABASE_PASSWORD',\n  DATABASE_NAME: 'DATABASE_NAME',\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/escrow.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EscrowCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_ESCROW: 'PING_ESCROW',\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/media.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MediaCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_MEDIA: 'PING_MEDIA',\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/notification.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NotificationCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_NOTIFICATION: 'PING_NOTIFICATION',\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/decorators/column-order.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ORDER_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol.for('order_key')\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/organization.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        OrganizationCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_ORGANIZATION: 'PING_ORGANIZATION',\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/payment.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PaymentCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_PAYMENT: 'PING_PAYMENT',\n}\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/property.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PropertyCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_PROPERTY: 'PING_PROPERTY',\n}\n                    \n                \n\n\n        \n    \n\n    apps/escrow/src/typeorm.data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TypeormDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DataSource.getInstance('escrow')\n                    \n                \n\n\n        \n    \n\n    apps/media/src/typeorm.data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TypeormDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DataSource.getInstance('media')\n                    \n                \n\n\n        \n    \n\n    apps/notification/src/typeorm.data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TypeormDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DataSource.getInstance('notification')\n                    \n                \n\n\n        \n    \n\n    apps/organization/src/typeorm.data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TypeormDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DataSource.getInstance('organization')\n                    \n                \n\n\n        \n    \n\n    apps/payment/src/typeorm.data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TypeormDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DataSource.getInstance('payment')\n                    \n                \n\n\n        \n    \n\n    apps/property/src/typeorm.data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TypeormDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DataSource.getInstance('property')\n                    \n                \n\n\n        \n    \n\n    apps/user/src/typeorm.data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TypeormDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DataSource.getInstance('user')\n                    \n                \n\n\n        \n    \n\n    apps/gateway/src/gateway.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : EnvironmentConstant\n                    \n                \n\n\n        \n    \n\n    libs/common/src/constants/commands/user.command.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PING_USER: 'PING_USER',\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
